import torch
import torch.nn as nn

class trunk_module(nn.Module):
    def  __init__(self, model):
        super(trunk_module, self).__init__()
        self.device = torch.device('cuda')
        self.arg0_1 = getattr(model.template_embedder.pairformer.blocks, "0").transition_pair.layer_norm.weight
        self.arg1_1 = getattr(model.template_embedder.pairformer.blocks, "0").transition_pair.layer_norm.bias
        self.arg2_1 = getattr(model.template_embedder.pairformer.blocks, "0").transition_pair.linear_no_bias_ab.weight
        self.arg3_1 = getattr(model.template_embedder.pairformer.blocks, "0").transition_pair.linear_out.weight
        self.arg4_1 = getattr(model.template_embedder.pairformer.blocks, "0").triangle_multiplication.layernorm_z_in.weight
        self.arg5_1 = getattr(model.template_embedder.pairformer.blocks, "0").triangle_multiplication.layernorm_z_in.bias
        self.arg6_1 = getattr(model.template_embedder.pairformer.blocks, "0").triangle_multiplication.linear_z_out.weight
        self.arg7_1 = getattr(model.template_embedder.pairformer.blocks, "0").triangle_multiplication.merged_linear_p.weight
        self.arg8_1 = getattr(model.template_embedder.pairformer.blocks, "0").triangle_multiplication.merged_linear_g.weight
        self.arg9_1 = getattr(model.template_embedder.pairformer.blocks, "0").triangle_attention.out_scalers
        self.arg10_1 = getattr(model.template_embedder.pairformer.blocks, "0").triangle_attention.pair2b.weight
        self.arg11_1 = getattr(model.template_embedder.pairformer.blocks, "0").triangle_attention.pair2qkvg1.weight
        self.arg12_1 = getattr(model.template_embedder.pairformer.blocks, "0").triangle_attention.pair2qkvg2.weight
        self.arg13_1 = getattr(model.template_embedder.pairformer.blocks, "0").triangle_attention.linear_out.weight
        self.arg14_1 = getattr(model.template_embedder.pairformer.blocks, "1").transition_pair.layer_norm.weight
        self.arg15_1 = getattr(model.template_embedder.pairformer.blocks, "1").transition_pair.layer_norm.bias
        self.arg16_1 = getattr(model.template_embedder.pairformer.blocks, "1").transition_pair.linear_no_bias_ab.weight
        self.arg17_1 = getattr(model.template_embedder.pairformer.blocks, "1").transition_pair.linear_out.weight
        self.arg18_1 = getattr(model.template_embedder.pairformer.blocks, "1").triangle_multiplication.layernorm_z_in.weight
        self.arg19_1 = getattr(model.template_embedder.pairformer.blocks, "1").triangle_multiplication.layernorm_z_in.bias
        self.arg20_1 = getattr(model.template_embedder.pairformer.blocks, "1").triangle_multiplication.linear_z_out.weight
        self.arg21_1 = getattr(model.template_embedder.pairformer.blocks, "1").triangle_multiplication.merged_linear_p.weight
        self.arg22_1 = getattr(model.template_embedder.pairformer.blocks, "1").triangle_multiplication.merged_linear_g.weight
        self.arg23_1 = getattr(model.template_embedder.pairformer.blocks, "1").triangle_attention.out_scalers
        self.arg24_1 = getattr(model.template_embedder.pairformer.blocks, "1").triangle_attention.pair2b.weight
        self.arg25_1 = getattr(model.template_embedder.pairformer.blocks, "1").triangle_attention.pair2qkvg1.weight
        self.arg26_1 = getattr(model.template_embedder.pairformer.blocks, "1").triangle_attention.pair2qkvg2.weight
        self.arg27_1 = getattr(model.template_embedder.pairformer.blocks, "1").triangle_attention.linear_out.weight
        self.arg28_1 = getattr(model.template_embedder.proj_in, "0").weight
        self.arg29_1 = getattr(model.template_embedder.proj_in, "0").bias
        self.arg30_1 = getattr(model.template_embedder.proj_in, "1").weight
        self.arg31_1 = model.template_embedder.template_layernorm.weight
        self.arg32_1 = model.template_embedder.template_layernorm.bias
        self.arg33_1 = getattr(model.template_embedder.proj_out, "1").weight
        self.arg34_1 = model.msa_module.linear_s2m.weight
        self.arg35_1 = getattr(model.msa_module.outer_product_mean, "0").weight_ab
        self.arg36_1 = getattr(model.msa_module.outer_product_mean, "0").ln_out.weight
        self.arg37_1 = getattr(model.msa_module.outer_product_mean, "0").ln_out.bias
        self.arg38_1 = getattr(model.msa_module.outer_product_mean, "0").linear_out.weight
        self.arg39_1 = getattr(model.msa_module.outer_product_mean, "0").linear_out.bias
        self.arg40_1 = getattr(model.msa_module.outer_product_mean, "1").weight_ab
        self.arg41_1 = getattr(model.msa_module.outer_product_mean, "1").ln_out.weight
        self.arg42_1 = getattr(model.msa_module.outer_product_mean, "1").ln_out.bias
        self.arg43_1 = getattr(model.msa_module.outer_product_mean, "1").linear_out.weight
        self.arg44_1 = getattr(model.msa_module.outer_product_mean, "1").linear_out.bias
        self.arg45_1 = getattr(model.msa_module.outer_product_mean, "2").weight_ab
        self.arg46_1 = getattr(model.msa_module.outer_product_mean, "2").ln_out.weight
        self.arg47_1 = getattr(model.msa_module.outer_product_mean, "2").ln_out.bias
        self.arg48_1 = getattr(model.msa_module.outer_product_mean, "2").linear_out.weight
        self.arg49_1 = getattr(model.msa_module.outer_product_mean, "2").linear_out.bias
        self.arg50_1 = getattr(model.msa_module.outer_product_mean, "3").weight_ab
        self.arg51_1 = getattr(model.msa_module.outer_product_mean, "3").ln_out.weight
        self.arg52_1 = getattr(model.msa_module.outer_product_mean, "3").ln_out.bias
        self.arg53_1 = getattr(model.msa_module.outer_product_mean, "3").linear_out.weight
        self.arg54_1 = getattr(model.msa_module.outer_product_mean, "3").linear_out.bias
        self.arg55_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "0").layernorm_msa.weight
        self.arg56_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "0").layernorm_msa.bias
        self.arg57_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "0").linear_msa2vg.weight
        self.arg58_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "0").layernorm_pair.weight
        self.arg59_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "0").layernorm_pair.bias
        self.arg60_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "0").linear_pair.weight
        self.arg61_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "0").linear_out_no_bias.weight
        self.arg62_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "1").layernorm_msa.weight
        self.arg63_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "1").layernorm_msa.bias
        self.arg64_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "1").linear_msa2vg.weight
        self.arg65_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "1").layernorm_pair.weight
        self.arg66_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "1").layernorm_pair.bias
        self.arg67_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "1").linear_pair.weight
        self.arg68_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "1").linear_out_no_bias.weight
        self.arg69_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "2").layernorm_msa.weight
        self.arg70_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "2").layernorm_msa.bias
        self.arg71_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "2").linear_msa2vg.weight
        self.arg72_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "2").layernorm_pair.weight
        self.arg73_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "2").layernorm_pair.bias
        self.arg74_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "2").linear_pair.weight
        self.arg75_1 = getattr(model.msa_module.msa_pair_weighted_averaging, "2").linear_out_no_bias.weight
        self.arg76_1 = getattr(model.msa_module.msa_transition, "0").layer_norm.weight
        self.arg77_1 = getattr(model.msa_module.msa_transition, "0").layer_norm.bias
        self.arg78_1 = getattr(model.msa_module.msa_transition, "0").linear_no_bias_ab.weight
        self.arg79_1 = getattr(model.msa_module.msa_transition, "0").linear_out.weight
        self.arg80_1 = getattr(model.msa_module.msa_transition, "1").layer_norm.weight
        self.arg81_1 = getattr(model.msa_module.msa_transition, "1").layer_norm.bias
        self.arg82_1 = getattr(model.msa_module.msa_transition, "1").linear_no_bias_ab.weight
        self.arg83_1 = getattr(model.msa_module.msa_transition, "1").linear_out.weight
        self.arg84_1 = getattr(model.msa_module.msa_transition, "2").layer_norm.weight
        self.arg85_1 = getattr(model.msa_module.msa_transition, "2").layer_norm.bias
        self.arg86_1 = getattr(model.msa_module.msa_transition, "2").linear_no_bias_ab.weight
        self.arg87_1 = getattr(model.msa_module.msa_transition, "2").linear_out.weight
        self.arg88_1 = getattr(model.msa_module.pair_transition, "0").layer_norm.weight
        self.arg89_1 = getattr(model.msa_module.pair_transition, "0").layer_norm.bias
        self.arg90_1 = getattr(model.msa_module.pair_transition, "0").linear_no_bias_ab.weight
        self.arg91_1 = getattr(model.msa_module.pair_transition, "0").linear_out.weight
        self.arg92_1 = getattr(model.msa_module.pair_transition, "1").layer_norm.weight
        self.arg93_1 = getattr(model.msa_module.pair_transition, "1").layer_norm.bias
        self.arg94_1 = getattr(model.msa_module.pair_transition, "1").linear_no_bias_ab.weight
        self.arg95_1 = getattr(model.msa_module.pair_transition, "1").linear_out.weight
        self.arg96_1 = getattr(model.msa_module.pair_transition, "2").layer_norm.weight
        self.arg97_1 = getattr(model.msa_module.pair_transition, "2").layer_norm.bias
        self.arg98_1 = getattr(model.msa_module.pair_transition, "2").linear_no_bias_ab.weight
        self.arg99_1 = getattr(model.msa_module.pair_transition, "2").linear_out.weight
        self.arg100_1 = getattr(model.msa_module.pair_transition, "3").layer_norm.weight
        self.arg101_1 = getattr(model.msa_module.pair_transition, "3").layer_norm.bias
        self.arg102_1 = getattr(model.msa_module.pair_transition, "3").linear_no_bias_ab.weight
        self.arg103_1 = getattr(model.msa_module.pair_transition, "3").linear_out.weight
        self.arg104_1 = getattr(model.msa_module.triangular_multiplication, "0").layernorm_z_in.weight
        self.arg105_1 = getattr(model.msa_module.triangular_multiplication, "0").layernorm_z_in.bias
        self.arg106_1 = getattr(model.msa_module.triangular_multiplication, "0").linear_z_out.weight
        self.arg107_1 = getattr(model.msa_module.triangular_multiplication, "0").merged_linear_p.weight
        self.arg108_1 = getattr(model.msa_module.triangular_multiplication, "0").merged_linear_g.weight
        self.arg109_1 = getattr(model.msa_module.triangular_multiplication, "1").layernorm_z_in.weight
        self.arg110_1 = getattr(model.msa_module.triangular_multiplication, "1").layernorm_z_in.bias
        self.arg111_1 = getattr(model.msa_module.triangular_multiplication, "1").linear_z_out.weight
        self.arg112_1 = getattr(model.msa_module.triangular_multiplication, "1").merged_linear_p.weight
        self.arg113_1 = getattr(model.msa_module.triangular_multiplication, "1").merged_linear_g.weight
        self.arg114_1 = getattr(model.msa_module.triangular_multiplication, "2").layernorm_z_in.weight
        self.arg115_1 = getattr(model.msa_module.triangular_multiplication, "2").layernorm_z_in.bias
        self.arg116_1 = getattr(model.msa_module.triangular_multiplication, "2").linear_z_out.weight
        self.arg117_1 = getattr(model.msa_module.triangular_multiplication, "2").merged_linear_p.weight
        self.arg118_1 = getattr(model.msa_module.triangular_multiplication, "2").merged_linear_g.weight
        self.arg119_1 = getattr(model.msa_module.triangular_multiplication, "3").layernorm_z_in.weight
        self.arg120_1 = getattr(model.msa_module.triangular_multiplication, "3").layernorm_z_in.bias
        self.arg121_1 = getattr(model.msa_module.triangular_multiplication, "3").linear_z_out.weight
        self.arg122_1 = getattr(model.msa_module.triangular_multiplication, "3").merged_linear_p.weight
        self.arg123_1 = getattr(model.msa_module.triangular_multiplication, "3").merged_linear_g.weight
        self.arg124_1 = getattr(model.msa_module.triangular_attention, "0").out_scalers
        self.arg125_1 = getattr(model.msa_module.triangular_attention, "0").pair2b.weight
        self.arg126_1 = getattr(model.msa_module.triangular_attention, "0").pair2qkvg1.weight
        self.arg127_1 = getattr(model.msa_module.triangular_attention, "0").pair2qkvg2.weight
        self.arg128_1 = getattr(model.msa_module.triangular_attention, "0").linear_out.weight
        self.arg129_1 = getattr(model.msa_module.triangular_attention, "1").out_scalers
        self.arg130_1 = getattr(model.msa_module.triangular_attention, "1").pair2b.weight
        self.arg131_1 = getattr(model.msa_module.triangular_attention, "1").pair2qkvg1.weight
        self.arg132_1 = getattr(model.msa_module.triangular_attention, "1").pair2qkvg2.weight
        self.arg133_1 = getattr(model.msa_module.triangular_attention, "1").linear_out.weight
        self.arg134_1 = getattr(model.msa_module.triangular_attention, "2").out_scalers
        self.arg135_1 = getattr(model.msa_module.triangular_attention, "2").pair2b.weight
        self.arg136_1 = getattr(model.msa_module.triangular_attention, "2").pair2qkvg1.weight
        self.arg137_1 = getattr(model.msa_module.triangular_attention, "2").pair2qkvg2.weight
        self.arg138_1 = getattr(model.msa_module.triangular_attention, "2").linear_out.weight
        self.arg139_1 = getattr(model.msa_module.triangular_attention, "3").out_scalers
        self.arg140_1 = getattr(model.msa_module.triangular_attention, "3").pair2b.weight
        self.arg141_1 = getattr(model.msa_module.triangular_attention, "3").pair2qkvg1.weight
        self.arg142_1 = getattr(model.msa_module.triangular_attention, "3").pair2qkvg2.weight
        self.arg143_1 = getattr(model.msa_module.triangular_attention, "3").linear_out.weight
        self.arg144_1 = getattr(model.pairformer_stack.blocks, "0").transition_pair.layer_norm.weight
        self.arg145_1 = getattr(model.pairformer_stack.blocks, "0").transition_pair.layer_norm.bias
        self.arg146_1 = getattr(model.pairformer_stack.blocks, "0").transition_pair.linear_no_bias_ab.weight
        self.arg147_1 = getattr(model.pairformer_stack.blocks, "0").transition_pair.linear_out.weight
        self.arg148_1 = getattr(model.pairformer_stack.blocks, "0").triangle_multiplication.layernorm_z_in.weight
        self.arg149_1 = getattr(model.pairformer_stack.blocks, "0").triangle_multiplication.layernorm_z_in.bias
        self.arg150_1 = getattr(model.pairformer_stack.blocks, "0").triangle_multiplication.linear_z_out.weight
        self.arg151_1 = getattr(model.pairformer_stack.blocks, "0").triangle_multiplication.merged_linear_p.weight
        self.arg152_1 = getattr(model.pairformer_stack.blocks, "0").triangle_multiplication.merged_linear_g.weight
        self.arg153_1 = getattr(model.pairformer_stack.blocks, "0").triangle_attention.out_scalers
        self.arg154_1 = getattr(model.pairformer_stack.blocks, "0").triangle_attention.pair2b.weight
        self.arg155_1 = getattr(model.pairformer_stack.blocks, "0").triangle_attention.pair2qkvg1.weight
        self.arg156_1 = getattr(model.pairformer_stack.blocks, "0").triangle_attention.pair2qkvg2.weight
        self.arg157_1 = getattr(model.pairformer_stack.blocks, "0").triangle_attention.linear_out.weight
        self.arg158_1 = getattr(model.pairformer_stack.blocks, "0").transition_single.layer_norm.weight
        self.arg159_1 = getattr(model.pairformer_stack.blocks, "0").transition_single.layer_norm.bias
        self.arg160_1 = getattr(model.pairformer_stack.blocks, "0").transition_single.linear_no_bias_ab.weight
        self.arg161_1 = getattr(model.pairformer_stack.blocks, "0").transition_single.linear_out.weight
        self.arg162_1 = getattr(model.pairformer_stack.blocks, "0").attention_pair_bias.single_layer_norm.weight
        self.arg163_1 = getattr(model.pairformer_stack.blocks, "0").attention_pair_bias.single_layer_norm.bias
        self.arg164_1 = getattr(model.pairformer_stack.blocks, "0").attention_pair_bias.pair_layer_norm.weight
        self.arg165_1 = getattr(model.pairformer_stack.blocks, "0").attention_pair_bias.pair_layer_norm.bias
        self.arg166_1 = getattr(model.pairformer_stack.blocks, "0").attention_pair_bias.pair_linear.weight
        self.arg167_1 = getattr(model.pairformer_stack.blocks, "0").attention_pair_bias.attention.query_bias
        self.arg168_1 = getattr(model.pairformer_stack.blocks, "0").attention_pair_bias.attention.input2qkvg.weight
        self.arg169_1 = getattr(model.pairformer_stack.blocks, "0").attention_pair_bias.attention.output_proj.weight
        self.arg170_1 = getattr(model.pairformer_stack.blocks, "1").transition_pair.layer_norm.weight
        self.arg171_1 = getattr(model.pairformer_stack.blocks, "1").transition_pair.layer_norm.bias
        self.arg172_1 = getattr(model.pairformer_stack.blocks, "1").transition_pair.linear_no_bias_ab.weight
        self.arg173_1 = getattr(model.pairformer_stack.blocks, "1").transition_pair.linear_out.weight
        self.arg174_1 = getattr(model.pairformer_stack.blocks, "1").triangle_multiplication.layernorm_z_in.weight
        self.arg175_1 = getattr(model.pairformer_stack.blocks, "1").triangle_multiplication.layernorm_z_in.bias
        self.arg176_1 = getattr(model.pairformer_stack.blocks, "1").triangle_multiplication.linear_z_out.weight
        self.arg177_1 = getattr(model.pairformer_stack.blocks, "1").triangle_multiplication.merged_linear_p.weight
        self.arg178_1 = getattr(model.pairformer_stack.blocks, "1").triangle_multiplication.merged_linear_g.weight
        self.arg179_1 = getattr(model.pairformer_stack.blocks, "1").triangle_attention.out_scalers
        self.arg180_1 = getattr(model.pairformer_stack.blocks, "1").triangle_attention.pair2b.weight
        self.arg181_1 = getattr(model.pairformer_stack.blocks, "1").triangle_attention.pair2qkvg1.weight
        self.arg182_1 = getattr(model.pairformer_stack.blocks, "1").triangle_attention.pair2qkvg2.weight
        self.arg183_1 = getattr(model.pairformer_stack.blocks, "1").triangle_attention.linear_out.weight
        self.arg184_1 = getattr(model.pairformer_stack.blocks, "1").transition_single.layer_norm.weight
        self.arg185_1 = getattr(model.pairformer_stack.blocks, "1").transition_single.layer_norm.bias
        self.arg186_1 = getattr(model.pairformer_stack.blocks, "1").transition_single.linear_no_bias_ab.weight
        self.arg187_1 = getattr(model.pairformer_stack.blocks, "1").transition_single.linear_out.weight
        self.arg188_1 = getattr(model.pairformer_stack.blocks, "1").attention_pair_bias.single_layer_norm.weight
        self.arg189_1 = getattr(model.pairformer_stack.blocks, "1").attention_pair_bias.single_layer_norm.bias
        self.arg190_1 = getattr(model.pairformer_stack.blocks, "1").attention_pair_bias.pair_layer_norm.weight
        self.arg191_1 = getattr(model.pairformer_stack.blocks, "1").attention_pair_bias.pair_layer_norm.bias
        self.arg192_1 = getattr(model.pairformer_stack.blocks, "1").attention_pair_bias.pair_linear.weight
        self.arg193_1 = getattr(model.pairformer_stack.blocks, "1").attention_pair_bias.attention.query_bias
        self.arg194_1 = getattr(model.pairformer_stack.blocks, "1").attention_pair_bias.attention.input2qkvg.weight
        self.arg195_1 = getattr(model.pairformer_stack.blocks, "1").attention_pair_bias.attention.output_proj.weight
        self.arg196_1 = getattr(model.pairformer_stack.blocks, "2").transition_pair.layer_norm.weight
        self.arg197_1 = getattr(model.pairformer_stack.blocks, "2").transition_pair.layer_norm.bias
        self.arg198_1 = getattr(model.pairformer_stack.blocks, "2").transition_pair.linear_no_bias_ab.weight
        self.arg199_1 = getattr(model.pairformer_stack.blocks, "2").transition_pair.linear_out.weight
        self.arg200_1 = getattr(model.pairformer_stack.blocks, "2").triangle_multiplication.layernorm_z_in.weight
        self.arg201_1 = getattr(model.pairformer_stack.blocks, "2").triangle_multiplication.layernorm_z_in.bias
        self.arg202_1 = getattr(model.pairformer_stack.blocks, "2").triangle_multiplication.linear_z_out.weight
        self.arg203_1 = getattr(model.pairformer_stack.blocks, "2").triangle_multiplication.merged_linear_p.weight
        self.arg204_1 = getattr(model.pairformer_stack.blocks, "2").triangle_multiplication.merged_linear_g.weight
        self.arg205_1 = getattr(model.pairformer_stack.blocks, "2").triangle_attention.out_scalers
        self.arg206_1 = getattr(model.pairformer_stack.blocks, "2").triangle_attention.pair2b.weight
        self.arg207_1 = getattr(model.pairformer_stack.blocks, "2").triangle_attention.pair2qkvg1.weight
        self.arg208_1 = getattr(model.pairformer_stack.blocks, "2").triangle_attention.pair2qkvg2.weight
        self.arg209_1 = getattr(model.pairformer_stack.blocks, "2").triangle_attention.linear_out.weight
        self.arg210_1 = getattr(model.pairformer_stack.blocks, "2").transition_single.layer_norm.weight
        self.arg211_1 = getattr(model.pairformer_stack.blocks, "2").transition_single.layer_norm.bias
        self.arg212_1 = getattr(model.pairformer_stack.blocks, "2").transition_single.linear_no_bias_ab.weight
        self.arg213_1 = getattr(model.pairformer_stack.blocks, "2").transition_single.linear_out.weight
        self.arg214_1 = getattr(model.pairformer_stack.blocks, "2").attention_pair_bias.single_layer_norm.weight
        self.arg215_1 = getattr(model.pairformer_stack.blocks, "2").attention_pair_bias.single_layer_norm.bias
        self.arg216_1 = getattr(model.pairformer_stack.blocks, "2").attention_pair_bias.pair_layer_norm.weight
        self.arg217_1 = getattr(model.pairformer_stack.blocks, "2").attention_pair_bias.pair_layer_norm.bias
        self.arg218_1 = getattr(model.pairformer_stack.blocks, "2").attention_pair_bias.pair_linear.weight
        self.arg219_1 = getattr(model.pairformer_stack.blocks, "2").attention_pair_bias.attention.query_bias
        self.arg220_1 = getattr(model.pairformer_stack.blocks, "2").attention_pair_bias.attention.input2qkvg.weight
        self.arg221_1 = getattr(model.pairformer_stack.blocks, "2").attention_pair_bias.attention.output_proj.weight
        self.arg222_1 = getattr(model.pairformer_stack.blocks, "3").transition_pair.layer_norm.weight
        self.arg223_1 = getattr(model.pairformer_stack.blocks, "3").transition_pair.layer_norm.bias
        self.arg224_1 = getattr(model.pairformer_stack.blocks, "3").transition_pair.linear_no_bias_ab.weight
        self.arg225_1 = getattr(model.pairformer_stack.blocks, "3").transition_pair.linear_out.weight
        self.arg226_1 = getattr(model.pairformer_stack.blocks, "3").triangle_multiplication.layernorm_z_in.weight
        self.arg227_1 = getattr(model.pairformer_stack.blocks, "3").triangle_multiplication.layernorm_z_in.bias
        self.arg228_1 = getattr(model.pairformer_stack.blocks, "3").triangle_multiplication.linear_z_out.weight
        self.arg229_1 = getattr(model.pairformer_stack.blocks, "3").triangle_multiplication.merged_linear_p.weight
        self.arg230_1 = getattr(model.pairformer_stack.blocks, "3").triangle_multiplication.merged_linear_g.weight
        self.arg231_1 = getattr(model.pairformer_stack.blocks, "3").triangle_attention.out_scalers
        self.arg232_1 = getattr(model.pairformer_stack.blocks, "3").triangle_attention.pair2b.weight
        self.arg233_1 = getattr(model.pairformer_stack.blocks, "3").triangle_attention.pair2qkvg1.weight
        self.arg234_1 = getattr(model.pairformer_stack.blocks, "3").triangle_attention.pair2qkvg2.weight
        self.arg235_1 = getattr(model.pairformer_stack.blocks, "3").triangle_attention.linear_out.weight
        self.arg236_1 = getattr(model.pairformer_stack.blocks, "3").transition_single.layer_norm.weight
        self.arg237_1 = getattr(model.pairformer_stack.blocks, "3").transition_single.layer_norm.bias
        self.arg238_1 = getattr(model.pairformer_stack.blocks, "3").transition_single.linear_no_bias_ab.weight
        self.arg239_1 = getattr(model.pairformer_stack.blocks, "3").transition_single.linear_out.weight
        self.arg240_1 = getattr(model.pairformer_stack.blocks, "3").attention_pair_bias.single_layer_norm.weight
        self.arg241_1 = getattr(model.pairformer_stack.blocks, "3").attention_pair_bias.single_layer_norm.bias
        self.arg242_1 = getattr(model.pairformer_stack.blocks, "3").attention_pair_bias.pair_layer_norm.weight
        self.arg243_1 = getattr(model.pairformer_stack.blocks, "3").attention_pair_bias.pair_layer_norm.bias
        self.arg244_1 = getattr(model.pairformer_stack.blocks, "3").attention_pair_bias.pair_linear.weight
        self.arg245_1 = getattr(model.pairformer_stack.blocks, "3").attention_pair_bias.attention.query_bias
        self.arg246_1 = getattr(model.pairformer_stack.blocks, "3").attention_pair_bias.attention.input2qkvg.weight
        self.arg247_1 = getattr(model.pairformer_stack.blocks, "3").attention_pair_bias.attention.output_proj.weight
        self.arg248_1 = getattr(model.pairformer_stack.blocks, "4").transition_pair.layer_norm.weight
        self.arg249_1 = getattr(model.pairformer_stack.blocks, "4").transition_pair.layer_norm.bias
        self.arg250_1 = getattr(model.pairformer_stack.blocks, "4").transition_pair.linear_no_bias_ab.weight
        self.arg251_1 = getattr(model.pairformer_stack.blocks, "4").transition_pair.linear_out.weight
        self.arg252_1 = getattr(model.pairformer_stack.blocks, "4").triangle_multiplication.layernorm_z_in.weight
        self.arg253_1 = getattr(model.pairformer_stack.blocks, "4").triangle_multiplication.layernorm_z_in.bias
        self.arg254_1 = getattr(model.pairformer_stack.blocks, "4").triangle_multiplication.linear_z_out.weight
        self.arg255_1 = getattr(model.pairformer_stack.blocks, "4").triangle_multiplication.merged_linear_p.weight
        self.arg256_1 = getattr(model.pairformer_stack.blocks, "4").triangle_multiplication.merged_linear_g.weight
        self.arg257_1 = getattr(model.pairformer_stack.blocks, "4").triangle_attention.out_scalers
        self.arg258_1 = getattr(model.pairformer_stack.blocks, "4").triangle_attention.pair2b.weight
        self.arg259_1 = getattr(model.pairformer_stack.blocks, "4").triangle_attention.pair2qkvg1.weight
        self.arg260_1 = getattr(model.pairformer_stack.blocks, "4").triangle_attention.pair2qkvg2.weight
        self.arg261_1 = getattr(model.pairformer_stack.blocks, "4").triangle_attention.linear_out.weight
        self.arg262_1 = getattr(model.pairformer_stack.blocks, "4").transition_single.layer_norm.weight
        self.arg263_1 = getattr(model.pairformer_stack.blocks, "4").transition_single.layer_norm.bias
        self.arg264_1 = getattr(model.pairformer_stack.blocks, "4").transition_single.linear_no_bias_ab.weight
        self.arg265_1 = getattr(model.pairformer_stack.blocks, "4").transition_single.linear_out.weight
        self.arg266_1 = getattr(model.pairformer_stack.blocks, "4").attention_pair_bias.single_layer_norm.weight
        self.arg267_1 = getattr(model.pairformer_stack.blocks, "4").attention_pair_bias.single_layer_norm.bias
        self.arg268_1 = getattr(model.pairformer_stack.blocks, "4").attention_pair_bias.pair_layer_norm.weight
        self.arg269_1 = getattr(model.pairformer_stack.blocks, "4").attention_pair_bias.pair_layer_norm.bias
        self.arg270_1 = getattr(model.pairformer_stack.blocks, "4").attention_pair_bias.pair_linear.weight
        self.arg271_1 = getattr(model.pairformer_stack.blocks, "4").attention_pair_bias.attention.query_bias
        self.arg272_1 = getattr(model.pairformer_stack.blocks, "4").attention_pair_bias.attention.input2qkvg.weight
        self.arg273_1 = getattr(model.pairformer_stack.blocks, "4").attention_pair_bias.attention.output_proj.weight
        self.arg274_1 = getattr(model.pairformer_stack.blocks, "5").transition_pair.layer_norm.weight
        self.arg275_1 = getattr(model.pairformer_stack.blocks, "5").transition_pair.layer_norm.bias
        self.arg276_1 = getattr(model.pairformer_stack.blocks, "5").transition_pair.linear_no_bias_ab.weight
        self.arg277_1 = getattr(model.pairformer_stack.blocks, "5").transition_pair.linear_out.weight
        self.arg278_1 = getattr(model.pairformer_stack.blocks, "5").triangle_multiplication.layernorm_z_in.weight
        self.arg279_1 = getattr(model.pairformer_stack.blocks, "5").triangle_multiplication.layernorm_z_in.bias
        self.arg280_1 = getattr(model.pairformer_stack.blocks, "5").triangle_multiplication.linear_z_out.weight
        self.arg281_1 = getattr(model.pairformer_stack.blocks, "5").triangle_multiplication.merged_linear_p.weight
        self.arg282_1 = getattr(model.pairformer_stack.blocks, "5").triangle_multiplication.merged_linear_g.weight
        self.arg283_1 = getattr(model.pairformer_stack.blocks, "5").triangle_attention.out_scalers
        self.arg284_1 = getattr(model.pairformer_stack.blocks, "5").triangle_attention.pair2b.weight
        self.arg285_1 = getattr(model.pairformer_stack.blocks, "5").triangle_attention.pair2qkvg1.weight
        self.arg286_1 = getattr(model.pairformer_stack.blocks, "5").triangle_attention.pair2qkvg2.weight
        self.arg287_1 = getattr(model.pairformer_stack.blocks, "5").triangle_attention.linear_out.weight
        self.arg288_1 = getattr(model.pairformer_stack.blocks, "5").transition_single.layer_norm.weight
        self.arg289_1 = getattr(model.pairformer_stack.blocks, "5").transition_single.layer_norm.bias
        self.arg290_1 = getattr(model.pairformer_stack.blocks, "5").transition_single.linear_no_bias_ab.weight
        self.arg291_1 = getattr(model.pairformer_stack.blocks, "5").transition_single.linear_out.weight
        self.arg292_1 = getattr(model.pairformer_stack.blocks, "5").attention_pair_bias.single_layer_norm.weight
        self.arg293_1 = getattr(model.pairformer_stack.blocks, "5").attention_pair_bias.single_layer_norm.bias
        self.arg294_1 = getattr(model.pairformer_stack.blocks, "5").attention_pair_bias.pair_layer_norm.weight
        self.arg295_1 = getattr(model.pairformer_stack.blocks, "5").attention_pair_bias.pair_layer_norm.bias
        self.arg296_1 = getattr(model.pairformer_stack.blocks, "5").attention_pair_bias.pair_linear.weight
        self.arg297_1 = getattr(model.pairformer_stack.blocks, "5").attention_pair_bias.attention.query_bias
        self.arg298_1 = getattr(model.pairformer_stack.blocks, "5").attention_pair_bias.attention.input2qkvg.weight
        self.arg299_1 = getattr(model.pairformer_stack.blocks, "5").attention_pair_bias.attention.output_proj.weight
        self.arg300_1 = getattr(model.pairformer_stack.blocks, "6").transition_pair.layer_norm.weight
        self.arg301_1 = getattr(model.pairformer_stack.blocks, "6").transition_pair.layer_norm.bias
        self.arg302_1 = getattr(model.pairformer_stack.blocks, "6").transition_pair.linear_no_bias_ab.weight
        self.arg303_1 = getattr(model.pairformer_stack.blocks, "6").transition_pair.linear_out.weight
        self.arg304_1 = getattr(model.pairformer_stack.blocks, "6").triangle_multiplication.layernorm_z_in.weight
        self.arg305_1 = getattr(model.pairformer_stack.blocks, "6").triangle_multiplication.layernorm_z_in.bias
        self.arg306_1 = getattr(model.pairformer_stack.blocks, "6").triangle_multiplication.linear_z_out.weight
        self.arg307_1 = getattr(model.pairformer_stack.blocks, "6").triangle_multiplication.merged_linear_p.weight
        self.arg308_1 = getattr(model.pairformer_stack.blocks, "6").triangle_multiplication.merged_linear_g.weight
        self.arg309_1 = getattr(model.pairformer_stack.blocks, "6").triangle_attention.out_scalers
        self.arg310_1 = getattr(model.pairformer_stack.blocks, "6").triangle_attention.pair2b.weight
        self.arg311_1 = getattr(model.pairformer_stack.blocks, "6").triangle_attention.pair2qkvg1.weight
        self.arg312_1 = getattr(model.pairformer_stack.blocks, "6").triangle_attention.pair2qkvg2.weight
        self.arg313_1 = getattr(model.pairformer_stack.blocks, "6").triangle_attention.linear_out.weight
        self.arg314_1 = getattr(model.pairformer_stack.blocks, "6").transition_single.layer_norm.weight
        self.arg315_1 = getattr(model.pairformer_stack.blocks, "6").transition_single.layer_norm.bias
        self.arg316_1 = getattr(model.pairformer_stack.blocks, "6").transition_single.linear_no_bias_ab.weight
        self.arg317_1 = getattr(model.pairformer_stack.blocks, "6").transition_single.linear_out.weight
        self.arg318_1 = getattr(model.pairformer_stack.blocks, "6").attention_pair_bias.single_layer_norm.weight
        self.arg319_1 = getattr(model.pairformer_stack.blocks, "6").attention_pair_bias.single_layer_norm.bias
        self.arg320_1 = getattr(model.pairformer_stack.blocks, "6").attention_pair_bias.pair_layer_norm.weight
        self.arg321_1 = getattr(model.pairformer_stack.blocks, "6").attention_pair_bias.pair_layer_norm.bias
        self.arg322_1 = getattr(model.pairformer_stack.blocks, "6").attention_pair_bias.pair_linear.weight
        self.arg323_1 = getattr(model.pairformer_stack.blocks, "6").attention_pair_bias.attention.query_bias
        self.arg324_1 = getattr(model.pairformer_stack.blocks, "6").attention_pair_bias.attention.input2qkvg.weight
        self.arg325_1 = getattr(model.pairformer_stack.blocks, "6").attention_pair_bias.attention.output_proj.weight
        self.arg326_1 = getattr(model.pairformer_stack.blocks, "7").transition_pair.layer_norm.weight
        self.arg327_1 = getattr(model.pairformer_stack.blocks, "7").transition_pair.layer_norm.bias
        self.arg328_1 = getattr(model.pairformer_stack.blocks, "7").transition_pair.linear_no_bias_ab.weight
        self.arg329_1 = getattr(model.pairformer_stack.blocks, "7").transition_pair.linear_out.weight
        self.arg330_1 = getattr(model.pairformer_stack.blocks, "7").triangle_multiplication.layernorm_z_in.weight
        self.arg331_1 = getattr(model.pairformer_stack.blocks, "7").triangle_multiplication.layernorm_z_in.bias
        self.arg332_1 = getattr(model.pairformer_stack.blocks, "7").triangle_multiplication.linear_z_out.weight
        self.arg333_1 = getattr(model.pairformer_stack.blocks, "7").triangle_multiplication.merged_linear_p.weight
        self.arg334_1 = getattr(model.pairformer_stack.blocks, "7").triangle_multiplication.merged_linear_g.weight
        self.arg335_1 = getattr(model.pairformer_stack.blocks, "7").triangle_attention.out_scalers
        self.arg336_1 = getattr(model.pairformer_stack.blocks, "7").triangle_attention.pair2b.weight
        self.arg337_1 = getattr(model.pairformer_stack.blocks, "7").triangle_attention.pair2qkvg1.weight
        self.arg338_1 = getattr(model.pairformer_stack.blocks, "7").triangle_attention.pair2qkvg2.weight
        self.arg339_1 = getattr(model.pairformer_stack.blocks, "7").triangle_attention.linear_out.weight
        self.arg340_1 = getattr(model.pairformer_stack.blocks, "7").transition_single.layer_norm.weight
        self.arg341_1 = getattr(model.pairformer_stack.blocks, "7").transition_single.layer_norm.bias
        self.arg342_1 = getattr(model.pairformer_stack.blocks, "7").transition_single.linear_no_bias_ab.weight
        self.arg343_1 = getattr(model.pairformer_stack.blocks, "7").transition_single.linear_out.weight
        self.arg344_1 = getattr(model.pairformer_stack.blocks, "7").attention_pair_bias.single_layer_norm.weight
        self.arg345_1 = getattr(model.pairformer_stack.blocks, "7").attention_pair_bias.single_layer_norm.bias
        self.arg346_1 = getattr(model.pairformer_stack.blocks, "7").attention_pair_bias.pair_layer_norm.weight
        self.arg347_1 = getattr(model.pairformer_stack.blocks, "7").attention_pair_bias.pair_layer_norm.bias
        self.arg348_1 = getattr(model.pairformer_stack.blocks, "7").attention_pair_bias.pair_linear.weight
        self.arg349_1 = getattr(model.pairformer_stack.blocks, "7").attention_pair_bias.attention.query_bias
        self.arg350_1 = getattr(model.pairformer_stack.blocks, "7").attention_pair_bias.attention.input2qkvg.weight
        self.arg351_1 = getattr(model.pairformer_stack.blocks, "7").attention_pair_bias.attention.output_proj.weight
        self.arg352_1 = getattr(model.pairformer_stack.blocks, "8").transition_pair.layer_norm.weight
        self.arg353_1 = getattr(model.pairformer_stack.blocks, "8").transition_pair.layer_norm.bias
        self.arg354_1 = getattr(model.pairformer_stack.blocks, "8").transition_pair.linear_no_bias_ab.weight
        self.arg355_1 = getattr(model.pairformer_stack.blocks, "8").transition_pair.linear_out.weight
        self.arg356_1 = getattr(model.pairformer_stack.blocks, "8").triangle_multiplication.layernorm_z_in.weight
        self.arg357_1 = getattr(model.pairformer_stack.blocks, "8").triangle_multiplication.layernorm_z_in.bias
        self.arg358_1 = getattr(model.pairformer_stack.blocks, "8").triangle_multiplication.linear_z_out.weight
        self.arg359_1 = getattr(model.pairformer_stack.blocks, "8").triangle_multiplication.merged_linear_p.weight
        self.arg360_1 = getattr(model.pairformer_stack.blocks, "8").triangle_multiplication.merged_linear_g.weight
        self.arg361_1 = getattr(model.pairformer_stack.blocks, "8").triangle_attention.out_scalers
        self.arg362_1 = getattr(model.pairformer_stack.blocks, "8").triangle_attention.pair2b.weight
        self.arg363_1 = getattr(model.pairformer_stack.blocks, "8").triangle_attention.pair2qkvg1.weight
        self.arg364_1 = getattr(model.pairformer_stack.blocks, "8").triangle_attention.pair2qkvg2.weight
        self.arg365_1 = getattr(model.pairformer_stack.blocks, "8").triangle_attention.linear_out.weight
        self.arg366_1 = getattr(model.pairformer_stack.blocks, "8").transition_single.layer_norm.weight
        self.arg367_1 = getattr(model.pairformer_stack.blocks, "8").transition_single.layer_norm.bias
        self.arg368_1 = getattr(model.pairformer_stack.blocks, "8").transition_single.linear_no_bias_ab.weight
        self.arg369_1 = getattr(model.pairformer_stack.blocks, "8").transition_single.linear_out.weight
        self.arg370_1 = getattr(model.pairformer_stack.blocks, "8").attention_pair_bias.single_layer_norm.weight
        self.arg371_1 = getattr(model.pairformer_stack.blocks, "8").attention_pair_bias.single_layer_norm.bias
        self.arg372_1 = getattr(model.pairformer_stack.blocks, "8").attention_pair_bias.pair_layer_norm.weight
        self.arg373_1 = getattr(model.pairformer_stack.blocks, "8").attention_pair_bias.pair_layer_norm.bias
        self.arg374_1 = getattr(model.pairformer_stack.blocks, "8").attention_pair_bias.pair_linear.weight
        self.arg375_1 = getattr(model.pairformer_stack.blocks, "8").attention_pair_bias.attention.query_bias
        self.arg376_1 = getattr(model.pairformer_stack.blocks, "8").attention_pair_bias.attention.input2qkvg.weight
        self.arg377_1 = getattr(model.pairformer_stack.blocks, "8").attention_pair_bias.attention.output_proj.weight
        self.arg378_1 = getattr(model.pairformer_stack.blocks, "9").transition_pair.layer_norm.weight
        self.arg379_1 = getattr(model.pairformer_stack.blocks, "9").transition_pair.layer_norm.bias
        self.arg380_1 = getattr(model.pairformer_stack.blocks, "9").transition_pair.linear_no_bias_ab.weight
        self.arg381_1 = getattr(model.pairformer_stack.blocks, "9").transition_pair.linear_out.weight
        self.arg382_1 = getattr(model.pairformer_stack.blocks, "9").triangle_multiplication.layernorm_z_in.weight
        self.arg383_1 = getattr(model.pairformer_stack.blocks, "9").triangle_multiplication.layernorm_z_in.bias
        self.arg384_1 = getattr(model.pairformer_stack.blocks, "9").triangle_multiplication.linear_z_out.weight
        self.arg385_1 = getattr(model.pairformer_stack.blocks, "9").triangle_multiplication.merged_linear_p.weight
        self.arg386_1 = getattr(model.pairformer_stack.blocks, "9").triangle_multiplication.merged_linear_g.weight
        self.arg387_1 = getattr(model.pairformer_stack.blocks, "9").triangle_attention.out_scalers
        self.arg388_1 = getattr(model.pairformer_stack.blocks, "9").triangle_attention.pair2b.weight
        self.arg389_1 = getattr(model.pairformer_stack.blocks, "9").triangle_attention.pair2qkvg1.weight
        self.arg390_1 = getattr(model.pairformer_stack.blocks, "9").triangle_attention.pair2qkvg2.weight
        self.arg391_1 = getattr(model.pairformer_stack.blocks, "9").triangle_attention.linear_out.weight
        self.arg392_1 = getattr(model.pairformer_stack.blocks, "9").transition_single.layer_norm.weight
        self.arg393_1 = getattr(model.pairformer_stack.blocks, "9").transition_single.layer_norm.bias
        self.arg394_1 = getattr(model.pairformer_stack.blocks, "9").transition_single.linear_no_bias_ab.weight
        self.arg395_1 = getattr(model.pairformer_stack.blocks, "9").transition_single.linear_out.weight
        self.arg396_1 = getattr(model.pairformer_stack.blocks, "9").attention_pair_bias.single_layer_norm.weight
        self.arg397_1 = getattr(model.pairformer_stack.blocks, "9").attention_pair_bias.single_layer_norm.bias
        self.arg398_1 = getattr(model.pairformer_stack.blocks, "9").attention_pair_bias.pair_layer_norm.weight
        self.arg399_1 = getattr(model.pairformer_stack.blocks, "9").attention_pair_bias.pair_layer_norm.bias
        self.arg400_1 = getattr(model.pairformer_stack.blocks, "9").attention_pair_bias.pair_linear.weight
        self.arg401_1 = getattr(model.pairformer_stack.blocks, "9").attention_pair_bias.attention.query_bias
        self.arg402_1 = getattr(model.pairformer_stack.blocks, "9").attention_pair_bias.attention.input2qkvg.weight
        self.arg403_1 = getattr(model.pairformer_stack.blocks, "9").attention_pair_bias.attention.output_proj.weight
        self.arg404_1 = getattr(model.pairformer_stack.blocks, "10").transition_pair.layer_norm.weight
        self.arg405_1 = getattr(model.pairformer_stack.blocks, "10").transition_pair.layer_norm.bias
        self.arg406_1 = getattr(model.pairformer_stack.blocks, "10").transition_pair.linear_no_bias_ab.weight
        self.arg407_1 = getattr(model.pairformer_stack.blocks, "10").transition_pair.linear_out.weight
        self.arg408_1 = getattr(model.pairformer_stack.blocks, "10").triangle_multiplication.layernorm_z_in.weight
        self.arg409_1 = getattr(model.pairformer_stack.blocks, "10").triangle_multiplication.layernorm_z_in.bias
        self.arg410_1 = getattr(model.pairformer_stack.blocks, "10").triangle_multiplication.linear_z_out.weight
        self.arg411_1 = getattr(model.pairformer_stack.blocks, "10").triangle_multiplication.merged_linear_p.weight
        self.arg412_1 = getattr(model.pairformer_stack.blocks, "10").triangle_multiplication.merged_linear_g.weight
        self.arg413_1 = getattr(model.pairformer_stack.blocks, "10").triangle_attention.out_scalers
        self.arg414_1 = getattr(model.pairformer_stack.blocks, "10").triangle_attention.pair2b.weight
        self.arg415_1 = getattr(model.pairformer_stack.blocks, "10").triangle_attention.pair2qkvg1.weight
        self.arg416_1 = getattr(model.pairformer_stack.blocks, "10").triangle_attention.pair2qkvg2.weight
        self.arg417_1 = getattr(model.pairformer_stack.blocks, "10").triangle_attention.linear_out.weight
        self.arg418_1 = getattr(model.pairformer_stack.blocks, "10").transition_single.layer_norm.weight
        self.arg419_1 = getattr(model.pairformer_stack.blocks, "10").transition_single.layer_norm.bias
        self.arg420_1 = getattr(model.pairformer_stack.blocks, "10").transition_single.linear_no_bias_ab.weight
        self.arg421_1 = getattr(model.pairformer_stack.blocks, "10").transition_single.linear_out.weight
        self.arg422_1 = getattr(model.pairformer_stack.blocks, "10").attention_pair_bias.single_layer_norm.weight
        self.arg423_1 = getattr(model.pairformer_stack.blocks, "10").attention_pair_bias.single_layer_norm.bias
        self.arg424_1 = getattr(model.pairformer_stack.blocks, "10").attention_pair_bias.pair_layer_norm.weight
        self.arg425_1 = getattr(model.pairformer_stack.blocks, "10").attention_pair_bias.pair_layer_norm.bias
        self.arg426_1 = getattr(model.pairformer_stack.blocks, "10").attention_pair_bias.pair_linear.weight
        self.arg427_1 = getattr(model.pairformer_stack.blocks, "10").attention_pair_bias.attention.query_bias
        self.arg428_1 = getattr(model.pairformer_stack.blocks, "10").attention_pair_bias.attention.input2qkvg.weight
        self.arg429_1 = getattr(model.pairformer_stack.blocks, "10").attention_pair_bias.attention.output_proj.weight
        self.arg430_1 = getattr(model.pairformer_stack.blocks, "11").transition_pair.layer_norm.weight
        self.arg431_1 = getattr(model.pairformer_stack.blocks, "11").transition_pair.layer_norm.bias
        self.arg432_1 = getattr(model.pairformer_stack.blocks, "11").transition_pair.linear_no_bias_ab.weight
        self.arg433_1 = getattr(model.pairformer_stack.blocks, "11").transition_pair.linear_out.weight
        self.arg434_1 = getattr(model.pairformer_stack.blocks, "11").triangle_multiplication.layernorm_z_in.weight
        self.arg435_1 = getattr(model.pairformer_stack.blocks, "11").triangle_multiplication.layernorm_z_in.bias
        self.arg436_1 = getattr(model.pairformer_stack.blocks, "11").triangle_multiplication.linear_z_out.weight
        self.arg437_1 = getattr(model.pairformer_stack.blocks, "11").triangle_multiplication.merged_linear_p.weight
        self.arg438_1 = getattr(model.pairformer_stack.blocks, "11").triangle_multiplication.merged_linear_g.weight
        self.arg439_1 = getattr(model.pairformer_stack.blocks, "11").triangle_attention.out_scalers
        self.arg440_1 = getattr(model.pairformer_stack.blocks, "11").triangle_attention.pair2b.weight
        self.arg441_1 = getattr(model.pairformer_stack.blocks, "11").triangle_attention.pair2qkvg1.weight
        self.arg442_1 = getattr(model.pairformer_stack.blocks, "11").triangle_attention.pair2qkvg2.weight
        self.arg443_1 = getattr(model.pairformer_stack.blocks, "11").triangle_attention.linear_out.weight
        self.arg444_1 = getattr(model.pairformer_stack.blocks, "11").transition_single.layer_norm.weight
        self.arg445_1 = getattr(model.pairformer_stack.blocks, "11").transition_single.layer_norm.bias
        self.arg446_1 = getattr(model.pairformer_stack.blocks, "11").transition_single.linear_no_bias_ab.weight
        self.arg447_1 = getattr(model.pairformer_stack.blocks, "11").transition_single.linear_out.weight
        self.arg448_1 = getattr(model.pairformer_stack.blocks, "11").attention_pair_bias.single_layer_norm.weight
        self.arg449_1 = getattr(model.pairformer_stack.blocks, "11").attention_pair_bias.single_layer_norm.bias
        self.arg450_1 = getattr(model.pairformer_stack.blocks, "11").attention_pair_bias.pair_layer_norm.weight
        self.arg451_1 = getattr(model.pairformer_stack.blocks, "11").attention_pair_bias.pair_layer_norm.bias
        self.arg452_1 = getattr(model.pairformer_stack.blocks, "11").attention_pair_bias.pair_linear.weight
        self.arg453_1 = getattr(model.pairformer_stack.blocks, "11").attention_pair_bias.attention.query_bias
        self.arg454_1 = getattr(model.pairformer_stack.blocks, "11").attention_pair_bias.attention.input2qkvg.weight
        self.arg455_1 = getattr(model.pairformer_stack.blocks, "11").attention_pair_bias.attention.output_proj.weight
        self.arg456_1 = getattr(model.pairformer_stack.blocks, "12").transition_pair.layer_norm.weight
        self.arg457_1 = getattr(model.pairformer_stack.blocks, "12").transition_pair.layer_norm.bias
        self.arg458_1 = getattr(model.pairformer_stack.blocks, "12").transition_pair.linear_no_bias_ab.weight
        self.arg459_1 = getattr(model.pairformer_stack.blocks, "12").transition_pair.linear_out.weight
        self.arg460_1 = getattr(model.pairformer_stack.blocks, "12").triangle_multiplication.layernorm_z_in.weight
        self.arg461_1 = getattr(model.pairformer_stack.blocks, "12").triangle_multiplication.layernorm_z_in.bias
        self.arg462_1 = getattr(model.pairformer_stack.blocks, "12").triangle_multiplication.linear_z_out.weight
        self.arg463_1 = getattr(model.pairformer_stack.blocks, "12").triangle_multiplication.merged_linear_p.weight
        self.arg464_1 = getattr(model.pairformer_stack.blocks, "12").triangle_multiplication.merged_linear_g.weight
        self.arg465_1 = getattr(model.pairformer_stack.blocks, "12").triangle_attention.out_scalers
        self.arg466_1 = getattr(model.pairformer_stack.blocks, "12").triangle_attention.pair2b.weight
        self.arg467_1 = getattr(model.pairformer_stack.blocks, "12").triangle_attention.pair2qkvg1.weight
        self.arg468_1 = getattr(model.pairformer_stack.blocks, "12").triangle_attention.pair2qkvg2.weight
        self.arg469_1 = getattr(model.pairformer_stack.blocks, "12").triangle_attention.linear_out.weight
        self.arg470_1 = getattr(model.pairformer_stack.blocks, "12").transition_single.layer_norm.weight
        self.arg471_1 = getattr(model.pairformer_stack.blocks, "12").transition_single.layer_norm.bias
        self.arg472_1 = getattr(model.pairformer_stack.blocks, "12").transition_single.linear_no_bias_ab.weight
        self.arg473_1 = getattr(model.pairformer_stack.blocks, "12").transition_single.linear_out.weight
        self.arg474_1 = getattr(model.pairformer_stack.blocks, "12").attention_pair_bias.single_layer_norm.weight
        self.arg475_1 = getattr(model.pairformer_stack.blocks, "12").attention_pair_bias.single_layer_norm.bias
        self.arg476_1 = getattr(model.pairformer_stack.blocks, "12").attention_pair_bias.pair_layer_norm.weight
        self.arg477_1 = getattr(model.pairformer_stack.blocks, "12").attention_pair_bias.pair_layer_norm.bias
        self.arg478_1 = getattr(model.pairformer_stack.blocks, "12").attention_pair_bias.pair_linear.weight
        self.arg479_1 = getattr(model.pairformer_stack.blocks, "12").attention_pair_bias.attention.query_bias
        self.arg480_1 = getattr(model.pairformer_stack.blocks, "12").attention_pair_bias.attention.input2qkvg.weight
        self.arg481_1 = getattr(model.pairformer_stack.blocks, "12").attention_pair_bias.attention.output_proj.weight
        self.arg482_1 = getattr(model.pairformer_stack.blocks, "13").transition_pair.layer_norm.weight
        self.arg483_1 = getattr(model.pairformer_stack.blocks, "13").transition_pair.layer_norm.bias
        self.arg484_1 = getattr(model.pairformer_stack.blocks, "13").transition_pair.linear_no_bias_ab.weight
        self.arg485_1 = getattr(model.pairformer_stack.blocks, "13").transition_pair.linear_out.weight
        self.arg486_1 = getattr(model.pairformer_stack.blocks, "13").triangle_multiplication.layernorm_z_in.weight
        self.arg487_1 = getattr(model.pairformer_stack.blocks, "13").triangle_multiplication.layernorm_z_in.bias
        self.arg488_1 = getattr(model.pairformer_stack.blocks, "13").triangle_multiplication.linear_z_out.weight
        self.arg489_1 = getattr(model.pairformer_stack.blocks, "13").triangle_multiplication.merged_linear_p.weight
        self.arg490_1 = getattr(model.pairformer_stack.blocks, "13").triangle_multiplication.merged_linear_g.weight
        self.arg491_1 = getattr(model.pairformer_stack.blocks, "13").triangle_attention.out_scalers
        self.arg492_1 = getattr(model.pairformer_stack.blocks, "13").triangle_attention.pair2b.weight
        self.arg493_1 = getattr(model.pairformer_stack.blocks, "13").triangle_attention.pair2qkvg1.weight
        self.arg494_1 = getattr(model.pairformer_stack.blocks, "13").triangle_attention.pair2qkvg2.weight
        self.arg495_1 = getattr(model.pairformer_stack.blocks, "13").triangle_attention.linear_out.weight
        self.arg496_1 = getattr(model.pairformer_stack.blocks, "13").transition_single.layer_norm.weight
        self.arg497_1 = getattr(model.pairformer_stack.blocks, "13").transition_single.layer_norm.bias
        self.arg498_1 = getattr(model.pairformer_stack.blocks, "13").transition_single.linear_no_bias_ab.weight
        self.arg499_1 = getattr(model.pairformer_stack.blocks, "13").transition_single.linear_out.weight
        self.arg500_1 = getattr(model.pairformer_stack.blocks, "13").attention_pair_bias.single_layer_norm.weight
        self.arg501_1 = getattr(model.pairformer_stack.blocks, "13").attention_pair_bias.single_layer_norm.bias
        self.arg502_1 = getattr(model.pairformer_stack.blocks, "13").attention_pair_bias.pair_layer_norm.weight
        self.arg503_1 = getattr(model.pairformer_stack.blocks, "13").attention_pair_bias.pair_layer_norm.bias
        self.arg504_1 = getattr(model.pairformer_stack.blocks, "13").attention_pair_bias.pair_linear.weight
        self.arg505_1 = getattr(model.pairformer_stack.blocks, "13").attention_pair_bias.attention.query_bias
        self.arg506_1 = getattr(model.pairformer_stack.blocks, "13").attention_pair_bias.attention.input2qkvg.weight
        self.arg507_1 = getattr(model.pairformer_stack.blocks, "13").attention_pair_bias.attention.output_proj.weight
        self.arg508_1 = getattr(model.pairformer_stack.blocks, "14").transition_pair.layer_norm.weight
        self.arg509_1 = getattr(model.pairformer_stack.blocks, "14").transition_pair.layer_norm.bias
        self.arg510_1 = getattr(model.pairformer_stack.blocks, "14").transition_pair.linear_no_bias_ab.weight
        self.arg511_1 = getattr(model.pairformer_stack.blocks, "14").transition_pair.linear_out.weight
        self.arg512_1 = getattr(model.pairformer_stack.blocks, "14").triangle_multiplication.layernorm_z_in.weight
        self.arg513_1 = getattr(model.pairformer_stack.blocks, "14").triangle_multiplication.layernorm_z_in.bias
        self.arg514_1 = getattr(model.pairformer_stack.blocks, "14").triangle_multiplication.linear_z_out.weight
        self.arg515_1 = getattr(model.pairformer_stack.blocks, "14").triangle_multiplication.merged_linear_p.weight
        self.arg516_1 = getattr(model.pairformer_stack.blocks, "14").triangle_multiplication.merged_linear_g.weight
        self.arg517_1 = getattr(model.pairformer_stack.blocks, "14").triangle_attention.out_scalers
        self.arg518_1 = getattr(model.pairformer_stack.blocks, "14").triangle_attention.pair2b.weight
        self.arg519_1 = getattr(model.pairformer_stack.blocks, "14").triangle_attention.pair2qkvg1.weight
        self.arg520_1 = getattr(model.pairformer_stack.blocks, "14").triangle_attention.pair2qkvg2.weight
        self.arg521_1 = getattr(model.pairformer_stack.blocks, "14").triangle_attention.linear_out.weight
        self.arg522_1 = getattr(model.pairformer_stack.blocks, "14").transition_single.layer_norm.weight
        self.arg523_1 = getattr(model.pairformer_stack.blocks, "14").transition_single.layer_norm.bias
        self.arg524_1 = getattr(model.pairformer_stack.blocks, "14").transition_single.linear_no_bias_ab.weight
        self.arg525_1 = getattr(model.pairformer_stack.blocks, "14").transition_single.linear_out.weight
        self.arg526_1 = getattr(model.pairformer_stack.blocks, "14").attention_pair_bias.single_layer_norm.weight
        self.arg527_1 = getattr(model.pairformer_stack.blocks, "14").attention_pair_bias.single_layer_norm.bias
        self.arg528_1 = getattr(model.pairformer_stack.blocks, "14").attention_pair_bias.pair_layer_norm.weight
        self.arg529_1 = getattr(model.pairformer_stack.blocks, "14").attention_pair_bias.pair_layer_norm.bias
        self.arg530_1 = getattr(model.pairformer_stack.blocks, "14").attention_pair_bias.pair_linear.weight
        self.arg531_1 = getattr(model.pairformer_stack.blocks, "14").attention_pair_bias.attention.query_bias
        self.arg532_1 = getattr(model.pairformer_stack.blocks, "14").attention_pair_bias.attention.input2qkvg.weight
        self.arg533_1 = getattr(model.pairformer_stack.blocks, "14").attention_pair_bias.attention.output_proj.weight
        self.arg534_1 = getattr(model.pairformer_stack.blocks, "15").transition_pair.layer_norm.weight
        self.arg535_1 = getattr(model.pairformer_stack.blocks, "15").transition_pair.layer_norm.bias
        self.arg536_1 = getattr(model.pairformer_stack.blocks, "15").transition_pair.linear_no_bias_ab.weight
        self.arg537_1 = getattr(model.pairformer_stack.blocks, "15").transition_pair.linear_out.weight
        self.arg538_1 = getattr(model.pairformer_stack.blocks, "15").triangle_multiplication.layernorm_z_in.weight
        self.arg539_1 = getattr(model.pairformer_stack.blocks, "15").triangle_multiplication.layernorm_z_in.bias
        self.arg540_1 = getattr(model.pairformer_stack.blocks, "15").triangle_multiplication.linear_z_out.weight
        self.arg541_1 = getattr(model.pairformer_stack.blocks, "15").triangle_multiplication.merged_linear_p.weight
        self.arg542_1 = getattr(model.pairformer_stack.blocks, "15").triangle_multiplication.merged_linear_g.weight
        self.arg543_1 = getattr(model.pairformer_stack.blocks, "15").triangle_attention.out_scalers
        self.arg544_1 = getattr(model.pairformer_stack.blocks, "15").triangle_attention.pair2b.weight
        self.arg545_1 = getattr(model.pairformer_stack.blocks, "15").triangle_attention.pair2qkvg1.weight
        self.arg546_1 = getattr(model.pairformer_stack.blocks, "15").triangle_attention.pair2qkvg2.weight
        self.arg547_1 = getattr(model.pairformer_stack.blocks, "15").triangle_attention.linear_out.weight
        self.arg548_1 = getattr(model.pairformer_stack.blocks, "15").transition_single.layer_norm.weight
        self.arg549_1 = getattr(model.pairformer_stack.blocks, "15").transition_single.layer_norm.bias
        self.arg550_1 = getattr(model.pairformer_stack.blocks, "15").transition_single.linear_no_bias_ab.weight
        self.arg551_1 = getattr(model.pairformer_stack.blocks, "15").transition_single.linear_out.weight
        self.arg552_1 = getattr(model.pairformer_stack.blocks, "15").attention_pair_bias.single_layer_norm.weight
        self.arg553_1 = getattr(model.pairformer_stack.blocks, "15").attention_pair_bias.single_layer_norm.bias
        self.arg554_1 = getattr(model.pairformer_stack.blocks, "15").attention_pair_bias.pair_layer_norm.weight
        self.arg555_1 = getattr(model.pairformer_stack.blocks, "15").attention_pair_bias.pair_layer_norm.bias
        self.arg556_1 = getattr(model.pairformer_stack.blocks, "15").attention_pair_bias.pair_linear.weight
        self.arg557_1 = getattr(model.pairformer_stack.blocks, "15").attention_pair_bias.attention.query_bias
        self.arg558_1 = getattr(model.pairformer_stack.blocks, "15").attention_pair_bias.attention.input2qkvg.weight
        self.arg559_1 = getattr(model.pairformer_stack.blocks, "15").attention_pair_bias.attention.output_proj.weight
        self.arg560_1 = getattr(model.pairformer_stack.blocks, "16").transition_pair.layer_norm.weight
        self.arg561_1 = getattr(model.pairformer_stack.blocks, "16").transition_pair.layer_norm.bias
        self.arg562_1 = getattr(model.pairformer_stack.blocks, "16").transition_pair.linear_no_bias_ab.weight
        self.arg563_1 = getattr(model.pairformer_stack.blocks, "16").transition_pair.linear_out.weight
        self.arg564_1 = getattr(model.pairformer_stack.blocks, "16").triangle_multiplication.layernorm_z_in.weight
        self.arg565_1 = getattr(model.pairformer_stack.blocks, "16").triangle_multiplication.layernorm_z_in.bias
        self.arg566_1 = getattr(model.pairformer_stack.blocks, "16").triangle_multiplication.linear_z_out.weight
        self.arg567_1 = getattr(model.pairformer_stack.blocks, "16").triangle_multiplication.merged_linear_p.weight
        self.arg568_1 = getattr(model.pairformer_stack.blocks, "16").triangle_multiplication.merged_linear_g.weight
        self.arg569_1 = getattr(model.pairformer_stack.blocks, "16").triangle_attention.out_scalers
        self.arg570_1 = getattr(model.pairformer_stack.blocks, "16").triangle_attention.pair2b.weight
        self.arg571_1 = getattr(model.pairformer_stack.blocks, "16").triangle_attention.pair2qkvg1.weight
        self.arg572_1 = getattr(model.pairformer_stack.blocks, "16").triangle_attention.pair2qkvg2.weight
        self.arg573_1 = getattr(model.pairformer_stack.blocks, "16").triangle_attention.linear_out.weight
        self.arg574_1 = getattr(model.pairformer_stack.blocks, "16").transition_single.layer_norm.weight
        self.arg575_1 = getattr(model.pairformer_stack.blocks, "16").transition_single.layer_norm.bias
        self.arg576_1 = getattr(model.pairformer_stack.blocks, "16").transition_single.linear_no_bias_ab.weight
        self.arg577_1 = getattr(model.pairformer_stack.blocks, "16").transition_single.linear_out.weight
        self.arg578_1 = getattr(model.pairformer_stack.blocks, "16").attention_pair_bias.single_layer_norm.weight
        self.arg579_1 = getattr(model.pairformer_stack.blocks, "16").attention_pair_bias.single_layer_norm.bias
        self.arg580_1 = getattr(model.pairformer_stack.blocks, "16").attention_pair_bias.pair_layer_norm.weight
        self.arg581_1 = getattr(model.pairformer_stack.blocks, "16").attention_pair_bias.pair_layer_norm.bias
        self.arg582_1 = getattr(model.pairformer_stack.blocks, "16").attention_pair_bias.pair_linear.weight
        self.arg583_1 = getattr(model.pairformer_stack.blocks, "16").attention_pair_bias.attention.query_bias
        self.arg584_1 = getattr(model.pairformer_stack.blocks, "16").attention_pair_bias.attention.input2qkvg.weight
        self.arg585_1 = getattr(model.pairformer_stack.blocks, "16").attention_pair_bias.attention.output_proj.weight
        self.arg586_1 = getattr(model.pairformer_stack.blocks, "17").transition_pair.layer_norm.weight
        self.arg587_1 = getattr(model.pairformer_stack.blocks, "17").transition_pair.layer_norm.bias
        self.arg588_1 = getattr(model.pairformer_stack.blocks, "17").transition_pair.linear_no_bias_ab.weight
        self.arg589_1 = getattr(model.pairformer_stack.blocks, "17").transition_pair.linear_out.weight
        self.arg590_1 = getattr(model.pairformer_stack.blocks, "17").triangle_multiplication.layernorm_z_in.weight
        self.arg591_1 = getattr(model.pairformer_stack.blocks, "17").triangle_multiplication.layernorm_z_in.bias
        self.arg592_1 = getattr(model.pairformer_stack.blocks, "17").triangle_multiplication.linear_z_out.weight
        self.arg593_1 = getattr(model.pairformer_stack.blocks, "17").triangle_multiplication.merged_linear_p.weight
        self.arg594_1 = getattr(model.pairformer_stack.blocks, "17").triangle_multiplication.merged_linear_g.weight
        self.arg595_1 = getattr(model.pairformer_stack.blocks, "17").triangle_attention.out_scalers
        self.arg596_1 = getattr(model.pairformer_stack.blocks, "17").triangle_attention.pair2b.weight
        self.arg597_1 = getattr(model.pairformer_stack.blocks, "17").triangle_attention.pair2qkvg1.weight
        self.arg598_1 = getattr(model.pairformer_stack.blocks, "17").triangle_attention.pair2qkvg2.weight
        self.arg599_1 = getattr(model.pairformer_stack.blocks, "17").triangle_attention.linear_out.weight
        self.arg600_1 = getattr(model.pairformer_stack.blocks, "17").transition_single.layer_norm.weight
        self.arg601_1 = getattr(model.pairformer_stack.blocks, "17").transition_single.layer_norm.bias
        self.arg602_1 = getattr(model.pairformer_stack.blocks, "17").transition_single.linear_no_bias_ab.weight
        self.arg603_1 = getattr(model.pairformer_stack.blocks, "17").transition_single.linear_out.weight
        self.arg604_1 = getattr(model.pairformer_stack.blocks, "17").attention_pair_bias.single_layer_norm.weight
        self.arg605_1 = getattr(model.pairformer_stack.blocks, "17").attention_pair_bias.single_layer_norm.bias
        self.arg606_1 = getattr(model.pairformer_stack.blocks, "17").attention_pair_bias.pair_layer_norm.weight
        self.arg607_1 = getattr(model.pairformer_stack.blocks, "17").attention_pair_bias.pair_layer_norm.bias
        self.arg608_1 = getattr(model.pairformer_stack.blocks, "17").attention_pair_bias.pair_linear.weight
        self.arg609_1 = getattr(model.pairformer_stack.blocks, "17").attention_pair_bias.attention.query_bias
        self.arg610_1 = getattr(model.pairformer_stack.blocks, "17").attention_pair_bias.attention.input2qkvg.weight
        self.arg611_1 = getattr(model.pairformer_stack.blocks, "17").attention_pair_bias.attention.output_proj.weight
        self.arg612_1 = getattr(model.pairformer_stack.blocks, "18").transition_pair.layer_norm.weight
        self.arg613_1 = getattr(model.pairformer_stack.blocks, "18").transition_pair.layer_norm.bias
        self.arg614_1 = getattr(model.pairformer_stack.blocks, "18").transition_pair.linear_no_bias_ab.weight
        self.arg615_1 = getattr(model.pairformer_stack.blocks, "18").transition_pair.linear_out.weight
        self.arg616_1 = getattr(model.pairformer_stack.blocks, "18").triangle_multiplication.layernorm_z_in.weight
        self.arg617_1 = getattr(model.pairformer_stack.blocks, "18").triangle_multiplication.layernorm_z_in.bias
        self.arg618_1 = getattr(model.pairformer_stack.blocks, "18").triangle_multiplication.linear_z_out.weight
        self.arg619_1 = getattr(model.pairformer_stack.blocks, "18").triangle_multiplication.merged_linear_p.weight
        self.arg620_1 = getattr(model.pairformer_stack.blocks, "18").triangle_multiplication.merged_linear_g.weight
        self.arg621_1 = getattr(model.pairformer_stack.blocks, "18").triangle_attention.out_scalers
        self.arg622_1 = getattr(model.pairformer_stack.blocks, "18").triangle_attention.pair2b.weight
        self.arg623_1 = getattr(model.pairformer_stack.blocks, "18").triangle_attention.pair2qkvg1.weight
        self.arg624_1 = getattr(model.pairformer_stack.blocks, "18").triangle_attention.pair2qkvg2.weight
        self.arg625_1 = getattr(model.pairformer_stack.blocks, "18").triangle_attention.linear_out.weight
        self.arg626_1 = getattr(model.pairformer_stack.blocks, "18").transition_single.layer_norm.weight
        self.arg627_1 = getattr(model.pairformer_stack.blocks, "18").transition_single.layer_norm.bias
        self.arg628_1 = getattr(model.pairformer_stack.blocks, "18").transition_single.linear_no_bias_ab.weight
        self.arg629_1 = getattr(model.pairformer_stack.blocks, "18").transition_single.linear_out.weight
        self.arg630_1 = getattr(model.pairformer_stack.blocks, "18").attention_pair_bias.single_layer_norm.weight
        self.arg631_1 = getattr(model.pairformer_stack.blocks, "18").attention_pair_bias.single_layer_norm.bias
        self.arg632_1 = getattr(model.pairformer_stack.blocks, "18").attention_pair_bias.pair_layer_norm.weight
        self.arg633_1 = getattr(model.pairformer_stack.blocks, "18").attention_pair_bias.pair_layer_norm.bias
        self.arg634_1 = getattr(model.pairformer_stack.blocks, "18").attention_pair_bias.pair_linear.weight
        self.arg635_1 = getattr(model.pairformer_stack.blocks, "18").attention_pair_bias.attention.query_bias
        self.arg636_1 = getattr(model.pairformer_stack.blocks, "18").attention_pair_bias.attention.input2qkvg.weight
        self.arg637_1 = getattr(model.pairformer_stack.blocks, "18").attention_pair_bias.attention.output_proj.weight
        self.arg638_1 = getattr(model.pairformer_stack.blocks, "19").transition_pair.layer_norm.weight
        self.arg639_1 = getattr(model.pairformer_stack.blocks, "19").transition_pair.layer_norm.bias
        self.arg640_1 = getattr(model.pairformer_stack.blocks, "19").transition_pair.linear_no_bias_ab.weight
        self.arg641_1 = getattr(model.pairformer_stack.blocks, "19").transition_pair.linear_out.weight
        self.arg642_1 = getattr(model.pairformer_stack.blocks, "19").triangle_multiplication.layernorm_z_in.weight
        self.arg643_1 = getattr(model.pairformer_stack.blocks, "19").triangle_multiplication.layernorm_z_in.bias
        self.arg644_1 = getattr(model.pairformer_stack.blocks, "19").triangle_multiplication.linear_z_out.weight
        self.arg645_1 = getattr(model.pairformer_stack.blocks, "19").triangle_multiplication.merged_linear_p.weight
        self.arg646_1 = getattr(model.pairformer_stack.blocks, "19").triangle_multiplication.merged_linear_g.weight
        self.arg647_1 = getattr(model.pairformer_stack.blocks, "19").triangle_attention.out_scalers
        self.arg648_1 = getattr(model.pairformer_stack.blocks, "19").triangle_attention.pair2b.weight
        self.arg649_1 = getattr(model.pairformer_stack.blocks, "19").triangle_attention.pair2qkvg1.weight
        self.arg650_1 = getattr(model.pairformer_stack.blocks, "19").triangle_attention.pair2qkvg2.weight
        self.arg651_1 = getattr(model.pairformer_stack.blocks, "19").triangle_attention.linear_out.weight
        self.arg652_1 = getattr(model.pairformer_stack.blocks, "19").transition_single.layer_norm.weight
        self.arg653_1 = getattr(model.pairformer_stack.blocks, "19").transition_single.layer_norm.bias
        self.arg654_1 = getattr(model.pairformer_stack.blocks, "19").transition_single.linear_no_bias_ab.weight
        self.arg655_1 = getattr(model.pairformer_stack.blocks, "19").transition_single.linear_out.weight
        self.arg656_1 = getattr(model.pairformer_stack.blocks, "19").attention_pair_bias.single_layer_norm.weight
        self.arg657_1 = getattr(model.pairformer_stack.blocks, "19").attention_pair_bias.single_layer_norm.bias
        self.arg658_1 = getattr(model.pairformer_stack.blocks, "19").attention_pair_bias.pair_layer_norm.weight
        self.arg659_1 = getattr(model.pairformer_stack.blocks, "19").attention_pair_bias.pair_layer_norm.bias
        self.arg660_1 = getattr(model.pairformer_stack.blocks, "19").attention_pair_bias.pair_linear.weight
        self.arg661_1 = getattr(model.pairformer_stack.blocks, "19").attention_pair_bias.attention.query_bias
        self.arg662_1 = getattr(model.pairformer_stack.blocks, "19").attention_pair_bias.attention.input2qkvg.weight
        self.arg663_1 = getattr(model.pairformer_stack.blocks, "19").attention_pair_bias.attention.output_proj.weight
        self.arg664_1 = getattr(model.pairformer_stack.blocks, "20").transition_pair.layer_norm.weight
        self.arg665_1 = getattr(model.pairformer_stack.blocks, "20").transition_pair.layer_norm.bias
        self.arg666_1 = getattr(model.pairformer_stack.blocks, "20").transition_pair.linear_no_bias_ab.weight
        self.arg667_1 = getattr(model.pairformer_stack.blocks, "20").transition_pair.linear_out.weight
        self.arg668_1 = getattr(model.pairformer_stack.blocks, "20").triangle_multiplication.layernorm_z_in.weight
        self.arg669_1 = getattr(model.pairformer_stack.blocks, "20").triangle_multiplication.layernorm_z_in.bias
        self.arg670_1 = getattr(model.pairformer_stack.blocks, "20").triangle_multiplication.linear_z_out.weight
        self.arg671_1 = getattr(model.pairformer_stack.blocks, "20").triangle_multiplication.merged_linear_p.weight
        self.arg672_1 = getattr(model.pairformer_stack.blocks, "20").triangle_multiplication.merged_linear_g.weight
        self.arg673_1 = getattr(model.pairformer_stack.blocks, "20").triangle_attention.out_scalers
        self.arg674_1 = getattr(model.pairformer_stack.blocks, "20").triangle_attention.pair2b.weight
        self.arg675_1 = getattr(model.pairformer_stack.blocks, "20").triangle_attention.pair2qkvg1.weight
        self.arg676_1 = getattr(model.pairformer_stack.blocks, "20").triangle_attention.pair2qkvg2.weight
        self.arg677_1 = getattr(model.pairformer_stack.blocks, "20").triangle_attention.linear_out.weight
        self.arg678_1 = getattr(model.pairformer_stack.blocks, "20").transition_single.layer_norm.weight
        self.arg679_1 = getattr(model.pairformer_stack.blocks, "20").transition_single.layer_norm.bias
        self.arg680_1 = getattr(model.pairformer_stack.blocks, "20").transition_single.linear_no_bias_ab.weight
        self.arg681_1 = getattr(model.pairformer_stack.blocks, "20").transition_single.linear_out.weight
        self.arg682_1 = getattr(model.pairformer_stack.blocks, "20").attention_pair_bias.single_layer_norm.weight
        self.arg683_1 = getattr(model.pairformer_stack.blocks, "20").attention_pair_bias.single_layer_norm.bias
        self.arg684_1 = getattr(model.pairformer_stack.blocks, "20").attention_pair_bias.pair_layer_norm.weight
        self.arg685_1 = getattr(model.pairformer_stack.blocks, "20").attention_pair_bias.pair_layer_norm.bias
        self.arg686_1 = getattr(model.pairformer_stack.blocks, "20").attention_pair_bias.pair_linear.weight
        self.arg687_1 = getattr(model.pairformer_stack.blocks, "20").attention_pair_bias.attention.query_bias
        self.arg688_1 = getattr(model.pairformer_stack.blocks, "20").attention_pair_bias.attention.input2qkvg.weight
        self.arg689_1 = getattr(model.pairformer_stack.blocks, "20").attention_pair_bias.attention.output_proj.weight
        self.arg690_1 = getattr(model.pairformer_stack.blocks, "21").transition_pair.layer_norm.weight
        self.arg691_1 = getattr(model.pairformer_stack.blocks, "21").transition_pair.layer_norm.bias
        self.arg692_1 = getattr(model.pairformer_stack.blocks, "21").transition_pair.linear_no_bias_ab.weight
        self.arg693_1 = getattr(model.pairformer_stack.blocks, "21").transition_pair.linear_out.weight
        self.arg694_1 = getattr(model.pairformer_stack.blocks, "21").triangle_multiplication.layernorm_z_in.weight
        self.arg695_1 = getattr(model.pairformer_stack.blocks, "21").triangle_multiplication.layernorm_z_in.bias
        self.arg696_1 = getattr(model.pairformer_stack.blocks, "21").triangle_multiplication.linear_z_out.weight
        self.arg697_1 = getattr(model.pairformer_stack.blocks, "21").triangle_multiplication.merged_linear_p.weight
        self.arg698_1 = getattr(model.pairformer_stack.blocks, "21").triangle_multiplication.merged_linear_g.weight
        self.arg699_1 = getattr(model.pairformer_stack.blocks, "21").triangle_attention.out_scalers
        self.arg700_1 = getattr(model.pairformer_stack.blocks, "21").triangle_attention.pair2b.weight
        self.arg701_1 = getattr(model.pairformer_stack.blocks, "21").triangle_attention.pair2qkvg1.weight
        self.arg702_1 = getattr(model.pairformer_stack.blocks, "21").triangle_attention.pair2qkvg2.weight
        self.arg703_1 = getattr(model.pairformer_stack.blocks, "21").triangle_attention.linear_out.weight
        self.arg704_1 = getattr(model.pairformer_stack.blocks, "21").transition_single.layer_norm.weight
        self.arg705_1 = getattr(model.pairformer_stack.blocks, "21").transition_single.layer_norm.bias
        self.arg706_1 = getattr(model.pairformer_stack.blocks, "21").transition_single.linear_no_bias_ab.weight
        self.arg707_1 = getattr(model.pairformer_stack.blocks, "21").transition_single.linear_out.weight
        self.arg708_1 = getattr(model.pairformer_stack.blocks, "21").attention_pair_bias.single_layer_norm.weight
        self.arg709_1 = getattr(model.pairformer_stack.blocks, "21").attention_pair_bias.single_layer_norm.bias
        self.arg710_1 = getattr(model.pairformer_stack.blocks, "21").attention_pair_bias.pair_layer_norm.weight
        self.arg711_1 = getattr(model.pairformer_stack.blocks, "21").attention_pair_bias.pair_layer_norm.bias
        self.arg712_1 = getattr(model.pairformer_stack.blocks, "21").attention_pair_bias.pair_linear.weight
        self.arg713_1 = getattr(model.pairformer_stack.blocks, "21").attention_pair_bias.attention.query_bias
        self.arg714_1 = getattr(model.pairformer_stack.blocks, "21").attention_pair_bias.attention.input2qkvg.weight
        self.arg715_1 = getattr(model.pairformer_stack.blocks, "21").attention_pair_bias.attention.output_proj.weight
        self.arg716_1 = getattr(model.pairformer_stack.blocks, "22").transition_pair.layer_norm.weight
        self.arg717_1 = getattr(model.pairformer_stack.blocks, "22").transition_pair.layer_norm.bias
        self.arg718_1 = getattr(model.pairformer_stack.blocks, "22").transition_pair.linear_no_bias_ab.weight
        self.arg719_1 = getattr(model.pairformer_stack.blocks, "22").transition_pair.linear_out.weight
        self.arg720_1 = getattr(model.pairformer_stack.blocks, "22").triangle_multiplication.layernorm_z_in.weight
        self.arg721_1 = getattr(model.pairformer_stack.blocks, "22").triangle_multiplication.layernorm_z_in.bias
        self.arg722_1 = getattr(model.pairformer_stack.blocks, "22").triangle_multiplication.linear_z_out.weight
        self.arg723_1 = getattr(model.pairformer_stack.blocks, "22").triangle_multiplication.merged_linear_p.weight
        self.arg724_1 = getattr(model.pairformer_stack.blocks, "22").triangle_multiplication.merged_linear_g.weight
        self.arg725_1 = getattr(model.pairformer_stack.blocks, "22").triangle_attention.out_scalers
        self.arg726_1 = getattr(model.pairformer_stack.blocks, "22").triangle_attention.pair2b.weight
        self.arg727_1 = getattr(model.pairformer_stack.blocks, "22").triangle_attention.pair2qkvg1.weight
        self.arg728_1 = getattr(model.pairformer_stack.blocks, "22").triangle_attention.pair2qkvg2.weight
        self.arg729_1 = getattr(model.pairformer_stack.blocks, "22").triangle_attention.linear_out.weight
        self.arg730_1 = getattr(model.pairformer_stack.blocks, "22").transition_single.layer_norm.weight
        self.arg731_1 = getattr(model.pairformer_stack.blocks, "22").transition_single.layer_norm.bias
        self.arg732_1 = getattr(model.pairformer_stack.blocks, "22").transition_single.linear_no_bias_ab.weight
        self.arg733_1 = getattr(model.pairformer_stack.blocks, "22").transition_single.linear_out.weight
        self.arg734_1 = getattr(model.pairformer_stack.blocks, "22").attention_pair_bias.single_layer_norm.weight
        self.arg735_1 = getattr(model.pairformer_stack.blocks, "22").attention_pair_bias.single_layer_norm.bias
        self.arg736_1 = getattr(model.pairformer_stack.blocks, "22").attention_pair_bias.pair_layer_norm.weight
        self.arg737_1 = getattr(model.pairformer_stack.blocks, "22").attention_pair_bias.pair_layer_norm.bias
        self.arg738_1 = getattr(model.pairformer_stack.blocks, "22").attention_pair_bias.pair_linear.weight
        self.arg739_1 = getattr(model.pairformer_stack.blocks, "22").attention_pair_bias.attention.query_bias
        self.arg740_1 = getattr(model.pairformer_stack.blocks, "22").attention_pair_bias.attention.input2qkvg.weight
        self.arg741_1 = getattr(model.pairformer_stack.blocks, "22").attention_pair_bias.attention.output_proj.weight
        self.arg742_1 = getattr(model.pairformer_stack.blocks, "23").transition_pair.layer_norm.weight
        self.arg743_1 = getattr(model.pairformer_stack.blocks, "23").transition_pair.layer_norm.bias
        self.arg744_1 = getattr(model.pairformer_stack.blocks, "23").transition_pair.linear_no_bias_ab.weight
        self.arg745_1 = getattr(model.pairformer_stack.blocks, "23").transition_pair.linear_out.weight
        self.arg746_1 = getattr(model.pairformer_stack.blocks, "23").triangle_multiplication.layernorm_z_in.weight
        self.arg747_1 = getattr(model.pairformer_stack.blocks, "23").triangle_multiplication.layernorm_z_in.bias
        self.arg748_1 = getattr(model.pairformer_stack.blocks, "23").triangle_multiplication.linear_z_out.weight
        self.arg749_1 = getattr(model.pairformer_stack.blocks, "23").triangle_multiplication.merged_linear_p.weight
        self.arg750_1 = getattr(model.pairformer_stack.blocks, "23").triangle_multiplication.merged_linear_g.weight
        self.arg751_1 = getattr(model.pairformer_stack.blocks, "23").triangle_attention.out_scalers
        self.arg752_1 = getattr(model.pairformer_stack.blocks, "23").triangle_attention.pair2b.weight
        self.arg753_1 = getattr(model.pairformer_stack.blocks, "23").triangle_attention.pair2qkvg1.weight
        self.arg754_1 = getattr(model.pairformer_stack.blocks, "23").triangle_attention.pair2qkvg2.weight
        self.arg755_1 = getattr(model.pairformer_stack.blocks, "23").triangle_attention.linear_out.weight
        self.arg756_1 = getattr(model.pairformer_stack.blocks, "23").transition_single.layer_norm.weight
        self.arg757_1 = getattr(model.pairformer_stack.blocks, "23").transition_single.layer_norm.bias
        self.arg758_1 = getattr(model.pairformer_stack.blocks, "23").transition_single.linear_no_bias_ab.weight
        self.arg759_1 = getattr(model.pairformer_stack.blocks, "23").transition_single.linear_out.weight
        self.arg760_1 = getattr(model.pairformer_stack.blocks, "23").attention_pair_bias.single_layer_norm.weight
        self.arg761_1 = getattr(model.pairformer_stack.blocks, "23").attention_pair_bias.single_layer_norm.bias
        self.arg762_1 = getattr(model.pairformer_stack.blocks, "23").attention_pair_bias.pair_layer_norm.weight
        self.arg763_1 = getattr(model.pairformer_stack.blocks, "23").attention_pair_bias.pair_layer_norm.bias
        self.arg764_1 = getattr(model.pairformer_stack.blocks, "23").attention_pair_bias.pair_linear.weight
        self.arg765_1 = getattr(model.pairformer_stack.blocks, "23").attention_pair_bias.attention.query_bias
        self.arg766_1 = getattr(model.pairformer_stack.blocks, "23").attention_pair_bias.attention.input2qkvg.weight
        self.arg767_1 = getattr(model.pairformer_stack.blocks, "23").attention_pair_bias.attention.output_proj.weight
        self.arg768_1 = getattr(model.pairformer_stack.blocks, "24").transition_pair.layer_norm.weight
        self.arg769_1 = getattr(model.pairformer_stack.blocks, "24").transition_pair.layer_norm.bias
        self.arg770_1 = getattr(model.pairformer_stack.blocks, "24").transition_pair.linear_no_bias_ab.weight
        self.arg771_1 = getattr(model.pairformer_stack.blocks, "24").transition_pair.linear_out.weight
        self.arg772_1 = getattr(model.pairformer_stack.blocks, "24").triangle_multiplication.layernorm_z_in.weight
        self.arg773_1 = getattr(model.pairformer_stack.blocks, "24").triangle_multiplication.layernorm_z_in.bias
        self.arg774_1 = getattr(model.pairformer_stack.blocks, "24").triangle_multiplication.linear_z_out.weight
        self.arg775_1 = getattr(model.pairformer_stack.blocks, "24").triangle_multiplication.merged_linear_p.weight
        self.arg776_1 = getattr(model.pairformer_stack.blocks, "24").triangle_multiplication.merged_linear_g.weight
        self.arg777_1 = getattr(model.pairformer_stack.blocks, "24").triangle_attention.out_scalers
        self.arg778_1 = getattr(model.pairformer_stack.blocks, "24").triangle_attention.pair2b.weight
        self.arg779_1 = getattr(model.pairformer_stack.blocks, "24").triangle_attention.pair2qkvg1.weight
        self.arg780_1 = getattr(model.pairformer_stack.blocks, "24").triangle_attention.pair2qkvg2.weight
        self.arg781_1 = getattr(model.pairformer_stack.blocks, "24").triangle_attention.linear_out.weight
        self.arg782_1 = getattr(model.pairformer_stack.blocks, "24").transition_single.layer_norm.weight
        self.arg783_1 = getattr(model.pairformer_stack.blocks, "24").transition_single.layer_norm.bias
        self.arg784_1 = getattr(model.pairformer_stack.blocks, "24").transition_single.linear_no_bias_ab.weight
        self.arg785_1 = getattr(model.pairformer_stack.blocks, "24").transition_single.linear_out.weight
        self.arg786_1 = getattr(model.pairformer_stack.blocks, "24").attention_pair_bias.single_layer_norm.weight
        self.arg787_1 = getattr(model.pairformer_stack.blocks, "24").attention_pair_bias.single_layer_norm.bias
        self.arg788_1 = getattr(model.pairformer_stack.blocks, "24").attention_pair_bias.pair_layer_norm.weight
        self.arg789_1 = getattr(model.pairformer_stack.blocks, "24").attention_pair_bias.pair_layer_norm.bias
        self.arg790_1 = getattr(model.pairformer_stack.blocks, "24").attention_pair_bias.pair_linear.weight
        self.arg791_1 = getattr(model.pairformer_stack.blocks, "24").attention_pair_bias.attention.query_bias
        self.arg792_1 = getattr(model.pairformer_stack.blocks, "24").attention_pair_bias.attention.input2qkvg.weight
        self.arg793_1 = getattr(model.pairformer_stack.blocks, "24").attention_pair_bias.attention.output_proj.weight
        self.arg794_1 = getattr(model.pairformer_stack.blocks, "25").transition_pair.layer_norm.weight
        self.arg795_1 = getattr(model.pairformer_stack.blocks, "25").transition_pair.layer_norm.bias
        self.arg796_1 = getattr(model.pairformer_stack.blocks, "25").transition_pair.linear_no_bias_ab.weight
        self.arg797_1 = getattr(model.pairformer_stack.blocks, "25").transition_pair.linear_out.weight
        self.arg798_1 = getattr(model.pairformer_stack.blocks, "25").triangle_multiplication.layernorm_z_in.weight
        self.arg799_1 = getattr(model.pairformer_stack.blocks, "25").triangle_multiplication.layernorm_z_in.bias
        self.arg800_1 = getattr(model.pairformer_stack.blocks, "25").triangle_multiplication.linear_z_out.weight
        self.arg801_1 = getattr(model.pairformer_stack.blocks, "25").triangle_multiplication.merged_linear_p.weight
        self.arg802_1 = getattr(model.pairformer_stack.blocks, "25").triangle_multiplication.merged_linear_g.weight
        self.arg803_1 = getattr(model.pairformer_stack.blocks, "25").triangle_attention.out_scalers
        self.arg804_1 = getattr(model.pairformer_stack.blocks, "25").triangle_attention.pair2b.weight
        self.arg805_1 = getattr(model.pairformer_stack.blocks, "25").triangle_attention.pair2qkvg1.weight
        self.arg806_1 = getattr(model.pairformer_stack.blocks, "25").triangle_attention.pair2qkvg2.weight
        self.arg807_1 = getattr(model.pairformer_stack.blocks, "25").triangle_attention.linear_out.weight
        self.arg808_1 = getattr(model.pairformer_stack.blocks, "25").transition_single.layer_norm.weight
        self.arg809_1 = getattr(model.pairformer_stack.blocks, "25").transition_single.layer_norm.bias
        self.arg810_1 = getattr(model.pairformer_stack.blocks, "25").transition_single.linear_no_bias_ab.weight
        self.arg811_1 = getattr(model.pairformer_stack.blocks, "25").transition_single.linear_out.weight
        self.arg812_1 = getattr(model.pairformer_stack.blocks, "25").attention_pair_bias.single_layer_norm.weight
        self.arg813_1 = getattr(model.pairformer_stack.blocks, "25").attention_pair_bias.single_layer_norm.bias
        self.arg814_1 = getattr(model.pairformer_stack.blocks, "25").attention_pair_bias.pair_layer_norm.weight
        self.arg815_1 = getattr(model.pairformer_stack.blocks, "25").attention_pair_bias.pair_layer_norm.bias
        self.arg816_1 = getattr(model.pairformer_stack.blocks, "25").attention_pair_bias.pair_linear.weight
        self.arg817_1 = getattr(model.pairformer_stack.blocks, "25").attention_pair_bias.attention.query_bias
        self.arg818_1 = getattr(model.pairformer_stack.blocks, "25").attention_pair_bias.attention.input2qkvg.weight
        self.arg819_1 = getattr(model.pairformer_stack.blocks, "25").attention_pair_bias.attention.output_proj.weight
        self.arg820_1 = getattr(model.pairformer_stack.blocks, "26").transition_pair.layer_norm.weight
        self.arg821_1 = getattr(model.pairformer_stack.blocks, "26").transition_pair.layer_norm.bias
        self.arg822_1 = getattr(model.pairformer_stack.blocks, "26").transition_pair.linear_no_bias_ab.weight
        self.arg823_1 = getattr(model.pairformer_stack.blocks, "26").transition_pair.linear_out.weight
        self.arg824_1 = getattr(model.pairformer_stack.blocks, "26").triangle_multiplication.layernorm_z_in.weight
        self.arg825_1 = getattr(model.pairformer_stack.blocks, "26").triangle_multiplication.layernorm_z_in.bias
        self.arg826_1 = getattr(model.pairformer_stack.blocks, "26").triangle_multiplication.linear_z_out.weight
        self.arg827_1 = getattr(model.pairformer_stack.blocks, "26").triangle_multiplication.merged_linear_p.weight
        self.arg828_1 = getattr(model.pairformer_stack.blocks, "26").triangle_multiplication.merged_linear_g.weight
        self.arg829_1 = getattr(model.pairformer_stack.blocks, "26").triangle_attention.out_scalers
        self.arg830_1 = getattr(model.pairformer_stack.blocks, "26").triangle_attention.pair2b.weight
        self.arg831_1 = getattr(model.pairformer_stack.blocks, "26").triangle_attention.pair2qkvg1.weight
        self.arg832_1 = getattr(model.pairformer_stack.blocks, "26").triangle_attention.pair2qkvg2.weight
        self.arg833_1 = getattr(model.pairformer_stack.blocks, "26").triangle_attention.linear_out.weight
        self.arg834_1 = getattr(model.pairformer_stack.blocks, "26").transition_single.layer_norm.weight
        self.arg835_1 = getattr(model.pairformer_stack.blocks, "26").transition_single.layer_norm.bias
        self.arg836_1 = getattr(model.pairformer_stack.blocks, "26").transition_single.linear_no_bias_ab.weight
        self.arg837_1 = getattr(model.pairformer_stack.blocks, "26").transition_single.linear_out.weight
        self.arg838_1 = getattr(model.pairformer_stack.blocks, "26").attention_pair_bias.single_layer_norm.weight
        self.arg839_1 = getattr(model.pairformer_stack.blocks, "26").attention_pair_bias.single_layer_norm.bias
        self.arg840_1 = getattr(model.pairformer_stack.blocks, "26").attention_pair_bias.pair_layer_norm.weight
        self.arg841_1 = getattr(model.pairformer_stack.blocks, "26").attention_pair_bias.pair_layer_norm.bias
        self.arg842_1 = getattr(model.pairformer_stack.blocks, "26").attention_pair_bias.pair_linear.weight
        self.arg843_1 = getattr(model.pairformer_stack.blocks, "26").attention_pair_bias.attention.query_bias
        self.arg844_1 = getattr(model.pairformer_stack.blocks, "26").attention_pair_bias.attention.input2qkvg.weight
        self.arg845_1 = getattr(model.pairformer_stack.blocks, "26").attention_pair_bias.attention.output_proj.weight
        self.arg846_1 = getattr(model.pairformer_stack.blocks, "27").transition_pair.layer_norm.weight
        self.arg847_1 = getattr(model.pairformer_stack.blocks, "27").transition_pair.layer_norm.bias
        self.arg848_1 = getattr(model.pairformer_stack.blocks, "27").transition_pair.linear_no_bias_ab.weight
        self.arg849_1 = getattr(model.pairformer_stack.blocks, "27").transition_pair.linear_out.weight
        self.arg850_1 = getattr(model.pairformer_stack.blocks, "27").triangle_multiplication.layernorm_z_in.weight
        self.arg851_1 = getattr(model.pairformer_stack.blocks, "27").triangle_multiplication.layernorm_z_in.bias
        self.arg852_1 = getattr(model.pairformer_stack.blocks, "27").triangle_multiplication.linear_z_out.weight
        self.arg853_1 = getattr(model.pairformer_stack.blocks, "27").triangle_multiplication.merged_linear_p.weight
        self.arg854_1 = getattr(model.pairformer_stack.blocks, "27").triangle_multiplication.merged_linear_g.weight
        self.arg855_1 = getattr(model.pairformer_stack.blocks, "27").triangle_attention.out_scalers
        self.arg856_1 = getattr(model.pairformer_stack.blocks, "27").triangle_attention.pair2b.weight
        self.arg857_1 = getattr(model.pairformer_stack.blocks, "27").triangle_attention.pair2qkvg1.weight
        self.arg858_1 = getattr(model.pairformer_stack.blocks, "27").triangle_attention.pair2qkvg2.weight
        self.arg859_1 = getattr(model.pairformer_stack.blocks, "27").triangle_attention.linear_out.weight
        self.arg860_1 = getattr(model.pairformer_stack.blocks, "27").transition_single.layer_norm.weight
        self.arg861_1 = getattr(model.pairformer_stack.blocks, "27").transition_single.layer_norm.bias
        self.arg862_1 = getattr(model.pairformer_stack.blocks, "27").transition_single.linear_no_bias_ab.weight
        self.arg863_1 = getattr(model.pairformer_stack.blocks, "27").transition_single.linear_out.weight
        self.arg864_1 = getattr(model.pairformer_stack.blocks, "27").attention_pair_bias.single_layer_norm.weight
        self.arg865_1 = getattr(model.pairformer_stack.blocks, "27").attention_pair_bias.single_layer_norm.bias
        self.arg866_1 = getattr(model.pairformer_stack.blocks, "27").attention_pair_bias.pair_layer_norm.weight
        self.arg867_1 = getattr(model.pairformer_stack.blocks, "27").attention_pair_bias.pair_layer_norm.bias
        self.arg868_1 = getattr(model.pairformer_stack.blocks, "27").attention_pair_bias.pair_linear.weight
        self.arg869_1 = getattr(model.pairformer_stack.blocks, "27").attention_pair_bias.attention.query_bias
        self.arg870_1 = getattr(model.pairformer_stack.blocks, "27").attention_pair_bias.attention.input2qkvg.weight
        self.arg871_1 = getattr(model.pairformer_stack.blocks, "27").attention_pair_bias.attention.output_proj.weight
        self.arg872_1 = getattr(model.pairformer_stack.blocks, "28").transition_pair.layer_norm.weight
        self.arg873_1 = getattr(model.pairformer_stack.blocks, "28").transition_pair.layer_norm.bias
        self.arg874_1 = getattr(model.pairformer_stack.blocks, "28").transition_pair.linear_no_bias_ab.weight
        self.arg875_1 = getattr(model.pairformer_stack.blocks, "28").transition_pair.linear_out.weight
        self.arg876_1 = getattr(model.pairformer_stack.blocks, "28").triangle_multiplication.layernorm_z_in.weight
        self.arg877_1 = getattr(model.pairformer_stack.blocks, "28").triangle_multiplication.layernorm_z_in.bias
        self.arg878_1 = getattr(model.pairformer_stack.blocks, "28").triangle_multiplication.linear_z_out.weight
        self.arg879_1 = getattr(model.pairformer_stack.blocks, "28").triangle_multiplication.merged_linear_p.weight
        self.arg880_1 = getattr(model.pairformer_stack.blocks, "28").triangle_multiplication.merged_linear_g.weight
        self.arg881_1 = getattr(model.pairformer_stack.blocks, "28").triangle_attention.out_scalers
        self.arg882_1 = getattr(model.pairformer_stack.blocks, "28").triangle_attention.pair2b.weight
        self.arg883_1 = getattr(model.pairformer_stack.blocks, "28").triangle_attention.pair2qkvg1.weight
        self.arg884_1 = getattr(model.pairformer_stack.blocks, "28").triangle_attention.pair2qkvg2.weight
        self.arg885_1 = getattr(model.pairformer_stack.blocks, "28").triangle_attention.linear_out.weight
        self.arg886_1 = getattr(model.pairformer_stack.blocks, "28").transition_single.layer_norm.weight
        self.arg887_1 = getattr(model.pairformer_stack.blocks, "28").transition_single.layer_norm.bias
        self.arg888_1 = getattr(model.pairformer_stack.blocks, "28").transition_single.linear_no_bias_ab.weight
        self.arg889_1 = getattr(model.pairformer_stack.blocks, "28").transition_single.linear_out.weight
        self.arg890_1 = getattr(model.pairformer_stack.blocks, "28").attention_pair_bias.single_layer_norm.weight
        self.arg891_1 = getattr(model.pairformer_stack.blocks, "28").attention_pair_bias.single_layer_norm.bias
        self.arg892_1 = getattr(model.pairformer_stack.blocks, "28").attention_pair_bias.pair_layer_norm.weight
        self.arg893_1 = getattr(model.pairformer_stack.blocks, "28").attention_pair_bias.pair_layer_norm.bias
        self.arg894_1 = getattr(model.pairformer_stack.blocks, "28").attention_pair_bias.pair_linear.weight
        self.arg895_1 = getattr(model.pairformer_stack.blocks, "28").attention_pair_bias.attention.query_bias
        self.arg896_1 = getattr(model.pairformer_stack.blocks, "28").attention_pair_bias.attention.input2qkvg.weight
        self.arg897_1 = getattr(model.pairformer_stack.blocks, "28").attention_pair_bias.attention.output_proj.weight
        self.arg898_1 = getattr(model.pairformer_stack.blocks, "29").transition_pair.layer_norm.weight
        self.arg899_1 = getattr(model.pairformer_stack.blocks, "29").transition_pair.layer_norm.bias
        self.arg900_1 = getattr(model.pairformer_stack.blocks, "29").transition_pair.linear_no_bias_ab.weight
        self.arg901_1 = getattr(model.pairformer_stack.blocks, "29").transition_pair.linear_out.weight
        self.arg902_1 = getattr(model.pairformer_stack.blocks, "29").triangle_multiplication.layernorm_z_in.weight
        self.arg903_1 = getattr(model.pairformer_stack.blocks, "29").triangle_multiplication.layernorm_z_in.bias
        self.arg904_1 = getattr(model.pairformer_stack.blocks, "29").triangle_multiplication.linear_z_out.weight
        self.arg905_1 = getattr(model.pairformer_stack.blocks, "29").triangle_multiplication.merged_linear_p.weight
        self.arg906_1 = getattr(model.pairformer_stack.blocks, "29").triangle_multiplication.merged_linear_g.weight
        self.arg907_1 = getattr(model.pairformer_stack.blocks, "29").triangle_attention.out_scalers
        self.arg908_1 = getattr(model.pairformer_stack.blocks, "29").triangle_attention.pair2b.weight
        self.arg909_1 = getattr(model.pairformer_stack.blocks, "29").triangle_attention.pair2qkvg1.weight
        self.arg910_1 = getattr(model.pairformer_stack.blocks, "29").triangle_attention.pair2qkvg2.weight
        self.arg911_1 = getattr(model.pairformer_stack.blocks, "29").triangle_attention.linear_out.weight
        self.arg912_1 = getattr(model.pairformer_stack.blocks, "29").transition_single.layer_norm.weight
        self.arg913_1 = getattr(model.pairformer_stack.blocks, "29").transition_single.layer_norm.bias
        self.arg914_1 = getattr(model.pairformer_stack.blocks, "29").transition_single.linear_no_bias_ab.weight
        self.arg915_1 = getattr(model.pairformer_stack.blocks, "29").transition_single.linear_out.weight
        self.arg916_1 = getattr(model.pairformer_stack.blocks, "29").attention_pair_bias.single_layer_norm.weight
        self.arg917_1 = getattr(model.pairformer_stack.blocks, "29").attention_pair_bias.single_layer_norm.bias
        self.arg918_1 = getattr(model.pairformer_stack.blocks, "29").attention_pair_bias.pair_layer_norm.weight
        self.arg919_1 = getattr(model.pairformer_stack.blocks, "29").attention_pair_bias.pair_layer_norm.bias
        self.arg920_1 = getattr(model.pairformer_stack.blocks, "29").attention_pair_bias.pair_linear.weight
        self.arg921_1 = getattr(model.pairformer_stack.blocks, "29").attention_pair_bias.attention.query_bias
        self.arg922_1 = getattr(model.pairformer_stack.blocks, "29").attention_pair_bias.attention.input2qkvg.weight
        self.arg923_1 = getattr(model.pairformer_stack.blocks, "29").attention_pair_bias.attention.output_proj.weight
        self.arg924_1 = getattr(model.pairformer_stack.blocks, "30").transition_pair.layer_norm.weight
        self.arg925_1 = getattr(model.pairformer_stack.blocks, "30").transition_pair.layer_norm.bias
        self.arg926_1 = getattr(model.pairformer_stack.blocks, "30").transition_pair.linear_no_bias_ab.weight
        self.arg927_1 = getattr(model.pairformer_stack.blocks, "30").transition_pair.linear_out.weight
        self.arg928_1 = getattr(model.pairformer_stack.blocks, "30").triangle_multiplication.layernorm_z_in.weight
        self.arg929_1 = getattr(model.pairformer_stack.blocks, "30").triangle_multiplication.layernorm_z_in.bias
        self.arg930_1 = getattr(model.pairformer_stack.blocks, "30").triangle_multiplication.linear_z_out.weight
        self.arg931_1 = getattr(model.pairformer_stack.blocks, "30").triangle_multiplication.merged_linear_p.weight
        self.arg932_1 = getattr(model.pairformer_stack.blocks, "30").triangle_multiplication.merged_linear_g.weight
        self.arg933_1 = getattr(model.pairformer_stack.blocks, "30").triangle_attention.out_scalers
        self.arg934_1 = getattr(model.pairformer_stack.blocks, "30").triangle_attention.pair2b.weight
        self.arg935_1 = getattr(model.pairformer_stack.blocks, "30").triangle_attention.pair2qkvg1.weight
        self.arg936_1 = getattr(model.pairformer_stack.blocks, "30").triangle_attention.pair2qkvg2.weight
        self.arg937_1 = getattr(model.pairformer_stack.blocks, "30").triangle_attention.linear_out.weight
        self.arg938_1 = getattr(model.pairformer_stack.blocks, "30").transition_single.layer_norm.weight
        self.arg939_1 = getattr(model.pairformer_stack.blocks, "30").transition_single.layer_norm.bias
        self.arg940_1 = getattr(model.pairformer_stack.blocks, "30").transition_single.linear_no_bias_ab.weight
        self.arg941_1 = getattr(model.pairformer_stack.blocks, "30").transition_single.linear_out.weight
        self.arg942_1 = getattr(model.pairformer_stack.blocks, "30").attention_pair_bias.single_layer_norm.weight
        self.arg943_1 = getattr(model.pairformer_stack.blocks, "30").attention_pair_bias.single_layer_norm.bias
        self.arg944_1 = getattr(model.pairformer_stack.blocks, "30").attention_pair_bias.pair_layer_norm.weight
        self.arg945_1 = getattr(model.pairformer_stack.blocks, "30").attention_pair_bias.pair_layer_norm.bias
        self.arg946_1 = getattr(model.pairformer_stack.blocks, "30").attention_pair_bias.pair_linear.weight
        self.arg947_1 = getattr(model.pairformer_stack.blocks, "30").attention_pair_bias.attention.query_bias
        self.arg948_1 = getattr(model.pairformer_stack.blocks, "30").attention_pair_bias.attention.input2qkvg.weight
        self.arg949_1 = getattr(model.pairformer_stack.blocks, "30").attention_pair_bias.attention.output_proj.weight
        self.arg950_1 = getattr(model.pairformer_stack.blocks, "31").transition_pair.layer_norm.weight
        self.arg951_1 = getattr(model.pairformer_stack.blocks, "31").transition_pair.layer_norm.bias
        self.arg952_1 = getattr(model.pairformer_stack.blocks, "31").transition_pair.linear_no_bias_ab.weight
        self.arg953_1 = getattr(model.pairformer_stack.blocks, "31").transition_pair.linear_out.weight
        self.arg954_1 = getattr(model.pairformer_stack.blocks, "31").triangle_multiplication.layernorm_z_in.weight
        self.arg955_1 = getattr(model.pairformer_stack.blocks, "31").triangle_multiplication.layernorm_z_in.bias
        self.arg956_1 = getattr(model.pairformer_stack.blocks, "31").triangle_multiplication.linear_z_out.weight
        self.arg957_1 = getattr(model.pairformer_stack.blocks, "31").triangle_multiplication.merged_linear_p.weight
        self.arg958_1 = getattr(model.pairformer_stack.blocks, "31").triangle_multiplication.merged_linear_g.weight
        self.arg959_1 = getattr(model.pairformer_stack.blocks, "31").triangle_attention.out_scalers
        self.arg960_1 = getattr(model.pairformer_stack.blocks, "31").triangle_attention.pair2b.weight
        self.arg961_1 = getattr(model.pairformer_stack.blocks, "31").triangle_attention.pair2qkvg1.weight
        self.arg962_1 = getattr(model.pairformer_stack.blocks, "31").triangle_attention.pair2qkvg2.weight
        self.arg963_1 = getattr(model.pairformer_stack.blocks, "31").triangle_attention.linear_out.weight
        self.arg964_1 = getattr(model.pairformer_stack.blocks, "31").transition_single.layer_norm.weight
        self.arg965_1 = getattr(model.pairformer_stack.blocks, "31").transition_single.layer_norm.bias
        self.arg966_1 = getattr(model.pairformer_stack.blocks, "31").transition_single.linear_no_bias_ab.weight
        self.arg967_1 = getattr(model.pairformer_stack.blocks, "31").transition_single.linear_out.weight
        self.arg968_1 = getattr(model.pairformer_stack.blocks, "31").attention_pair_bias.single_layer_norm.weight
        self.arg969_1 = getattr(model.pairformer_stack.blocks, "31").attention_pair_bias.single_layer_norm.bias
        self.arg970_1 = getattr(model.pairformer_stack.blocks, "31").attention_pair_bias.pair_layer_norm.weight
        self.arg971_1 = getattr(model.pairformer_stack.blocks, "31").attention_pair_bias.pair_layer_norm.bias
        self.arg972_1 = getattr(model.pairformer_stack.blocks, "31").attention_pair_bias.pair_linear.weight
        self.arg973_1 = getattr(model.pairformer_stack.blocks, "31").attention_pair_bias.attention.query_bias
        self.arg974_1 = getattr(model.pairformer_stack.blocks, "31").attention_pair_bias.attention.input2qkvg.weight
        self.arg975_1 = getattr(model.pairformer_stack.blocks, "31").attention_pair_bias.attention.output_proj.weight
        self.arg976_1 = getattr(model.pairformer_stack.blocks, "32").transition_pair.layer_norm.weight
        self.arg977_1 = getattr(model.pairformer_stack.blocks, "32").transition_pair.layer_norm.bias
        self.arg978_1 = getattr(model.pairformer_stack.blocks, "32").transition_pair.linear_no_bias_ab.weight
        self.arg979_1 = getattr(model.pairformer_stack.blocks, "32").transition_pair.linear_out.weight
        self.arg980_1 = getattr(model.pairformer_stack.blocks, "32").triangle_multiplication.layernorm_z_in.weight
        self.arg981_1 = getattr(model.pairformer_stack.blocks, "32").triangle_multiplication.layernorm_z_in.bias
        self.arg982_1 = getattr(model.pairformer_stack.blocks, "32").triangle_multiplication.linear_z_out.weight
        self.arg983_1 = getattr(model.pairformer_stack.blocks, "32").triangle_multiplication.merged_linear_p.weight
        self.arg984_1 = getattr(model.pairformer_stack.blocks, "32").triangle_multiplication.merged_linear_g.weight
        self.arg985_1 = getattr(model.pairformer_stack.blocks, "32").triangle_attention.out_scalers
        self.arg986_1 = getattr(model.pairformer_stack.blocks, "32").triangle_attention.pair2b.weight
        self.arg987_1 = getattr(model.pairformer_stack.blocks, "32").triangle_attention.pair2qkvg1.weight
        self.arg988_1 = getattr(model.pairformer_stack.blocks, "32").triangle_attention.pair2qkvg2.weight
        self.arg989_1 = getattr(model.pairformer_stack.blocks, "32").triangle_attention.linear_out.weight
        self.arg990_1 = getattr(model.pairformer_stack.blocks, "32").transition_single.layer_norm.weight
        self.arg991_1 = getattr(model.pairformer_stack.blocks, "32").transition_single.layer_norm.bias
        self.arg992_1 = getattr(model.pairformer_stack.blocks, "32").transition_single.linear_no_bias_ab.weight
        self.arg993_1 = getattr(model.pairformer_stack.blocks, "32").transition_single.linear_out.weight
        self.arg994_1 = getattr(model.pairformer_stack.blocks, "32").attention_pair_bias.single_layer_norm.weight
        self.arg995_1 = getattr(model.pairformer_stack.blocks, "32").attention_pair_bias.single_layer_norm.bias
        self.arg996_1 = getattr(model.pairformer_stack.blocks, "32").attention_pair_bias.pair_layer_norm.weight
        self.arg997_1 = getattr(model.pairformer_stack.blocks, "32").attention_pair_bias.pair_layer_norm.bias
        self.arg998_1 = getattr(model.pairformer_stack.blocks, "32").attention_pair_bias.pair_linear.weight
        self.arg999_1 = getattr(model.pairformer_stack.blocks, "32").attention_pair_bias.attention.query_bias
        self.arg1000_1 = getattr(model.pairformer_stack.blocks, "32").attention_pair_bias.attention.input2qkvg.weight
        self.arg1001_1 = getattr(model.pairformer_stack.blocks, "32").attention_pair_bias.attention.output_proj.weight
        self.arg1002_1 = getattr(model.pairformer_stack.blocks, "33").transition_pair.layer_norm.weight
        self.arg1003_1 = getattr(model.pairformer_stack.blocks, "33").transition_pair.layer_norm.bias
        self.arg1004_1 = getattr(model.pairformer_stack.blocks, "33").transition_pair.linear_no_bias_ab.weight
        self.arg1005_1 = getattr(model.pairformer_stack.blocks, "33").transition_pair.linear_out.weight
        self.arg1006_1 = getattr(model.pairformer_stack.blocks, "33").triangle_multiplication.layernorm_z_in.weight
        self.arg1007_1 = getattr(model.pairformer_stack.blocks, "33").triangle_multiplication.layernorm_z_in.bias
        self.arg1008_1 = getattr(model.pairformer_stack.blocks, "33").triangle_multiplication.linear_z_out.weight
        self.arg1009_1 = getattr(model.pairformer_stack.blocks, "33").triangle_multiplication.merged_linear_p.weight
        self.arg1010_1 = getattr(model.pairformer_stack.blocks, "33").triangle_multiplication.merged_linear_g.weight
        self.arg1011_1 = getattr(model.pairformer_stack.blocks, "33").triangle_attention.out_scalers
        self.arg1012_1 = getattr(model.pairformer_stack.blocks, "33").triangle_attention.pair2b.weight
        self.arg1013_1 = getattr(model.pairformer_stack.blocks, "33").triangle_attention.pair2qkvg1.weight
        self.arg1014_1 = getattr(model.pairformer_stack.blocks, "33").triangle_attention.pair2qkvg2.weight
        self.arg1015_1 = getattr(model.pairformer_stack.blocks, "33").triangle_attention.linear_out.weight
        self.arg1016_1 = getattr(model.pairformer_stack.blocks, "33").transition_single.layer_norm.weight
        self.arg1017_1 = getattr(model.pairformer_stack.blocks, "33").transition_single.layer_norm.bias
        self.arg1018_1 = getattr(model.pairformer_stack.blocks, "33").transition_single.linear_no_bias_ab.weight
        self.arg1019_1 = getattr(model.pairformer_stack.blocks, "33").transition_single.linear_out.weight
        self.arg1020_1 = getattr(model.pairformer_stack.blocks, "33").attention_pair_bias.single_layer_norm.weight
        self.arg1021_1 = getattr(model.pairformer_stack.blocks, "33").attention_pair_bias.single_layer_norm.bias
        self.arg1022_1 = getattr(model.pairformer_stack.blocks, "33").attention_pair_bias.pair_layer_norm.weight
        self.arg1023_1 = getattr(model.pairformer_stack.blocks, "33").attention_pair_bias.pair_layer_norm.bias
        self.arg1024_1 = getattr(model.pairformer_stack.blocks, "33").attention_pair_bias.pair_linear.weight
        self.arg1025_1 = getattr(model.pairformer_stack.blocks, "33").attention_pair_bias.attention.query_bias
        self.arg1026_1 = getattr(model.pairformer_stack.blocks, "33").attention_pair_bias.attention.input2qkvg.weight
        self.arg1027_1 = getattr(model.pairformer_stack.blocks, "33").attention_pair_bias.attention.output_proj.weight
        self.arg1028_1 = getattr(model.pairformer_stack.blocks, "34").transition_pair.layer_norm.weight
        self.arg1029_1 = getattr(model.pairformer_stack.blocks, "34").transition_pair.layer_norm.bias
        self.arg1030_1 = getattr(model.pairformer_stack.blocks, "34").transition_pair.linear_no_bias_ab.weight
        self.arg1031_1 = getattr(model.pairformer_stack.blocks, "34").transition_pair.linear_out.weight
        self.arg1032_1 = getattr(model.pairformer_stack.blocks, "34").triangle_multiplication.layernorm_z_in.weight
        self.arg1033_1 = getattr(model.pairformer_stack.blocks, "34").triangle_multiplication.layernorm_z_in.bias
        self.arg1034_1 = getattr(model.pairformer_stack.blocks, "34").triangle_multiplication.linear_z_out.weight
        self.arg1035_1 = getattr(model.pairformer_stack.blocks, "34").triangle_multiplication.merged_linear_p.weight
        self.arg1036_1 = getattr(model.pairformer_stack.blocks, "34").triangle_multiplication.merged_linear_g.weight
        self.arg1037_1 = getattr(model.pairformer_stack.blocks, "34").triangle_attention.out_scalers
        self.arg1038_1 = getattr(model.pairformer_stack.blocks, "34").triangle_attention.pair2b.weight
        self.arg1039_1 = getattr(model.pairformer_stack.blocks, "34").triangle_attention.pair2qkvg1.weight
        self.arg1040_1 = getattr(model.pairformer_stack.blocks, "34").triangle_attention.pair2qkvg2.weight
        self.arg1041_1 = getattr(model.pairformer_stack.blocks, "34").triangle_attention.linear_out.weight
        self.arg1042_1 = getattr(model.pairformer_stack.blocks, "34").transition_single.layer_norm.weight
        self.arg1043_1 = getattr(model.pairformer_stack.blocks, "34").transition_single.layer_norm.bias
        self.arg1044_1 = getattr(model.pairformer_stack.blocks, "34").transition_single.linear_no_bias_ab.weight
        self.arg1045_1 = getattr(model.pairformer_stack.blocks, "34").transition_single.linear_out.weight
        self.arg1046_1 = getattr(model.pairformer_stack.blocks, "34").attention_pair_bias.single_layer_norm.weight
        self.arg1047_1 = getattr(model.pairformer_stack.blocks, "34").attention_pair_bias.single_layer_norm.bias
        self.arg1048_1 = getattr(model.pairformer_stack.blocks, "34").attention_pair_bias.pair_layer_norm.weight
        self.arg1049_1 = getattr(model.pairformer_stack.blocks, "34").attention_pair_bias.pair_layer_norm.bias
        self.arg1050_1 = getattr(model.pairformer_stack.blocks, "34").attention_pair_bias.pair_linear.weight
        self.arg1051_1 = getattr(model.pairformer_stack.blocks, "34").attention_pair_bias.attention.query_bias
        self.arg1052_1 = getattr(model.pairformer_stack.blocks, "34").attention_pair_bias.attention.input2qkvg.weight
        self.arg1053_1 = getattr(model.pairformer_stack.blocks, "34").attention_pair_bias.attention.output_proj.weight
        self.arg1054_1 = getattr(model.pairformer_stack.blocks, "35").transition_pair.layer_norm.weight
        self.arg1055_1 = getattr(model.pairformer_stack.blocks, "35").transition_pair.layer_norm.bias
        self.arg1056_1 = getattr(model.pairformer_stack.blocks, "35").transition_pair.linear_no_bias_ab.weight
        self.arg1057_1 = getattr(model.pairformer_stack.blocks, "35").transition_pair.linear_out.weight
        self.arg1058_1 = getattr(model.pairformer_stack.blocks, "35").triangle_multiplication.layernorm_z_in.weight
        self.arg1059_1 = getattr(model.pairformer_stack.blocks, "35").triangle_multiplication.layernorm_z_in.bias
        self.arg1060_1 = getattr(model.pairformer_stack.blocks, "35").triangle_multiplication.linear_z_out.weight
        self.arg1061_1 = getattr(model.pairformer_stack.blocks, "35").triangle_multiplication.merged_linear_p.weight
        self.arg1062_1 = getattr(model.pairformer_stack.blocks, "35").triangle_multiplication.merged_linear_g.weight
        self.arg1063_1 = getattr(model.pairformer_stack.blocks, "35").triangle_attention.out_scalers
        self.arg1064_1 = getattr(model.pairformer_stack.blocks, "35").triangle_attention.pair2b.weight
        self.arg1065_1 = getattr(model.pairformer_stack.blocks, "35").triangle_attention.pair2qkvg1.weight
        self.arg1066_1 = getattr(model.pairformer_stack.blocks, "35").triangle_attention.pair2qkvg2.weight
        self.arg1067_1 = getattr(model.pairformer_stack.blocks, "35").triangle_attention.linear_out.weight
        self.arg1068_1 = getattr(model.pairformer_stack.blocks, "35").transition_single.layer_norm.weight
        self.arg1069_1 = getattr(model.pairformer_stack.blocks, "35").transition_single.layer_norm.bias
        self.arg1070_1 = getattr(model.pairformer_stack.blocks, "35").transition_single.linear_no_bias_ab.weight
        self.arg1071_1 = getattr(model.pairformer_stack.blocks, "35").transition_single.linear_out.weight
        self.arg1072_1 = getattr(model.pairformer_stack.blocks, "35").attention_pair_bias.single_layer_norm.weight
        self.arg1073_1 = getattr(model.pairformer_stack.blocks, "35").attention_pair_bias.single_layer_norm.bias
        self.arg1074_1 = getattr(model.pairformer_stack.blocks, "35").attention_pair_bias.pair_layer_norm.weight
        self.arg1075_1 = getattr(model.pairformer_stack.blocks, "35").attention_pair_bias.pair_layer_norm.bias
        self.arg1076_1 = getattr(model.pairformer_stack.blocks, "35").attention_pair_bias.pair_linear.weight
        self.arg1077_1 = getattr(model.pairformer_stack.blocks, "35").attention_pair_bias.attention.query_bias
        self.arg1078_1 = getattr(model.pairformer_stack.blocks, "35").attention_pair_bias.attention.input2qkvg.weight
        self.arg1079_1 = getattr(model.pairformer_stack.blocks, "35").attention_pair_bias.attention.output_proj.weight
        self.arg1080_1 = getattr(model.pairformer_stack.blocks, "36").transition_pair.layer_norm.weight
        self.arg1081_1 = getattr(model.pairformer_stack.blocks, "36").transition_pair.layer_norm.bias
        self.arg1082_1 = getattr(model.pairformer_stack.blocks, "36").transition_pair.linear_no_bias_ab.weight
        self.arg1083_1 = getattr(model.pairformer_stack.blocks, "36").transition_pair.linear_out.weight
        self.arg1084_1 = getattr(model.pairformer_stack.blocks, "36").triangle_multiplication.layernorm_z_in.weight
        self.arg1085_1 = getattr(model.pairformer_stack.blocks, "36").triangle_multiplication.layernorm_z_in.bias
        self.arg1086_1 = getattr(model.pairformer_stack.blocks, "36").triangle_multiplication.linear_z_out.weight
        self.arg1087_1 = getattr(model.pairformer_stack.blocks, "36").triangle_multiplication.merged_linear_p.weight
        self.arg1088_1 = getattr(model.pairformer_stack.blocks, "36").triangle_multiplication.merged_linear_g.weight
        self.arg1089_1 = getattr(model.pairformer_stack.blocks, "36").triangle_attention.out_scalers
        self.arg1090_1 = getattr(model.pairformer_stack.blocks, "36").triangle_attention.pair2b.weight
        self.arg1091_1 = getattr(model.pairformer_stack.blocks, "36").triangle_attention.pair2qkvg1.weight
        self.arg1092_1 = getattr(model.pairformer_stack.blocks, "36").triangle_attention.pair2qkvg2.weight
        self.arg1093_1 = getattr(model.pairformer_stack.blocks, "36").triangle_attention.linear_out.weight
        self.arg1094_1 = getattr(model.pairformer_stack.blocks, "36").transition_single.layer_norm.weight
        self.arg1095_1 = getattr(model.pairformer_stack.blocks, "36").transition_single.layer_norm.bias
        self.arg1096_1 = getattr(model.pairformer_stack.blocks, "36").transition_single.linear_no_bias_ab.weight
        self.arg1097_1 = getattr(model.pairformer_stack.blocks, "36").transition_single.linear_out.weight
        self.arg1098_1 = getattr(model.pairformer_stack.blocks, "36").attention_pair_bias.single_layer_norm.weight
        self.arg1099_1 = getattr(model.pairformer_stack.blocks, "36").attention_pair_bias.single_layer_norm.bias
        self.arg1100_1 = getattr(model.pairformer_stack.blocks, "36").attention_pair_bias.pair_layer_norm.weight
        self.arg1101_1 = getattr(model.pairformer_stack.blocks, "36").attention_pair_bias.pair_layer_norm.bias
        self.arg1102_1 = getattr(model.pairformer_stack.blocks, "36").attention_pair_bias.pair_linear.weight
        self.arg1103_1 = getattr(model.pairformer_stack.blocks, "36").attention_pair_bias.attention.query_bias
        self.arg1104_1 = getattr(model.pairformer_stack.blocks, "36").attention_pair_bias.attention.input2qkvg.weight
        self.arg1105_1 = getattr(model.pairformer_stack.blocks, "36").attention_pair_bias.attention.output_proj.weight
        self.arg1106_1 = getattr(model.pairformer_stack.blocks, "37").transition_pair.layer_norm.weight
        self.arg1107_1 = getattr(model.pairformer_stack.blocks, "37").transition_pair.layer_norm.bias
        self.arg1108_1 = getattr(model.pairformer_stack.blocks, "37").transition_pair.linear_no_bias_ab.weight
        self.arg1109_1 = getattr(model.pairformer_stack.blocks, "37").transition_pair.linear_out.weight
        self.arg1110_1 = getattr(model.pairformer_stack.blocks, "37").triangle_multiplication.layernorm_z_in.weight
        self.arg1111_1 = getattr(model.pairformer_stack.blocks, "37").triangle_multiplication.layernorm_z_in.bias
        self.arg1112_1 = getattr(model.pairformer_stack.blocks, "37").triangle_multiplication.linear_z_out.weight
        self.arg1113_1 = getattr(model.pairformer_stack.blocks, "37").triangle_multiplication.merged_linear_p.weight
        self.arg1114_1 = getattr(model.pairformer_stack.blocks, "37").triangle_multiplication.merged_linear_g.weight
        self.arg1115_1 = getattr(model.pairformer_stack.blocks, "37").triangle_attention.out_scalers
        self.arg1116_1 = getattr(model.pairformer_stack.blocks, "37").triangle_attention.pair2b.weight
        self.arg1117_1 = getattr(model.pairformer_stack.blocks, "37").triangle_attention.pair2qkvg1.weight
        self.arg1118_1 = getattr(model.pairformer_stack.blocks, "37").triangle_attention.pair2qkvg2.weight
        self.arg1119_1 = getattr(model.pairformer_stack.blocks, "37").triangle_attention.linear_out.weight
        self.arg1120_1 = getattr(model.pairformer_stack.blocks, "37").transition_single.layer_norm.weight
        self.arg1121_1 = getattr(model.pairformer_stack.blocks, "37").transition_single.layer_norm.bias
        self.arg1122_1 = getattr(model.pairformer_stack.blocks, "37").transition_single.linear_no_bias_ab.weight
        self.arg1123_1 = getattr(model.pairformer_stack.blocks, "37").transition_single.linear_out.weight
        self.arg1124_1 = getattr(model.pairformer_stack.blocks, "37").attention_pair_bias.single_layer_norm.weight
        self.arg1125_1 = getattr(model.pairformer_stack.blocks, "37").attention_pair_bias.single_layer_norm.bias
        self.arg1126_1 = getattr(model.pairformer_stack.blocks, "37").attention_pair_bias.pair_layer_norm.weight
        self.arg1127_1 = getattr(model.pairformer_stack.blocks, "37").attention_pair_bias.pair_layer_norm.bias
        self.arg1128_1 = getattr(model.pairformer_stack.blocks, "37").attention_pair_bias.pair_linear.weight
        self.arg1129_1 = getattr(model.pairformer_stack.blocks, "37").attention_pair_bias.attention.query_bias
        self.arg1130_1 = getattr(model.pairformer_stack.blocks, "37").attention_pair_bias.attention.input2qkvg.weight
        self.arg1131_1 = getattr(model.pairformer_stack.blocks, "37").attention_pair_bias.attention.output_proj.weight
        self.arg1132_1 = getattr(model.pairformer_stack.blocks, "38").transition_pair.layer_norm.weight
        self.arg1133_1 = getattr(model.pairformer_stack.blocks, "38").transition_pair.layer_norm.bias
        self.arg1134_1 = getattr(model.pairformer_stack.blocks, "38").transition_pair.linear_no_bias_ab.weight
        self.arg1135_1 = getattr(model.pairformer_stack.blocks, "38").transition_pair.linear_out.weight
        self.arg1136_1 = getattr(model.pairformer_stack.blocks, "38").triangle_multiplication.layernorm_z_in.weight
        self.arg1137_1 = getattr(model.pairformer_stack.blocks, "38").triangle_multiplication.layernorm_z_in.bias
        self.arg1138_1 = getattr(model.pairformer_stack.blocks, "38").triangle_multiplication.linear_z_out.weight
        self.arg1139_1 = getattr(model.pairformer_stack.blocks, "38").triangle_multiplication.merged_linear_p.weight
        self.arg1140_1 = getattr(model.pairformer_stack.blocks, "38").triangle_multiplication.merged_linear_g.weight
        self.arg1141_1 = getattr(model.pairformer_stack.blocks, "38").triangle_attention.out_scalers
        self.arg1142_1 = getattr(model.pairformer_stack.blocks, "38").triangle_attention.pair2b.weight
        self.arg1143_1 = getattr(model.pairformer_stack.blocks, "38").triangle_attention.pair2qkvg1.weight
        self.arg1144_1 = getattr(model.pairformer_stack.blocks, "38").triangle_attention.pair2qkvg2.weight
        self.arg1145_1 = getattr(model.pairformer_stack.blocks, "38").triangle_attention.linear_out.weight
        self.arg1146_1 = getattr(model.pairformer_stack.blocks, "38").transition_single.layer_norm.weight
        self.arg1147_1 = getattr(model.pairformer_stack.blocks, "38").transition_single.layer_norm.bias
        self.arg1148_1 = getattr(model.pairformer_stack.blocks, "38").transition_single.linear_no_bias_ab.weight
        self.arg1149_1 = getattr(model.pairformer_stack.blocks, "38").transition_single.linear_out.weight
        self.arg1150_1 = getattr(model.pairformer_stack.blocks, "38").attention_pair_bias.single_layer_norm.weight
        self.arg1151_1 = getattr(model.pairformer_stack.blocks, "38").attention_pair_bias.single_layer_norm.bias
        self.arg1152_1 = getattr(model.pairformer_stack.blocks, "38").attention_pair_bias.pair_layer_norm.weight
        self.arg1153_1 = getattr(model.pairformer_stack.blocks, "38").attention_pair_bias.pair_layer_norm.bias
        self.arg1154_1 = getattr(model.pairformer_stack.blocks, "38").attention_pair_bias.pair_linear.weight
        self.arg1155_1 = getattr(model.pairformer_stack.blocks, "38").attention_pair_bias.attention.query_bias
        self.arg1156_1 = getattr(model.pairformer_stack.blocks, "38").attention_pair_bias.attention.input2qkvg.weight
        self.arg1157_1 = getattr(model.pairformer_stack.blocks, "38").attention_pair_bias.attention.output_proj.weight
        self.arg1158_1 = getattr(model.pairformer_stack.blocks, "39").transition_pair.layer_norm.weight
        self.arg1159_1 = getattr(model.pairformer_stack.blocks, "39").transition_pair.layer_norm.bias
        self.arg1160_1 = getattr(model.pairformer_stack.blocks, "39").transition_pair.linear_no_bias_ab.weight
        self.arg1161_1 = getattr(model.pairformer_stack.blocks, "39").transition_pair.linear_out.weight
        self.arg1162_1 = getattr(model.pairformer_stack.blocks, "39").triangle_multiplication.layernorm_z_in.weight
        self.arg1163_1 = getattr(model.pairformer_stack.blocks, "39").triangle_multiplication.layernorm_z_in.bias
        self.arg1164_1 = getattr(model.pairformer_stack.blocks, "39").triangle_multiplication.linear_z_out.weight
        self.arg1165_1 = getattr(model.pairformer_stack.blocks, "39").triangle_multiplication.merged_linear_p.weight
        self.arg1166_1 = getattr(model.pairformer_stack.blocks, "39").triangle_multiplication.merged_linear_g.weight
        self.arg1167_1 = getattr(model.pairformer_stack.blocks, "39").triangle_attention.out_scalers
        self.arg1168_1 = getattr(model.pairformer_stack.blocks, "39").triangle_attention.pair2b.weight
        self.arg1169_1 = getattr(model.pairformer_stack.blocks, "39").triangle_attention.pair2qkvg1.weight
        self.arg1170_1 = getattr(model.pairformer_stack.blocks, "39").triangle_attention.pair2qkvg2.weight
        self.arg1171_1 = getattr(model.pairformer_stack.blocks, "39").triangle_attention.linear_out.weight
        self.arg1172_1 = getattr(model.pairformer_stack.blocks, "39").transition_single.layer_norm.weight
        self.arg1173_1 = getattr(model.pairformer_stack.blocks, "39").transition_single.layer_norm.bias
        self.arg1174_1 = getattr(model.pairformer_stack.blocks, "39").transition_single.linear_no_bias_ab.weight
        self.arg1175_1 = getattr(model.pairformer_stack.blocks, "39").transition_single.linear_out.weight
        self.arg1176_1 = getattr(model.pairformer_stack.blocks, "39").attention_pair_bias.single_layer_norm.weight
        self.arg1177_1 = getattr(model.pairformer_stack.blocks, "39").attention_pair_bias.single_layer_norm.bias
        self.arg1178_1 = getattr(model.pairformer_stack.blocks, "39").attention_pair_bias.pair_layer_norm.weight
        self.arg1179_1 = getattr(model.pairformer_stack.blocks, "39").attention_pair_bias.pair_layer_norm.bias
        self.arg1180_1 = getattr(model.pairformer_stack.blocks, "39").attention_pair_bias.pair_linear.weight
        self.arg1181_1 = getattr(model.pairformer_stack.blocks, "39").attention_pair_bias.attention.query_bias
        self.arg1182_1 = getattr(model.pairformer_stack.blocks, "39").attention_pair_bias.attention.input2qkvg.weight
        self.arg1183_1 = getattr(model.pairformer_stack.blocks, "39").attention_pair_bias.attention.output_proj.weight
        self.arg1184_1 = getattr(model.pairformer_stack.blocks, "40").transition_pair.layer_norm.weight
        self.arg1185_1 = getattr(model.pairformer_stack.blocks, "40").transition_pair.layer_norm.bias
        self.arg1186_1 = getattr(model.pairformer_stack.blocks, "40").transition_pair.linear_no_bias_ab.weight
        self.arg1187_1 = getattr(model.pairformer_stack.blocks, "40").transition_pair.linear_out.weight
        self.arg1188_1 = getattr(model.pairformer_stack.blocks, "40").triangle_multiplication.layernorm_z_in.weight
        self.arg1189_1 = getattr(model.pairformer_stack.blocks, "40").triangle_multiplication.layernorm_z_in.bias
        self.arg1190_1 = getattr(model.pairformer_stack.blocks, "40").triangle_multiplication.linear_z_out.weight
        self.arg1191_1 = getattr(model.pairformer_stack.blocks, "40").triangle_multiplication.merged_linear_p.weight
        self.arg1192_1 = getattr(model.pairformer_stack.blocks, "40").triangle_multiplication.merged_linear_g.weight
        self.arg1193_1 = getattr(model.pairformer_stack.blocks, "40").triangle_attention.out_scalers
        self.arg1194_1 = getattr(model.pairformer_stack.blocks, "40").triangle_attention.pair2b.weight
        self.arg1195_1 = getattr(model.pairformer_stack.blocks, "40").triangle_attention.pair2qkvg1.weight
        self.arg1196_1 = getattr(model.pairformer_stack.blocks, "40").triangle_attention.pair2qkvg2.weight
        self.arg1197_1 = getattr(model.pairformer_stack.blocks, "40").triangle_attention.linear_out.weight
        self.arg1198_1 = getattr(model.pairformer_stack.blocks, "40").transition_single.layer_norm.weight
        self.arg1199_1 = getattr(model.pairformer_stack.blocks, "40").transition_single.layer_norm.bias
        self.arg1200_1 = getattr(model.pairformer_stack.blocks, "40").transition_single.linear_no_bias_ab.weight
        self.arg1201_1 = getattr(model.pairformer_stack.blocks, "40").transition_single.linear_out.weight
        self.arg1202_1 = getattr(model.pairformer_stack.blocks, "40").attention_pair_bias.single_layer_norm.weight
        self.arg1203_1 = getattr(model.pairformer_stack.blocks, "40").attention_pair_bias.single_layer_norm.bias
        self.arg1204_1 = getattr(model.pairformer_stack.blocks, "40").attention_pair_bias.pair_layer_norm.weight
        self.arg1205_1 = getattr(model.pairformer_stack.blocks, "40").attention_pair_bias.pair_layer_norm.bias
        self.arg1206_1 = getattr(model.pairformer_stack.blocks, "40").attention_pair_bias.pair_linear.weight
        self.arg1207_1 = getattr(model.pairformer_stack.blocks, "40").attention_pair_bias.attention.query_bias
        self.arg1208_1 = getattr(model.pairformer_stack.blocks, "40").attention_pair_bias.attention.input2qkvg.weight
        self.arg1209_1 = getattr(model.pairformer_stack.blocks, "40").attention_pair_bias.attention.output_proj.weight
        self.arg1210_1 = getattr(model.pairformer_stack.blocks, "41").transition_pair.layer_norm.weight
        self.arg1211_1 = getattr(model.pairformer_stack.blocks, "41").transition_pair.layer_norm.bias
        self.arg1212_1 = getattr(model.pairformer_stack.blocks, "41").transition_pair.linear_no_bias_ab.weight
        self.arg1213_1 = getattr(model.pairformer_stack.blocks, "41").transition_pair.linear_out.weight
        self.arg1214_1 = getattr(model.pairformer_stack.blocks, "41").triangle_multiplication.layernorm_z_in.weight
        self.arg1215_1 = getattr(model.pairformer_stack.blocks, "41").triangle_multiplication.layernorm_z_in.bias
        self.arg1216_1 = getattr(model.pairformer_stack.blocks, "41").triangle_multiplication.linear_z_out.weight
        self.arg1217_1 = getattr(model.pairformer_stack.blocks, "41").triangle_multiplication.merged_linear_p.weight
        self.arg1218_1 = getattr(model.pairformer_stack.blocks, "41").triangle_multiplication.merged_linear_g.weight
        self.arg1219_1 = getattr(model.pairformer_stack.blocks, "41").triangle_attention.out_scalers
        self.arg1220_1 = getattr(model.pairformer_stack.blocks, "41").triangle_attention.pair2b.weight
        self.arg1221_1 = getattr(model.pairformer_stack.blocks, "41").triangle_attention.pair2qkvg1.weight
        self.arg1222_1 = getattr(model.pairformer_stack.blocks, "41").triangle_attention.pair2qkvg2.weight
        self.arg1223_1 = getattr(model.pairformer_stack.blocks, "41").triangle_attention.linear_out.weight
        self.arg1224_1 = getattr(model.pairformer_stack.blocks, "41").transition_single.layer_norm.weight
        self.arg1225_1 = getattr(model.pairformer_stack.blocks, "41").transition_single.layer_norm.bias
        self.arg1226_1 = getattr(model.pairformer_stack.blocks, "41").transition_single.linear_no_bias_ab.weight
        self.arg1227_1 = getattr(model.pairformer_stack.blocks, "41").transition_single.linear_out.weight
        self.arg1228_1 = getattr(model.pairformer_stack.blocks, "41").attention_pair_bias.single_layer_norm.weight
        self.arg1229_1 = getattr(model.pairformer_stack.blocks, "41").attention_pair_bias.single_layer_norm.bias
        self.arg1230_1 = getattr(model.pairformer_stack.blocks, "41").attention_pair_bias.pair_layer_norm.weight
        self.arg1231_1 = getattr(model.pairformer_stack.blocks, "41").attention_pair_bias.pair_layer_norm.bias
        self.arg1232_1 = getattr(model.pairformer_stack.blocks, "41").attention_pair_bias.pair_linear.weight
        self.arg1233_1 = getattr(model.pairformer_stack.blocks, "41").attention_pair_bias.attention.query_bias
        self.arg1234_1 = getattr(model.pairformer_stack.blocks, "41").attention_pair_bias.attention.input2qkvg.weight
        self.arg1235_1 = getattr(model.pairformer_stack.blocks, "41").attention_pair_bias.attention.output_proj.weight
        self.arg1236_1 = getattr(model.pairformer_stack.blocks, "42").transition_pair.layer_norm.weight
        self.arg1237_1 = getattr(model.pairformer_stack.blocks, "42").transition_pair.layer_norm.bias
        self.arg1238_1 = getattr(model.pairformer_stack.blocks, "42").transition_pair.linear_no_bias_ab.weight
        self.arg1239_1 = getattr(model.pairformer_stack.blocks, "42").transition_pair.linear_out.weight
        self.arg1240_1 = getattr(model.pairformer_stack.blocks, "42").triangle_multiplication.layernorm_z_in.weight
        self.arg1241_1 = getattr(model.pairformer_stack.blocks, "42").triangle_multiplication.layernorm_z_in.bias
        self.arg1242_1 = getattr(model.pairformer_stack.blocks, "42").triangle_multiplication.linear_z_out.weight
        self.arg1243_1 = getattr(model.pairformer_stack.blocks, "42").triangle_multiplication.merged_linear_p.weight
        self.arg1244_1 = getattr(model.pairformer_stack.blocks, "42").triangle_multiplication.merged_linear_g.weight
        self.arg1245_1 = getattr(model.pairformer_stack.blocks, "42").triangle_attention.out_scalers
        self.arg1246_1 = getattr(model.pairformer_stack.blocks, "42").triangle_attention.pair2b.weight
        self.arg1247_1 = getattr(model.pairformer_stack.blocks, "42").triangle_attention.pair2qkvg1.weight
        self.arg1248_1 = getattr(model.pairformer_stack.blocks, "42").triangle_attention.pair2qkvg2.weight
        self.arg1249_1 = getattr(model.pairformer_stack.blocks, "42").triangle_attention.linear_out.weight
        self.arg1250_1 = getattr(model.pairformer_stack.blocks, "42").transition_single.layer_norm.weight
        self.arg1251_1 = getattr(model.pairformer_stack.blocks, "42").transition_single.layer_norm.bias
        self.arg1252_1 = getattr(model.pairformer_stack.blocks, "42").transition_single.linear_no_bias_ab.weight
        self.arg1253_1 = getattr(model.pairformer_stack.blocks, "42").transition_single.linear_out.weight
        self.arg1254_1 = getattr(model.pairformer_stack.blocks, "42").attention_pair_bias.single_layer_norm.weight
        self.arg1255_1 = getattr(model.pairformer_stack.blocks, "42").attention_pair_bias.single_layer_norm.bias
        self.arg1256_1 = getattr(model.pairformer_stack.blocks, "42").attention_pair_bias.pair_layer_norm.weight
        self.arg1257_1 = getattr(model.pairformer_stack.blocks, "42").attention_pair_bias.pair_layer_norm.bias
        self.arg1258_1 = getattr(model.pairformer_stack.blocks, "42").attention_pair_bias.pair_linear.weight
        self.arg1259_1 = getattr(model.pairformer_stack.blocks, "42").attention_pair_bias.attention.query_bias
        self.arg1260_1 = getattr(model.pairformer_stack.blocks, "42").attention_pair_bias.attention.input2qkvg.weight
        self.arg1261_1 = getattr(model.pairformer_stack.blocks, "42").attention_pair_bias.attention.output_proj.weight
        self.arg1262_1 = getattr(model.pairformer_stack.blocks, "43").transition_pair.layer_norm.weight
        self.arg1263_1 = getattr(model.pairformer_stack.blocks, "43").transition_pair.layer_norm.bias
        self.arg1264_1 = getattr(model.pairformer_stack.blocks, "43").transition_pair.linear_no_bias_ab.weight
        self.arg1265_1 = getattr(model.pairformer_stack.blocks, "43").transition_pair.linear_out.weight
        self.arg1266_1 = getattr(model.pairformer_stack.blocks, "43").triangle_multiplication.layernorm_z_in.weight
        self.arg1267_1 = getattr(model.pairformer_stack.blocks, "43").triangle_multiplication.layernorm_z_in.bias
        self.arg1268_1 = getattr(model.pairformer_stack.blocks, "43").triangle_multiplication.linear_z_out.weight
        self.arg1269_1 = getattr(model.pairformer_stack.blocks, "43").triangle_multiplication.merged_linear_p.weight
        self.arg1270_1 = getattr(model.pairformer_stack.blocks, "43").triangle_multiplication.merged_linear_g.weight
        self.arg1271_1 = getattr(model.pairformer_stack.blocks, "43").triangle_attention.out_scalers
        self.arg1272_1 = getattr(model.pairformer_stack.blocks, "43").triangle_attention.pair2b.weight
        self.arg1273_1 = getattr(model.pairformer_stack.blocks, "43").triangle_attention.pair2qkvg1.weight
        self.arg1274_1 = getattr(model.pairformer_stack.blocks, "43").triangle_attention.pair2qkvg2.weight
        self.arg1275_1 = getattr(model.pairformer_stack.blocks, "43").triangle_attention.linear_out.weight
        self.arg1276_1 = getattr(model.pairformer_stack.blocks, "43").transition_single.layer_norm.weight
        self.arg1277_1 = getattr(model.pairformer_stack.blocks, "43").transition_single.layer_norm.bias
        self.arg1278_1 = getattr(model.pairformer_stack.blocks, "43").transition_single.linear_no_bias_ab.weight
        self.arg1279_1 = getattr(model.pairformer_stack.blocks, "43").transition_single.linear_out.weight
        self.arg1280_1 = getattr(model.pairformer_stack.blocks, "43").attention_pair_bias.single_layer_norm.weight
        self.arg1281_1 = getattr(model.pairformer_stack.blocks, "43").attention_pair_bias.single_layer_norm.bias
        self.arg1282_1 = getattr(model.pairformer_stack.blocks, "43").attention_pair_bias.pair_layer_norm.weight
        self.arg1283_1 = getattr(model.pairformer_stack.blocks, "43").attention_pair_bias.pair_layer_norm.bias
        self.arg1284_1 = getattr(model.pairformer_stack.blocks, "43").attention_pair_bias.pair_linear.weight
        self.arg1285_1 = getattr(model.pairformer_stack.blocks, "43").attention_pair_bias.attention.query_bias
        self.arg1286_1 = getattr(model.pairformer_stack.blocks, "43").attention_pair_bias.attention.input2qkvg.weight
        self.arg1287_1 = getattr(model.pairformer_stack.blocks, "43").attention_pair_bias.attention.output_proj.weight
        self.arg1288_1 = getattr(model.pairformer_stack.blocks, "44").transition_pair.layer_norm.weight
        self.arg1289_1 = getattr(model.pairformer_stack.blocks, "44").transition_pair.layer_norm.bias
        self.arg1290_1 = getattr(model.pairformer_stack.blocks, "44").transition_pair.linear_no_bias_ab.weight
        self.arg1291_1 = getattr(model.pairformer_stack.blocks, "44").transition_pair.linear_out.weight
        self.arg1292_1 = getattr(model.pairformer_stack.blocks, "44").triangle_multiplication.layernorm_z_in.weight
        self.arg1293_1 = getattr(model.pairformer_stack.blocks, "44").triangle_multiplication.layernorm_z_in.bias
        self.arg1294_1 = getattr(model.pairformer_stack.blocks, "44").triangle_multiplication.linear_z_out.weight
        self.arg1295_1 = getattr(model.pairformer_stack.blocks, "44").triangle_multiplication.merged_linear_p.weight
        self.arg1296_1 = getattr(model.pairformer_stack.blocks, "44").triangle_multiplication.merged_linear_g.weight
        self.arg1297_1 = getattr(model.pairformer_stack.blocks, "44").triangle_attention.out_scalers
        self.arg1298_1 = getattr(model.pairformer_stack.blocks, "44").triangle_attention.pair2b.weight
        self.arg1299_1 = getattr(model.pairformer_stack.blocks, "44").triangle_attention.pair2qkvg1.weight
        self.arg1300_1 = getattr(model.pairformer_stack.blocks, "44").triangle_attention.pair2qkvg2.weight
        self.arg1301_1 = getattr(model.pairformer_stack.blocks, "44").triangle_attention.linear_out.weight
        self.arg1302_1 = getattr(model.pairformer_stack.blocks, "44").transition_single.layer_norm.weight
        self.arg1303_1 = getattr(model.pairformer_stack.blocks, "44").transition_single.layer_norm.bias
        self.arg1304_1 = getattr(model.pairformer_stack.blocks, "44").transition_single.linear_no_bias_ab.weight
        self.arg1305_1 = getattr(model.pairformer_stack.blocks, "44").transition_single.linear_out.weight
        self.arg1306_1 = getattr(model.pairformer_stack.blocks, "44").attention_pair_bias.single_layer_norm.weight
        self.arg1307_1 = getattr(model.pairformer_stack.blocks, "44").attention_pair_bias.single_layer_norm.bias
        self.arg1308_1 = getattr(model.pairformer_stack.blocks, "44").attention_pair_bias.pair_layer_norm.weight
        self.arg1309_1 = getattr(model.pairformer_stack.blocks, "44").attention_pair_bias.pair_layer_norm.bias
        self.arg1310_1 = getattr(model.pairformer_stack.blocks, "44").attention_pair_bias.pair_linear.weight
        self.arg1311_1 = getattr(model.pairformer_stack.blocks, "44").attention_pair_bias.attention.query_bias
        self.arg1312_1 = getattr(model.pairformer_stack.blocks, "44").attention_pair_bias.attention.input2qkvg.weight
        self.arg1313_1 = getattr(model.pairformer_stack.blocks, "44").attention_pair_bias.attention.output_proj.weight
        self.arg1314_1 = getattr(model.pairformer_stack.blocks, "45").transition_pair.layer_norm.weight
        self.arg1315_1 = getattr(model.pairformer_stack.blocks, "45").transition_pair.layer_norm.bias
        self.arg1316_1 = getattr(model.pairformer_stack.blocks, "45").transition_pair.linear_no_bias_ab.weight
        self.arg1317_1 = getattr(model.pairformer_stack.blocks, "45").transition_pair.linear_out.weight
        self.arg1318_1 = getattr(model.pairformer_stack.blocks, "45").triangle_multiplication.layernorm_z_in.weight
        self.arg1319_1 = getattr(model.pairformer_stack.blocks, "45").triangle_multiplication.layernorm_z_in.bias
        self.arg1320_1 = getattr(model.pairformer_stack.blocks, "45").triangle_multiplication.linear_z_out.weight
        self.arg1321_1 = getattr(model.pairformer_stack.blocks, "45").triangle_multiplication.merged_linear_p.weight
        self.arg1322_1 = getattr(model.pairformer_stack.blocks, "45").triangle_multiplication.merged_linear_g.weight
        self.arg1323_1 = getattr(model.pairformer_stack.blocks, "45").triangle_attention.out_scalers
        self.arg1324_1 = getattr(model.pairformer_stack.blocks, "45").triangle_attention.pair2b.weight
        self.arg1325_1 = getattr(model.pairformer_stack.blocks, "45").triangle_attention.pair2qkvg1.weight
        self.arg1326_1 = getattr(model.pairformer_stack.blocks, "45").triangle_attention.pair2qkvg2.weight
        self.arg1327_1 = getattr(model.pairformer_stack.blocks, "45").triangle_attention.linear_out.weight
        self.arg1328_1 = getattr(model.pairformer_stack.blocks, "45").transition_single.layer_norm.weight
        self.arg1329_1 = getattr(model.pairformer_stack.blocks, "45").transition_single.layer_norm.bias
        self.arg1330_1 = getattr(model.pairformer_stack.blocks, "45").transition_single.linear_no_bias_ab.weight
        self.arg1331_1 = getattr(model.pairformer_stack.blocks, "45").transition_single.linear_out.weight
        self.arg1332_1 = getattr(model.pairformer_stack.blocks, "45").attention_pair_bias.single_layer_norm.weight
        self.arg1333_1 = getattr(model.pairformer_stack.blocks, "45").attention_pair_bias.single_layer_norm.bias
        self.arg1334_1 = getattr(model.pairformer_stack.blocks, "45").attention_pair_bias.pair_layer_norm.weight
        self.arg1335_1 = getattr(model.pairformer_stack.blocks, "45").attention_pair_bias.pair_layer_norm.bias
        self.arg1336_1 = getattr(model.pairformer_stack.blocks, "45").attention_pair_bias.pair_linear.weight
        self.arg1337_1 = getattr(model.pairformer_stack.blocks, "45").attention_pair_bias.attention.query_bias
        self.arg1338_1 = getattr(model.pairformer_stack.blocks, "45").attention_pair_bias.attention.input2qkvg.weight
        self.arg1339_1 = getattr(model.pairformer_stack.blocks, "45").attention_pair_bias.attention.output_proj.weight
        self.arg1340_1 = getattr(model.pairformer_stack.blocks, "46").transition_pair.layer_norm.weight
        self.arg1341_1 = getattr(model.pairformer_stack.blocks, "46").transition_pair.layer_norm.bias
        self.arg1342_1 = getattr(model.pairformer_stack.blocks, "46").transition_pair.linear_no_bias_ab.weight
        self.arg1343_1 = getattr(model.pairformer_stack.blocks, "46").transition_pair.linear_out.weight
        self.arg1344_1 = getattr(model.pairformer_stack.blocks, "46").triangle_multiplication.layernorm_z_in.weight
        self.arg1345_1 = getattr(model.pairformer_stack.blocks, "46").triangle_multiplication.layernorm_z_in.bias
        self.arg1346_1 = getattr(model.pairformer_stack.blocks, "46").triangle_multiplication.linear_z_out.weight
        self.arg1347_1 = getattr(model.pairformer_stack.blocks, "46").triangle_multiplication.merged_linear_p.weight
        self.arg1348_1 = getattr(model.pairformer_stack.blocks, "46").triangle_multiplication.merged_linear_g.weight
        self.arg1349_1 = getattr(model.pairformer_stack.blocks, "46").triangle_attention.out_scalers
        self.arg1350_1 = getattr(model.pairformer_stack.blocks, "46").triangle_attention.pair2b.weight
        self.arg1351_1 = getattr(model.pairformer_stack.blocks, "46").triangle_attention.pair2qkvg1.weight
        self.arg1352_1 = getattr(model.pairformer_stack.blocks, "46").triangle_attention.pair2qkvg2.weight
        self.arg1353_1 = getattr(model.pairformer_stack.blocks, "46").triangle_attention.linear_out.weight
        self.arg1354_1 = getattr(model.pairformer_stack.blocks, "46").transition_single.layer_norm.weight
        self.arg1355_1 = getattr(model.pairformer_stack.blocks, "46").transition_single.layer_norm.bias
        self.arg1356_1 = getattr(model.pairformer_stack.blocks, "46").transition_single.linear_no_bias_ab.weight
        self.arg1357_1 = getattr(model.pairformer_stack.blocks, "46").transition_single.linear_out.weight
        self.arg1358_1 = getattr(model.pairformer_stack.blocks, "46").attention_pair_bias.single_layer_norm.weight
        self.arg1359_1 = getattr(model.pairformer_stack.blocks, "46").attention_pair_bias.single_layer_norm.bias
        self.arg1360_1 = getattr(model.pairformer_stack.blocks, "46").attention_pair_bias.pair_layer_norm.weight
        self.arg1361_1 = getattr(model.pairformer_stack.blocks, "46").attention_pair_bias.pair_layer_norm.bias
        self.arg1362_1 = getattr(model.pairformer_stack.blocks, "46").attention_pair_bias.pair_linear.weight
        self.arg1363_1 = getattr(model.pairformer_stack.blocks, "46").attention_pair_bias.attention.query_bias
        self.arg1364_1 = getattr(model.pairformer_stack.blocks, "46").attention_pair_bias.attention.input2qkvg.weight
        self.arg1365_1 = getattr(model.pairformer_stack.blocks, "46").attention_pair_bias.attention.output_proj.weight
        self.arg1366_1 = getattr(model.pairformer_stack.blocks, "47").transition_pair.layer_norm.weight
        self.arg1367_1 = getattr(model.pairformer_stack.blocks, "47").transition_pair.layer_norm.bias
        self.arg1368_1 = getattr(model.pairformer_stack.blocks, "47").transition_pair.linear_no_bias_ab.weight
        self.arg1369_1 = getattr(model.pairformer_stack.blocks, "47").transition_pair.linear_out.weight
        self.arg1370_1 = getattr(model.pairformer_stack.blocks, "47").triangle_multiplication.layernorm_z_in.weight
        self.arg1371_1 = getattr(model.pairformer_stack.blocks, "47").triangle_multiplication.layernorm_z_in.bias
        self.arg1372_1 = getattr(model.pairformer_stack.blocks, "47").triangle_multiplication.linear_z_out.weight
        self.arg1373_1 = getattr(model.pairformer_stack.blocks, "47").triangle_multiplication.merged_linear_p.weight
        self.arg1374_1 = getattr(model.pairformer_stack.blocks, "47").triangle_multiplication.merged_linear_g.weight
        self.arg1375_1 = getattr(model.pairformer_stack.blocks, "47").triangle_attention.out_scalers
        self.arg1376_1 = getattr(model.pairformer_stack.blocks, "47").triangle_attention.pair2b.weight
        self.arg1377_1 = getattr(model.pairformer_stack.blocks, "47").triangle_attention.pair2qkvg1.weight
        self.arg1378_1 = getattr(model.pairformer_stack.blocks, "47").triangle_attention.pair2qkvg2.weight
        self.arg1379_1 = getattr(model.pairformer_stack.blocks, "47").triangle_attention.linear_out.weight
        self.arg1380_1 = getattr(model.pairformer_stack.blocks, "47").transition_single.layer_norm.weight
        self.arg1381_1 = getattr(model.pairformer_stack.blocks, "47").transition_single.layer_norm.bias
        self.arg1382_1 = getattr(model.pairformer_stack.blocks, "47").transition_single.linear_no_bias_ab.weight
        self.arg1383_1 = getattr(model.pairformer_stack.blocks, "47").transition_single.linear_out.weight
        self.arg1384_1 = getattr(model.pairformer_stack.blocks, "47").attention_pair_bias.single_layer_norm.weight
        self.arg1385_1 = getattr(model.pairformer_stack.blocks, "47").attention_pair_bias.single_layer_norm.bias
        self.arg1386_1 = getattr(model.pairformer_stack.blocks, "47").attention_pair_bias.pair_layer_norm.weight
        self.arg1387_1 = getattr(model.pairformer_stack.blocks, "47").attention_pair_bias.pair_layer_norm.bias
        self.arg1388_1 = getattr(model.pairformer_stack.blocks, "47").attention_pair_bias.pair_linear.weight
        self.arg1389_1 = getattr(model.pairformer_stack.blocks, "47").attention_pair_bias.attention.query_bias
        self.arg1390_1 = getattr(model.pairformer_stack.blocks, "47").attention_pair_bias.attention.input2qkvg.weight
        self.arg1391_1 = getattr(model.pairformer_stack.blocks, "47").attention_pair_bias.attention.output_proj.weight
        self.arg1392_1 = getattr(model.token_single_recycle_proj, "0").weight
        self.arg1393_1 = getattr(model.token_single_recycle_proj, "0").bias
        self.arg1394_1 = getattr(model.token_single_recycle_proj, "1").weight
        self.arg1395_1 = getattr(model.token_pair_recycle_proj, "0").weight
        self.arg1396_1 = getattr(model.token_pair_recycle_proj, "0").bias
        self.arg1397_1 = getattr(model.token_pair_recycle_proj, "1").weight

    def forward(self, arg1398_1, arg1399_1, arg1400_1, arg1401_1, arg1402_1, arg1403_1, arg1404_1, arg1405_1, arg1406_1, arg1407_1):
        arg0_1 = self.arg0_1
        arg1_1 = self.arg1_1
        arg2_1 = self.arg2_1
        arg3_1 = self.arg3_1
        arg4_1 = self.arg4_1
        arg5_1 = self.arg5_1
        arg6_1 = self.arg6_1
        arg7_1 = self.arg7_1
        arg8_1 = self.arg8_1
        arg9_1 = self.arg9_1
        arg10_1 = self.arg10_1
        arg11_1 = self.arg11_1
        arg12_1 = self.arg12_1
        arg13_1 = self.arg13_1
        arg14_1 = self.arg14_1
        arg15_1 = self.arg15_1
        arg16_1 = self.arg16_1
        arg17_1 = self.arg17_1
        arg18_1 = self.arg18_1
        arg19_1 = self.arg19_1
        arg20_1 = self.arg20_1
        arg21_1 = self.arg21_1
        arg22_1 = self.arg22_1
        arg23_1 = self.arg23_1
        arg24_1 = self.arg24_1
        arg25_1 = self.arg25_1
        arg26_1 = self.arg26_1
        arg27_1 = self.arg27_1
        arg28_1 = self.arg28_1
        arg29_1 = self.arg29_1
        arg30_1 = self.arg30_1
        arg31_1 = self.arg31_1
        arg32_1 = self.arg32_1
        arg33_1 = self.arg33_1
        arg34_1 = self.arg34_1
        arg35_1 = self.arg35_1
        arg36_1 = self.arg36_1
        arg37_1 = self.arg37_1
        arg38_1 = self.arg38_1
        arg39_1 = self.arg39_1
        arg40_1 = self.arg40_1
        arg41_1 = self.arg41_1
        arg42_1 = self.arg42_1
        arg43_1 = self.arg43_1
        arg44_1 = self.arg44_1
        arg45_1 = self.arg45_1
        arg46_1 = self.arg46_1
        arg47_1 = self.arg47_1
        arg48_1 = self.arg48_1
        arg49_1 = self.arg49_1
        arg50_1 = self.arg50_1
        arg51_1 = self.arg51_1
        arg52_1 = self.arg52_1
        arg53_1 = self.arg53_1
        arg54_1 = self.arg54_1
        arg55_1 = self.arg55_1
        arg56_1 = self.arg56_1
        arg57_1 = self.arg57_1
        arg58_1 = self.arg58_1
        arg59_1 = self.arg59_1
        arg60_1 = self.arg60_1
        arg61_1 = self.arg61_1
        arg62_1 = self.arg62_1
        arg63_1 = self.arg63_1
        arg64_1 = self.arg64_1
        arg65_1 = self.arg65_1
        arg66_1 = self.arg66_1
        arg67_1 = self.arg67_1
        arg68_1 = self.arg68_1
        arg69_1 = self.arg69_1
        arg70_1 = self.arg70_1
        arg71_1 = self.arg71_1
        arg72_1 = self.arg72_1
        arg73_1 = self.arg73_1
        arg74_1 = self.arg74_1
        arg75_1 = self.arg75_1
        arg76_1 = self.arg76_1
        arg77_1 = self.arg77_1
        arg78_1 = self.arg78_1
        arg79_1 = self.arg79_1
        arg80_1 = self.arg80_1
        arg81_1 = self.arg81_1
        arg82_1 = self.arg82_1
        arg83_1 = self.arg83_1
        arg84_1 = self.arg84_1
        arg85_1 = self.arg85_1
        arg86_1 = self.arg86_1
        arg87_1 = self.arg87_1
        arg88_1 = self.arg88_1
        arg89_1 = self.arg89_1
        arg90_1 = self.arg90_1
        arg91_1 = self.arg91_1
        arg92_1 = self.arg92_1
        arg93_1 = self.arg93_1
        arg94_1 = self.arg94_1
        arg95_1 = self.arg95_1
        arg96_1 = self.arg96_1
        arg97_1 = self.arg97_1
        arg98_1 = self.arg98_1
        arg99_1 = self.arg99_1
        arg100_1 = self.arg100_1
        arg101_1 = self.arg101_1
        arg102_1 = self.arg102_1
        arg103_1 = self.arg103_1
        arg104_1 = self.arg104_1
        arg105_1 = self.arg105_1
        arg106_1 = self.arg106_1
        arg107_1 = self.arg107_1
        arg108_1 = self.arg108_1
        arg109_1 = self.arg109_1
        arg110_1 = self.arg110_1
        arg111_1 = self.arg111_1
        arg112_1 = self.arg112_1
        arg113_1 = self.arg113_1
        arg114_1 = self.arg114_1
        arg115_1 = self.arg115_1
        arg116_1 = self.arg116_1
        arg117_1 = self.arg117_1
        arg118_1 = self.arg118_1
        arg119_1 = self.arg119_1
        arg120_1 = self.arg120_1
        arg121_1 = self.arg121_1
        arg122_1 = self.arg122_1
        arg123_1 = self.arg123_1
        arg124_1 = self.arg124_1
        arg125_1 = self.arg125_1
        arg126_1 = self.arg126_1
        arg127_1 = self.arg127_1
        arg128_1 = self.arg128_1
        arg129_1 = self.arg129_1
        arg130_1 = self.arg130_1
        arg131_1 = self.arg131_1
        arg132_1 = self.arg132_1
        arg133_1 = self.arg133_1
        arg134_1 = self.arg134_1
        arg135_1 = self.arg135_1
        arg136_1 = self.arg136_1
        arg137_1 = self.arg137_1
        arg138_1 = self.arg138_1
        arg139_1 = self.arg139_1
        arg140_1 = self.arg140_1
        arg141_1 = self.arg141_1
        arg142_1 = self.arg142_1
        arg143_1 = self.arg143_1
        arg144_1 = self.arg144_1
        arg145_1 = self.arg145_1
        arg146_1 = self.arg146_1
        arg147_1 = self.arg147_1
        arg148_1 = self.arg148_1
        arg149_1 = self.arg149_1
        arg150_1 = self.arg150_1
        arg151_1 = self.arg151_1
        arg152_1 = self.arg152_1
        arg153_1 = self.arg153_1
        arg154_1 = self.arg154_1
        arg155_1 = self.arg155_1
        arg156_1 = self.arg156_1
        arg157_1 = self.arg157_1
        arg158_1 = self.arg158_1
        arg159_1 = self.arg159_1
        arg160_1 = self.arg160_1
        arg161_1 = self.arg161_1
        arg162_1 = self.arg162_1
        arg163_1 = self.arg163_1
        arg164_1 = self.arg164_1
        arg165_1 = self.arg165_1
        arg166_1 = self.arg166_1
        arg167_1 = self.arg167_1
        arg168_1 = self.arg168_1
        arg169_1 = self.arg169_1
        arg170_1 = self.arg170_1
        arg171_1 = self.arg171_1
        arg172_1 = self.arg172_1
        arg173_1 = self.arg173_1
        arg174_1 = self.arg174_1
        arg175_1 = self.arg175_1
        arg176_1 = self.arg176_1
        arg177_1 = self.arg177_1
        arg178_1 = self.arg178_1
        arg179_1 = self.arg179_1
        arg180_1 = self.arg180_1
        arg181_1 = self.arg181_1
        arg182_1 = self.arg182_1
        arg183_1 = self.arg183_1
        arg184_1 = self.arg184_1
        arg185_1 = self.arg185_1
        arg186_1 = self.arg186_1
        arg187_1 = self.arg187_1
        arg188_1 = self.arg188_1
        arg189_1 = self.arg189_1
        arg190_1 = self.arg190_1
        arg191_1 = self.arg191_1
        arg192_1 = self.arg192_1
        arg193_1 = self.arg193_1
        arg194_1 = self.arg194_1
        arg195_1 = self.arg195_1
        arg196_1 = self.arg196_1
        arg197_1 = self.arg197_1
        arg198_1 = self.arg198_1
        arg199_1 = self.arg199_1
        arg200_1 = self.arg200_1
        arg201_1 = self.arg201_1
        arg202_1 = self.arg202_1
        arg203_1 = self.arg203_1
        arg204_1 = self.arg204_1
        arg205_1 = self.arg205_1
        arg206_1 = self.arg206_1
        arg207_1 = self.arg207_1
        arg208_1 = self.arg208_1
        arg209_1 = self.arg209_1
        arg210_1 = self.arg210_1
        arg211_1 = self.arg211_1
        arg212_1 = self.arg212_1
        arg213_1 = self.arg213_1
        arg214_1 = self.arg214_1
        arg215_1 = self.arg215_1
        arg216_1 = self.arg216_1
        arg217_1 = self.arg217_1
        arg218_1 = self.arg218_1
        arg219_1 = self.arg219_1
        arg220_1 = self.arg220_1
        arg221_1 = self.arg221_1
        arg222_1 = self.arg222_1
        arg223_1 = self.arg223_1
        arg224_1 = self.arg224_1
        arg225_1 = self.arg225_1
        arg226_1 = self.arg226_1
        arg227_1 = self.arg227_1
        arg228_1 = self.arg228_1
        arg229_1 = self.arg229_1
        arg230_1 = self.arg230_1
        arg231_1 = self.arg231_1
        arg232_1 = self.arg232_1
        arg233_1 = self.arg233_1
        arg234_1 = self.arg234_1
        arg235_1 = self.arg235_1
        arg236_1 = self.arg236_1
        arg237_1 = self.arg237_1
        arg238_1 = self.arg238_1
        arg239_1 = self.arg239_1
        arg240_1 = self.arg240_1
        arg241_1 = self.arg241_1
        arg242_1 = self.arg242_1
        arg243_1 = self.arg243_1
        arg244_1 = self.arg244_1
        arg245_1 = self.arg245_1
        arg246_1 = self.arg246_1
        arg247_1 = self.arg247_1
        arg248_1 = self.arg248_1
        arg249_1 = self.arg249_1
        arg250_1 = self.arg250_1
        arg251_1 = self.arg251_1
        arg252_1 = self.arg252_1
        arg253_1 = self.arg253_1
        arg254_1 = self.arg254_1
        arg255_1 = self.arg255_1
        arg256_1 = self.arg256_1
        arg257_1 = self.arg257_1
        arg258_1 = self.arg258_1
        arg259_1 = self.arg259_1
        arg260_1 = self.arg260_1
        arg261_1 = self.arg261_1
        arg262_1 = self.arg262_1
        arg263_1 = self.arg263_1
        arg264_1 = self.arg264_1
        arg265_1 = self.arg265_1
        arg266_1 = self.arg266_1
        arg267_1 = self.arg267_1
        arg268_1 = self.arg268_1
        arg269_1 = self.arg269_1
        arg270_1 = self.arg270_1
        arg271_1 = self.arg271_1
        arg272_1 = self.arg272_1
        arg273_1 = self.arg273_1
        arg274_1 = self.arg274_1
        arg275_1 = self.arg275_1
        arg276_1 = self.arg276_1
        arg277_1 = self.arg277_1
        arg278_1 = self.arg278_1
        arg279_1 = self.arg279_1
        arg280_1 = self.arg280_1
        arg281_1 = self.arg281_1
        arg282_1 = self.arg282_1
        arg283_1 = self.arg283_1
        arg284_1 = self.arg284_1
        arg285_1 = self.arg285_1
        arg286_1 = self.arg286_1
        arg287_1 = self.arg287_1
        arg288_1 = self.arg288_1
        arg289_1 = self.arg289_1
        arg290_1 = self.arg290_1
        arg291_1 = self.arg291_1
        arg292_1 = self.arg292_1
        arg293_1 = self.arg293_1
        arg294_1 = self.arg294_1
        arg295_1 = self.arg295_1
        arg296_1 = self.arg296_1
        arg297_1 = self.arg297_1
        arg298_1 = self.arg298_1
        arg299_1 = self.arg299_1
        arg300_1 = self.arg300_1
        arg301_1 = self.arg301_1
        arg302_1 = self.arg302_1
        arg303_1 = self.arg303_1
        arg304_1 = self.arg304_1
        arg305_1 = self.arg305_1
        arg306_1 = self.arg306_1
        arg307_1 = self.arg307_1
        arg308_1 = self.arg308_1
        arg309_1 = self.arg309_1
        arg310_1 = self.arg310_1
        arg311_1 = self.arg311_1
        arg312_1 = self.arg312_1
        arg313_1 = self.arg313_1
        arg314_1 = self.arg314_1
        arg315_1 = self.arg315_1
        arg316_1 = self.arg316_1
        arg317_1 = self.arg317_1
        arg318_1 = self.arg318_1
        arg319_1 = self.arg319_1
        arg320_1 = self.arg320_1
        arg321_1 = self.arg321_1
        arg322_1 = self.arg322_1
        arg323_1 = self.arg323_1
        arg324_1 = self.arg324_1
        arg325_1 = self.arg325_1
        arg326_1 = self.arg326_1
        arg327_1 = self.arg327_1
        arg328_1 = self.arg328_1
        arg329_1 = self.arg329_1
        arg330_1 = self.arg330_1
        arg331_1 = self.arg331_1
        arg332_1 = self.arg332_1
        arg333_1 = self.arg333_1
        arg334_1 = self.arg334_1
        arg335_1 = self.arg335_1
        arg336_1 = self.arg336_1
        arg337_1 = self.arg337_1
        arg338_1 = self.arg338_1
        arg339_1 = self.arg339_1
        arg340_1 = self.arg340_1
        arg341_1 = self.arg341_1
        arg342_1 = self.arg342_1
        arg343_1 = self.arg343_1
        arg344_1 = self.arg344_1
        arg345_1 = self.arg345_1
        arg346_1 = self.arg346_1
        arg347_1 = self.arg347_1
        arg348_1 = self.arg348_1
        arg349_1 = self.arg349_1
        arg350_1 = self.arg350_1
        arg351_1 = self.arg351_1
        arg352_1 = self.arg352_1
        arg353_1 = self.arg353_1
        arg354_1 = self.arg354_1
        arg355_1 = self.arg355_1
        arg356_1 = self.arg356_1
        arg357_1 = self.arg357_1
        arg358_1 = self.arg358_1
        arg359_1 = self.arg359_1
        arg360_1 = self.arg360_1
        arg361_1 = self.arg361_1
        arg362_1 = self.arg362_1
        arg363_1 = self.arg363_1
        arg364_1 = self.arg364_1
        arg365_1 = self.arg365_1
        arg366_1 = self.arg366_1
        arg367_1 = self.arg367_1
        arg368_1 = self.arg368_1
        arg369_1 = self.arg369_1
        arg370_1 = self.arg370_1
        arg371_1 = self.arg371_1
        arg372_1 = self.arg372_1
        arg373_1 = self.arg373_1
        arg374_1 = self.arg374_1
        arg375_1 = self.arg375_1
        arg376_1 = self.arg376_1
        arg377_1 = self.arg377_1
        arg378_1 = self.arg378_1
        arg379_1 = self.arg379_1
        arg380_1 = self.arg380_1
        arg381_1 = self.arg381_1
        arg382_1 = self.arg382_1
        arg383_1 = self.arg383_1
        arg384_1 = self.arg384_1
        arg385_1 = self.arg385_1
        arg386_1 = self.arg386_1
        arg387_1 = self.arg387_1
        arg388_1 = self.arg388_1
        arg389_1 = self.arg389_1
        arg390_1 = self.arg390_1
        arg391_1 = self.arg391_1
        arg392_1 = self.arg392_1
        arg393_1 = self.arg393_1
        arg394_1 = self.arg394_1
        arg395_1 = self.arg395_1
        arg396_1 = self.arg396_1
        arg397_1 = self.arg397_1
        arg398_1 = self.arg398_1
        arg399_1 = self.arg399_1
        arg400_1 = self.arg400_1
        arg401_1 = self.arg401_1
        arg402_1 = self.arg402_1
        arg403_1 = self.arg403_1
        arg404_1 = self.arg404_1
        arg405_1 = self.arg405_1
        arg406_1 = self.arg406_1
        arg407_1 = self.arg407_1
        arg408_1 = self.arg408_1
        arg409_1 = self.arg409_1
        arg410_1 = self.arg410_1
        arg411_1 = self.arg411_1
        arg412_1 = self.arg412_1
        arg413_1 = self.arg413_1
        arg414_1 = self.arg414_1
        arg415_1 = self.arg415_1
        arg416_1 = self.arg416_1
        arg417_1 = self.arg417_1
        arg418_1 = self.arg418_1
        arg419_1 = self.arg419_1
        arg420_1 = self.arg420_1
        arg421_1 = self.arg421_1
        arg422_1 = self.arg422_1
        arg423_1 = self.arg423_1
        arg424_1 = self.arg424_1
        arg425_1 = self.arg425_1
        arg426_1 = self.arg426_1
        arg427_1 = self.arg427_1
        arg428_1 = self.arg428_1
        arg429_1 = self.arg429_1
        arg430_1 = self.arg430_1
        arg431_1 = self.arg431_1
        arg432_1 = self.arg432_1
        arg433_1 = self.arg433_1
        arg434_1 = self.arg434_1
        arg435_1 = self.arg435_1
        arg436_1 = self.arg436_1
        arg437_1 = self.arg437_1
        arg438_1 = self.arg438_1
        arg439_1 = self.arg439_1
        arg440_1 = self.arg440_1
        arg441_1 = self.arg441_1
        arg442_1 = self.arg442_1
        arg443_1 = self.arg443_1
        arg444_1 = self.arg444_1
        arg445_1 = self.arg445_1
        arg446_1 = self.arg446_1
        arg447_1 = self.arg447_1
        arg448_1 = self.arg448_1
        arg449_1 = self.arg449_1
        arg450_1 = self.arg450_1
        arg451_1 = self.arg451_1
        arg452_1 = self.arg452_1
        arg453_1 = self.arg453_1
        arg454_1 = self.arg454_1
        arg455_1 = self.arg455_1
        arg456_1 = self.arg456_1
        arg457_1 = self.arg457_1
        arg458_1 = self.arg458_1
        arg459_1 = self.arg459_1
        arg460_1 = self.arg460_1
        arg461_1 = self.arg461_1
        arg462_1 = self.arg462_1
        arg463_1 = self.arg463_1
        arg464_1 = self.arg464_1
        arg465_1 = self.arg465_1
        arg466_1 = self.arg466_1
        arg467_1 = self.arg467_1
        arg468_1 = self.arg468_1
        arg469_1 = self.arg469_1
        arg470_1 = self.arg470_1
        arg471_1 = self.arg471_1
        arg472_1 = self.arg472_1
        arg473_1 = self.arg473_1
        arg474_1 = self.arg474_1
        arg475_1 = self.arg475_1
        arg476_1 = self.arg476_1
        arg477_1 = self.arg477_1
        arg478_1 = self.arg478_1
        arg479_1 = self.arg479_1
        arg480_1 = self.arg480_1
        arg481_1 = self.arg481_1
        arg482_1 = self.arg482_1
        arg483_1 = self.arg483_1
        arg484_1 = self.arg484_1
        arg485_1 = self.arg485_1
        arg486_1 = self.arg486_1
        arg487_1 = self.arg487_1
        arg488_1 = self.arg488_1
        arg489_1 = self.arg489_1
        arg490_1 = self.arg490_1
        arg491_1 = self.arg491_1
        arg492_1 = self.arg492_1
        arg493_1 = self.arg493_1
        arg494_1 = self.arg494_1
        arg495_1 = self.arg495_1
        arg496_1 = self.arg496_1
        arg497_1 = self.arg497_1
        arg498_1 = self.arg498_1
        arg499_1 = self.arg499_1
        arg500_1 = self.arg500_1
        arg501_1 = self.arg501_1
        arg502_1 = self.arg502_1
        arg503_1 = self.arg503_1
        arg504_1 = self.arg504_1
        arg505_1 = self.arg505_1
        arg506_1 = self.arg506_1
        arg507_1 = self.arg507_1
        arg508_1 = self.arg508_1
        arg509_1 = self.arg509_1
        arg510_1 = self.arg510_1
        arg511_1 = self.arg511_1
        arg512_1 = self.arg512_1
        arg513_1 = self.arg513_1
        arg514_1 = self.arg514_1
        arg515_1 = self.arg515_1
        arg516_1 = self.arg516_1
        arg517_1 = self.arg517_1
        arg518_1 = self.arg518_1
        arg519_1 = self.arg519_1
        arg520_1 = self.arg520_1
        arg521_1 = self.arg521_1
        arg522_1 = self.arg522_1
        arg523_1 = self.arg523_1
        arg524_1 = self.arg524_1
        arg525_1 = self.arg525_1
        arg526_1 = self.arg526_1
        arg527_1 = self.arg527_1
        arg528_1 = self.arg528_1
        arg529_1 = self.arg529_1
        arg530_1 = self.arg530_1
        arg531_1 = self.arg531_1
        arg532_1 = self.arg532_1
        arg533_1 = self.arg533_1
        arg534_1 = self.arg534_1
        arg535_1 = self.arg535_1
        arg536_1 = self.arg536_1
        arg537_1 = self.arg537_1
        arg538_1 = self.arg538_1
        arg539_1 = self.arg539_1
        arg540_1 = self.arg540_1
        arg541_1 = self.arg541_1
        arg542_1 = self.arg542_1
        arg543_1 = self.arg543_1
        arg544_1 = self.arg544_1
        arg545_1 = self.arg545_1
        arg546_1 = self.arg546_1
        arg547_1 = self.arg547_1
        arg548_1 = self.arg548_1
        arg549_1 = self.arg549_1
        arg550_1 = self.arg550_1
        arg551_1 = self.arg551_1
        arg552_1 = self.arg552_1
        arg553_1 = self.arg553_1
        arg554_1 = self.arg554_1
        arg555_1 = self.arg555_1
        arg556_1 = self.arg556_1
        arg557_1 = self.arg557_1
        arg558_1 = self.arg558_1
        arg559_1 = self.arg559_1
        arg560_1 = self.arg560_1
        arg561_1 = self.arg561_1
        arg562_1 = self.arg562_1
        arg563_1 = self.arg563_1
        arg564_1 = self.arg564_1
        arg565_1 = self.arg565_1
        arg566_1 = self.arg566_1
        arg567_1 = self.arg567_1
        arg568_1 = self.arg568_1
        arg569_1 = self.arg569_1
        arg570_1 = self.arg570_1
        arg571_1 = self.arg571_1
        arg572_1 = self.arg572_1
        arg573_1 = self.arg573_1
        arg574_1 = self.arg574_1
        arg575_1 = self.arg575_1
        arg576_1 = self.arg576_1
        arg577_1 = self.arg577_1
        arg578_1 = self.arg578_1
        arg579_1 = self.arg579_1
        arg580_1 = self.arg580_1
        arg581_1 = self.arg581_1
        arg582_1 = self.arg582_1
        arg583_1 = self.arg583_1
        arg584_1 = self.arg584_1
        arg585_1 = self.arg585_1
        arg586_1 = self.arg586_1
        arg587_1 = self.arg587_1
        arg588_1 = self.arg588_1
        arg589_1 = self.arg589_1
        arg590_1 = self.arg590_1
        arg591_1 = self.arg591_1
        arg592_1 = self.arg592_1
        arg593_1 = self.arg593_1
        arg594_1 = self.arg594_1
        arg595_1 = self.arg595_1
        arg596_1 = self.arg596_1
        arg597_1 = self.arg597_1
        arg598_1 = self.arg598_1
        arg599_1 = self.arg599_1
        arg600_1 = self.arg600_1
        arg601_1 = self.arg601_1
        arg602_1 = self.arg602_1
        arg603_1 = self.arg603_1
        arg604_1 = self.arg604_1
        arg605_1 = self.arg605_1
        arg606_1 = self.arg606_1
        arg607_1 = self.arg607_1
        arg608_1 = self.arg608_1
        arg609_1 = self.arg609_1
        arg610_1 = self.arg610_1
        arg611_1 = self.arg611_1
        arg612_1 = self.arg612_1
        arg613_1 = self.arg613_1
        arg614_1 = self.arg614_1
        arg615_1 = self.arg615_1
        arg616_1 = self.arg616_1
        arg617_1 = self.arg617_1
        arg618_1 = self.arg618_1
        arg619_1 = self.arg619_1
        arg620_1 = self.arg620_1
        arg621_1 = self.arg621_1
        arg622_1 = self.arg622_1
        arg623_1 = self.arg623_1
        arg624_1 = self.arg624_1
        arg625_1 = self.arg625_1
        arg626_1 = self.arg626_1
        arg627_1 = self.arg627_1
        arg628_1 = self.arg628_1
        arg629_1 = self.arg629_1
        arg630_1 = self.arg630_1
        arg631_1 = self.arg631_1
        arg632_1 = self.arg632_1
        arg633_1 = self.arg633_1
        arg634_1 = self.arg634_1
        arg635_1 = self.arg635_1
        arg636_1 = self.arg636_1
        arg637_1 = self.arg637_1
        arg638_1 = self.arg638_1
        arg639_1 = self.arg639_1
        arg640_1 = self.arg640_1
        arg641_1 = self.arg641_1
        arg642_1 = self.arg642_1
        arg643_1 = self.arg643_1
        arg644_1 = self.arg644_1
        arg645_1 = self.arg645_1
        arg646_1 = self.arg646_1
        arg647_1 = self.arg647_1
        arg648_1 = self.arg648_1
        arg649_1 = self.arg649_1
        arg650_1 = self.arg650_1
        arg651_1 = self.arg651_1
        arg652_1 = self.arg652_1
        arg653_1 = self.arg653_1
        arg654_1 = self.arg654_1
        arg655_1 = self.arg655_1
        arg656_1 = self.arg656_1
        arg657_1 = self.arg657_1
        arg658_1 = self.arg658_1
        arg659_1 = self.arg659_1
        arg660_1 = self.arg660_1
        arg661_1 = self.arg661_1
        arg662_1 = self.arg662_1
        arg663_1 = self.arg663_1
        arg664_1 = self.arg664_1
        arg665_1 = self.arg665_1
        arg666_1 = self.arg666_1
        arg667_1 = self.arg667_1
        arg668_1 = self.arg668_1
        arg669_1 = self.arg669_1
        arg670_1 = self.arg670_1
        arg671_1 = self.arg671_1
        arg672_1 = self.arg672_1
        arg673_1 = self.arg673_1
        arg674_1 = self.arg674_1
        arg675_1 = self.arg675_1
        arg676_1 = self.arg676_1
        arg677_1 = self.arg677_1
        arg678_1 = self.arg678_1
        arg679_1 = self.arg679_1
        arg680_1 = self.arg680_1
        arg681_1 = self.arg681_1
        arg682_1 = self.arg682_1
        arg683_1 = self.arg683_1
        arg684_1 = self.arg684_1
        arg685_1 = self.arg685_1
        arg686_1 = self.arg686_1
        arg687_1 = self.arg687_1
        arg688_1 = self.arg688_1
        arg689_1 = self.arg689_1
        arg690_1 = self.arg690_1
        arg691_1 = self.arg691_1
        arg692_1 = self.arg692_1
        arg693_1 = self.arg693_1
        arg694_1 = self.arg694_1
        arg695_1 = self.arg695_1
        arg696_1 = self.arg696_1
        arg697_1 = self.arg697_1
        arg698_1 = self.arg698_1
        arg699_1 = self.arg699_1
        arg700_1 = self.arg700_1
        arg701_1 = self.arg701_1
        arg702_1 = self.arg702_1
        arg703_1 = self.arg703_1
        arg704_1 = self.arg704_1
        arg705_1 = self.arg705_1
        arg706_1 = self.arg706_1
        arg707_1 = self.arg707_1
        arg708_1 = self.arg708_1
        arg709_1 = self.arg709_1
        arg710_1 = self.arg710_1
        arg711_1 = self.arg711_1
        arg712_1 = self.arg712_1
        arg713_1 = self.arg713_1
        arg714_1 = self.arg714_1
        arg715_1 = self.arg715_1
        arg716_1 = self.arg716_1
        arg717_1 = self.arg717_1
        arg718_1 = self.arg718_1
        arg719_1 = self.arg719_1
        arg720_1 = self.arg720_1
        arg721_1 = self.arg721_1
        arg722_1 = self.arg722_1
        arg723_1 = self.arg723_1
        arg724_1 = self.arg724_1
        arg725_1 = self.arg725_1
        arg726_1 = self.arg726_1
        arg727_1 = self.arg727_1
        arg728_1 = self.arg728_1
        arg729_1 = self.arg729_1
        arg730_1 = self.arg730_1
        arg731_1 = self.arg731_1
        arg732_1 = self.arg732_1
        arg733_1 = self.arg733_1
        arg734_1 = self.arg734_1
        arg735_1 = self.arg735_1
        arg736_1 = self.arg736_1
        arg737_1 = self.arg737_1
        arg738_1 = self.arg738_1
        arg739_1 = self.arg739_1
        arg740_1 = self.arg740_1
        arg741_1 = self.arg741_1
        arg742_1 = self.arg742_1
        arg743_1 = self.arg743_1
        arg744_1 = self.arg744_1
        arg745_1 = self.arg745_1
        arg746_1 = self.arg746_1
        arg747_1 = self.arg747_1
        arg748_1 = self.arg748_1
        arg749_1 = self.arg749_1
        arg750_1 = self.arg750_1
        arg751_1 = self.arg751_1
        arg752_1 = self.arg752_1
        arg753_1 = self.arg753_1
        arg754_1 = self.arg754_1
        arg755_1 = self.arg755_1
        arg756_1 = self.arg756_1
        arg757_1 = self.arg757_1
        arg758_1 = self.arg758_1
        arg759_1 = self.arg759_1
        arg760_1 = self.arg760_1
        arg761_1 = self.arg761_1
        arg762_1 = self.arg762_1
        arg763_1 = self.arg763_1
        arg764_1 = self.arg764_1
        arg765_1 = self.arg765_1
        arg766_1 = self.arg766_1
        arg767_1 = self.arg767_1
        arg768_1 = self.arg768_1
        arg769_1 = self.arg769_1
        arg770_1 = self.arg770_1
        arg771_1 = self.arg771_1
        arg772_1 = self.arg772_1
        arg773_1 = self.arg773_1
        arg774_1 = self.arg774_1
        arg775_1 = self.arg775_1
        arg776_1 = self.arg776_1
        arg777_1 = self.arg777_1
        arg778_1 = self.arg778_1
        arg779_1 = self.arg779_1
        arg780_1 = self.arg780_1
        arg781_1 = self.arg781_1
        arg782_1 = self.arg782_1
        arg783_1 = self.arg783_1
        arg784_1 = self.arg784_1
        arg785_1 = self.arg785_1
        arg786_1 = self.arg786_1
        arg787_1 = self.arg787_1
        arg788_1 = self.arg788_1
        arg789_1 = self.arg789_1
        arg790_1 = self.arg790_1
        arg791_1 = self.arg791_1
        arg792_1 = self.arg792_1
        arg793_1 = self.arg793_1
        arg794_1 = self.arg794_1
        arg795_1 = self.arg795_1
        arg796_1 = self.arg796_1
        arg797_1 = self.arg797_1
        arg798_1 = self.arg798_1
        arg799_1 = self.arg799_1
        arg800_1 = self.arg800_1
        arg801_1 = self.arg801_1
        arg802_1 = self.arg802_1
        arg803_1 = self.arg803_1
        arg804_1 = self.arg804_1
        arg805_1 = self.arg805_1
        arg806_1 = self.arg806_1
        arg807_1 = self.arg807_1
        arg808_1 = self.arg808_1
        arg809_1 = self.arg809_1
        arg810_1 = self.arg810_1
        arg811_1 = self.arg811_1
        arg812_1 = self.arg812_1
        arg813_1 = self.arg813_1
        arg814_1 = self.arg814_1
        arg815_1 = self.arg815_1
        arg816_1 = self.arg816_1
        arg817_1 = self.arg817_1
        arg818_1 = self.arg818_1
        arg819_1 = self.arg819_1
        arg820_1 = self.arg820_1
        arg821_1 = self.arg821_1
        arg822_1 = self.arg822_1
        arg823_1 = self.arg823_1
        arg824_1 = self.arg824_1
        arg825_1 = self.arg825_1
        arg826_1 = self.arg826_1
        arg827_1 = self.arg827_1
        arg828_1 = self.arg828_1
        arg829_1 = self.arg829_1
        arg830_1 = self.arg830_1
        arg831_1 = self.arg831_1
        arg832_1 = self.arg832_1
        arg833_1 = self.arg833_1
        arg834_1 = self.arg834_1
        arg835_1 = self.arg835_1
        arg836_1 = self.arg836_1
        arg837_1 = self.arg837_1
        arg838_1 = self.arg838_1
        arg839_1 = self.arg839_1
        arg840_1 = self.arg840_1
        arg841_1 = self.arg841_1
        arg842_1 = self.arg842_1
        arg843_1 = self.arg843_1
        arg844_1 = self.arg844_1
        arg845_1 = self.arg845_1
        arg846_1 = self.arg846_1
        arg847_1 = self.arg847_1
        arg848_1 = self.arg848_1
        arg849_1 = self.arg849_1
        arg850_1 = self.arg850_1
        arg851_1 = self.arg851_1
        arg852_1 = self.arg852_1
        arg853_1 = self.arg853_1
        arg854_1 = self.arg854_1
        arg855_1 = self.arg855_1
        arg856_1 = self.arg856_1
        arg857_1 = self.arg857_1
        arg858_1 = self.arg858_1
        arg859_1 = self.arg859_1
        arg860_1 = self.arg860_1
        arg861_1 = self.arg861_1
        arg862_1 = self.arg862_1
        arg863_1 = self.arg863_1
        arg864_1 = self.arg864_1
        arg865_1 = self.arg865_1
        arg866_1 = self.arg866_1
        arg867_1 = self.arg867_1
        arg868_1 = self.arg868_1
        arg869_1 = self.arg869_1
        arg870_1 = self.arg870_1
        arg871_1 = self.arg871_1
        arg872_1 = self.arg872_1
        arg873_1 = self.arg873_1
        arg874_1 = self.arg874_1
        arg875_1 = self.arg875_1
        arg876_1 = self.arg876_1
        arg877_1 = self.arg877_1
        arg878_1 = self.arg878_1
        arg879_1 = self.arg879_1
        arg880_1 = self.arg880_1
        arg881_1 = self.arg881_1
        arg882_1 = self.arg882_1
        arg883_1 = self.arg883_1
        arg884_1 = self.arg884_1
        arg885_1 = self.arg885_1
        arg886_1 = self.arg886_1
        arg887_1 = self.arg887_1
        arg888_1 = self.arg888_1
        arg889_1 = self.arg889_1
        arg890_1 = self.arg890_1
        arg891_1 = self.arg891_1
        arg892_1 = self.arg892_1
        arg893_1 = self.arg893_1
        arg894_1 = self.arg894_1
        arg895_1 = self.arg895_1
        arg896_1 = self.arg896_1
        arg897_1 = self.arg897_1
        arg898_1 = self.arg898_1
        arg899_1 = self.arg899_1
        arg900_1 = self.arg900_1
        arg901_1 = self.arg901_1
        arg902_1 = self.arg902_1
        arg903_1 = self.arg903_1
        arg904_1 = self.arg904_1
        arg905_1 = self.arg905_1
        arg906_1 = self.arg906_1
        arg907_1 = self.arg907_1
        arg908_1 = self.arg908_1
        arg909_1 = self.arg909_1
        arg910_1 = self.arg910_1
        arg911_1 = self.arg911_1
        arg912_1 = self.arg912_1
        arg913_1 = self.arg913_1
        arg914_1 = self.arg914_1
        arg915_1 = self.arg915_1
        arg916_1 = self.arg916_1
        arg917_1 = self.arg917_1
        arg918_1 = self.arg918_1
        arg919_1 = self.arg919_1
        arg920_1 = self.arg920_1
        arg921_1 = self.arg921_1
        arg922_1 = self.arg922_1
        arg923_1 = self.arg923_1
        arg924_1 = self.arg924_1
        arg925_1 = self.arg925_1
        arg926_1 = self.arg926_1
        arg927_1 = self.arg927_1
        arg928_1 = self.arg928_1
        arg929_1 = self.arg929_1
        arg930_1 = self.arg930_1
        arg931_1 = self.arg931_1
        arg932_1 = self.arg932_1
        arg933_1 = self.arg933_1
        arg934_1 = self.arg934_1
        arg935_1 = self.arg935_1
        arg936_1 = self.arg936_1
        arg937_1 = self.arg937_1
        arg938_1 = self.arg938_1
        arg939_1 = self.arg939_1
        arg940_1 = self.arg940_1
        arg941_1 = self.arg941_1
        arg942_1 = self.arg942_1
        arg943_1 = self.arg943_1
        arg944_1 = self.arg944_1
        arg945_1 = self.arg945_1
        arg946_1 = self.arg946_1
        arg947_1 = self.arg947_1
        arg948_1 = self.arg948_1
        arg949_1 = self.arg949_1
        arg950_1 = self.arg950_1
        arg951_1 = self.arg951_1
        arg952_1 = self.arg952_1
        arg953_1 = self.arg953_1
        arg954_1 = self.arg954_1
        arg955_1 = self.arg955_1
        arg956_1 = self.arg956_1
        arg957_1 = self.arg957_1
        arg958_1 = self.arg958_1
        arg959_1 = self.arg959_1
        arg960_1 = self.arg960_1
        arg961_1 = self.arg961_1
        arg962_1 = self.arg962_1
        arg963_1 = self.arg963_1
        arg964_1 = self.arg964_1
        arg965_1 = self.arg965_1
        arg966_1 = self.arg966_1
        arg967_1 = self.arg967_1
        arg968_1 = self.arg968_1
        arg969_1 = self.arg969_1
        arg970_1 = self.arg970_1
        arg971_1 = self.arg971_1
        arg972_1 = self.arg972_1
        arg973_1 = self.arg973_1
        arg974_1 = self.arg974_1
        arg975_1 = self.arg975_1
        arg976_1 = self.arg976_1
        arg977_1 = self.arg977_1
        arg978_1 = self.arg978_1
        arg979_1 = self.arg979_1
        arg980_1 = self.arg980_1
        arg981_1 = self.arg981_1
        arg982_1 = self.arg982_1
        arg983_1 = self.arg983_1
        arg984_1 = self.arg984_1
        arg985_1 = self.arg985_1
        arg986_1 = self.arg986_1
        arg987_1 = self.arg987_1
        arg988_1 = self.arg988_1
        arg989_1 = self.arg989_1
        arg990_1 = self.arg990_1
        arg991_1 = self.arg991_1
        arg992_1 = self.arg992_1
        arg993_1 = self.arg993_1
        arg994_1 = self.arg994_1
        arg995_1 = self.arg995_1
        arg996_1 = self.arg996_1
        arg997_1 = self.arg997_1
        arg998_1 = self.arg998_1
        arg999_1 = self.arg999_1
        arg1000_1 = self.arg1000_1
        arg1001_1 = self.arg1001_1
        arg1002_1 = self.arg1002_1
        arg1003_1 = self.arg1003_1
        arg1004_1 = self.arg1004_1
        arg1005_1 = self.arg1005_1
        arg1006_1 = self.arg1006_1
        arg1007_1 = self.arg1007_1
        arg1008_1 = self.arg1008_1
        arg1009_1 = self.arg1009_1
        arg1010_1 = self.arg1010_1
        arg1011_1 = self.arg1011_1
        arg1012_1 = self.arg1012_1
        arg1013_1 = self.arg1013_1
        arg1014_1 = self.arg1014_1
        arg1015_1 = self.arg1015_1
        arg1016_1 = self.arg1016_1
        arg1017_1 = self.arg1017_1
        arg1018_1 = self.arg1018_1
        arg1019_1 = self.arg1019_1
        arg1020_1 = self.arg1020_1
        arg1021_1 = self.arg1021_1
        arg1022_1 = self.arg1022_1
        arg1023_1 = self.arg1023_1
        arg1024_1 = self.arg1024_1
        arg1025_1 = self.arg1025_1
        arg1026_1 = self.arg1026_1
        arg1027_1 = self.arg1027_1
        arg1028_1 = self.arg1028_1
        arg1029_1 = self.arg1029_1
        arg1030_1 = self.arg1030_1
        arg1031_1 = self.arg1031_1
        arg1032_1 = self.arg1032_1
        arg1033_1 = self.arg1033_1
        arg1034_1 = self.arg1034_1
        arg1035_1 = self.arg1035_1
        arg1036_1 = self.arg1036_1
        arg1037_1 = self.arg1037_1
        arg1038_1 = self.arg1038_1
        arg1039_1 = self.arg1039_1
        arg1040_1 = self.arg1040_1
        arg1041_1 = self.arg1041_1
        arg1042_1 = self.arg1042_1
        arg1043_1 = self.arg1043_1
        arg1044_1 = self.arg1044_1
        arg1045_1 = self.arg1045_1
        arg1046_1 = self.arg1046_1
        arg1047_1 = self.arg1047_1
        arg1048_1 = self.arg1048_1
        arg1049_1 = self.arg1049_1
        arg1050_1 = self.arg1050_1
        arg1051_1 = self.arg1051_1
        arg1052_1 = self.arg1052_1
        arg1053_1 = self.arg1053_1
        arg1054_1 = self.arg1054_1
        arg1055_1 = self.arg1055_1
        arg1056_1 = self.arg1056_1
        arg1057_1 = self.arg1057_1
        arg1058_1 = self.arg1058_1
        arg1059_1 = self.arg1059_1
        arg1060_1 = self.arg1060_1
        arg1061_1 = self.arg1061_1
        arg1062_1 = self.arg1062_1
        arg1063_1 = self.arg1063_1
        arg1064_1 = self.arg1064_1
        arg1065_1 = self.arg1065_1
        arg1066_1 = self.arg1066_1
        arg1067_1 = self.arg1067_1
        arg1068_1 = self.arg1068_1
        arg1069_1 = self.arg1069_1
        arg1070_1 = self.arg1070_1
        arg1071_1 = self.arg1071_1
        arg1072_1 = self.arg1072_1
        arg1073_1 = self.arg1073_1
        arg1074_1 = self.arg1074_1
        arg1075_1 = self.arg1075_1
        arg1076_1 = self.arg1076_1
        arg1077_1 = self.arg1077_1
        arg1078_1 = self.arg1078_1
        arg1079_1 = self.arg1079_1
        arg1080_1 = self.arg1080_1
        arg1081_1 = self.arg1081_1
        arg1082_1 = self.arg1082_1
        arg1083_1 = self.arg1083_1
        arg1084_1 = self.arg1084_1
        arg1085_1 = self.arg1085_1
        arg1086_1 = self.arg1086_1
        arg1087_1 = self.arg1087_1
        arg1088_1 = self.arg1088_1
        arg1089_1 = self.arg1089_1
        arg1090_1 = self.arg1090_1
        arg1091_1 = self.arg1091_1
        arg1092_1 = self.arg1092_1
        arg1093_1 = self.arg1093_1
        arg1094_1 = self.arg1094_1
        arg1095_1 = self.arg1095_1
        arg1096_1 = self.arg1096_1
        arg1097_1 = self.arg1097_1
        arg1098_1 = self.arg1098_1
        arg1099_1 = self.arg1099_1
        arg1100_1 = self.arg1100_1
        arg1101_1 = self.arg1101_1
        arg1102_1 = self.arg1102_1
        arg1103_1 = self.arg1103_1
        arg1104_1 = self.arg1104_1
        arg1105_1 = self.arg1105_1
        arg1106_1 = self.arg1106_1
        arg1107_1 = self.arg1107_1
        arg1108_1 = self.arg1108_1
        arg1109_1 = self.arg1109_1
        arg1110_1 = self.arg1110_1
        arg1111_1 = self.arg1111_1
        arg1112_1 = self.arg1112_1
        arg1113_1 = self.arg1113_1
        arg1114_1 = self.arg1114_1
        arg1115_1 = self.arg1115_1
        arg1116_1 = self.arg1116_1
        arg1117_1 = self.arg1117_1
        arg1118_1 = self.arg1118_1
        arg1119_1 = self.arg1119_1
        arg1120_1 = self.arg1120_1
        arg1121_1 = self.arg1121_1
        arg1122_1 = self.arg1122_1
        arg1123_1 = self.arg1123_1
        arg1124_1 = self.arg1124_1
        arg1125_1 = self.arg1125_1
        arg1126_1 = self.arg1126_1
        arg1127_1 = self.arg1127_1
        arg1128_1 = self.arg1128_1
        arg1129_1 = self.arg1129_1
        arg1130_1 = self.arg1130_1
        arg1131_1 = self.arg1131_1
        arg1132_1 = self.arg1132_1
        arg1133_1 = self.arg1133_1
        arg1134_1 = self.arg1134_1
        arg1135_1 = self.arg1135_1
        arg1136_1 = self.arg1136_1
        arg1137_1 = self.arg1137_1
        arg1138_1 = self.arg1138_1
        arg1139_1 = self.arg1139_1
        arg1140_1 = self.arg1140_1
        arg1141_1 = self.arg1141_1
        arg1142_1 = self.arg1142_1
        arg1143_1 = self.arg1143_1
        arg1144_1 = self.arg1144_1
        arg1145_1 = self.arg1145_1
        arg1146_1 = self.arg1146_1
        arg1147_1 = self.arg1147_1
        arg1148_1 = self.arg1148_1
        arg1149_1 = self.arg1149_1
        arg1150_1 = self.arg1150_1
        arg1151_1 = self.arg1151_1
        arg1152_1 = self.arg1152_1
        arg1153_1 = self.arg1153_1
        arg1154_1 = self.arg1154_1
        arg1155_1 = self.arg1155_1
        arg1156_1 = self.arg1156_1
        arg1157_1 = self.arg1157_1
        arg1158_1 = self.arg1158_1
        arg1159_1 = self.arg1159_1
        arg1160_1 = self.arg1160_1
        arg1161_1 = self.arg1161_1
        arg1162_1 = self.arg1162_1
        arg1163_1 = self.arg1163_1
        arg1164_1 = self.arg1164_1
        arg1165_1 = self.arg1165_1
        arg1166_1 = self.arg1166_1
        arg1167_1 = self.arg1167_1
        arg1168_1 = self.arg1168_1
        arg1169_1 = self.arg1169_1
        arg1170_1 = self.arg1170_1
        arg1171_1 = self.arg1171_1
        arg1172_1 = self.arg1172_1
        arg1173_1 = self.arg1173_1
        arg1174_1 = self.arg1174_1
        arg1175_1 = self.arg1175_1
        arg1176_1 = self.arg1176_1
        arg1177_1 = self.arg1177_1
        arg1178_1 = self.arg1178_1
        arg1179_1 = self.arg1179_1
        arg1180_1 = self.arg1180_1
        arg1181_1 = self.arg1181_1
        arg1182_1 = self.arg1182_1
        arg1183_1 = self.arg1183_1
        arg1184_1 = self.arg1184_1
        arg1185_1 = self.arg1185_1
        arg1186_1 = self.arg1186_1
        arg1187_1 = self.arg1187_1
        arg1188_1 = self.arg1188_1
        arg1189_1 = self.arg1189_1
        arg1190_1 = self.arg1190_1
        arg1191_1 = self.arg1191_1
        arg1192_1 = self.arg1192_1
        arg1193_1 = self.arg1193_1
        arg1194_1 = self.arg1194_1
        arg1195_1 = self.arg1195_1
        arg1196_1 = self.arg1196_1
        arg1197_1 = self.arg1197_1
        arg1198_1 = self.arg1198_1
        arg1199_1 = self.arg1199_1
        arg1200_1 = self.arg1200_1
        arg1201_1 = self.arg1201_1
        arg1202_1 = self.arg1202_1
        arg1203_1 = self.arg1203_1
        arg1204_1 = self.arg1204_1
        arg1205_1 = self.arg1205_1
        arg1206_1 = self.arg1206_1
        arg1207_1 = self.arg1207_1
        arg1208_1 = self.arg1208_1
        arg1209_1 = self.arg1209_1
        arg1210_1 = self.arg1210_1
        arg1211_1 = self.arg1211_1
        arg1212_1 = self.arg1212_1
        arg1213_1 = self.arg1213_1
        arg1214_1 = self.arg1214_1
        arg1215_1 = self.arg1215_1
        arg1216_1 = self.arg1216_1
        arg1217_1 = self.arg1217_1
        arg1218_1 = self.arg1218_1
        arg1219_1 = self.arg1219_1
        arg1220_1 = self.arg1220_1
        arg1221_1 = self.arg1221_1
        arg1222_1 = self.arg1222_1
        arg1223_1 = self.arg1223_1
        arg1224_1 = self.arg1224_1
        arg1225_1 = self.arg1225_1
        arg1226_1 = self.arg1226_1
        arg1227_1 = self.arg1227_1
        arg1228_1 = self.arg1228_1
        arg1229_1 = self.arg1229_1
        arg1230_1 = self.arg1230_1
        arg1231_1 = self.arg1231_1
        arg1232_1 = self.arg1232_1
        arg1233_1 = self.arg1233_1
        arg1234_1 = self.arg1234_1
        arg1235_1 = self.arg1235_1
        arg1236_1 = self.arg1236_1
        arg1237_1 = self.arg1237_1
        arg1238_1 = self.arg1238_1
        arg1239_1 = self.arg1239_1
        arg1240_1 = self.arg1240_1
        arg1241_1 = self.arg1241_1
        arg1242_1 = self.arg1242_1
        arg1243_1 = self.arg1243_1
        arg1244_1 = self.arg1244_1
        arg1245_1 = self.arg1245_1
        arg1246_1 = self.arg1246_1
        arg1247_1 = self.arg1247_1
        arg1248_1 = self.arg1248_1
        arg1249_1 = self.arg1249_1
        arg1250_1 = self.arg1250_1
        arg1251_1 = self.arg1251_1
        arg1252_1 = self.arg1252_1
        arg1253_1 = self.arg1253_1
        arg1254_1 = self.arg1254_1
        arg1255_1 = self.arg1255_1
        arg1256_1 = self.arg1256_1
        arg1257_1 = self.arg1257_1
        arg1258_1 = self.arg1258_1
        arg1259_1 = self.arg1259_1
        arg1260_1 = self.arg1260_1
        arg1261_1 = self.arg1261_1
        arg1262_1 = self.arg1262_1
        arg1263_1 = self.arg1263_1
        arg1264_1 = self.arg1264_1
        arg1265_1 = self.arg1265_1
        arg1266_1 = self.arg1266_1
        arg1267_1 = self.arg1267_1
        arg1268_1 = self.arg1268_1
        arg1269_1 = self.arg1269_1
        arg1270_1 = self.arg1270_1
        arg1271_1 = self.arg1271_1
        arg1272_1 = self.arg1272_1
        arg1273_1 = self.arg1273_1
        arg1274_1 = self.arg1274_1
        arg1275_1 = self.arg1275_1
        arg1276_1 = self.arg1276_1
        arg1277_1 = self.arg1277_1
        arg1278_1 = self.arg1278_1
        arg1279_1 = self.arg1279_1
        arg1280_1 = self.arg1280_1
        arg1281_1 = self.arg1281_1
        arg1282_1 = self.arg1282_1
        arg1283_1 = self.arg1283_1
        arg1284_1 = self.arg1284_1
        arg1285_1 = self.arg1285_1
        arg1286_1 = self.arg1286_1
        arg1287_1 = self.arg1287_1
        arg1288_1 = self.arg1288_1
        arg1289_1 = self.arg1289_1
        arg1290_1 = self.arg1290_1
        arg1291_1 = self.arg1291_1
        arg1292_1 = self.arg1292_1
        arg1293_1 = self.arg1293_1
        arg1294_1 = self.arg1294_1
        arg1295_1 = self.arg1295_1
        arg1296_1 = self.arg1296_1
        arg1297_1 = self.arg1297_1
        arg1298_1 = self.arg1298_1
        arg1299_1 = self.arg1299_1
        arg1300_1 = self.arg1300_1
        arg1301_1 = self.arg1301_1
        arg1302_1 = self.arg1302_1
        arg1303_1 = self.arg1303_1
        arg1304_1 = self.arg1304_1
        arg1305_1 = self.arg1305_1
        arg1306_1 = self.arg1306_1
        arg1307_1 = self.arg1307_1
        arg1308_1 = self.arg1308_1
        arg1309_1 = self.arg1309_1
        arg1310_1 = self.arg1310_1
        arg1311_1 = self.arg1311_1
        arg1312_1 = self.arg1312_1
        arg1313_1 = self.arg1313_1
        arg1314_1 = self.arg1314_1
        arg1315_1 = self.arg1315_1
        arg1316_1 = self.arg1316_1
        arg1317_1 = self.arg1317_1
        arg1318_1 = self.arg1318_1
        arg1319_1 = self.arg1319_1
        arg1320_1 = self.arg1320_1
        arg1321_1 = self.arg1321_1
        arg1322_1 = self.arg1322_1
        arg1323_1 = self.arg1323_1
        arg1324_1 = self.arg1324_1
        arg1325_1 = self.arg1325_1
        arg1326_1 = self.arg1326_1
        arg1327_1 = self.arg1327_1
        arg1328_1 = self.arg1328_1
        arg1329_1 = self.arg1329_1
        arg1330_1 = self.arg1330_1
        arg1331_1 = self.arg1331_1
        arg1332_1 = self.arg1332_1
        arg1333_1 = self.arg1333_1
        arg1334_1 = self.arg1334_1
        arg1335_1 = self.arg1335_1
        arg1336_1 = self.arg1336_1
        arg1337_1 = self.arg1337_1
        arg1338_1 = self.arg1338_1
        arg1339_1 = self.arg1339_1
        arg1340_1 = self.arg1340_1
        arg1341_1 = self.arg1341_1
        arg1342_1 = self.arg1342_1
        arg1343_1 = self.arg1343_1
        arg1344_1 = self.arg1344_1
        arg1345_1 = self.arg1345_1
        arg1346_1 = self.arg1346_1
        arg1347_1 = self.arg1347_1
        arg1348_1 = self.arg1348_1
        arg1349_1 = self.arg1349_1
        arg1350_1 = self.arg1350_1
        arg1351_1 = self.arg1351_1
        arg1352_1 = self.arg1352_1
        arg1353_1 = self.arg1353_1
        arg1354_1 = self.arg1354_1
        arg1355_1 = self.arg1355_1
        arg1356_1 = self.arg1356_1
        arg1357_1 = self.arg1357_1
        arg1358_1 = self.arg1358_1
        arg1359_1 = self.arg1359_1
        arg1360_1 = self.arg1360_1
        arg1361_1 = self.arg1361_1
        arg1362_1 = self.arg1362_1
        arg1363_1 = self.arg1363_1
        arg1364_1 = self.arg1364_1
        arg1365_1 = self.arg1365_1
        arg1366_1 = self.arg1366_1
        arg1367_1 = self.arg1367_1
        arg1368_1 = self.arg1368_1
        arg1369_1 = self.arg1369_1
        arg1370_1 = self.arg1370_1
        arg1371_1 = self.arg1371_1
        arg1372_1 = self.arg1372_1
        arg1373_1 = self.arg1373_1
        arg1374_1 = self.arg1374_1
        arg1375_1 = self.arg1375_1
        arg1376_1 = self.arg1376_1
        arg1377_1 = self.arg1377_1
        arg1378_1 = self.arg1378_1
        arg1379_1 = self.arg1379_1
        arg1380_1 = self.arg1380_1
        arg1381_1 = self.arg1381_1
        arg1382_1 = self.arg1382_1
        arg1383_1 = self.arg1383_1
        arg1384_1 = self.arg1384_1
        arg1385_1 = self.arg1385_1
        arg1386_1 = self.arg1386_1
        arg1387_1 = self.arg1387_1
        arg1388_1 = self.arg1388_1
        arg1389_1 = self.arg1389_1
        arg1390_1 = self.arg1390_1
        arg1391_1 = self.arg1391_1
        arg1392_1 = self.arg1392_1
        arg1393_1 = self.arg1393_1
        arg1394_1 = self.arg1394_1
        arg1395_1 = self.arg1395_1
        arg1396_1 = self.arg1396_1
        arg1397_1 = self.arg1397_1

        _to_copy = arg1401_1.to(dtype = torch.float32) ;  arg1401_1 = None
        native_layer_norm_default = (torch.nn.functional.layer_norm(_to_copy,[256],arg1395_1,arg1396_1,1e-05),) ;  _to_copy = arg1395_1 = arg1396_1 = None
        getitem = native_layer_norm_default[0]
        _to_copy_1 = arg1397_1.to(dtype = torch.bfloat16) ;  arg1397_1 = None
        _to_copy_2 = getitem.to(dtype = torch.bfloat16) ;  getitem = None
        t = _to_copy_1.t() ;  _to_copy_1 = None
        view = _to_copy_2.view(262144, 256) ;  _to_copy_2 = None
        mm = torch.mm(view,t) ;  view = t = None
        view_1 = mm.view(1, 512, 512, 256) ;  mm = None
        add = torch.add(arg1399_1,view_1) ;  arg1399_1 = view_1 = None
        _to_copy_3 = arg1400_1.to(dtype = torch.float32) ;  arg1400_1 = None
        native_layer_norm_default_1 = (torch.nn.functional.layer_norm(_to_copy_3,[384],arg1392_1,arg1393_1,1e-05),) ;  _to_copy_3 = arg1392_1 = arg1393_1 = None
        getitem_3 = native_layer_norm_default_1[0]
        _to_copy_4 = arg1394_1.to(dtype = torch.bfloat16) ;  arg1394_1 = None
        _to_copy_5 = getitem_3.to(dtype = torch.bfloat16) ;  getitem_3 = None
        t_1 = _to_copy_4.t() ;  _to_copy_4 = None
        view_2 = _to_copy_5.view(512, 384) ;  _to_copy_5 = None
        mm_1 = torch.mm(view_2,t_1) ;  view_2 = t_1 = None
        view_3 = mm_1.view(1, 512, 384) ;  mm_1 = None
        add_1 = torch.add(arg1398_1,view_3) ;  arg1398_1 = view_3 = None
        any_1 = torch.any(arg1405_1,dim = [-2,-1]) 
        sum_1 = torch.sum(any_1,[1]) ;  any_1 = None
        _to_copy_6 = add.to(dtype = torch.float32) 
        native_layer_norm_default_2 = (torch.nn.functional.layer_norm(_to_copy_6,[256],arg28_1,arg29_1,1e-05),) ;  _to_copy_6 = arg28_1 = arg29_1 = None
        getitem_6 = native_layer_norm_default_2[0]
        _to_copy_7 = arg30_1.to(dtype = torch.bfloat16) ;  arg30_1 = None
        _to_copy_8 = getitem_6.to(dtype = torch.bfloat16) ;  getitem_6 = None
        t_2 = _to_copy_7.t() ;  _to_copy_7 = None
        view_4 = _to_copy_8.view(262144, 256) ;  _to_copy_8 = None
        mm_2 = torch.mm(view_4,t_2) ;  view_4 = t_2 = None
        view_5 = mm_2.view(1, 512, 512, 64) ;  mm_2 = None
        unsqueeze = torch.unsqueeze(view_5,1) ;  view_5 = None
        expand = unsqueeze.expand(-1, 4, -1, -1, -1) ;  unsqueeze = None
        view_6 = expand.view(4, 512, 512, 64) ;  expand = None
        unsqueeze_2 = torch.unsqueeze(arg1407_1,1) 
        expand_2 = unsqueeze_2.expand(-1, 4, -1, -1) ;  unsqueeze_2 = None
        view_8 = expand_2.view(4, 512, 512) ;  expand_2 = None
        view_9 = arg1404_1.view(4, 512, 512, 64) ;  arg1404_1 = None
        view_10 = arg1405_1.view(4, 512, 512) ;  arg1405_1 = None
        bitwise_and = torch.bitwise_and(view_10,view_8) ;  view_10 = view_8 = None
        clone = torch.clone(view_6) ;  view_6 = None
        add_2 = torch.add(clone,view_9) ;  clone = view_9 = None
        _to_copy_9 = add_2.to(dtype = torch.float32) 
        native_layer_norm_default_3 = (torch.nn.functional.layer_norm(_to_copy_9,[64],arg4_1,arg5_1,1e-05),) ;  _to_copy_9 = arg4_1 = arg5_1 = None
        getitem_9 = native_layer_norm_default_3[0]
        split_with_sizes_default = torch.split(arg7_1,[128,128]) ;  arg7_1 = None
        getitem_12 = split_with_sizes_default[0]
        getitem_13 = split_with_sizes_default[1];  split_with_sizes_default = None
        split_with_sizes_default_1 = torch.split(arg8_1,[128,128,64]) ;  arg8_1 = None
        getitem_14 = split_with_sizes_default_1[0]
        getitem_15 = split_with_sizes_default_1[1]
        getitem_16 = split_with_sizes_default_1[2];  split_with_sizes_default_1 = None
        _to_copy_10 = getitem_12.to(dtype = torch.bfloat16) ;  getitem_12 = None
        _to_copy_11 = getitem_9.to(dtype = torch.bfloat16) 
        t_3 = _to_copy_10.t() ;  _to_copy_10 = None
        view_11 = _to_copy_11.view(1048576, 64) ;  _to_copy_11 = None
        mm_3 = torch.mm(view_11,t_3) ;  view_11 = t_3 = None
        view_12 = mm_3.view(4, 512, 512, 128) ;  mm_3 = None
        _to_copy_12 = getitem_14.to(dtype = torch.bfloat16) ;  getitem_14 = None
        _to_copy_13 = getitem_9.to(dtype = torch.bfloat16) 
        t_4 = _to_copy_12.t() ;  _to_copy_12 = None
        view_13 = _to_copy_13.view(1048576, 64) ;  _to_copy_13 = None
        mm_4 = torch.mm(view_13,t_4) ;  view_13 = t_4 = None
        view_14 = mm_4.view(4, 512, 512, 128) ;  mm_4 = None
        sigmoid = torch.sigmoid(view_14) ;  view_14 = None
        mul = torch.mul(view_12,sigmoid) ;  view_12 = sigmoid = None
        unsqueeze_3 = torch.unsqueeze(bitwise_and,3) 
        bitwise_not = torch.bitwise_not(unsqueeze_3) ;  unsqueeze_3 = None
        masked_fill = mul.masked_fill(bitwise_not,0) ;  mul = bitwise_not = None
        split_tensor = torch.split(masked_fill,64,dim = -1) 
        getitem_19 = split_tensor[0]
        unsqueeze_6 = torch.unsqueeze(getitem_19,4) ;  getitem_19 = None
        permute_3 = unsqueeze_6.permute(0, 1, 4, 3, 2) ;  unsqueeze_6 = None
        permute_4 = permute_3.permute(0, 3, 1, 4, 2) ;  permute_3 = None
        clone_1 = torch.clone(permute_4,memory_format = torch.contiguous_format) ;  permute_4 = None
        _unsafe_view = clone_1.view(256, 512, 512) ;  clone_1 = None
        split_tensor_1 = torch.split(masked_fill,64,dim = -1) ;  masked_fill = None
        getitem_22 = split_tensor_1[1];  split_tensor_1 = None
        unsqueeze_7 = torch.unsqueeze(getitem_22,4) ;  getitem_22 = None
        permute_6 = unsqueeze_7.permute(0, 4, 1, 3, 2) ;  unsqueeze_7 = None
        permute_7 = permute_6.permute(0, 3, 4, 2, 1) ;  permute_6 = None
        clone_2 = torch.clone(permute_7,memory_format = torch.contiguous_format) ;  permute_7 = None
        _unsafe_view_1 = clone_2.view(256, 512, 512) ;  clone_2 = None
        bmm = torch.bmm(_unsafe_view,_unsafe_view_1) ;  _unsafe_view = _unsafe_view_1 = None
        view_15 = bmm.view(4, 64, 512, 1, 512) ;  bmm = None
        permute_8 = view_15.permute(0, 2, 4, 1, 3) ;  view_15 = None
        view_16 = permute_8.view(4, 512, 512, 64) ;  permute_8 = None
        _to_copy_14 = getitem_13.to(dtype = torch.bfloat16) ;  getitem_13 = None
        _to_copy_15 = getitem_9.to(dtype = torch.bfloat16) 
        t_5 = _to_copy_14.t() ;  _to_copy_14 = None
        view_17 = _to_copy_15.view(1048576, 64) ;  _to_copy_15 = None
        mm_5 = torch.mm(view_17,t_5) ;  view_17 = t_5 = None
        view_18 = mm_5.view(4, 512, 512, 128) ;  mm_5 = None
        _to_copy_16 = getitem_15.to(dtype = torch.bfloat16) ;  getitem_15 = None
        _to_copy_17 = getitem_9.to(dtype = torch.bfloat16) 
        t_6 = _to_copy_16.t() ;  _to_copy_16 = None
        view_19 = _to_copy_17.view(1048576, 64) ;  _to_copy_17 = None
        mm_6 = torch.mm(view_19,t_6) ;  view_19 = t_6 = None
        view_20 = mm_6.view(4, 512, 512, 128) ;  mm_6 = None
        sigmoid_1 = torch.sigmoid(view_20) ;  view_20 = None
        mul_1 = torch.mul(view_18,sigmoid_1) ;  view_18 = sigmoid_1 = None
        view_21 = mul_1.view(1048576, 128) ;  mul_1 = None
        view_22 = view_21.view(4, 512, 512, 128) ;  view_21 = None
        transpose = torch.transpose(bitwise_and,1,2) 
        unsqueeze_8 = torch.unsqueeze(transpose,3) ;  transpose = None
        clone_3 = torch.clone(unsqueeze_8,memory_format = torch.contiguous_format) ;  unsqueeze_8 = None
        bitwise_not_1 = torch.bitwise_not(clone_3) ;  clone_3 = None
        masked_fill_1 = view_22.masked_fill(bitwise_not_1,0) ;  view_22 = bitwise_not_1 = None
        view_23 = masked_fill_1.view(1048576, 128) ;  masked_fill_1 = None
        view_25 = view_23.view(4, 512, 512, 128) 
        split_tensor_2 = torch.split(view_25,64,dim = -1) ;  view_25 = None
        getitem_25 = split_tensor_2[0]
        unsqueeze_11 = torch.unsqueeze(getitem_25,4) ;  getitem_25 = None
        permute_12 = unsqueeze_11.permute(0, 2, 4, 3, 1) ;  unsqueeze_11 = None
        permute_13 = permute_12.permute(0, 3, 1, 4, 2) ;  permute_12 = None
        clone_4 = torch.clone(permute_13,memory_format = torch.contiguous_format) ;  permute_13 = None
        _unsafe_view_2 = clone_4.view(256, 512, 512) ;  clone_4 = None
        view_26 = view_23.view(4, 512, 512, 128) ;  view_23 = None
        split_tensor_3 = torch.split(view_26,64,dim = -1) ;  view_26 = None
        getitem_28 = split_tensor_3[1];  split_tensor_3 = None
        unsqueeze_12 = torch.unsqueeze(getitem_28,4) ;  getitem_28 = None
        permute_15 = unsqueeze_12.permute(0, 4, 2, 3, 1) ;  unsqueeze_12 = None
        permute_16 = permute_15.permute(0, 3, 4, 2, 1) ;  permute_15 = None
        clone_5 = torch.clone(permute_16,memory_format = torch.contiguous_format) ;  permute_16 = None
        _unsafe_view_3 = clone_5.view(256, 512, 512) ;  clone_5 = None
        bmm_1 = torch.bmm(_unsafe_view_2,_unsafe_view_3) ;  _unsafe_view_2 = _unsafe_view_3 = None
        view_27 = bmm_1.view(4, 64, 512, 1, 512) ;  bmm_1 = None
        permute_17 = view_27.permute(0, 2, 4, 1, 3) ;  view_27 = None
        view_28 = permute_17.view(4, 512, 512, 64) ;  permute_17 = None
        _to_copy_18 = view_16.to(dtype = torch.float32) ;  view_16 = None
        native_layer_norm_default_4 = (torch.nn.functional.layer_norm(_to_copy_18,[64],None,None,1e-05),) ;  _to_copy_18 = None
        getitem_29 = native_layer_norm_default_4[0]
        _to_copy_19 = view_28.to(dtype = torch.float32) ;  view_28 = None
        native_layer_norm_default_5 = (torch.nn.functional.layer_norm(_to_copy_19,[64],None,None,1e-05),) ;  _to_copy_19 = None
        getitem_32 = native_layer_norm_default_5[0]
        add_3 = torch.add(getitem_29,getitem_32) ;  getitem_29 = getitem_32 = None
        _to_copy_20 = arg6_1.to(dtype = torch.bfloat16) ;  arg6_1 = None
        _to_copy_21 = add_3.to(dtype = torch.bfloat16) ;  add_3 = None
        t_7 = _to_copy_20.t() ;  _to_copy_20 = None
        view_29 = _to_copy_21.view(1048576, 64) ;  _to_copy_21 = None
        mm_7 = torch.mm(view_29,t_7) ;  view_29 = t_7 = None
        view_30 = mm_7.view(4, 512, 512, 64) ;  mm_7 = None
        _to_copy_22 = getitem_16.to(dtype = torch.bfloat16) ;  getitem_16 = None
        _to_copy_23 = getitem_9.to(dtype = torch.bfloat16) ;  getitem_9 = None
        t_8 = _to_copy_22.t() ;  _to_copy_22 = None
        view_31 = _to_copy_23.view(1048576, 64) ;  _to_copy_23 = None
        mm_8 = torch.mm(view_31,t_8) ;  view_31 = t_8 = None
        view_32 = mm_8.view(4, 512, 512, 64) ;  mm_8 = None
        sigmoid_2 = torch.sigmoid(view_32) ;  view_32 = None
        mul_2 = torch.mul(view_30,sigmoid_2) ;  view_30 = sigmoid_2 = None
        add_4 = torch.add(add_2,mul_2) ;  mul_2 = None
        _to_copy_24 = add_2.to(dtype = torch.float32) 
        native_layer_norm_default_6 = (torch.nn.functional.layer_norm(_to_copy_24,[64],None,None,1e-05),) ;  _to_copy_24 = None
        getitem_35 = native_layer_norm_default_6[0]
        _to_copy_25 = arg10_1.to(dtype = torch.bfloat16) ;  arg10_1 = None
        _to_copy_26 = getitem_35.to(dtype = torch.bfloat16) 
        t_9 = _to_copy_25.t() ;  _to_copy_25 = None
        view_33 = _to_copy_26.view(1048576, 64) ;  _to_copy_26 = None
        mm_9 = torch.mm(view_33,t_9) ;  view_33 = t_9 = None
        view_34 = mm_9.view(4, 512, 512, 8) ;  mm_9 = None
        view_35 = view_34.view(4, 512, 512, 2, 4) ;  view_34 = None
        permute_18 = view_35.permute(0, 3, 4, 1, 2) ;  view_35 = None
        view_36 = permute_18.view(4, 2, 4, 1, 512, 512) ;  permute_18 = None
        view_37 = bitwise_and.view(4, 1, 1, 1, 512, 512) 
        bitwise_not_2 = torch.bitwise_not(view_37) ;  view_37 = None
        masked_fill_2 = view_36.masked_fill(bitwise_not_2,-10000) ;  view_36 = bitwise_not_2 = None
        view_38 = masked_fill_2.view(4, 2, 4, 512, 512) ;  masked_fill_2 = None
        permute_19 = view_38.permute(1, 0, 2, 3, 4) ;  view_38 = None
        clone_6 = torch.clone(permute_19,memory_format = torch.contiguous_format) ;  permute_19 = None
        _unsafe_view_4 = clone_6.view(2, 16, 1, 512, 512) ;  clone_6 = None
        _to_copy_27 = arg11_1.to(dtype = torch.bfloat16) ;  arg11_1 = None
        _to_copy_28 = getitem_35.to(dtype = torch.bfloat16) 
        t_10 = _to_copy_27.t() ;  _to_copy_27 = None
        view_39 = _to_copy_28.view(1048576, 64) ;  _to_copy_28 = None
        mm_10 = torch.mm(view_39,t_10) ;  view_39 = t_10 = None
        view_40 = mm_10.view(4, 512, 512, 512) ;  mm_10 = None
        select_1 = torch.select(_unsafe_view_4,0,0) 
        view_41 = view_40.view(4, 512, 512, 4, 4, 32) ;  view_40 = None
        permute_20 = view_41.permute(4, 0, 3, 1, 2, 5) ;  view_41 = None
        clone_7 = torch.clone(permute_20,memory_format = torch.contiguous_format) ;  permute_20 = None
        _unsafe_view_5 = clone_7.view(4, 16, 512, 512, 32) ;  clone_7 = None
        unbind_int = torch.unbind(_unsafe_view_5) ;  _unsafe_view_5 = None
        getitem_38 = unbind_int[0]
        getitem_39 = unbind_int[1]
        getitem_40 = unbind_int[2]
        getitem_41 = unbind_int[3];  unbind_int = None
        expand_3 = select_1.expand(16, 512, 512, 512) ;  select_1 = None
        _scaled_dot_product_efficient_attention_default = (torch.nn.functional.scaled_dot_product_attention(getitem_38,getitem_39,getitem_40,expand_3,False),) ;  getitem_38 = getitem_39 = getitem_40 = expand_3 = None
        getitem_42 = _scaled_dot_product_efficient_attention_default[0]
        sigmoid_3 = torch.sigmoid(getitem_41) ;  getitem_41 = None
        mul_3 = torch.mul(getitem_42,sigmoid_3) ;  getitem_42 = sigmoid_3 = None
        view_42 = mul_3.view(4, 4, 512, 512, 32) ;  mul_3 = None
        permute_21 = view_42.permute(0, 2, 3, 1, 4) ;  view_42 = None
        clone_8 = torch.clone(permute_21,memory_format = torch.contiguous_format) ;  permute_21 = None
        _unsafe_view_6 = clone_8.view(4, 512, 512, 128) ;  clone_8 = None
        transpose_1 = torch.transpose(getitem_35,1,2) ;  getitem_35 = None
        _to_copy_29 = arg12_1.to(dtype = torch.bfloat16) ;  arg12_1 = None
        _to_copy_30 = transpose_1.to(dtype = torch.bfloat16) ;  transpose_1 = None
        t_11 = _to_copy_29.t() ;  _to_copy_29 = None
        expand_4 = _to_copy_30.expand(4, 512, 512, 64) ;  _to_copy_30 = None
        clone_9 = torch.clone(expand_4,memory_format = torch.contiguous_format) ;  expand_4 = None
        _unsafe_view_7 = clone_9.view(2048, 512, 64) ;  clone_9 = None
        expand_5 = t_11.expand(4, 512, 64, 512) ;  t_11 = None
        view_43 = expand_5.view(2048, 64, 512) ;  expand_5 = None
        bmm_2 = torch.bmm(_unsafe_view_7,view_43) ;  _unsafe_view_7 = view_43 = None
        view_44 = bmm_2.view(4, 512, 512, 512) ;  bmm_2 = None
        select_2 = torch.select(_unsafe_view_4,0,1) ;  _unsafe_view_4 = None
        view_45 = view_44.view(4, 512, 512, 4, 4, 32) ;  view_44 = None
        permute_22 = view_45.permute(4, 0, 3, 1, 2, 5) ;  view_45 = None
        clone_10 = torch.clone(permute_22,memory_format = torch.contiguous_format) ;  permute_22 = None
        _unsafe_view_8 = clone_10.view(4, 16, 512, 512, 32) ;  clone_10 = None
        unbind_int_1 = torch.unbind(_unsafe_view_8) ;  _unsafe_view_8 = None
        getitem_46 = unbind_int_1[0]
        getitem_47 = unbind_int_1[1]
        getitem_48 = unbind_int_1[2]
        getitem_49 = unbind_int_1[3];  unbind_int_1 = None
        expand_6 = select_2.expand(16, 512, 512, 512) ;  select_2 = None
        _scaled_dot_product_efficient_attention_default_1 = (torch.nn.functional.scaled_dot_product_attention(getitem_46,getitem_47,getitem_48,expand_6,False),) ;  getitem_46 = getitem_47 = getitem_48 = expand_6 = None
        getitem_50 = _scaled_dot_product_efficient_attention_default_1[0]
        sigmoid_4 = torch.sigmoid(getitem_49) ;  getitem_49 = None
        mul_4 = torch.mul(getitem_50,sigmoid_4) ;  getitem_50 = sigmoid_4 = None
        view_46 = mul_4.view(4, 4, 512, 512, 32) ;  mul_4 = None
        permute_23 = view_46.permute(0, 2, 3, 1, 4) ;  view_46 = None
        clone_11 = torch.clone(permute_23,memory_format = torch.contiguous_format) ;  permute_23 = None
        _unsafe_view_9 = clone_11.view(4, 512, 512, 128) ;  clone_11 = None
        cat = torch.cat([_unsafe_view_6,_unsafe_view_9],dim = -1) ;  _unsafe_view_6 = _unsafe_view_9 = None
        slice_3 = arg9_1[0:] ;  arg9_1 = None
        unsqueeze_13 = torch.unsqueeze(slice_3,1) ;  slice_3 = None
        mul_5 = torch.mul(arg13_1,unsqueeze_13) ;  arg13_1 = unsqueeze_13 = None
        _to_copy_31 = mul_5.to(dtype = torch.bfloat16) ;  mul_5 = None
        t_12 = _to_copy_31.t() ;  _to_copy_31 = None
        view_47 = cat.view(1048576, 256) ;  cat = None
        mm_11 = torch.mm(view_47,t_12) ;  view_47 = t_12 = None
        view_48 = mm_11.view(4, 512, 512, 64) ;  mm_11 = None
        add_5 = torch.add(add_4,view_48) ;  add_4 = view_48 = None
        split_tensor_4 = torch.split(add_2,512,dim = -2) ;  add_2 = None
        getitem_54 = split_tensor_4[0];  split_tensor_4 = None
        _to_copy_32 = getitem_54.to(dtype = torch.float32) ;  getitem_54 = None
        native_layer_norm_default_7 = (torch.nn.functional.layer_norm(_to_copy_32,[64],arg0_1,arg1_1,1e-05),) ;  _to_copy_32 = arg0_1 = arg1_1 = None
        getitem_55 = native_layer_norm_default_7[0]
        _to_copy_33 = arg2_1.to(dtype = torch.bfloat16) ;  arg2_1 = None
        _to_copy_34 = getitem_55.to(dtype = torch.bfloat16) ;  getitem_55 = None
        t_13 = _to_copy_33.t() ;  _to_copy_33 = None
        view_49 = _to_copy_34.view(1048576, 64) ;  _to_copy_34 = None
        mm_12 = torch.mm(view_49,t_13) ;  view_49 = t_13 = None
        view_50 = mm_12.view(4, 512, 512, 256) ;  mm_12 = None
        split_tensor_5 = torch.split(view_50,128,dim = -1) ;  view_50 = None
        getitem_58 = split_tensor_5[0]
        getitem_59 = split_tensor_5[1];  split_tensor_5 = None
        silu = torch.nn.functional.silu(getitem_58) ;  getitem_58 = None
        mul_6 = torch.mul(silu,getitem_59) ;  silu = getitem_59 = None
        _to_copy_35 = arg3_1.to(dtype = torch.bfloat16) ;  arg3_1 = None
        t_14 = _to_copy_35.t() ;  _to_copy_35 = None
        view_52 = mul_6.view(1048576, 128) ;  mul_6 = None
        mm_13 = torch.mm(view_52,t_14) ;  view_52 = t_14 = None
        view_53 = mm_13.view(4, 512, 512, 64) ;  mm_13 = None
        add_6 = torch.add(add_5,view_53) ;  add_5 = view_53 = None
        _to_copy_36 = add_6.to(dtype = torch.float32) 
        native_layer_norm_default_8 = (torch.nn.functional.layer_norm(_to_copy_36,[64],arg18_1,arg19_1,1e-05),) ;  _to_copy_36 = arg18_1 = arg19_1 = None
        getitem_60 = native_layer_norm_default_8[0]
        split_with_sizes_default_2 = torch.split(arg21_1,[128,128]) ;  arg21_1 = None
        getitem_63 = split_with_sizes_default_2[0]
        getitem_64 = split_with_sizes_default_2[1];  split_with_sizes_default_2 = None
        split_with_sizes_default_3 = torch.split(arg22_1,[128,128,64]) ;  arg22_1 = None
        getitem_65 = split_with_sizes_default_3[0]
        getitem_66 = split_with_sizes_default_3[1]
        getitem_67 = split_with_sizes_default_3[2];  split_with_sizes_default_3 = None
        _to_copy_37 = getitem_63.to(dtype = torch.bfloat16) ;  getitem_63 = None
        _to_copy_38 = getitem_60.to(dtype = torch.bfloat16) 
        t_15 = _to_copy_37.t() ;  _to_copy_37 = None
        view_54 = _to_copy_38.view(1048576, 64) ;  _to_copy_38 = None
        mm_14 = torch.mm(view_54,t_15) ;  view_54 = t_15 = None
        view_55 = mm_14.view(4, 512, 512, 128) ;  mm_14 = None
        _to_copy_39 = getitem_65.to(dtype = torch.bfloat16) ;  getitem_65 = None
        _to_copy_40 = getitem_60.to(dtype = torch.bfloat16) 
        t_16 = _to_copy_39.t() ;  _to_copy_39 = None
        view_56 = _to_copy_40.view(1048576, 64) ;  _to_copy_40 = None
        mm_15 = torch.mm(view_56,t_16) ;  view_56 = t_16 = None
        view_57 = mm_15.view(4, 512, 512, 128) ;  mm_15 = None
        sigmoid_5 = torch.sigmoid(view_57) ;  view_57 = None
        mul_7 = torch.mul(view_55,sigmoid_5) ;  view_55 = sigmoid_5 = None
        unsqueeze_14 = torch.unsqueeze(bitwise_and,3) 
        bitwise_not_3 = torch.bitwise_not(unsqueeze_14) ;  unsqueeze_14 = None
        masked_fill_3 = mul_7.masked_fill(bitwise_not_3,0) ;  mul_7 = bitwise_not_3 = None
        split_tensor_6 = torch.split(masked_fill_3,64,dim = -1) 
        getitem_70 = split_tensor_6[0]
        unsqueeze_17 = torch.unsqueeze(getitem_70,4) ;  getitem_70 = None
        permute_27 = unsqueeze_17.permute(0, 1, 4, 3, 2) ;  unsqueeze_17 = None
        permute_28 = permute_27.permute(0, 3, 1, 4, 2) ;  permute_27 = None
        clone_12 = torch.clone(permute_28,memory_format = torch.contiguous_format) ;  permute_28 = None
        _unsafe_view_10 = clone_12.view(256, 512, 512) ;  clone_12 = None
        split_tensor_7 = torch.split(masked_fill_3,64,dim = -1) ;  masked_fill_3 = None
        getitem_73 = split_tensor_7[1];  split_tensor_7 = None
        unsqueeze_18 = torch.unsqueeze(getitem_73,4) ;  getitem_73 = None
        permute_30 = unsqueeze_18.permute(0, 4, 1, 3, 2) ;  unsqueeze_18 = None
        permute_31 = permute_30.permute(0, 3, 4, 2, 1) ;  permute_30 = None
        clone_13 = torch.clone(permute_31,memory_format = torch.contiguous_format) ;  permute_31 = None
        _unsafe_view_11 = clone_13.view(256, 512, 512) ;  clone_13 = None
        bmm_3 = torch.bmm(_unsafe_view_10,_unsafe_view_11) ;  _unsafe_view_10 = _unsafe_view_11 = None
        view_58 = bmm_3.view(4, 64, 512, 1, 512) ;  bmm_3 = None
        permute_32 = view_58.permute(0, 2, 4, 1, 3) ;  view_58 = None
        view_59 = permute_32.view(4, 512, 512, 64) ;  permute_32 = None
        _to_copy_41 = getitem_64.to(dtype = torch.bfloat16) ;  getitem_64 = None
        _to_copy_42 = getitem_60.to(dtype = torch.bfloat16) 
        t_17 = _to_copy_41.t() ;  _to_copy_41 = None
        view_60 = _to_copy_42.view(1048576, 64) ;  _to_copy_42 = None
        mm_16 = torch.mm(view_60,t_17) ;  view_60 = t_17 = None
        view_61 = mm_16.view(4, 512, 512, 128) ;  mm_16 = None
        _to_copy_43 = getitem_66.to(dtype = torch.bfloat16) ;  getitem_66 = None
        _to_copy_44 = getitem_60.to(dtype = torch.bfloat16) 
        t_18 = _to_copy_43.t() ;  _to_copy_43 = None
        view_62 = _to_copy_44.view(1048576, 64) ;  _to_copy_44 = None
        mm_17 = torch.mm(view_62,t_18) ;  view_62 = t_18 = None
        view_63 = mm_17.view(4, 512, 512, 128) ;  mm_17 = None
        sigmoid_6 = torch.sigmoid(view_63) ;  view_63 = None
        mul_8 = torch.mul(view_61,sigmoid_6) ;  view_61 = sigmoid_6 = None
        view_64 = mul_8.view(1048576, 128) ;  mul_8 = None
        view_65 = view_64.view(4, 512, 512, 128) ;  view_64 = None
        transpose_2 = torch.transpose(bitwise_and,1,2) 
        unsqueeze_19 = torch.unsqueeze(transpose_2,3) ;  transpose_2 = None
        clone_14 = torch.clone(unsqueeze_19,memory_format = torch.contiguous_format) ;  unsqueeze_19 = None
        bitwise_not_4 = torch.bitwise_not(clone_14) ;  clone_14 = None
        masked_fill_4 = view_65.masked_fill(bitwise_not_4,0) ;  view_65 = bitwise_not_4 = None
        view_66 = masked_fill_4.view(1048576, 128) ;  masked_fill_4 = None
        view_68 = view_66.view(4, 512, 512, 128) 
        split_tensor_8 = torch.split(view_68,64,dim = -1) ;  view_68 = None
        getitem_76 = split_tensor_8[0]
        unsqueeze_22 = torch.unsqueeze(getitem_76,4) ;  getitem_76 = None
        permute_36 = unsqueeze_22.permute(0, 2, 4, 3, 1) ;  unsqueeze_22 = None
        permute_37 = permute_36.permute(0, 3, 1, 4, 2) ;  permute_36 = None
        clone_15 = torch.clone(permute_37,memory_format = torch.contiguous_format) ;  permute_37 = None
        _unsafe_view_12 = clone_15.view(256, 512, 512) ;  clone_15 = None
        view_69 = view_66.view(4, 512, 512, 128) ;  view_66 = None
        split_tensor_9 = torch.split(view_69,64,dim = -1) ;  view_69 = None
        getitem_79 = split_tensor_9[1];  split_tensor_9 = None
        unsqueeze_23 = torch.unsqueeze(getitem_79,4) ;  getitem_79 = None
        permute_39 = unsqueeze_23.permute(0, 4, 2, 3, 1) ;  unsqueeze_23 = None
        permute_40 = permute_39.permute(0, 3, 4, 2, 1) ;  permute_39 = None
        clone_16 = torch.clone(permute_40,memory_format = torch.contiguous_format) ;  permute_40 = None
        _unsafe_view_13 = clone_16.view(256, 512, 512) ;  clone_16 = None
        bmm_4 = torch.bmm(_unsafe_view_12,_unsafe_view_13) ;  _unsafe_view_12 = _unsafe_view_13 = None
        view_70 = bmm_4.view(4, 64, 512, 1, 512) ;  bmm_4 = None
        permute_41 = view_70.permute(0, 2, 4, 1, 3) ;  view_70 = None
        view_71 = permute_41.view(4, 512, 512, 64) ;  permute_41 = None
        _to_copy_45 = view_59.to(dtype = torch.float32) ;  view_59 = None
        native_layer_norm_default_9 = (torch.nn.functional.layer_norm(_to_copy_45,[64],None,None,1e-05),) ;  _to_copy_45 = None
        getitem_80 = native_layer_norm_default_9[0]
        _to_copy_46 = view_71.to(dtype = torch.float32) ;  view_71 = None
        native_layer_norm_default_10 = (torch.nn.functional.layer_norm(_to_copy_46,[64],None,None,1e-05),) ;  _to_copy_46 = None
        getitem_83 = native_layer_norm_default_10[0]
        add_7 = torch.add(getitem_80,getitem_83) ;  getitem_80 = getitem_83 = None
        _to_copy_47 = arg20_1.to(dtype = torch.bfloat16) ;  arg20_1 = None
        _to_copy_48 = add_7.to(dtype = torch.bfloat16) ;  add_7 = None
        t_19 = _to_copy_47.t() ;  _to_copy_47 = None
        view_72 = _to_copy_48.view(1048576, 64) ;  _to_copy_48 = None
        mm_18 = torch.mm(view_72,t_19) ;  view_72 = t_19 = None
        view_73 = mm_18.view(4, 512, 512, 64) ;  mm_18 = None
        _to_copy_49 = getitem_67.to(dtype = torch.bfloat16) ;  getitem_67 = None
        _to_copy_50 = getitem_60.to(dtype = torch.bfloat16) ;  getitem_60 = None
        t_20 = _to_copy_49.t() ;  _to_copy_49 = None
        view_74 = _to_copy_50.view(1048576, 64) ;  _to_copy_50 = None
        mm_19 = torch.mm(view_74,t_20) ;  view_74 = t_20 = None
        view_75 = mm_19.view(4, 512, 512, 64) ;  mm_19 = None
        sigmoid_7 = torch.sigmoid(view_75) ;  view_75 = None
        mul_9 = torch.mul(view_73,sigmoid_7) ;  view_73 = sigmoid_7 = None
        add_8 = torch.add(add_6,mul_9) ;  mul_9 = None
        _to_copy_51 = add_6.to(dtype = torch.float32) 
        native_layer_norm_default_11 = (torch.nn.functional.layer_norm(_to_copy_51,[64],None,None,1e-05),) ;  _to_copy_51 = None
        getitem_86 = native_layer_norm_default_11[0]
        _to_copy_52 = arg24_1.to(dtype = torch.bfloat16) ;  arg24_1 = None
        _to_copy_53 = getitem_86.to(dtype = torch.bfloat16) 
        t_21 = _to_copy_52.t() ;  _to_copy_52 = None
        view_76 = _to_copy_53.view(1048576, 64) ;  _to_copy_53 = None
        mm_20 = torch.mm(view_76,t_21) ;  view_76 = t_21 = None
        view_77 = mm_20.view(4, 512, 512, 8) ;  mm_20 = None
        view_78 = view_77.view(4, 512, 512, 2, 4) ;  view_77 = None
        permute_42 = view_78.permute(0, 3, 4, 1, 2) ;  view_78 = None
        view_79 = permute_42.view(4, 2, 4, 1, 512, 512) ;  permute_42 = None
        view_80 = bitwise_and.view(4, 1, 1, 1, 512, 512) 
        bitwise_not_5 = torch.bitwise_not(view_80) ;  view_80 = None
        masked_fill_5 = view_79.masked_fill(bitwise_not_5,-10000) ;  view_79 = bitwise_not_5 = None
        view_81 = masked_fill_5.view(4, 2, 4, 512, 512) ;  masked_fill_5 = None
        permute_43 = view_81.permute(1, 0, 2, 3, 4) ;  view_81 = None
        clone_17 = torch.clone(permute_43,memory_format = torch.contiguous_format) ;  permute_43 = None
        _unsafe_view_14 = clone_17.view(2, 16, 1, 512, 512) ;  clone_17 = None
        _to_copy_54 = arg25_1.to(dtype = torch.bfloat16) ;  arg25_1 = None
        _to_copy_55 = getitem_86.to(dtype = torch.bfloat16) 
        t_22 = _to_copy_54.t() ;  _to_copy_54 = None
        view_82 = _to_copy_55.view(1048576, 64) ;  _to_copy_55 = None
        mm_21 = torch.mm(view_82,t_22) ;  view_82 = t_22 = None
        view_83 = mm_21.view(4, 512, 512, 512) ;  mm_21 = None
        select_3 = torch.select(_unsafe_view_14,0,0) 
        view_84 = view_83.view(4, 512, 512, 4, 4, 32) ;  view_83 = None
        permute_44 = view_84.permute(4, 0, 3, 1, 2, 5) ;  view_84 = None
        clone_18 = torch.clone(permute_44,memory_format = torch.contiguous_format) ;  permute_44 = None
        _unsafe_view_15 = clone_18.view(4, 16, 512, 512, 32) ;  clone_18 = None
        unbind_int_2 = torch.unbind(_unsafe_view_15) ;  _unsafe_view_15 = None
        getitem_89 = unbind_int_2[0]
        getitem_90 = unbind_int_2[1]
        getitem_91 = unbind_int_2[2]
        getitem_92 = unbind_int_2[3];  unbind_int_2 = None
        expand_7 = select_3.expand(16, 512, 512, 512) ;  select_3 = None
        _scaled_dot_product_efficient_attention_default_2 = (torch.nn.functional.scaled_dot_product_attention(getitem_89,getitem_90,getitem_91,expand_7,False),) ;  getitem_89 = getitem_90 = getitem_91 = expand_7 = None
        getitem_93 = _scaled_dot_product_efficient_attention_default_2[0]
        sigmoid_8 = torch.sigmoid(getitem_92) ;  getitem_92 = None
        mul_10 = torch.mul(getitem_93,sigmoid_8) ;  getitem_93 = sigmoid_8 = None
        view_85 = mul_10.view(4, 4, 512, 512, 32) ;  mul_10 = None
        permute_45 = view_85.permute(0, 2, 3, 1, 4) ;  view_85 = None
        clone_19 = torch.clone(permute_45,memory_format = torch.contiguous_format) ;  permute_45 = None
        _unsafe_view_16 = clone_19.view(4, 512, 512, 128) ;  clone_19 = None
        transpose_3 = torch.transpose(getitem_86,1,2) ;  getitem_86 = None
        _to_copy_56 = arg26_1.to(dtype = torch.bfloat16) ;  arg26_1 = None
        _to_copy_57 = transpose_3.to(dtype = torch.bfloat16) ;  transpose_3 = None
        t_23 = _to_copy_56.t() ;  _to_copy_56 = None
        expand_8 = _to_copy_57.expand(4, 512, 512, 64) ;  _to_copy_57 = None
        clone_20 = torch.clone(expand_8,memory_format = torch.contiguous_format) ;  expand_8 = None
        _unsafe_view_17 = clone_20.view(2048, 512, 64) ;  clone_20 = None
        expand_9 = t_23.expand(4, 512, 64, 512) ;  t_23 = None
        view_86 = expand_9.view(2048, 64, 512) ;  expand_9 = None
        bmm_5 = torch.bmm(_unsafe_view_17,view_86) ;  _unsafe_view_17 = view_86 = None
        view_87 = bmm_5.view(4, 512, 512, 512) ;  bmm_5 = None
        select_4 = torch.select(_unsafe_view_14,0,1) ;  _unsafe_view_14 = None
        view_88 = view_87.view(4, 512, 512, 4, 4, 32) ;  view_87 = None
        permute_46 = view_88.permute(4, 0, 3, 1, 2, 5) ;  view_88 = None
        clone_21 = torch.clone(permute_46,memory_format = torch.contiguous_format) ;  permute_46 = None
        _unsafe_view_18 = clone_21.view(4, 16, 512, 512, 32) ;  clone_21 = None
        unbind_int_3 = torch.unbind(_unsafe_view_18) ;  _unsafe_view_18 = None
        getitem_97 = unbind_int_3[0]
        getitem_98 = unbind_int_3[1]
        getitem_99 = unbind_int_3[2]
        getitem_100 = unbind_int_3[3];  unbind_int_3 = None
        expand_10 = select_4.expand(16, 512, 512, 512) ;  select_4 = None
        _scaled_dot_product_efficient_attention_default_3 = (torch.nn.functional.scaled_dot_product_attention(getitem_97,getitem_98,getitem_99,expand_10,False),) ;  getitem_97 = getitem_98 = getitem_99 = expand_10 = None
        getitem_101 = _scaled_dot_product_efficient_attention_default_3[0]
        sigmoid_9 = torch.sigmoid(getitem_100) ;  getitem_100 = None
        mul_11 = torch.mul(getitem_101,sigmoid_9) ;  getitem_101 = sigmoid_9 = None
        view_89 = mul_11.view(4, 4, 512, 512, 32) ;  mul_11 = None
        permute_47 = view_89.permute(0, 2, 3, 1, 4) ;  view_89 = None
        clone_22 = torch.clone(permute_47,memory_format = torch.contiguous_format) ;  permute_47 = None
        _unsafe_view_19 = clone_22.view(4, 512, 512, 128) ;  clone_22 = None
        cat_1 = torch.cat([_unsafe_view_16,_unsafe_view_19],dim = -1) ;  _unsafe_view_16 = _unsafe_view_19 = None
        slice_4 = arg23_1[0:] ;  arg23_1 = None
        unsqueeze_24 = torch.unsqueeze(slice_4,1) ;  slice_4 = None
        mul_12 = torch.mul(arg27_1,unsqueeze_24) ;  arg27_1 = unsqueeze_24 = None
        _to_copy_58 = mul_12.to(dtype = torch.bfloat16) ;  mul_12 = None
        t_24 = _to_copy_58.t() ;  _to_copy_58 = None
        view_90 = cat_1.view(1048576, 256) ;  cat_1 = None
        mm_22 = torch.mm(view_90,t_24) ;  view_90 = t_24 = None
        view_91 = mm_22.view(4, 512, 512, 64) ;  mm_22 = None
        add_9 = torch.add(add_8,view_91) ;  add_8 = view_91 = None
        split_tensor_10 = torch.split(add_6,512,dim = -2) ;  add_6 = None
        getitem_105 = split_tensor_10[0];  split_tensor_10 = None
        _to_copy_59 = getitem_105.to(dtype = torch.float32) ;  getitem_105 = None
        native_layer_norm_default_12 = (torch.nn.functional.layer_norm(_to_copy_59,[64],arg14_1,arg15_1,1e-05),) ;  _to_copy_59 = arg14_1 = arg15_1 = None
        getitem_106 = native_layer_norm_default_12[0]
        _to_copy_60 = arg16_1.to(dtype = torch.bfloat16) ;  arg16_1 = None
        _to_copy_61 = getitem_106.to(dtype = torch.bfloat16) ;  getitem_106 = None
        t_25 = _to_copy_60.t() ;  _to_copy_60 = None
        view_92 = _to_copy_61.view(1048576, 64) ;  _to_copy_61 = None
        mm_23 = torch.mm(view_92,t_25) ;  view_92 = t_25 = None
        view_93 = mm_23.view(4, 512, 512, 256) ;  mm_23 = None
        split_tensor_11 = torch.split(view_93,128,dim = -1) ;  view_93 = None
        getitem_109 = split_tensor_11[0]
        getitem_110 = split_tensor_11[1];  split_tensor_11 = None
        silu_1 = torch.nn.functional.silu(getitem_109) ;  getitem_109 = None
        mul_13 = torch.mul(silu_1,getitem_110) ;  silu_1 = getitem_110 = None
        _to_copy_62 = arg17_1.to(dtype = torch.bfloat16) ;  arg17_1 = None
        t_26 = _to_copy_62.t() ;  _to_copy_62 = None
        view_95 = mul_13.view(1048576, 128) ;  mul_13 = None
        mm_24 = torch.mm(view_95,t_26) ;  view_95 = t_26 = None
        view_96 = mm_24.view(4, 512, 512, 64) ;  mm_24 = None
        add_10 = torch.add(add_9,view_96) ;  add_9 = view_96 = None
        view_97 = add_10.view(1, 4, 512, 512, 64) ;  add_10 = None
        view_98 = bitwise_and.view(1, 4, 512, 512) ;  bitwise_and = None
        _to_copy_63 = view_97.to(dtype = torch.float32) ;  view_97 = None
        native_layer_norm_default_13 = (torch.nn.functional.layer_norm(_to_copy_63,[64],arg31_1,arg32_1,1e-05),) ;  _to_copy_63 = arg31_1 = arg32_1 = None
        getitem_111 = native_layer_norm_default_13[0]
        unsqueeze_25 = torch.unsqueeze(view_98,-1) ;  view_98 = None
        mul_14 = torch.mul(getitem_111,unsqueeze_25) ;  getitem_111 = unsqueeze_25 = None
        sum_2 = torch.sum(mul_14,[1],dtype = torch.float32) ;  mul_14 = None
        clamp_min = torch.clamp_min(sum_1,1) ;  sum_1 = None
        view_99 = clamp_min.view(1, 1, 1, 1) ;  clamp_min = None
        div = torch.div(sum_2,view_99) ;  sum_2 = view_99 = None
        relu = torch.relu(div) ;  div = None
        _to_copy_64 = arg33_1.to(dtype = torch.bfloat16) ;  arg33_1 = None
        _to_copy_65 = relu.to(dtype = torch.bfloat16) ;  relu = None
        t_27 = _to_copy_64.t() ;  _to_copy_64 = None
        view_100 = _to_copy_65.view(262144, 64) ;  _to_copy_65 = None
        mm_25 = torch.mm(view_100,t_27) ;  view_100 = t_27 = None
        view_101 = mm_25.view(1, 512, 512, 256) ;  mm_25 = None
        add_11 = torch.add(add,view_101) ;  add = view_101 = None
        _to_copy_66 = arg34_1.to(dtype = torch.bfloat16) ;  arg34_1 = None
        t_28 = _to_copy_66.t() ;  _to_copy_66 = None
        view_102 = add_1.view(512, 384) 
        mm_26 = torch.mm(view_102,t_28) ;  view_102 = t_28 = None
        view_103 = mm_26.view(1, 512, 64) ;  mm_26 = None
        view_104 = view_103.view(1, 1, 512, 64) ;  view_103 = None
        add_12 = torch.add(arg1402_1,view_104) ;  arg1402_1 = view_104 = None
        slice_5 = add_12[0:] 
        slice_6 = slice_5[:, 0:4096] ;  slice_5 = None
        slice_7 = slice_6[:, :, 0:] ;  slice_6 = None
        slice_8 = slice_7[:, :, :, 0:] ;  slice_7 = None
        slice_9 = arg1403_1[0:] 
        slice_10 = slice_9[:, 0:4096] ;  slice_9 = None
        slice_11 = slice_10[:, :, 0:] ;  slice_10 = None
        _to_copy_67 = slice_8.to(dtype = torch.float32) ;  slice_8 = None
        native_layer_norm_default_14 = (torch.nn.functional.layer_norm(_to_copy_67,[64],None,None,1e-05),) ;  _to_copy_67 = None
        getitem_114 = native_layer_norm_default_14[0]
        view_105 = slice_11.view(1, 4096, 512, 1) ;  slice_11 = None
        bitwise_not_6 = torch.bitwise_not(view_105) ;  view_105 = None
        masked_fill_6 = getitem_114.masked_fill(bitwise_not_6,0) ;  getitem_114 = bitwise_not_6 = None
        unbind_int_4 = torch.unbind(arg35_1) 
        getitem_117 = unbind_int_4[0]
        getitem_118 = unbind_int_4[1];  unbind_int_4 = None
        _to_copy_68 = getitem_117.to(dtype = torch.bfloat16) ;  getitem_117 = None
        _to_copy_69 = masked_fill_6.to(dtype = torch.bfloat16) 
        unsqueeze_26 = torch.unsqueeze(_to_copy_68,3) ;  _to_copy_68 = None
        unsqueeze_27 = torch.unsqueeze(unsqueeze_26,4) ;  unsqueeze_26 = None
        unsqueeze_28 = torch.unsqueeze(unsqueeze_27,5) ;  unsqueeze_27 = None
        permute_48 = unsqueeze_28.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_28 = None
        unsqueeze_29 = torch.unsqueeze(_to_copy_69,4) ;  _to_copy_69 = None
        unsqueeze_30 = torch.unsqueeze(unsqueeze_29,5) ;  unsqueeze_29 = None
        permute_49 = unsqueeze_30.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_30 = None
        permute_50 = permute_48.permute(0, 1, 5, 2, 3, 4) ;  permute_48 = None
        view_106 = permute_50.view(1, 64, 64) ;  permute_50 = None
        permute_51 = permute_49.permute(5, 2, 3, 4, 0, 1) ;  permute_49 = None
        view_107 = permute_51.view(1, 64, 2097152) ;  permute_51 = None
        bmm_6 = torch.bmm(view_106,view_107) ;  view_106 = view_107 = None
        view_108 = bmm_6.view(8, 8, 1, 1, 4096, 512) ;  bmm_6 = None
        permute_52 = view_108.permute(0, 1, 3, 4, 5, 2) ;  view_108 = None
        view_109 = permute_52.view(8, 8, 1, 4096, 512) ;  permute_52 = None
        _to_copy_70 = getitem_118.to(dtype = torch.bfloat16) ;  getitem_118 = None
        _to_copy_71 = masked_fill_6.to(dtype = torch.bfloat16) ;  masked_fill_6 = None
        unsqueeze_31 = torch.unsqueeze(_to_copy_70,3) ;  _to_copy_70 = None
        unsqueeze_32 = torch.unsqueeze(unsqueeze_31,4) ;  unsqueeze_31 = None
        unsqueeze_33 = torch.unsqueeze(unsqueeze_32,5) ;  unsqueeze_32 = None
        permute_53 = unsqueeze_33.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_33 = None
        unsqueeze_34 = torch.unsqueeze(_to_copy_71,4) ;  _to_copy_71 = None
        unsqueeze_35 = torch.unsqueeze(unsqueeze_34,5) ;  unsqueeze_34 = None
        permute_54 = unsqueeze_35.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_35 = None
        permute_55 = permute_53.permute(0, 1, 5, 2, 3, 4) ;  permute_53 = None
        view_110 = permute_55.view(1, 64, 64) ;  permute_55 = None
        permute_56 = permute_54.permute(5, 2, 3, 4, 0, 1) ;  permute_54 = None
        view_111 = permute_56.view(1, 64, 2097152) ;  permute_56 = None
        bmm_7 = torch.bmm(view_110,view_111) ;  view_110 = view_111 = None
        view_112 = bmm_7.view(8, 8, 1, 1, 4096, 512) ;  bmm_7 = None
        permute_57 = view_112.permute(0, 1, 3, 4, 5, 2) ;  view_112 = None
        view_113 = permute_57.view(8, 8, 1, 4096, 512) ;  permute_57 = None
        unsqueeze_36 = torch.unsqueeze(view_109,5) ;  view_109 = None
        unsqueeze_37 = torch.unsqueeze(unsqueeze_36,6) ;  unsqueeze_36 = None
        permute_58 = unsqueeze_37.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_37 = None
        unsqueeze_38 = torch.unsqueeze(view_113,5) ;  view_113 = None
        unsqueeze_39 = torch.unsqueeze(unsqueeze_38,6) ;  unsqueeze_38 = None
        permute_59 = unsqueeze_39.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_39 = None
        permute_60 = permute_58.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_58 = None
        clone_23 = torch.clone(permute_60,memory_format = torch.contiguous_format) ;  permute_60 = None
        _unsafe_view_20 = clone_23.view(8, 4096, 4096) ;  clone_23 = None
        permute_61 = permute_59.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_59 = None
        clone_24 = torch.clone(permute_61,memory_format = torch.contiguous_format) ;  permute_61 = None
        _unsafe_view_21 = clone_24.view(8, 4096, 4096) ;  clone_24 = None
        bmm_8 = torch.bmm(_unsafe_view_20,_unsafe_view_21) ;  _unsafe_view_20 = _unsafe_view_21 = None
        view_114 = bmm_8.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_8 = None
        permute_62 = view_114.permute(4, 1, 5, 0, 2, 6, 3) ;  view_114 = None
        view_115 = permute_62.view(1, 512, 512, 8, 8, 8) ;  permute_62 = None
        clone_25 = torch.clone(view_115,memory_format = torch.contiguous_format) ;  view_115 = None
        _unsafe_view_22 = clone_25.view(1, 512, 512, 512) ;  clone_25 = None
        add_13 = torch.add(_unsafe_view_22,0) ;  _unsafe_view_22 = None
        slice_12 = add_12[0:] 
        slice_13 = slice_12[:, 4096:8192] ;  slice_12 = None
        slice_14 = slice_13[:, :, 0:] ;  slice_13 = None
        slice_15 = slice_14[:, :, :, 0:] ;  slice_14 = None
        slice_16 = arg1403_1[0:] 
        slice_17 = slice_16[:, 4096:8192] ;  slice_16 = None
        slice_18 = slice_17[:, :, 0:] ;  slice_17 = None
        _to_copy_72 = slice_15.to(dtype = torch.float32) ;  slice_15 = None
        native_layer_norm_default_15 = (torch.nn.functional.layer_norm(_to_copy_72,[64],None,None,1e-05),) ;  _to_copy_72 = None
        getitem_119 = native_layer_norm_default_15[0]
        view_116 = slice_18.view(1, 4096, 512, 1) ;  slice_18 = None
        bitwise_not_7 = torch.bitwise_not(view_116) ;  view_116 = None
        masked_fill_7 = getitem_119.masked_fill(bitwise_not_7,0) ;  getitem_119 = bitwise_not_7 = None
        unbind_int_5 = torch.unbind(arg35_1) 
        getitem_122 = unbind_int_5[0]
        getitem_123 = unbind_int_5[1];  unbind_int_5 = None
        _to_copy_73 = getitem_122.to(dtype = torch.bfloat16) ;  getitem_122 = None
        _to_copy_74 = masked_fill_7.to(dtype = torch.bfloat16) 
        unsqueeze_40 = torch.unsqueeze(_to_copy_73,3) ;  _to_copy_73 = None
        unsqueeze_41 = torch.unsqueeze(unsqueeze_40,4) ;  unsqueeze_40 = None
        unsqueeze_42 = torch.unsqueeze(unsqueeze_41,5) ;  unsqueeze_41 = None
        permute_63 = unsqueeze_42.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_42 = None
        unsqueeze_43 = torch.unsqueeze(_to_copy_74,4) ;  _to_copy_74 = None
        unsqueeze_44 = torch.unsqueeze(unsqueeze_43,5) ;  unsqueeze_43 = None
        permute_64 = unsqueeze_44.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_44 = None
        permute_65 = permute_63.permute(0, 1, 5, 2, 3, 4) ;  permute_63 = None
        view_117 = permute_65.view(1, 64, 64) ;  permute_65 = None
        permute_66 = permute_64.permute(5, 2, 3, 4, 0, 1) ;  permute_64 = None
        view_118 = permute_66.view(1, 64, 2097152) ;  permute_66 = None
        bmm_9 = torch.bmm(view_117,view_118) ;  view_117 = view_118 = None
        view_119 = bmm_9.view(8, 8, 1, 1, 4096, 512) ;  bmm_9 = None
        permute_67 = view_119.permute(0, 1, 3, 4, 5, 2) ;  view_119 = None
        view_120 = permute_67.view(8, 8, 1, 4096, 512) ;  permute_67 = None
        _to_copy_75 = getitem_123.to(dtype = torch.bfloat16) ;  getitem_123 = None
        _to_copy_76 = masked_fill_7.to(dtype = torch.bfloat16) ;  masked_fill_7 = None
        unsqueeze_45 = torch.unsqueeze(_to_copy_75,3) ;  _to_copy_75 = None
        unsqueeze_46 = torch.unsqueeze(unsqueeze_45,4) ;  unsqueeze_45 = None
        unsqueeze_47 = torch.unsqueeze(unsqueeze_46,5) ;  unsqueeze_46 = None
        permute_68 = unsqueeze_47.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_47 = None
        unsqueeze_48 = torch.unsqueeze(_to_copy_76,4) ;  _to_copy_76 = None
        unsqueeze_49 = torch.unsqueeze(unsqueeze_48,5) ;  unsqueeze_48 = None
        permute_69 = unsqueeze_49.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_49 = None
        permute_70 = permute_68.permute(0, 1, 5, 2, 3, 4) ;  permute_68 = None
        view_121 = permute_70.view(1, 64, 64) ;  permute_70 = None
        permute_71 = permute_69.permute(5, 2, 3, 4, 0, 1) ;  permute_69 = None
        view_122 = permute_71.view(1, 64, 2097152) ;  permute_71 = None
        bmm_10 = torch.bmm(view_121,view_122) ;  view_121 = view_122 = None
        view_123 = bmm_10.view(8, 8, 1, 1, 4096, 512) ;  bmm_10 = None
        permute_72 = view_123.permute(0, 1, 3, 4, 5, 2) ;  view_123 = None
        view_124 = permute_72.view(8, 8, 1, 4096, 512) ;  permute_72 = None
        unsqueeze_50 = torch.unsqueeze(view_120,5) ;  view_120 = None
        unsqueeze_51 = torch.unsqueeze(unsqueeze_50,6) ;  unsqueeze_50 = None
        permute_73 = unsqueeze_51.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_51 = None
        unsqueeze_52 = torch.unsqueeze(view_124,5) ;  view_124 = None
        unsqueeze_53 = torch.unsqueeze(unsqueeze_52,6) ;  unsqueeze_52 = None
        permute_74 = unsqueeze_53.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_53 = None
        permute_75 = permute_73.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_73 = None
        clone_26 = torch.clone(permute_75,memory_format = torch.contiguous_format) ;  permute_75 = None
        _unsafe_view_23 = clone_26.view(8, 4096, 4096) ;  clone_26 = None
        permute_76 = permute_74.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_74 = None
        clone_27 = torch.clone(permute_76,memory_format = torch.contiguous_format) ;  permute_76 = None
        _unsafe_view_24 = clone_27.view(8, 4096, 4096) ;  clone_27 = None
        bmm_11 = torch.bmm(_unsafe_view_23,_unsafe_view_24) ;  _unsafe_view_23 = _unsafe_view_24 = None
        view_125 = bmm_11.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_11 = None
        permute_77 = view_125.permute(4, 1, 5, 0, 2, 6, 3) ;  view_125 = None
        view_126 = permute_77.view(1, 512, 512, 8, 8, 8) ;  permute_77 = None
        clone_28 = torch.clone(view_126,memory_format = torch.contiguous_format) ;  view_126 = None
        _unsafe_view_25 = clone_28.view(1, 512, 512, 512) ;  clone_28 = None
        add_14 = torch.add(add_13,_unsafe_view_25) ;  add_13 = _unsafe_view_25 = None
        slice_19 = add_12[0:] 
        slice_20 = slice_19[:, 8192:12288] ;  slice_19 = None
        slice_21 = slice_20[:, :, 0:] ;  slice_20 = None
        slice_22 = slice_21[:, :, :, 0:] ;  slice_21 = None
        slice_23 = arg1403_1[0:] 
        slice_24 = slice_23[:, 8192:12288] ;  slice_23 = None
        slice_25 = slice_24[:, :, 0:] ;  slice_24 = None
        _to_copy_77 = slice_22.to(dtype = torch.float32) ;  slice_22 = None
        native_layer_norm_default_16 = (torch.nn.functional.layer_norm(_to_copy_77,[64],None,None,1e-05),) ;  _to_copy_77 = None
        getitem_124 = native_layer_norm_default_16[0]
        view_127 = slice_25.view(1, 4096, 512, 1) ;  slice_25 = None
        bitwise_not_8 = torch.bitwise_not(view_127) ;  view_127 = None
        masked_fill_8 = getitem_124.masked_fill(bitwise_not_8,0) ;  getitem_124 = bitwise_not_8 = None
        unbind_int_6 = torch.unbind(arg35_1) 
        getitem_127 = unbind_int_6[0]
        getitem_128 = unbind_int_6[1];  unbind_int_6 = None
        _to_copy_78 = getitem_127.to(dtype = torch.bfloat16) ;  getitem_127 = None
        _to_copy_79 = masked_fill_8.to(dtype = torch.bfloat16) 
        unsqueeze_54 = torch.unsqueeze(_to_copy_78,3) ;  _to_copy_78 = None
        unsqueeze_55 = torch.unsqueeze(unsqueeze_54,4) ;  unsqueeze_54 = None
        unsqueeze_56 = torch.unsqueeze(unsqueeze_55,5) ;  unsqueeze_55 = None
        permute_78 = unsqueeze_56.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_56 = None
        unsqueeze_57 = torch.unsqueeze(_to_copy_79,4) ;  _to_copy_79 = None
        unsqueeze_58 = torch.unsqueeze(unsqueeze_57,5) ;  unsqueeze_57 = None
        permute_79 = unsqueeze_58.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_58 = None
        permute_80 = permute_78.permute(0, 1, 5, 2, 3, 4) ;  permute_78 = None
        view_128 = permute_80.view(1, 64, 64) ;  permute_80 = None
        permute_81 = permute_79.permute(5, 2, 3, 4, 0, 1) ;  permute_79 = None
        view_129 = permute_81.view(1, 64, 2097152) ;  permute_81 = None
        bmm_12 = torch.bmm(view_128,view_129) ;  view_128 = view_129 = None
        view_130 = bmm_12.view(8, 8, 1, 1, 4096, 512) ;  bmm_12 = None
        permute_82 = view_130.permute(0, 1, 3, 4, 5, 2) ;  view_130 = None
        view_131 = permute_82.view(8, 8, 1, 4096, 512) ;  permute_82 = None
        _to_copy_80 = getitem_128.to(dtype = torch.bfloat16) ;  getitem_128 = None
        _to_copy_81 = masked_fill_8.to(dtype = torch.bfloat16) ;  masked_fill_8 = None
        unsqueeze_59 = torch.unsqueeze(_to_copy_80,3) ;  _to_copy_80 = None
        unsqueeze_60 = torch.unsqueeze(unsqueeze_59,4) ;  unsqueeze_59 = None
        unsqueeze_61 = torch.unsqueeze(unsqueeze_60,5) ;  unsqueeze_60 = None
        permute_83 = unsqueeze_61.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_61 = None
        unsqueeze_62 = torch.unsqueeze(_to_copy_81,4) ;  _to_copy_81 = None
        unsqueeze_63 = torch.unsqueeze(unsqueeze_62,5) ;  unsqueeze_62 = None
        permute_84 = unsqueeze_63.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_63 = None
        permute_85 = permute_83.permute(0, 1, 5, 2, 3, 4) ;  permute_83 = None
        view_132 = permute_85.view(1, 64, 64) ;  permute_85 = None
        permute_86 = permute_84.permute(5, 2, 3, 4, 0, 1) ;  permute_84 = None
        view_133 = permute_86.view(1, 64, 2097152) ;  permute_86 = None
        bmm_13 = torch.bmm(view_132,view_133) ;  view_132 = view_133 = None
        view_134 = bmm_13.view(8, 8, 1, 1, 4096, 512) ;  bmm_13 = None
        permute_87 = view_134.permute(0, 1, 3, 4, 5, 2) ;  view_134 = None
        view_135 = permute_87.view(8, 8, 1, 4096, 512) ;  permute_87 = None
        unsqueeze_64 = torch.unsqueeze(view_131,5) ;  view_131 = None
        unsqueeze_65 = torch.unsqueeze(unsqueeze_64,6) ;  unsqueeze_64 = None
        permute_88 = unsqueeze_65.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_65 = None
        unsqueeze_66 = torch.unsqueeze(view_135,5) ;  view_135 = None
        unsqueeze_67 = torch.unsqueeze(unsqueeze_66,6) ;  unsqueeze_66 = None
        permute_89 = unsqueeze_67.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_67 = None
        permute_90 = permute_88.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_88 = None
        clone_29 = torch.clone(permute_90,memory_format = torch.contiguous_format) ;  permute_90 = None
        _unsafe_view_26 = clone_29.view(8, 4096, 4096) ;  clone_29 = None
        permute_91 = permute_89.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_89 = None
        clone_30 = torch.clone(permute_91,memory_format = torch.contiguous_format) ;  permute_91 = None
        _unsafe_view_27 = clone_30.view(8, 4096, 4096) ;  clone_30 = None
        bmm_14 = torch.bmm(_unsafe_view_26,_unsafe_view_27) ;  _unsafe_view_26 = _unsafe_view_27 = None
        view_136 = bmm_14.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_14 = None
        permute_92 = view_136.permute(4, 1, 5, 0, 2, 6, 3) ;  view_136 = None
        view_137 = permute_92.view(1, 512, 512, 8, 8, 8) ;  permute_92 = None
        clone_31 = torch.clone(view_137,memory_format = torch.contiguous_format) ;  view_137 = None
        _unsafe_view_28 = clone_31.view(1, 512, 512, 512) ;  clone_31 = None
        add_15 = torch.add(add_14,_unsafe_view_28) ;  add_14 = _unsafe_view_28 = None
        slice_26 = add_12[0:] 
        slice_27 = slice_26[:, 12288:16384] ;  slice_26 = None
        slice_28 = slice_27[:, :, 0:] ;  slice_27 = None
        slice_29 = slice_28[:, :, :, 0:] ;  slice_28 = None
        slice_30 = arg1403_1[0:] 
        slice_31 = slice_30[:, 12288:16384] ;  slice_30 = None
        slice_32 = slice_31[:, :, 0:] ;  slice_31 = None
        _to_copy_82 = slice_29.to(dtype = torch.float32) ;  slice_29 = None
        native_layer_norm_default_17 = (torch.nn.functional.layer_norm(_to_copy_82,[64],None,None,1e-05),) ;  _to_copy_82 = None
        getitem_129 = native_layer_norm_default_17[0]
        view_138 = slice_32.view(1, 4096, 512, 1) ;  slice_32 = None
        bitwise_not_9 = torch.bitwise_not(view_138) ;  view_138 = None
        masked_fill_9 = getitem_129.masked_fill(bitwise_not_9,0) ;  getitem_129 = bitwise_not_9 = None
        unbind_int_7 = torch.unbind(arg35_1) ;  arg35_1 = None
        getitem_132 = unbind_int_7[0]
        getitem_133 = unbind_int_7[1];  unbind_int_7 = None
        _to_copy_83 = getitem_132.to(dtype = torch.bfloat16) ;  getitem_132 = None
        _to_copy_84 = masked_fill_9.to(dtype = torch.bfloat16) 
        unsqueeze_68 = torch.unsqueeze(_to_copy_83,3) ;  _to_copy_83 = None
        unsqueeze_69 = torch.unsqueeze(unsqueeze_68,4) ;  unsqueeze_68 = None
        unsqueeze_70 = torch.unsqueeze(unsqueeze_69,5) ;  unsqueeze_69 = None
        permute_93 = unsqueeze_70.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_70 = None
        unsqueeze_71 = torch.unsqueeze(_to_copy_84,4) ;  _to_copy_84 = None
        unsqueeze_72 = torch.unsqueeze(unsqueeze_71,5) ;  unsqueeze_71 = None
        permute_94 = unsqueeze_72.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_72 = None
        permute_95 = permute_93.permute(0, 1, 5, 2, 3, 4) ;  permute_93 = None
        view_139 = permute_95.view(1, 64, 64) ;  permute_95 = None
        permute_96 = permute_94.permute(5, 2, 3, 4, 0, 1) ;  permute_94 = None
        view_140 = permute_96.view(1, 64, 2097152) ;  permute_96 = None
        bmm_15 = torch.bmm(view_139,view_140) ;  view_139 = view_140 = None
        view_141 = bmm_15.view(8, 8, 1, 1, 4096, 512) ;  bmm_15 = None
        permute_97 = view_141.permute(0, 1, 3, 4, 5, 2) ;  view_141 = None
        view_142 = permute_97.view(8, 8, 1, 4096, 512) ;  permute_97 = None
        _to_copy_85 = getitem_133.to(dtype = torch.bfloat16) ;  getitem_133 = None
        _to_copy_86 = masked_fill_9.to(dtype = torch.bfloat16) ;  masked_fill_9 = None
        unsqueeze_73 = torch.unsqueeze(_to_copy_85,3) ;  _to_copy_85 = None
        unsqueeze_74 = torch.unsqueeze(unsqueeze_73,4) ;  unsqueeze_73 = None
        unsqueeze_75 = torch.unsqueeze(unsqueeze_74,5) ;  unsqueeze_74 = None
        permute_98 = unsqueeze_75.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_75 = None
        unsqueeze_76 = torch.unsqueeze(_to_copy_86,4) ;  _to_copy_86 = None
        unsqueeze_77 = torch.unsqueeze(unsqueeze_76,5) ;  unsqueeze_76 = None
        permute_99 = unsqueeze_77.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_77 = None
        permute_100 = permute_98.permute(0, 1, 5, 2, 3, 4) ;  permute_98 = None
        view_143 = permute_100.view(1, 64, 64) ;  permute_100 = None
        permute_101 = permute_99.permute(5, 2, 3, 4, 0, 1) ;  permute_99 = None
        view_144 = permute_101.view(1, 64, 2097152) ;  permute_101 = None
        bmm_16 = torch.bmm(view_143,view_144) ;  view_143 = view_144 = None
        view_145 = bmm_16.view(8, 8, 1, 1, 4096, 512) ;  bmm_16 = None
        permute_102 = view_145.permute(0, 1, 3, 4, 5, 2) ;  view_145 = None
        view_146 = permute_102.view(8, 8, 1, 4096, 512) ;  permute_102 = None
        unsqueeze_78 = torch.unsqueeze(view_142,5) ;  view_142 = None
        unsqueeze_79 = torch.unsqueeze(unsqueeze_78,6) ;  unsqueeze_78 = None
        permute_103 = unsqueeze_79.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_79 = None
        unsqueeze_80 = torch.unsqueeze(view_146,5) ;  view_146 = None
        unsqueeze_81 = torch.unsqueeze(unsqueeze_80,6) ;  unsqueeze_80 = None
        permute_104 = unsqueeze_81.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_81 = None
        permute_105 = permute_103.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_103 = None
        clone_32 = torch.clone(permute_105,memory_format = torch.contiguous_format) ;  permute_105 = None
        _unsafe_view_29 = clone_32.view(8, 4096, 4096) ;  clone_32 = None
        permute_106 = permute_104.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_104 = None
        clone_33 = torch.clone(permute_106,memory_format = torch.contiguous_format) ;  permute_106 = None
        _unsafe_view_30 = clone_33.view(8, 4096, 4096) ;  clone_33 = None
        bmm_17 = torch.bmm(_unsafe_view_29,_unsafe_view_30) ;  _unsafe_view_29 = _unsafe_view_30 = None
        view_147 = bmm_17.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_17 = None
        permute_107 = view_147.permute(4, 1, 5, 0, 2, 6, 3) ;  view_147 = None
        view_148 = permute_107.view(1, 512, 512, 8, 8, 8) ;  permute_107 = None
        clone_34 = torch.clone(view_148,memory_format = torch.contiguous_format) ;  view_148 = None
        _unsafe_view_31 = clone_34.view(1, 512, 512, 512) ;  clone_34 = None
        add_16 = torch.add(add_15,_unsafe_view_31) ;  add_15 = _unsafe_view_31 = None
        _to_copy_87 = add_16.to(dtype = torch.float32) ;  add_16 = None
        native_layer_norm_default_18 = (torch.nn.functional.layer_norm(_to_copy_87,[512],arg36_1,arg37_1,0.1),) ;  _to_copy_87 = arg36_1 = arg37_1 = None
        getitem_134 = native_layer_norm_default_18[0]
        _to_copy_88 = arg39_1.to(dtype = torch.bfloat16) ;  arg39_1 = None
        _to_copy_89 = arg38_1.to(dtype = torch.bfloat16) ;  arg38_1 = None
        _to_copy_90 = getitem_134.to(dtype = torch.bfloat16) ;  getitem_134 = None
        view_149 = _to_copy_90.view(262144, 512) ;  _to_copy_90 = None
        t_29 = _to_copy_89.t() ;  _to_copy_89 = None
        addmm = torch.addmm(_to_copy_88,view_149,t_29) ;  _to_copy_88 = view_149 = t_29 = None
        view_150 = addmm.view(1, 512, 512, 256) ;  addmm = None
        add_17 = torch.add(add_11,view_150) ;  view_150 = None
        split_tensor_12 = torch.split(add_12,128,dim = -2) 
        getitem_137 = split_tensor_12[0]
        getitem_138 = split_tensor_12[1]
        getitem_139 = split_tensor_12[2]
        getitem_140 = split_tensor_12[3];  split_tensor_12 = None
        _to_copy_91 = getitem_137.to(dtype = torch.float32) ;  getitem_137 = None
        native_layer_norm_default_19 = (torch.nn.functional.layer_norm(_to_copy_91,[64],arg76_1,arg77_1,1e-05),) ;  _to_copy_91 = None
        getitem_141 = native_layer_norm_default_19[0]
        _to_copy_92 = arg78_1.to(dtype = torch.bfloat16) 
        _to_copy_93 = getitem_141.to(dtype = torch.bfloat16) ;  getitem_141 = None
        t_30 = _to_copy_92.t() ;  _to_copy_92 = None
        view_151 = _to_copy_93.view(2097152, 64) ;  _to_copy_93 = None
        mm_27 = torch.mm(view_151,t_30) ;  view_151 = t_30 = None
        view_152 = mm_27.view(1, 16384, 128, 512) ;  mm_27 = None
        split_tensor_13 = torch.split(view_152,256,dim = -1) ;  view_152 = None
        getitem_144 = split_tensor_13[0]
        getitem_145 = split_tensor_13[1];  split_tensor_13 = None
        silu_2 = torch.nn.functional.silu(getitem_144) ;  getitem_144 = None
        mul_15 = torch.mul(silu_2,getitem_145) ;  silu_2 = getitem_145 = None
        _to_copy_94 = arg79_1.to(dtype = torch.bfloat16) 
        t_31 = _to_copy_94.t() ;  _to_copy_94 = None
        view_154 = mul_15.view(2097152, 256) ;  mul_15 = None
        mm_28 = torch.mm(view_154,t_31) ;  view_154 = t_31 = None
        view_155 = mm_28.view(1, 16384, 128, 64) ;  mm_28 = None
        _to_copy_95 = getitem_138.to(dtype = torch.float32) ;  getitem_138 = None
        native_layer_norm_default_20 = (torch.nn.functional.layer_norm(_to_copy_95,[64],arg76_1,arg77_1,1e-05),) ;  _to_copy_95 = None
        getitem_146 = native_layer_norm_default_20[0]
        _to_copy_96 = arg78_1.to(dtype = torch.bfloat16) 
        _to_copy_97 = getitem_146.to(dtype = torch.bfloat16) ;  getitem_146 = None
        t_32 = _to_copy_96.t() ;  _to_copy_96 = None
        view_156 = _to_copy_97.view(2097152, 64) ;  _to_copy_97 = None
        mm_29 = torch.mm(view_156,t_32) ;  view_156 = t_32 = None
        view_157 = mm_29.view(1, 16384, 128, 512) ;  mm_29 = None
        split_tensor_14 = torch.split(view_157,256,dim = -1) ;  view_157 = None
        getitem_149 = split_tensor_14[0]
        getitem_150 = split_tensor_14[1];  split_tensor_14 = None
        silu_3 = torch.nn.functional.silu(getitem_149) ;  getitem_149 = None
        mul_16 = torch.mul(silu_3,getitem_150) ;  silu_3 = getitem_150 = None
        _to_copy_98 = arg79_1.to(dtype = torch.bfloat16) 
        t_33 = _to_copy_98.t() ;  _to_copy_98 = None
        view_159 = mul_16.view(2097152, 256) ;  mul_16 = None
        mm_30 = torch.mm(view_159,t_33) ;  view_159 = t_33 = None
        view_160 = mm_30.view(1, 16384, 128, 64) ;  mm_30 = None
        _to_copy_99 = getitem_139.to(dtype = torch.float32) ;  getitem_139 = None
        native_layer_norm_default_21 = (torch.nn.functional.layer_norm(_to_copy_99,[64],arg76_1,arg77_1,1e-05),) ;  _to_copy_99 = None
        getitem_151 = native_layer_norm_default_21[0]
        _to_copy_100 = arg78_1.to(dtype = torch.bfloat16) 
        _to_copy_101 = getitem_151.to(dtype = torch.bfloat16) ;  getitem_151 = None
        t_34 = _to_copy_100.t() ;  _to_copy_100 = None
        view_161 = _to_copy_101.view(2097152, 64) ;  _to_copy_101 = None
        mm_31 = torch.mm(view_161,t_34) ;  view_161 = t_34 = None
        view_162 = mm_31.view(1, 16384, 128, 512) ;  mm_31 = None
        split_tensor_15 = torch.split(view_162,256,dim = -1) ;  view_162 = None
        getitem_154 = split_tensor_15[0]
        getitem_155 = split_tensor_15[1];  split_tensor_15 = None
        silu_4 = torch.nn.functional.silu(getitem_154) ;  getitem_154 = None
        mul_17 = torch.mul(silu_4,getitem_155) ;  silu_4 = getitem_155 = None
        _to_copy_102 = arg79_1.to(dtype = torch.bfloat16) 
        t_35 = _to_copy_102.t() ;  _to_copy_102 = None
        view_164 = mul_17.view(2097152, 256) ;  mul_17 = None
        mm_32 = torch.mm(view_164,t_35) ;  view_164 = t_35 = None
        view_165 = mm_32.view(1, 16384, 128, 64) ;  mm_32 = None
        _to_copy_103 = getitem_140.to(dtype = torch.float32) ;  getitem_140 = None
        native_layer_norm_default_22 = (torch.nn.functional.layer_norm(_to_copy_103,[64],arg76_1,arg77_1,1e-05),) ;  _to_copy_103 = arg76_1 = arg77_1 = None
        getitem_156 = native_layer_norm_default_22[0]
        _to_copy_104 = arg78_1.to(dtype = torch.bfloat16) ;  arg78_1 = None
        _to_copy_105 = getitem_156.to(dtype = torch.bfloat16) ;  getitem_156 = None
        t_36 = _to_copy_104.t() ;  _to_copy_104 = None
        view_166 = _to_copy_105.view(2097152, 64) ;  _to_copy_105 = None
        mm_33 = torch.mm(view_166,t_36) ;  view_166 = t_36 = None
        view_167 = mm_33.view(1, 16384, 128, 512) ;  mm_33 = None
        split_tensor_16 = torch.split(view_167,256,dim = -1) ;  view_167 = None
        getitem_159 = split_tensor_16[0]
        getitem_160 = split_tensor_16[1];  split_tensor_16 = None
        silu_5 = torch.nn.functional.silu(getitem_159) ;  getitem_159 = None
        mul_18 = torch.mul(silu_5,getitem_160) ;  silu_5 = getitem_160 = None
        _to_copy_106 = arg79_1.to(dtype = torch.bfloat16) ;  arg79_1 = None
        t_37 = _to_copy_106.t() ;  _to_copy_106 = None
        view_169 = mul_18.view(2097152, 256) ;  mul_18 = None
        mm_34 = torch.mm(view_169,t_37) ;  view_169 = t_37 = None
        view_170 = mm_34.view(1, 16384, 128, 64) ;  mm_34 = None
        cat_2 = torch.cat([view_155,view_160,view_165,view_170],dim = -2) ;  view_155 = view_160 = view_165 = view_170 = None
        add_18 = torch.add(add_12,cat_2) ;  cat_2 = None
        slice_33 = add_12[0:] 
        slice_34 = slice_33[:, 0:4096] ;  slice_33 = None
        slice_35 = slice_34[:, :, 0:] ;  slice_34 = None
        slice_36 = slice_35[:, :, :, 0:] ;  slice_35 = None
        slice_37 = arg1403_1[0:] 
        slice_38 = slice_37[:, 0:4096] ;  slice_37 = None
        slice_39 = slice_38[:, :, 0:] ;  slice_38 = None
        _to_copy_107 = add_17.to(dtype = torch.float32) 
        native_layer_norm_default_23 = (torch.nn.functional.layer_norm(_to_copy_107,[256],arg58_1,arg59_1,1e-05),) ;  _to_copy_107 = None
        getitem_161 = native_layer_norm_default_23[0]
        _to_copy_108 = arg60_1.to(dtype = torch.bfloat16) 
        _to_copy_109 = getitem_161.to(dtype = torch.bfloat16) ;  getitem_161 = None
        t_38 = _to_copy_108.t() ;  _to_copy_108 = None
        view_171 = _to_copy_109.view(262144, 256) ;  _to_copy_109 = None
        mm_35 = torch.mm(view_171,t_38) ;  view_171 = t_38 = None
        view_172 = mm_35.view(1, 512, 512, 8) ;  mm_35 = None
        permute_108 = view_172.permute(0, 3, 1, 2) ;  view_172 = None
        view_173 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_10 = torch.bitwise_not(view_173) ;  view_173 = None
        masked_fill_10 = permute_108.masked_fill(bitwise_not_10,-10000) ;  permute_108 = bitwise_not_10 = None
        _to_copy_110 = masked_fill_10.to(dtype = torch.float32) ;  masked_fill_10 = None
        _softmax = torch.softmax(_to_copy_110, dim = -1) ;  _to_copy_110 = None
        _to_copy_111 = slice_36.to(dtype = torch.float32) ;  slice_36 = None
        native_layer_norm_default_24 = (torch.nn.functional.layer_norm(_to_copy_111,[64],arg55_1,arg56_1,1e-05),) ;  _to_copy_111 = None
        getitem_164 = native_layer_norm_default_24[0]
        _to_copy_112 = arg57_1.to(dtype = torch.bfloat16) 
        _to_copy_113 = getitem_164.to(dtype = torch.bfloat16) ;  getitem_164 = None
        t_39 = _to_copy_112.t() ;  _to_copy_112 = None
        view_174 = _to_copy_113.view(2097152, 64) ;  _to_copy_113 = None
        mm_36 = torch.mm(view_174,t_39) ;  view_174 = t_39 = None
        view_175 = mm_36.view(1, 4096, 512, 512) ;  mm_36 = None
        view_176 = view_175.view(1, 4096, 512, 2, 8, 32) ;  view_175 = None
        permute_109 = view_176.permute(3, 0, 1, 2, 4, 5) ;  view_176 = None
        unbind_int_8 = torch.unbind(permute_109) ;  permute_109 = None
        getitem_167 = unbind_int_8[0]
        getitem_168 = unbind_int_8[1];  unbind_int_8 = None
        sigmoid_10 = torch.sigmoid(getitem_168) ;  getitem_168 = None
        bitwise_not_11 = torch.bitwise_not(slice_39) ;  slice_39 = None
        view_177 = bitwise_not_11.view(1, 4096, 512, 1, 1) ;  bitwise_not_11 = None
        masked_fill_11 = getitem_167.masked_fill(view_177,0) ;  getitem_167 = view_177 = None
        _to_copy_114 = _softmax.to(dtype = torch.bfloat16) ;  _softmax = None
        unsqueeze_82 = torch.unsqueeze(_to_copy_114,4) ;  _to_copy_114 = None
        unsqueeze_83 = torch.unsqueeze(unsqueeze_82,5) ;  unsqueeze_82 = None
        permute_110 = unsqueeze_83.permute(0, 4, 2, 1, 5, 3) ;  unsqueeze_83 = None
        unsqueeze_84 = torch.unsqueeze(masked_fill_11,5) ;  masked_fill_11 = None
        permute_111 = unsqueeze_84.permute(0, 1, 5, 3, 4, 2) ;  unsqueeze_84 = None
        permute_112 = permute_110.permute(3, 2, 5, 0, 1, 4) ;  permute_110 = None
        view_178 = permute_112.view(8, 512, 512) ;  permute_112 = None
        permute_113 = permute_111.permute(3, 5, 0, 1, 4, 2) ;  permute_111 = None
        clone_35 = torch.clone(permute_113,memory_format = torch.contiguous_format) ;  permute_113 = None
        _unsafe_view_32 = clone_35.view(8, 512, 131072) ;  clone_35 = None
        bmm_18 = torch.bmm(view_178,_unsafe_view_32) ;  view_178 = _unsafe_view_32 = None
        view_179 = bmm_18.view(8, 512, 1, 1, 4096, 32) ;  bmm_18 = None
        permute_114 = view_179.permute(3, 4, 1, 0, 5, 2) ;  view_179 = None
        view_180 = permute_114.view(1, 4096, 512, 8, 32) ;  permute_114 = None
        mul_19 = torch.mul(sigmoid_10,view_180) ;  sigmoid_10 = view_180 = None
        view_181 = mul_19.view(1, 4096, 512, 256) ;  mul_19 = None
        _to_copy_115 = arg61_1.to(dtype = torch.bfloat16) 
        t_40 = _to_copy_115.t() ;  _to_copy_115 = None
        view_182 = view_181.view(2097152, 256) ;  view_181 = None
        mm_37 = torch.mm(view_182,t_40) ;  view_182 = t_40 = None
        view_183 = mm_37.view(1, 4096, 512, 64) ;  mm_37 = None
        slice_40 = add_12[0:] 
        slice_41 = slice_40[:, 4096:8192] ;  slice_40 = None
        slice_42 = slice_41[:, :, 0:] ;  slice_41 = None
        slice_43 = slice_42[:, :, :, 0:] ;  slice_42 = None
        slice_44 = arg1403_1[0:] 
        slice_45 = slice_44[:, 4096:8192] ;  slice_44 = None
        slice_46 = slice_45[:, :, 0:] ;  slice_45 = None
        _to_copy_116 = add_17.to(dtype = torch.float32) 
        native_layer_norm_default_25 = (torch.nn.functional.layer_norm(_to_copy_116,[256],arg58_1,arg59_1,1e-05),) ;  _to_copy_116 = None
        getitem_169 = native_layer_norm_default_25[0]
        _to_copy_117 = arg60_1.to(dtype = torch.bfloat16) 
        _to_copy_118 = getitem_169.to(dtype = torch.bfloat16) ;  getitem_169 = None
        t_41 = _to_copy_117.t() ;  _to_copy_117 = None
        view_184 = _to_copy_118.view(262144, 256) ;  _to_copy_118 = None
        mm_38 = torch.mm(view_184,t_41) ;  view_184 = t_41 = None
        view_185 = mm_38.view(1, 512, 512, 8) ;  mm_38 = None
        permute_115 = view_185.permute(0, 3, 1, 2) ;  view_185 = None
        view_186 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_12 = torch.bitwise_not(view_186) ;  view_186 = None
        masked_fill_12 = permute_115.masked_fill(bitwise_not_12,-10000) ;  permute_115 = bitwise_not_12 = None
        _to_copy_119 = masked_fill_12.to(dtype = torch.float32) ;  masked_fill_12 = None
        _softmax_1 = torch.softmax(_to_copy_119, dim = -1) ;  _to_copy_119 = None
        _to_copy_120 = slice_43.to(dtype = torch.float32) ;  slice_43 = None
        native_layer_norm_default_26 = (torch.nn.functional.layer_norm(_to_copy_120,[64],arg55_1,arg56_1,1e-05),) ;  _to_copy_120 = None
        getitem_172 = native_layer_norm_default_26[0]
        _to_copy_121 = arg57_1.to(dtype = torch.bfloat16) 
        _to_copy_122 = getitem_172.to(dtype = torch.bfloat16) ;  getitem_172 = None
        t_42 = _to_copy_121.t() ;  _to_copy_121 = None
        view_187 = _to_copy_122.view(2097152, 64) ;  _to_copy_122 = None
        mm_39 = torch.mm(view_187,t_42) ;  view_187 = t_42 = None
        view_188 = mm_39.view(1, 4096, 512, 512) ;  mm_39 = None
        view_189 = view_188.view(1, 4096, 512, 2, 8, 32) ;  view_188 = None
        permute_116 = view_189.permute(3, 0, 1, 2, 4, 5) ;  view_189 = None
        unbind_int_9 = torch.unbind(permute_116) ;  permute_116 = None
        getitem_175 = unbind_int_9[0]
        getitem_176 = unbind_int_9[1];  unbind_int_9 = None
        sigmoid_11 = torch.sigmoid(getitem_176) ;  getitem_176 = None
        bitwise_not_13 = torch.bitwise_not(slice_46) ;  slice_46 = None
        view_190 = bitwise_not_13.view(1, 4096, 512, 1, 1) ;  bitwise_not_13 = None
        masked_fill_13 = getitem_175.masked_fill(view_190,0) ;  getitem_175 = view_190 = None
        _to_copy_123 = _softmax_1.to(dtype = torch.bfloat16) ;  _softmax_1 = None
        unsqueeze_85 = torch.unsqueeze(_to_copy_123,4) ;  _to_copy_123 = None
        unsqueeze_86 = torch.unsqueeze(unsqueeze_85,5) ;  unsqueeze_85 = None
        permute_117 = unsqueeze_86.permute(0, 4, 2, 1, 5, 3) ;  unsqueeze_86 = None
        unsqueeze_87 = torch.unsqueeze(masked_fill_13,5) ;  masked_fill_13 = None
        permute_118 = unsqueeze_87.permute(0, 1, 5, 3, 4, 2) ;  unsqueeze_87 = None
        permute_119 = permute_117.permute(3, 2, 5, 0, 1, 4) ;  permute_117 = None
        view_191 = permute_119.view(8, 512, 512) ;  permute_119 = None
        permute_120 = permute_118.permute(3, 5, 0, 1, 4, 2) ;  permute_118 = None
        clone_36 = torch.clone(permute_120,memory_format = torch.contiguous_format) ;  permute_120 = None
        _unsafe_view_33 = clone_36.view(8, 512, 131072) ;  clone_36 = None
        bmm_19 = torch.bmm(view_191,_unsafe_view_33) ;  view_191 = _unsafe_view_33 = None
        view_192 = bmm_19.view(8, 512, 1, 1, 4096, 32) ;  bmm_19 = None
        permute_121 = view_192.permute(3, 4, 1, 0, 5, 2) ;  view_192 = None
        view_193 = permute_121.view(1, 4096, 512, 8, 32) ;  permute_121 = None
        mul_20 = torch.mul(sigmoid_11,view_193) ;  sigmoid_11 = view_193 = None
        view_194 = mul_20.view(1, 4096, 512, 256) ;  mul_20 = None
        _to_copy_124 = arg61_1.to(dtype = torch.bfloat16) 
        t_43 = _to_copy_124.t() ;  _to_copy_124 = None
        view_195 = view_194.view(2097152, 256) ;  view_194 = None
        mm_40 = torch.mm(view_195,t_43) ;  view_195 = t_43 = None
        view_196 = mm_40.view(1, 4096, 512, 64) ;  mm_40 = None
        slice_47 = add_12[0:] 
        slice_48 = slice_47[:, 8192:12288] ;  slice_47 = None
        slice_49 = slice_48[:, :, 0:] ;  slice_48 = None
        slice_50 = slice_49[:, :, :, 0:] ;  slice_49 = None
        slice_51 = arg1403_1[0:] 
        slice_52 = slice_51[:, 8192:12288] ;  slice_51 = None
        slice_53 = slice_52[:, :, 0:] ;  slice_52 = None
        _to_copy_125 = add_17.to(dtype = torch.float32) 
        native_layer_norm_default_27 = (torch.nn.functional.layer_norm(_to_copy_125,[256],arg58_1,arg59_1,1e-05),) ;  _to_copy_125 = None
        getitem_177 = native_layer_norm_default_27[0]
        _to_copy_126 = arg60_1.to(dtype = torch.bfloat16) 
        _to_copy_127 = getitem_177.to(dtype = torch.bfloat16) ;  getitem_177 = None
        t_44 = _to_copy_126.t() ;  _to_copy_126 = None
        view_197 = _to_copy_127.view(262144, 256) ;  _to_copy_127 = None
        mm_41 = torch.mm(view_197,t_44) ;  view_197 = t_44 = None
        view_198 = mm_41.view(1, 512, 512, 8) ;  mm_41 = None
        permute_122 = view_198.permute(0, 3, 1, 2) ;  view_198 = None
        view_199 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_14 = torch.bitwise_not(view_199) ;  view_199 = None
        masked_fill_14 = permute_122.masked_fill(bitwise_not_14,-10000) ;  permute_122 = bitwise_not_14 = None
        _to_copy_128 = masked_fill_14.to(dtype = torch.float32) ;  masked_fill_14 = None
        _softmax_2 = torch.softmax(_to_copy_128, dim = -1) ;  _to_copy_128 = None
        _to_copy_129 = slice_50.to(dtype = torch.float32) ;  slice_50 = None
        native_layer_norm_default_28 = (torch.nn.functional.layer_norm(_to_copy_129,[64],arg55_1,arg56_1,1e-05),) ;  _to_copy_129 = None
        getitem_180 = native_layer_norm_default_28[0]
        _to_copy_130 = arg57_1.to(dtype = torch.bfloat16) 
        _to_copy_131 = getitem_180.to(dtype = torch.bfloat16) ;  getitem_180 = None
        t_45 = _to_copy_130.t() ;  _to_copy_130 = None
        view_200 = _to_copy_131.view(2097152, 64) ;  _to_copy_131 = None
        mm_42 = torch.mm(view_200,t_45) ;  view_200 = t_45 = None
        view_201 = mm_42.view(1, 4096, 512, 512) ;  mm_42 = None
        view_202 = view_201.view(1, 4096, 512, 2, 8, 32) ;  view_201 = None
        permute_123 = view_202.permute(3, 0, 1, 2, 4, 5) ;  view_202 = None
        unbind_int_10 = torch.unbind(permute_123) ;  permute_123 = None
        getitem_183 = unbind_int_10[0]
        getitem_184 = unbind_int_10[1];  unbind_int_10 = None
        sigmoid_12 = torch.sigmoid(getitem_184) ;  getitem_184 = None
        bitwise_not_15 = torch.bitwise_not(slice_53) ;  slice_53 = None
        view_203 = bitwise_not_15.view(1, 4096, 512, 1, 1) ;  bitwise_not_15 = None
        masked_fill_15 = getitem_183.masked_fill(view_203,0) ;  getitem_183 = view_203 = None
        _to_copy_132 = _softmax_2.to(dtype = torch.bfloat16) ;  _softmax_2 = None
        unsqueeze_88 = torch.unsqueeze(_to_copy_132,4) ;  _to_copy_132 = None
        unsqueeze_89 = torch.unsqueeze(unsqueeze_88,5) ;  unsqueeze_88 = None
        permute_124 = unsqueeze_89.permute(0, 4, 2, 1, 5, 3) ;  unsqueeze_89 = None
        unsqueeze_90 = torch.unsqueeze(masked_fill_15,5) ;  masked_fill_15 = None
        permute_125 = unsqueeze_90.permute(0, 1, 5, 3, 4, 2) ;  unsqueeze_90 = None
        permute_126 = permute_124.permute(3, 2, 5, 0, 1, 4) ;  permute_124 = None
        view_204 = permute_126.view(8, 512, 512) ;  permute_126 = None
        permute_127 = permute_125.permute(3, 5, 0, 1, 4, 2) ;  permute_125 = None
        clone_37 = torch.clone(permute_127,memory_format = torch.contiguous_format) ;  permute_127 = None
        _unsafe_view_34 = clone_37.view(8, 512, 131072) ;  clone_37 = None
        bmm_20 = torch.bmm(view_204,_unsafe_view_34) ;  view_204 = _unsafe_view_34 = None
        view_205 = bmm_20.view(8, 512, 1, 1, 4096, 32) ;  bmm_20 = None
        permute_128 = view_205.permute(3, 4, 1, 0, 5, 2) ;  view_205 = None
        view_206 = permute_128.view(1, 4096, 512, 8, 32) ;  permute_128 = None
        mul_21 = torch.mul(sigmoid_12,view_206) ;  sigmoid_12 = view_206 = None
        view_207 = mul_21.view(1, 4096, 512, 256) ;  mul_21 = None
        _to_copy_133 = arg61_1.to(dtype = torch.bfloat16) 
        t_46 = _to_copy_133.t() ;  _to_copy_133 = None
        view_208 = view_207.view(2097152, 256) ;  view_207 = None
        mm_43 = torch.mm(view_208,t_46) ;  view_208 = t_46 = None
        view_209 = mm_43.view(1, 4096, 512, 64) ;  mm_43 = None
        slice_54 = add_12[0:] ;  add_12 = None
        slice_55 = slice_54[:, 12288:16384] ;  slice_54 = None
        slice_56 = slice_55[:, :, 0:] ;  slice_55 = None
        slice_57 = slice_56[:, :, :, 0:] ;  slice_56 = None
        slice_58 = arg1403_1[0:] 
        slice_59 = slice_58[:, 12288:16384] ;  slice_58 = None
        slice_60 = slice_59[:, :, 0:] ;  slice_59 = None
        _to_copy_134 = add_17.to(dtype = torch.float32) 
        native_layer_norm_default_29 = (torch.nn.functional.layer_norm(_to_copy_134,[256],arg58_1,arg59_1,1e-05),) ;  _to_copy_134 = arg58_1 = arg59_1 = None
        getitem_185 = native_layer_norm_default_29[0]
        _to_copy_135 = arg60_1.to(dtype = torch.bfloat16) ;  arg60_1 = None
        _to_copy_136 = getitem_185.to(dtype = torch.bfloat16) ;  getitem_185 = None
        t_47 = _to_copy_135.t() ;  _to_copy_135 = None
        view_210 = _to_copy_136.view(262144, 256) ;  _to_copy_136 = None
        mm_44 = torch.mm(view_210,t_47) ;  view_210 = t_47 = None
        view_211 = mm_44.view(1, 512, 512, 8) ;  mm_44 = None
        permute_129 = view_211.permute(0, 3, 1, 2) ;  view_211 = None
        view_212 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_16 = torch.bitwise_not(view_212) ;  view_212 = None
        masked_fill_16 = permute_129.masked_fill(bitwise_not_16,-10000) ;  permute_129 = bitwise_not_16 = None
        _to_copy_137 = masked_fill_16.to(dtype = torch.float32) ;  masked_fill_16 = None
        _softmax_3 = torch.softmax(_to_copy_137, dim = -1) ;  _to_copy_137 = None
        _to_copy_138 = slice_57.to(dtype = torch.float32) ;  slice_57 = None
        native_layer_norm_default_30 = (torch.nn.functional.layer_norm(_to_copy_138,[64],arg55_1,arg56_1,1e-05),) ;  _to_copy_138 = arg55_1 = arg56_1 = None
        getitem_188 = native_layer_norm_default_30[0]
        _to_copy_139 = arg57_1.to(dtype = torch.bfloat16) ;  arg57_1 = None
        _to_copy_140 = getitem_188.to(dtype = torch.bfloat16) ;  getitem_188 = None
        t_48 = _to_copy_139.t() ;  _to_copy_139 = None
        view_213 = _to_copy_140.view(2097152, 64) ;  _to_copy_140 = None
        mm_45 = torch.mm(view_213,t_48) ;  view_213 = t_48 = None
        view_214 = mm_45.view(1, 4096, 512, 512) ;  mm_45 = None
        view_215 = view_214.view(1, 4096, 512, 2, 8, 32) ;  view_214 = None
        permute_130 = view_215.permute(3, 0, 1, 2, 4, 5) ;  view_215 = None
        unbind_int_11 = torch.unbind(permute_130) ;  permute_130 = None
        getitem_191 = unbind_int_11[0]
        getitem_192 = unbind_int_11[1];  unbind_int_11 = None
        sigmoid_13 = torch.sigmoid(getitem_192) ;  getitem_192 = None
        bitwise_not_17 = torch.bitwise_not(slice_60) ;  slice_60 = None
        view_216 = bitwise_not_17.view(1, 4096, 512, 1, 1) ;  bitwise_not_17 = None
        masked_fill_17 = getitem_191.masked_fill(view_216,0) ;  getitem_191 = view_216 = None
        _to_copy_141 = _softmax_3.to(dtype = torch.bfloat16) ;  _softmax_3 = None
        unsqueeze_91 = torch.unsqueeze(_to_copy_141,4) ;  _to_copy_141 = None
        unsqueeze_92 = torch.unsqueeze(unsqueeze_91,5) ;  unsqueeze_91 = None
        permute_131 = unsqueeze_92.permute(0, 4, 2, 1, 5, 3) ;  unsqueeze_92 = None
        unsqueeze_93 = torch.unsqueeze(masked_fill_17,5) ;  masked_fill_17 = None
        permute_132 = unsqueeze_93.permute(0, 1, 5, 3, 4, 2) ;  unsqueeze_93 = None
        permute_133 = permute_131.permute(3, 2, 5, 0, 1, 4) ;  permute_131 = None
        view_217 = permute_133.view(8, 512, 512) ;  permute_133 = None
        permute_134 = permute_132.permute(3, 5, 0, 1, 4, 2) ;  permute_132 = None
        clone_38 = torch.clone(permute_134,memory_format = torch.contiguous_format) ;  permute_134 = None
        _unsafe_view_35 = clone_38.view(8, 512, 131072) ;  clone_38 = None
        bmm_21 = torch.bmm(view_217,_unsafe_view_35) ;  view_217 = _unsafe_view_35 = None
        view_218 = bmm_21.view(8, 512, 1, 1, 4096, 32) ;  bmm_21 = None
        permute_135 = view_218.permute(3, 4, 1, 0, 5, 2) ;  view_218 = None
        view_219 = permute_135.view(1, 4096, 512, 8, 32) ;  permute_135 = None
        mul_22 = torch.mul(sigmoid_13,view_219) ;  sigmoid_13 = view_219 = None
        view_220 = mul_22.view(1, 4096, 512, 256) ;  mul_22 = None
        _to_copy_142 = arg61_1.to(dtype = torch.bfloat16) ;  arg61_1 = None
        t_49 = _to_copy_142.t() ;  _to_copy_142 = None
        view_221 = view_220.view(2097152, 256) ;  view_220 = None
        mm_46 = torch.mm(view_221,t_49) ;  view_221 = t_49 = None
        view_222 = mm_46.view(1, 4096, 512, 64) ;  mm_46 = None
        cat_3 = torch.cat([view_183,view_196,view_209,view_222],dim = 1) ;  view_183 = view_196 = view_209 = view_222 = None
        add_19 = torch.add(add_18,cat_3) ;  add_18 = cat_3 = None
        _to_copy_143 = add_17.to(dtype = torch.float32) 
        native_layer_norm_default_31 = (torch.nn.functional.layer_norm(_to_copy_143,[256],arg104_1,arg105_1,1e-05),) ;  _to_copy_143 = arg104_1 = arg105_1 = None
        getitem_193 = native_layer_norm_default_31[0]
        split_with_sizes_default_4 = torch.split(arg107_1,[512,512]) ;  arg107_1 = None
        getitem_196 = split_with_sizes_default_4[0]
        getitem_197 = split_with_sizes_default_4[1];  split_with_sizes_default_4 = None
        split_with_sizes_default_5 = torch.split(arg108_1,[512,512,256]) ;  arg108_1 = None
        getitem_198 = split_with_sizes_default_5[0]
        getitem_199 = split_with_sizes_default_5[1]
        getitem_200 = split_with_sizes_default_5[2];  split_with_sizes_default_5 = None
        _to_copy_144 = getitem_196.to(dtype = torch.bfloat16) ;  getitem_196 = None
        _to_copy_145 = getitem_193.to(dtype = torch.bfloat16) 
        t_50 = _to_copy_144.t() ;  _to_copy_144 = None
        view_223 = _to_copy_145.view(262144, 256) ;  _to_copy_145 = None
        mm_47 = torch.mm(view_223,t_50) ;  view_223 = t_50 = None
        view_224 = mm_47.view(1, 512, 512, 512) ;  mm_47 = None
        _to_copy_146 = getitem_198.to(dtype = torch.bfloat16) ;  getitem_198 = None
        _to_copy_147 = getitem_193.to(dtype = torch.bfloat16) 
        t_51 = _to_copy_146.t() ;  _to_copy_146 = None
        view_225 = _to_copy_147.view(262144, 256) ;  _to_copy_147 = None
        mm_48 = torch.mm(view_225,t_51) ;  view_225 = t_51 = None
        view_226 = mm_48.view(1, 512, 512, 512) ;  mm_48 = None
        sigmoid_14 = torch.sigmoid(view_226) ;  view_226 = None
        mul_23 = torch.mul(view_224,sigmoid_14) ;  view_224 = sigmoid_14 = None
        unsqueeze_94 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_18 = torch.bitwise_not(unsqueeze_94) ;  unsqueeze_94 = None
        masked_fill_18 = mul_23.masked_fill(bitwise_not_18,0) ;  mul_23 = bitwise_not_18 = None
        split_tensor_17 = torch.split(masked_fill_18,256,dim = -1) 
        getitem_203 = split_tensor_17[0]
        unsqueeze_97 = torch.unsqueeze(getitem_203,4) ;  getitem_203 = None
        permute_140 = unsqueeze_97.permute(0, 1, 4, 3, 2) ;  unsqueeze_97 = None
        permute_141 = permute_140.permute(3, 1, 4, 0, 2) ;  permute_140 = None
        view_229 = permute_141.view(256, 512, 512) ;  permute_141 = None
        split_tensor_18 = torch.split(masked_fill_18,256,dim = -1) ;  masked_fill_18 = None
        getitem_206 = split_tensor_18[1];  split_tensor_18 = None
        unsqueeze_98 = torch.unsqueeze(getitem_206,4) ;  getitem_206 = None
        permute_142 = unsqueeze_98.permute(0, 4, 1, 3, 2) ;  unsqueeze_98 = None
        permute_143 = permute_142.permute(3, 4, 0, 2, 1) ;  permute_142 = None
        view_230 = permute_143.view(256, 512, 512) ;  permute_143 = None
        bmm_22 = torch.bmm(view_229,view_230) ;  view_229 = view_230 = None
        view_231 = bmm_22.view(256, 512, 1, 1, 512) ;  bmm_22 = None
        permute_144 = view_231.permute(3, 1, 4, 0, 2) ;  view_231 = None
        view_232 = permute_144.view(1, 512, 512, 256) ;  permute_144 = None
        _to_copy_148 = getitem_197.to(dtype = torch.bfloat16) ;  getitem_197 = None
        _to_copy_149 = getitem_193.to(dtype = torch.bfloat16) 
        t_52 = _to_copy_148.t() ;  _to_copy_148 = None
        view_233 = _to_copy_149.view(262144, 256) ;  _to_copy_149 = None
        mm_49 = torch.mm(view_233,t_52) ;  view_233 = t_52 = None
        view_234 = mm_49.view(1, 512, 512, 512) ;  mm_49 = None
        _to_copy_150 = getitem_199.to(dtype = torch.bfloat16) ;  getitem_199 = None
        _to_copy_151 = getitem_193.to(dtype = torch.bfloat16) 
        t_53 = _to_copy_150.t() ;  _to_copy_150 = None
        view_235 = _to_copy_151.view(262144, 256) ;  _to_copy_151 = None
        mm_50 = torch.mm(view_235,t_53) ;  view_235 = t_53 = None
        view_236 = mm_50.view(1, 512, 512, 512) ;  mm_50 = None
        sigmoid_15 = torch.sigmoid(view_236) ;  view_236 = None
        mul_24 = torch.mul(view_234,sigmoid_15) ;  view_234 = sigmoid_15 = None
        view_237 = mul_24.view(262144, 512) ;  mul_24 = None
        view_238 = view_237.view(1, 512, 512, 512) ;  view_237 = None
        transpose_4 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_99 = torch.unsqueeze(transpose_4,3) ;  transpose_4 = None
        clone_39 = torch.clone(unsqueeze_99,memory_format = torch.contiguous_format) ;  unsqueeze_99 = None
        bitwise_not_19 = torch.bitwise_not(clone_39) ;  clone_39 = None
        masked_fill_19 = view_238.masked_fill(bitwise_not_19,0) ;  view_238 = bitwise_not_19 = None
        view_239 = masked_fill_19.view(262144, 512) ;  masked_fill_19 = None
        view_243 = view_239.view(1, 512, 512, 512) 
        split_tensor_19 = torch.split(view_243,256,dim = -1) ;  view_243 = None
        getitem_209 = split_tensor_19[0]
        unsqueeze_102 = torch.unsqueeze(getitem_209,4) ;  getitem_209 = None
        permute_149 = unsqueeze_102.permute(0, 2, 4, 3, 1) ;  unsqueeze_102 = None
        permute_150 = permute_149.permute(3, 1, 4, 0, 2) ;  permute_149 = None
        view_244 = permute_150.view(256, 512, 512) ;  permute_150 = None
        view_245 = view_239.view(1, 512, 512, 512) ;  view_239 = None
        split_tensor_20 = torch.split(view_245,256,dim = -1) ;  view_245 = None
        getitem_212 = split_tensor_20[1];  split_tensor_20 = None
        unsqueeze_103 = torch.unsqueeze(getitem_212,4) ;  getitem_212 = None
        permute_151 = unsqueeze_103.permute(0, 4, 2, 3, 1) ;  unsqueeze_103 = None
        permute_152 = permute_151.permute(3, 4, 0, 2, 1) ;  permute_151 = None
        view_246 = permute_152.view(256, 512, 512) ;  permute_152 = None
        bmm_23 = torch.bmm(view_244,view_246) ;  view_244 = view_246 = None
        view_247 = bmm_23.view(256, 512, 1, 1, 512) ;  bmm_23 = None
        permute_153 = view_247.permute(3, 1, 4, 0, 2) ;  view_247 = None
        view_248 = permute_153.view(1, 512, 512, 256) ;  permute_153 = None
        _to_copy_152 = view_232.to(dtype = torch.float32) ;  view_232 = None
        native_layer_norm_default_32 = (torch.nn.functional.layer_norm(_to_copy_152,[256],None,None,1e-05),) ;  _to_copy_152 = None
        getitem_213 = native_layer_norm_default_32[0]
        _to_copy_153 = view_248.to(dtype = torch.float32) ;  view_248 = None
        native_layer_norm_default_33 = (torch.nn.functional.layer_norm(_to_copy_153,[256],None,None,1e-05),) ;  _to_copy_153 = None
        getitem_216 = native_layer_norm_default_33[0]
        add_20 = torch.add(getitem_213,getitem_216) ;  getitem_213 = getitem_216 = None
        _to_copy_154 = arg106_1.to(dtype = torch.bfloat16) ;  arg106_1 = None
        _to_copy_155 = add_20.to(dtype = torch.bfloat16) ;  add_20 = None
        t_54 = _to_copy_154.t() ;  _to_copy_154 = None
        view_249 = _to_copy_155.view(262144, 256) ;  _to_copy_155 = None
        mm_51 = torch.mm(view_249,t_54) ;  view_249 = t_54 = None
        view_250 = mm_51.view(1, 512, 512, 256) ;  mm_51 = None
        _to_copy_156 = getitem_200.to(dtype = torch.bfloat16) ;  getitem_200 = None
        _to_copy_157 = getitem_193.to(dtype = torch.bfloat16) ;  getitem_193 = None
        t_55 = _to_copy_156.t() ;  _to_copy_156 = None
        view_251 = _to_copy_157.view(262144, 256) ;  _to_copy_157 = None
        mm_52 = torch.mm(view_251,t_55) ;  view_251 = t_55 = None
        view_252 = mm_52.view(1, 512, 512, 256) ;  mm_52 = None
        sigmoid_16 = torch.sigmoid(view_252) ;  view_252 = None
        mul_25 = torch.mul(view_250,sigmoid_16) ;  view_250 = sigmoid_16 = None
        add_21 = torch.add(add_17,mul_25) ;  mul_25 = None
        split_tensor_21 = torch.split(add_17,512,dim = -2) ;  add_17 = None
        getitem_219 = split_tensor_21[0];  split_tensor_21 = None
        _to_copy_158 = getitem_219.to(dtype = torch.float32) ;  getitem_219 = None
        native_layer_norm_default_34 = (torch.nn.functional.layer_norm(_to_copy_158,[256],arg88_1,arg89_1,1e-05),) ;  _to_copy_158 = arg88_1 = arg89_1 = None
        getitem_220 = native_layer_norm_default_34[0]
        _to_copy_159 = arg90_1.to(dtype = torch.bfloat16) ;  arg90_1 = None
        _to_copy_160 = getitem_220.to(dtype = torch.bfloat16) ;  getitem_220 = None
        t_56 = _to_copy_159.t() ;  _to_copy_159 = None
        view_253 = _to_copy_160.view(262144, 256) ;  _to_copy_160 = None
        mm_53 = torch.mm(view_253,t_56) ;  view_253 = t_56 = None
        view_254 = mm_53.view(1, 512, 512, 2048) ;  mm_53 = None
        split_tensor_22 = torch.split(view_254,1024,dim = -1) ;  view_254 = None
        getitem_223 = split_tensor_22[0]
        getitem_224 = split_tensor_22[1];  split_tensor_22 = None
        silu_6 = torch.nn.functional.silu(getitem_223) ;  getitem_223 = None
        mul_26 = torch.mul(silu_6,getitem_224) ;  silu_6 = getitem_224 = None
        _to_copy_161 = arg91_1.to(dtype = torch.bfloat16) ;  arg91_1 = None
        t_57 = _to_copy_161.t() ;  _to_copy_161 = None
        view_256 = mul_26.view(262144, 1024) ;  mul_26 = None
        mm_54 = torch.mm(view_256,t_57) ;  view_256 = t_57 = None
        view_257 = mm_54.view(1, 512, 512, 256) ;  mm_54 = None
        add_22 = torch.add(add_21,view_257) ;  add_21 = view_257 = None
        _to_copy_162 = add_22.to(dtype = torch.float32) 
        native_layer_norm_default_35 = (torch.nn.functional.layer_norm(_to_copy_162,[256],None,None,1e-05),) ;  _to_copy_162 = None
        getitem_225 = native_layer_norm_default_35[0]
        _to_copy_163 = arg125_1.to(dtype = torch.bfloat16) ;  arg125_1 = None
        _to_copy_164 = getitem_225.to(dtype = torch.bfloat16) 
        t_58 = _to_copy_163.t() ;  _to_copy_163 = None
        view_258 = _to_copy_164.view(262144, 256) ;  _to_copy_164 = None
        mm_55 = torch.mm(view_258,t_58) ;  view_258 = t_58 = None
        view_259 = mm_55.view(1, 512, 512, 8) ;  mm_55 = None
        view_260 = view_259.view(1, 512, 512, 2, 4) ;  view_259 = None
        permute_154 = view_260.permute(0, 3, 4, 1, 2) ;  view_260 = None
        view_261 = permute_154.view(1, 2, 4, 1, 512, 512) ;  permute_154 = None
        view_262 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_20 = torch.bitwise_not(view_262) ;  view_262 = None
        masked_fill_20 = view_261.masked_fill(bitwise_not_20,-10000) ;  view_261 = bitwise_not_20 = None
        view_263 = masked_fill_20.view(1, 2, 4, 512, 512) ;  masked_fill_20 = None
        permute_155 = view_263.permute(1, 0, 2, 3, 4) ;  view_263 = None
        view_264 = permute_155.view(2, 4, 1, 512, 512) ;  permute_155 = None
        _to_copy_165 = arg126_1.to(dtype = torch.bfloat16) ;  arg126_1 = None
        _to_copy_166 = getitem_225.to(dtype = torch.bfloat16) 
        t_59 = _to_copy_165.t() ;  _to_copy_165 = None
        view_265 = _to_copy_166.view(262144, 256) ;  _to_copy_166 = None
        mm_56 = torch.mm(view_265,t_59) ;  view_265 = t_59 = None
        view_266 = mm_56.view(1, 512, 512, 1024) ;  mm_56 = None
        select_5 = torch.select(view_264,0,0) 
        view_267 = view_266.view(1, 512, 512, 4, 4, 64) ;  view_266 = None
        permute_156 = view_267.permute(4, 0, 3, 1, 2, 5) ;  view_267 = None
        view_268 = permute_156.view(4, 4, 512, 512, 64) ;  permute_156 = None
        unbind_int_12 = torch.unbind(view_268) ;  view_268 = None
        getitem_228 = unbind_int_12[0]
        getitem_229 = unbind_int_12[1]
        getitem_230 = unbind_int_12[2]
        getitem_231 = unbind_int_12[3];  unbind_int_12 = None
        expand_11 = select_5.expand(4, 512, 512, 512) ;  select_5 = None
        _scaled_dot_product_efficient_attention_default_4 = (torch.nn.functional.scaled_dot_product_attention(getitem_228,getitem_229,getitem_230,expand_11,False),) ;  getitem_228 = getitem_229 = getitem_230 = expand_11 = None
        getitem_232 = _scaled_dot_product_efficient_attention_default_4[0]
        sigmoid_17 = torch.sigmoid(getitem_231) ;  getitem_231 = None
        mul_27 = torch.mul(getitem_232,sigmoid_17) ;  getitem_232 = sigmoid_17 = None
        view_269 = mul_27.view(1, 4, 512, 512, 64) ;  mul_27 = None
        permute_157 = view_269.permute(0, 2, 3, 1, 4) ;  view_269 = None
        clone_40 = torch.clone(permute_157,memory_format = torch.contiguous_format) ;  permute_157 = None
        _unsafe_view_36 = clone_40.view(1, 512, 512, 256) ;  clone_40 = None
        transpose_5 = torch.transpose(getitem_225,1,2) ;  getitem_225 = None
        _to_copy_167 = arg127_1.to(dtype = torch.bfloat16) ;  arg127_1 = None
        _to_copy_168 = transpose_5.to(dtype = torch.bfloat16) ;  transpose_5 = None
        t_60 = _to_copy_167.t() ;  _to_copy_167 = None
        expand_12 = _to_copy_168.expand(1, 512, 512, 256) ;  _to_copy_168 = None
        view_270 = expand_12.view(512, 512, 256) ;  expand_12 = None
        expand_13 = t_60.expand(1, 512, 256, 1024) ;  t_60 = None
        view_271 = expand_13.view(512, 256, 1024) ;  expand_13 = None
        bmm_24 = torch.bmm(view_270,view_271) ;  view_270 = view_271 = None
        view_272 = bmm_24.view(1, 512, 512, 1024) ;  bmm_24 = None
        select_6 = torch.select(view_264,0,1) ;  view_264 = None
        view_273 = view_272.view(1, 512, 512, 4, 4, 64) ;  view_272 = None
        permute_158 = view_273.permute(4, 0, 3, 1, 2, 5) ;  view_273 = None
        view_274 = permute_158.view(4, 4, 512, 512, 64) ;  permute_158 = None
        unbind_int_13 = torch.unbind(view_274) ;  view_274 = None
        getitem_236 = unbind_int_13[0]
        getitem_237 = unbind_int_13[1]
        getitem_238 = unbind_int_13[2]
        getitem_239 = unbind_int_13[3];  unbind_int_13 = None
        expand_14 = select_6.expand(4, 512, 512, 512) ;  select_6 = None
        _scaled_dot_product_efficient_attention_default_5 = (torch.nn.functional.scaled_dot_product_attention(getitem_236,getitem_237,getitem_238,expand_14,False),) ;  getitem_236 = getitem_237 = getitem_238 = expand_14 = None
        getitem_240 = _scaled_dot_product_efficient_attention_default_5[0]
        sigmoid_18 = torch.sigmoid(getitem_239) ;  getitem_239 = None
        mul_28 = torch.mul(getitem_240,sigmoid_18) ;  getitem_240 = sigmoid_18 = None
        view_275 = mul_28.view(1, 4, 512, 512, 64) ;  mul_28 = None
        permute_159 = view_275.permute(0, 2, 3, 1, 4) ;  view_275 = None
        clone_41 = torch.clone(permute_159,memory_format = torch.contiguous_format) ;  permute_159 = None
        _unsafe_view_37 = clone_41.view(1, 512, 512, 256) ;  clone_41 = None
        cat_4 = torch.cat([_unsafe_view_36,_unsafe_view_37],dim = -1) ;  _unsafe_view_36 = _unsafe_view_37 = None
        slice_61 = arg124_1[0:] ;  arg124_1 = None
        unsqueeze_104 = torch.unsqueeze(slice_61,1) ;  slice_61 = None
        mul_29 = torch.mul(arg128_1,unsqueeze_104) ;  arg128_1 = unsqueeze_104 = None
        _to_copy_169 = mul_29.to(dtype = torch.bfloat16) ;  mul_29 = None
        t_61 = _to_copy_169.t() ;  _to_copy_169 = None
        view_276 = cat_4.view(262144, 512) ;  cat_4 = None
        mm_57 = torch.mm(view_276,t_61) ;  view_276 = t_61 = None
        view_277 = mm_57.view(1, 512, 512, 256) ;  mm_57 = None
        add_23 = torch.add(add_22,view_277) ;  add_22 = view_277 = None
        slice_62 = add_19[0:] 
        slice_63 = slice_62[:, 0:4096] ;  slice_62 = None
        slice_64 = slice_63[:, :, 0:] ;  slice_63 = None
        slice_65 = slice_64[:, :, :, 0:] ;  slice_64 = None
        slice_66 = arg1403_1[0:] 
        slice_67 = slice_66[:, 0:4096] ;  slice_66 = None
        slice_68 = slice_67[:, :, 0:] ;  slice_67 = None
        _to_copy_170 = slice_65.to(dtype = torch.float32) ;  slice_65 = None
        native_layer_norm_default_36 = (torch.nn.functional.layer_norm(_to_copy_170,[64],None,None,1e-05),) ;  _to_copy_170 = None
        getitem_244 = native_layer_norm_default_36[0]
        view_278 = slice_68.view(1, 4096, 512, 1) ;  slice_68 = None
        bitwise_not_21 = torch.bitwise_not(view_278) ;  view_278 = None
        masked_fill_21 = getitem_244.masked_fill(bitwise_not_21,0) ;  getitem_244 = bitwise_not_21 = None
        unbind_int_14 = torch.unbind(arg40_1) 
        getitem_247 = unbind_int_14[0]
        getitem_248 = unbind_int_14[1];  unbind_int_14 = None
        _to_copy_171 = getitem_247.to(dtype = torch.bfloat16) ;  getitem_247 = None
        _to_copy_172 = masked_fill_21.to(dtype = torch.bfloat16) 
        unsqueeze_105 = torch.unsqueeze(_to_copy_171,3) ;  _to_copy_171 = None
        unsqueeze_106 = torch.unsqueeze(unsqueeze_105,4) ;  unsqueeze_105 = None
        unsqueeze_107 = torch.unsqueeze(unsqueeze_106,5) ;  unsqueeze_106 = None
        permute_160 = unsqueeze_107.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_107 = None
        unsqueeze_108 = torch.unsqueeze(_to_copy_172,4) ;  _to_copy_172 = None
        unsqueeze_109 = torch.unsqueeze(unsqueeze_108,5) ;  unsqueeze_108 = None
        permute_161 = unsqueeze_109.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_109 = None
        permute_162 = permute_160.permute(0, 1, 5, 2, 3, 4) ;  permute_160 = None
        view_279 = permute_162.view(1, 64, 64) ;  permute_162 = None
        permute_163 = permute_161.permute(5, 2, 3, 4, 0, 1) ;  permute_161 = None
        view_280 = permute_163.view(1, 64, 2097152) ;  permute_163 = None
        bmm_25 = torch.bmm(view_279,view_280) ;  view_279 = view_280 = None
        view_281 = bmm_25.view(8, 8, 1, 1, 4096, 512) ;  bmm_25 = None
        permute_164 = view_281.permute(0, 1, 3, 4, 5, 2) ;  view_281 = None
        view_282 = permute_164.view(8, 8, 1, 4096, 512) ;  permute_164 = None
        _to_copy_173 = getitem_248.to(dtype = torch.bfloat16) ;  getitem_248 = None
        _to_copy_174 = masked_fill_21.to(dtype = torch.bfloat16) ;  masked_fill_21 = None
        unsqueeze_110 = torch.unsqueeze(_to_copy_173,3) ;  _to_copy_173 = None
        unsqueeze_111 = torch.unsqueeze(unsqueeze_110,4) ;  unsqueeze_110 = None
        unsqueeze_112 = torch.unsqueeze(unsqueeze_111,5) ;  unsqueeze_111 = None
        permute_165 = unsqueeze_112.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_112 = None
        unsqueeze_113 = torch.unsqueeze(_to_copy_174,4) ;  _to_copy_174 = None
        unsqueeze_114 = torch.unsqueeze(unsqueeze_113,5) ;  unsqueeze_113 = None
        permute_166 = unsqueeze_114.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_114 = None
        permute_167 = permute_165.permute(0, 1, 5, 2, 3, 4) ;  permute_165 = None
        view_283 = permute_167.view(1, 64, 64) ;  permute_167 = None
        permute_168 = permute_166.permute(5, 2, 3, 4, 0, 1) ;  permute_166 = None
        view_284 = permute_168.view(1, 64, 2097152) ;  permute_168 = None
        bmm_26 = torch.bmm(view_283,view_284) ;  view_283 = view_284 = None
        view_285 = bmm_26.view(8, 8, 1, 1, 4096, 512) ;  bmm_26 = None
        permute_169 = view_285.permute(0, 1, 3, 4, 5, 2) ;  view_285 = None
        view_286 = permute_169.view(8, 8, 1, 4096, 512) ;  permute_169 = None
        unsqueeze_115 = torch.unsqueeze(view_282,5) ;  view_282 = None
        unsqueeze_116 = torch.unsqueeze(unsqueeze_115,6) ;  unsqueeze_115 = None
        permute_170 = unsqueeze_116.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_116 = None
        unsqueeze_117 = torch.unsqueeze(view_286,5) ;  view_286 = None
        unsqueeze_118 = torch.unsqueeze(unsqueeze_117,6) ;  unsqueeze_117 = None
        permute_171 = unsqueeze_118.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_118 = None
        permute_172 = permute_170.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_170 = None
        clone_42 = torch.clone(permute_172,memory_format = torch.contiguous_format) ;  permute_172 = None
        _unsafe_view_38 = clone_42.view(8, 4096, 4096) ;  clone_42 = None
        permute_173 = permute_171.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_171 = None
        clone_43 = torch.clone(permute_173,memory_format = torch.contiguous_format) ;  permute_173 = None
        _unsafe_view_39 = clone_43.view(8, 4096, 4096) ;  clone_43 = None
        bmm_27 = torch.bmm(_unsafe_view_38,_unsafe_view_39) ;  _unsafe_view_38 = _unsafe_view_39 = None
        view_287 = bmm_27.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_27 = None
        permute_174 = view_287.permute(4, 1, 5, 0, 2, 6, 3) ;  view_287 = None
        view_288 = permute_174.view(1, 512, 512, 8, 8, 8) ;  permute_174 = None
        clone_44 = torch.clone(view_288,memory_format = torch.contiguous_format) ;  view_288 = None
        _unsafe_view_40 = clone_44.view(1, 512, 512, 512) ;  clone_44 = None
        add_24 = torch.add(_unsafe_view_40,0) ;  _unsafe_view_40 = None
        slice_69 = add_19[0:] 
        slice_70 = slice_69[:, 4096:8192] ;  slice_69 = None
        slice_71 = slice_70[:, :, 0:] ;  slice_70 = None
        slice_72 = slice_71[:, :, :, 0:] ;  slice_71 = None
        slice_73 = arg1403_1[0:] 
        slice_74 = slice_73[:, 4096:8192] ;  slice_73 = None
        slice_75 = slice_74[:, :, 0:] ;  slice_74 = None
        _to_copy_175 = slice_72.to(dtype = torch.float32) ;  slice_72 = None
        native_layer_norm_default_37 = (torch.nn.functional.layer_norm(_to_copy_175,[64],None,None,1e-05),) ;  _to_copy_175 = None
        getitem_249 = native_layer_norm_default_37[0]
        view_289 = slice_75.view(1, 4096, 512, 1) ;  slice_75 = None
        bitwise_not_22 = torch.bitwise_not(view_289) ;  view_289 = None
        masked_fill_22 = getitem_249.masked_fill(bitwise_not_22,0) ;  getitem_249 = bitwise_not_22 = None
        unbind_int_15 = torch.unbind(arg40_1) 
        getitem_252 = unbind_int_15[0]
        getitem_253 = unbind_int_15[1];  unbind_int_15 = None
        _to_copy_176 = getitem_252.to(dtype = torch.bfloat16) ;  getitem_252 = None
        _to_copy_177 = masked_fill_22.to(dtype = torch.bfloat16) 
        unsqueeze_119 = torch.unsqueeze(_to_copy_176,3) ;  _to_copy_176 = None
        unsqueeze_120 = torch.unsqueeze(unsqueeze_119,4) ;  unsqueeze_119 = None
        unsqueeze_121 = torch.unsqueeze(unsqueeze_120,5) ;  unsqueeze_120 = None
        permute_175 = unsqueeze_121.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_121 = None
        unsqueeze_122 = torch.unsqueeze(_to_copy_177,4) ;  _to_copy_177 = None
        unsqueeze_123 = torch.unsqueeze(unsqueeze_122,5) ;  unsqueeze_122 = None
        permute_176 = unsqueeze_123.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_123 = None
        permute_177 = permute_175.permute(0, 1, 5, 2, 3, 4) ;  permute_175 = None
        view_290 = permute_177.view(1, 64, 64) ;  permute_177 = None
        permute_178 = permute_176.permute(5, 2, 3, 4, 0, 1) ;  permute_176 = None
        view_291 = permute_178.view(1, 64, 2097152) ;  permute_178 = None
        bmm_28 = torch.bmm(view_290,view_291) ;  view_290 = view_291 = None
        view_292 = bmm_28.view(8, 8, 1, 1, 4096, 512) ;  bmm_28 = None
        permute_179 = view_292.permute(0, 1, 3, 4, 5, 2) ;  view_292 = None
        view_293 = permute_179.view(8, 8, 1, 4096, 512) ;  permute_179 = None
        _to_copy_178 = getitem_253.to(dtype = torch.bfloat16) ;  getitem_253 = None
        _to_copy_179 = masked_fill_22.to(dtype = torch.bfloat16) ;  masked_fill_22 = None
        unsqueeze_124 = torch.unsqueeze(_to_copy_178,3) ;  _to_copy_178 = None
        unsqueeze_125 = torch.unsqueeze(unsqueeze_124,4) ;  unsqueeze_124 = None
        unsqueeze_126 = torch.unsqueeze(unsqueeze_125,5) ;  unsqueeze_125 = None
        permute_180 = unsqueeze_126.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_126 = None
        unsqueeze_127 = torch.unsqueeze(_to_copy_179,4) ;  _to_copy_179 = None
        unsqueeze_128 = torch.unsqueeze(unsqueeze_127,5) ;  unsqueeze_127 = None
        permute_181 = unsqueeze_128.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_128 = None
        permute_182 = permute_180.permute(0, 1, 5, 2, 3, 4) ;  permute_180 = None
        view_294 = permute_182.view(1, 64, 64) ;  permute_182 = None
        permute_183 = permute_181.permute(5, 2, 3, 4, 0, 1) ;  permute_181 = None
        view_295 = permute_183.view(1, 64, 2097152) ;  permute_183 = None
        bmm_29 = torch.bmm(view_294,view_295) ;  view_294 = view_295 = None
        view_296 = bmm_29.view(8, 8, 1, 1, 4096, 512) ;  bmm_29 = None
        permute_184 = view_296.permute(0, 1, 3, 4, 5, 2) ;  view_296 = None
        view_297 = permute_184.view(8, 8, 1, 4096, 512) ;  permute_184 = None
        unsqueeze_129 = torch.unsqueeze(view_293,5) ;  view_293 = None
        unsqueeze_130 = torch.unsqueeze(unsqueeze_129,6) ;  unsqueeze_129 = None
        permute_185 = unsqueeze_130.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_130 = None
        unsqueeze_131 = torch.unsqueeze(view_297,5) ;  view_297 = None
        unsqueeze_132 = torch.unsqueeze(unsqueeze_131,6) ;  unsqueeze_131 = None
        permute_186 = unsqueeze_132.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_132 = None
        permute_187 = permute_185.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_185 = None
        clone_45 = torch.clone(permute_187,memory_format = torch.contiguous_format) ;  permute_187 = None
        _unsafe_view_41 = clone_45.view(8, 4096, 4096) ;  clone_45 = None
        permute_188 = permute_186.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_186 = None
        clone_46 = torch.clone(permute_188,memory_format = torch.contiguous_format) ;  permute_188 = None
        _unsafe_view_42 = clone_46.view(8, 4096, 4096) ;  clone_46 = None
        bmm_30 = torch.bmm(_unsafe_view_41,_unsafe_view_42) ;  _unsafe_view_41 = _unsafe_view_42 = None
        view_298 = bmm_30.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_30 = None
        permute_189 = view_298.permute(4, 1, 5, 0, 2, 6, 3) ;  view_298 = None
        view_299 = permute_189.view(1, 512, 512, 8, 8, 8) ;  permute_189 = None
        clone_47 = torch.clone(view_299,memory_format = torch.contiguous_format) ;  view_299 = None
        _unsafe_view_43 = clone_47.view(1, 512, 512, 512) ;  clone_47 = None
        add_25 = torch.add(add_24,_unsafe_view_43) ;  add_24 = _unsafe_view_43 = None
        slice_76 = add_19[0:] 
        slice_77 = slice_76[:, 8192:12288] ;  slice_76 = None
        slice_78 = slice_77[:, :, 0:] ;  slice_77 = None
        slice_79 = slice_78[:, :, :, 0:] ;  slice_78 = None
        slice_80 = arg1403_1[0:] 
        slice_81 = slice_80[:, 8192:12288] ;  slice_80 = None
        slice_82 = slice_81[:, :, 0:] ;  slice_81 = None
        _to_copy_180 = slice_79.to(dtype = torch.float32) ;  slice_79 = None
        native_layer_norm_default_38 = (torch.nn.functional.layer_norm(_to_copy_180,[64],None,None,1e-05),) ;  _to_copy_180 = None
        getitem_254 = native_layer_norm_default_38[0]
        view_300 = slice_82.view(1, 4096, 512, 1) ;  slice_82 = None
        bitwise_not_23 = torch.bitwise_not(view_300) ;  view_300 = None
        masked_fill_23 = getitem_254.masked_fill(bitwise_not_23,0) ;  getitem_254 = bitwise_not_23 = None
        unbind_int_16 = torch.unbind(arg40_1) 
        getitem_257 = unbind_int_16[0]
        getitem_258 = unbind_int_16[1];  unbind_int_16 = None
        _to_copy_181 = getitem_257.to(dtype = torch.bfloat16) ;  getitem_257 = None
        _to_copy_182 = masked_fill_23.to(dtype = torch.bfloat16) 
        unsqueeze_133 = torch.unsqueeze(_to_copy_181,3) ;  _to_copy_181 = None
        unsqueeze_134 = torch.unsqueeze(unsqueeze_133,4) ;  unsqueeze_133 = None
        unsqueeze_135 = torch.unsqueeze(unsqueeze_134,5) ;  unsqueeze_134 = None
        permute_190 = unsqueeze_135.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_135 = None
        unsqueeze_136 = torch.unsqueeze(_to_copy_182,4) ;  _to_copy_182 = None
        unsqueeze_137 = torch.unsqueeze(unsqueeze_136,5) ;  unsqueeze_136 = None
        permute_191 = unsqueeze_137.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_137 = None
        permute_192 = permute_190.permute(0, 1, 5, 2, 3, 4) ;  permute_190 = None
        view_301 = permute_192.view(1, 64, 64) ;  permute_192 = None
        permute_193 = permute_191.permute(5, 2, 3, 4, 0, 1) ;  permute_191 = None
        view_302 = permute_193.view(1, 64, 2097152) ;  permute_193 = None
        bmm_31 = torch.bmm(view_301,view_302) ;  view_301 = view_302 = None
        view_303 = bmm_31.view(8, 8, 1, 1, 4096, 512) ;  bmm_31 = None
        permute_194 = view_303.permute(0, 1, 3, 4, 5, 2) ;  view_303 = None
        view_304 = permute_194.view(8, 8, 1, 4096, 512) ;  permute_194 = None
        _to_copy_183 = getitem_258.to(dtype = torch.bfloat16) ;  getitem_258 = None
        _to_copy_184 = masked_fill_23.to(dtype = torch.bfloat16) ;  masked_fill_23 = None
        unsqueeze_138 = torch.unsqueeze(_to_copy_183,3) ;  _to_copy_183 = None
        unsqueeze_139 = torch.unsqueeze(unsqueeze_138,4) ;  unsqueeze_138 = None
        unsqueeze_140 = torch.unsqueeze(unsqueeze_139,5) ;  unsqueeze_139 = None
        permute_195 = unsqueeze_140.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_140 = None
        unsqueeze_141 = torch.unsqueeze(_to_copy_184,4) ;  _to_copy_184 = None
        unsqueeze_142 = torch.unsqueeze(unsqueeze_141,5) ;  unsqueeze_141 = None
        permute_196 = unsqueeze_142.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_142 = None
        permute_197 = permute_195.permute(0, 1, 5, 2, 3, 4) ;  permute_195 = None
        view_305 = permute_197.view(1, 64, 64) ;  permute_197 = None
        permute_198 = permute_196.permute(5, 2, 3, 4, 0, 1) ;  permute_196 = None
        view_306 = permute_198.view(1, 64, 2097152) ;  permute_198 = None
        bmm_32 = torch.bmm(view_305,view_306) ;  view_305 = view_306 = None
        view_307 = bmm_32.view(8, 8, 1, 1, 4096, 512) ;  bmm_32 = None
        permute_199 = view_307.permute(0, 1, 3, 4, 5, 2) ;  view_307 = None
        view_308 = permute_199.view(8, 8, 1, 4096, 512) ;  permute_199 = None
        unsqueeze_143 = torch.unsqueeze(view_304,5) ;  view_304 = None
        unsqueeze_144 = torch.unsqueeze(unsqueeze_143,6) ;  unsqueeze_143 = None
        permute_200 = unsqueeze_144.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_144 = None
        unsqueeze_145 = torch.unsqueeze(view_308,5) ;  view_308 = None
        unsqueeze_146 = torch.unsqueeze(unsqueeze_145,6) ;  unsqueeze_145 = None
        permute_201 = unsqueeze_146.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_146 = None
        permute_202 = permute_200.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_200 = None
        clone_48 = torch.clone(permute_202,memory_format = torch.contiguous_format) ;  permute_202 = None
        _unsafe_view_44 = clone_48.view(8, 4096, 4096) ;  clone_48 = None
        permute_203 = permute_201.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_201 = None
        clone_49 = torch.clone(permute_203,memory_format = torch.contiguous_format) ;  permute_203 = None
        _unsafe_view_45 = clone_49.view(8, 4096, 4096) ;  clone_49 = None
        bmm_33 = torch.bmm(_unsafe_view_44,_unsafe_view_45) ;  _unsafe_view_44 = _unsafe_view_45 = None
        view_309 = bmm_33.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_33 = None
        permute_204 = view_309.permute(4, 1, 5, 0, 2, 6, 3) ;  view_309 = None
        view_310 = permute_204.view(1, 512, 512, 8, 8, 8) ;  permute_204 = None
        clone_50 = torch.clone(view_310,memory_format = torch.contiguous_format) ;  view_310 = None
        _unsafe_view_46 = clone_50.view(1, 512, 512, 512) ;  clone_50 = None
        add_26 = torch.add(add_25,_unsafe_view_46) ;  add_25 = _unsafe_view_46 = None
        slice_83 = add_19[0:] 
        slice_84 = slice_83[:, 12288:16384] ;  slice_83 = None
        slice_85 = slice_84[:, :, 0:] ;  slice_84 = None
        slice_86 = slice_85[:, :, :, 0:] ;  slice_85 = None
        slice_87 = arg1403_1[0:] 
        slice_88 = slice_87[:, 12288:16384] ;  slice_87 = None
        slice_89 = slice_88[:, :, 0:] ;  slice_88 = None
        _to_copy_185 = slice_86.to(dtype = torch.float32) ;  slice_86 = None
        native_layer_norm_default_39 = (torch.nn.functional.layer_norm(_to_copy_185,[64],None,None,1e-05),) ;  _to_copy_185 = None
        getitem_259 = native_layer_norm_default_39[0]
        view_311 = slice_89.view(1, 4096, 512, 1) ;  slice_89 = None
        bitwise_not_24 = torch.bitwise_not(view_311) ;  view_311 = None
        masked_fill_24 = getitem_259.masked_fill(bitwise_not_24,0) ;  getitem_259 = bitwise_not_24 = None
        unbind_int_17 = torch.unbind(arg40_1) ;  arg40_1 = None
        getitem_262 = unbind_int_17[0]
        getitem_263 = unbind_int_17[1];  unbind_int_17 = None
        _to_copy_186 = getitem_262.to(dtype = torch.bfloat16) ;  getitem_262 = None
        _to_copy_187 = masked_fill_24.to(dtype = torch.bfloat16) 
        unsqueeze_147 = torch.unsqueeze(_to_copy_186,3) ;  _to_copy_186 = None
        unsqueeze_148 = torch.unsqueeze(unsqueeze_147,4) ;  unsqueeze_147 = None
        unsqueeze_149 = torch.unsqueeze(unsqueeze_148,5) ;  unsqueeze_148 = None
        permute_205 = unsqueeze_149.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_149 = None
        unsqueeze_150 = torch.unsqueeze(_to_copy_187,4) ;  _to_copy_187 = None
        unsqueeze_151 = torch.unsqueeze(unsqueeze_150,5) ;  unsqueeze_150 = None
        permute_206 = unsqueeze_151.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_151 = None
        permute_207 = permute_205.permute(0, 1, 5, 2, 3, 4) ;  permute_205 = None
        view_312 = permute_207.view(1, 64, 64) ;  permute_207 = None
        permute_208 = permute_206.permute(5, 2, 3, 4, 0, 1) ;  permute_206 = None
        view_313 = permute_208.view(1, 64, 2097152) ;  permute_208 = None
        bmm_34 = torch.bmm(view_312,view_313) ;  view_312 = view_313 = None
        view_314 = bmm_34.view(8, 8, 1, 1, 4096, 512) ;  bmm_34 = None
        permute_209 = view_314.permute(0, 1, 3, 4, 5, 2) ;  view_314 = None
        view_315 = permute_209.view(8, 8, 1, 4096, 512) ;  permute_209 = None
        _to_copy_188 = getitem_263.to(dtype = torch.bfloat16) ;  getitem_263 = None
        _to_copy_189 = masked_fill_24.to(dtype = torch.bfloat16) ;  masked_fill_24 = None
        unsqueeze_152 = torch.unsqueeze(_to_copy_188,3) ;  _to_copy_188 = None
        unsqueeze_153 = torch.unsqueeze(unsqueeze_152,4) ;  unsqueeze_152 = None
        unsqueeze_154 = torch.unsqueeze(unsqueeze_153,5) ;  unsqueeze_153 = None
        permute_210 = unsqueeze_154.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_154 = None
        unsqueeze_155 = torch.unsqueeze(_to_copy_189,4) ;  _to_copy_189 = None
        unsqueeze_156 = torch.unsqueeze(unsqueeze_155,5) ;  unsqueeze_155 = None
        permute_211 = unsqueeze_156.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_156 = None
        permute_212 = permute_210.permute(0, 1, 5, 2, 3, 4) ;  permute_210 = None
        view_316 = permute_212.view(1, 64, 64) ;  permute_212 = None
        permute_213 = permute_211.permute(5, 2, 3, 4, 0, 1) ;  permute_211 = None
        view_317 = permute_213.view(1, 64, 2097152) ;  permute_213 = None
        bmm_35 = torch.bmm(view_316,view_317) ;  view_316 = view_317 = None
        view_318 = bmm_35.view(8, 8, 1, 1, 4096, 512) ;  bmm_35 = None
        permute_214 = view_318.permute(0, 1, 3, 4, 5, 2) ;  view_318 = None
        view_319 = permute_214.view(8, 8, 1, 4096, 512) ;  permute_214 = None
        unsqueeze_157 = torch.unsqueeze(view_315,5) ;  view_315 = None
        unsqueeze_158 = torch.unsqueeze(unsqueeze_157,6) ;  unsqueeze_157 = None
        permute_215 = unsqueeze_158.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_158 = None
        unsqueeze_159 = torch.unsqueeze(view_319,5) ;  view_319 = None
        unsqueeze_160 = torch.unsqueeze(unsqueeze_159,6) ;  unsqueeze_159 = None
        permute_216 = unsqueeze_160.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_160 = None
        permute_217 = permute_215.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_215 = None
        clone_51 = torch.clone(permute_217,memory_format = torch.contiguous_format) ;  permute_217 = None
        _unsafe_view_47 = clone_51.view(8, 4096, 4096) ;  clone_51 = None
        permute_218 = permute_216.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_216 = None
        clone_52 = torch.clone(permute_218,memory_format = torch.contiguous_format) ;  permute_218 = None
        _unsafe_view_48 = clone_52.view(8, 4096, 4096) ;  clone_52 = None
        bmm_36 = torch.bmm(_unsafe_view_47,_unsafe_view_48) ;  _unsafe_view_47 = _unsafe_view_48 = None
        view_320 = bmm_36.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_36 = None
        permute_219 = view_320.permute(4, 1, 5, 0, 2, 6, 3) ;  view_320 = None
        view_321 = permute_219.view(1, 512, 512, 8, 8, 8) ;  permute_219 = None
        clone_53 = torch.clone(view_321,memory_format = torch.contiguous_format) ;  view_321 = None
        _unsafe_view_49 = clone_53.view(1, 512, 512, 512) ;  clone_53 = None
        add_27 = torch.add(add_26,_unsafe_view_49) ;  add_26 = _unsafe_view_49 = None
        _to_copy_190 = add_27.to(dtype = torch.float32) ;  add_27 = None
        native_layer_norm_default_40 = (torch.nn.functional.layer_norm(_to_copy_190,[512],arg41_1,arg42_1,0.1),) ;  _to_copy_190 = arg41_1 = arg42_1 = None
        getitem_264 = native_layer_norm_default_40[0]
        _to_copy_191 = arg44_1.to(dtype = torch.bfloat16) ;  arg44_1 = None
        _to_copy_192 = arg43_1.to(dtype = torch.bfloat16) ;  arg43_1 = None
        _to_copy_193 = getitem_264.to(dtype = torch.bfloat16) ;  getitem_264 = None
        view_322 = _to_copy_193.view(262144, 512) ;  _to_copy_193 = None
        t_62 = _to_copy_192.t() ;  _to_copy_192 = None
        addmm_1 = torch.addmm(_to_copy_191,view_322,t_62) ;  _to_copy_191 = view_322 = t_62 = None
        view_323 = addmm_1.view(1, 512, 512, 256) ;  addmm_1 = None
        add_28 = torch.add(add_23,view_323) ;  add_23 = view_323 = None
        split_tensor_23 = torch.split(add_19,128,dim = -2) 
        getitem_267 = split_tensor_23[0]
        getitem_268 = split_tensor_23[1]
        getitem_269 = split_tensor_23[2]
        getitem_270 = split_tensor_23[3];  split_tensor_23 = None
        _to_copy_194 = getitem_267.to(dtype = torch.float32) ;  getitem_267 = None
        native_layer_norm_default_41 = (torch.nn.functional.layer_norm(_to_copy_194,[64],arg80_1,arg81_1,1e-05),) ;  _to_copy_194 = None
        getitem_271 = native_layer_norm_default_41[0]
        _to_copy_195 = arg82_1.to(dtype = torch.bfloat16) 
        _to_copy_196 = getitem_271.to(dtype = torch.bfloat16) ;  getitem_271 = None
        t_63 = _to_copy_195.t() ;  _to_copy_195 = None
        view_324 = _to_copy_196.view(2097152, 64) ;  _to_copy_196 = None
        print(torch.cuda.memory_allocated()/1024**2)
        mm_58 = torch.mm(view_324,t_63) ;  view_324 = t_63 = None
        view_325 = mm_58.view(1, 16384, 128, 512) ;  mm_58 = None
        split_tensor_24 = torch.split(view_325,256,dim = -1) ;  view_325 = None
        getitem_274 = split_tensor_24[0]
        getitem_275 = split_tensor_24[1];  split_tensor_24 = None
        silu_7 = torch.nn.functional.silu(getitem_274) ;  getitem_274 = None
        mul_30 = torch.mul(silu_7,getitem_275) ;  silu_7 = getitem_275 = None
        _to_copy_197 = arg83_1.to(dtype = torch.bfloat16) 
        t_64 = _to_copy_197.t() ;  _to_copy_197 = None
        view_327 = mul_30.view(2097152, 256) ;  mul_30 = None
        mm_59 = torch.mm(view_327,t_64) ;  view_327 = t_64 = None
        view_328 = mm_59.view(1, 16384, 128, 64) ;  mm_59 = None
        _to_copy_198 = getitem_268.to(dtype = torch.float32) ;  getitem_268 = None
        native_layer_norm_default_42 = (torch.nn.functional.layer_norm(_to_copy_198,[64],arg80_1,arg81_1,1e-05),) ;  _to_copy_198 = None
        getitem_276 = native_layer_norm_default_42[0]
        _to_copy_199 = arg82_1.to(dtype = torch.bfloat16) 
        _to_copy_200 = getitem_276.to(dtype = torch.bfloat16) ;  getitem_276 = None
        t_65 = _to_copy_199.t() ;  _to_copy_199 = None
        view_329 = _to_copy_200.view(2097152, 64) ;  _to_copy_200 = None
        mm_60 = torch.mm(view_329,t_65) ;  view_329 = t_65 = None
        view_330 = mm_60.view(1, 16384, 128, 512) ;  mm_60 = None
        split_tensor_25 = torch.split(view_330,256,dim = -1) ;  view_330 = None
        getitem_279 = split_tensor_25[0]
        getitem_280 = split_tensor_25[1];  split_tensor_25 = None
        silu_8 = torch.nn.functional.silu(getitem_279) ;  getitem_279 = None
        mul_31 = torch.mul(silu_8,getitem_280) ;  silu_8 = getitem_280 = None
        _to_copy_201 = arg83_1.to(dtype = torch.bfloat16) 
        t_66 = _to_copy_201.t() ;  _to_copy_201 = None
        view_332 = mul_31.view(2097152, 256) ;  mul_31 = None
        mm_61 = torch.mm(view_332,t_66) ;  view_332 = t_66 = None
        view_333 = mm_61.view(1, 16384, 128, 64) ;  mm_61 = None
        _to_copy_202 = getitem_269.to(dtype = torch.float32) ;  getitem_269 = None
        native_layer_norm_default_43 = (torch.nn.functional.layer_norm(_to_copy_202,[64],arg80_1,arg81_1,1e-05),) ;  _to_copy_202 = None
        getitem_281 = native_layer_norm_default_43[0]
        _to_copy_203 = arg82_1.to(dtype = torch.bfloat16) 
        _to_copy_204 = getitem_281.to(dtype = torch.bfloat16) ;  getitem_281 = None
        t_67 = _to_copy_203.t() ;  _to_copy_203 = None
        view_334 = _to_copy_204.view(2097152, 64) ;  _to_copy_204 = None
        mm_62 = torch.mm(view_334,t_67) ;  view_334 = t_67 = None
        view_335 = mm_62.view(1, 16384, 128, 512) ;  mm_62 = None
        split_tensor_26 = torch.split(view_335,256,dim = -1) ;  view_335 = None
        getitem_284 = split_tensor_26[0]
        getitem_285 = split_tensor_26[1];  split_tensor_26 = None
        silu_9 = torch.nn.functional.silu(getitem_284) ;  getitem_284 = None
        mul_32 = torch.mul(silu_9,getitem_285) ;  silu_9 = getitem_285 = None
        _to_copy_205 = arg83_1.to(dtype = torch.bfloat16) 
        t_68 = _to_copy_205.t() ;  _to_copy_205 = None
        view_337 = mul_32.view(2097152, 256) ;  mul_32 = None
        mm_63 = torch.mm(view_337,t_68) ;  view_337 = t_68 = None
        view_338 = mm_63.view(1, 16384, 128, 64) ;  mm_63 = None
        _to_copy_206 = getitem_270.to(dtype = torch.float32) ;  getitem_270 = None
        native_layer_norm_default_44 = (torch.nn.functional.layer_norm(_to_copy_206,[64],arg80_1,arg81_1,1e-05),) ;  _to_copy_206 = arg80_1 = arg81_1 = None
        getitem_286 = native_layer_norm_default_44[0]
        _to_copy_207 = arg82_1.to(dtype = torch.bfloat16) ;  arg82_1 = None
        _to_copy_208 = getitem_286.to(dtype = torch.bfloat16) ;  getitem_286 = None
        t_69 = _to_copy_207.t() ;  _to_copy_207 = None
        view_339 = _to_copy_208.view(2097152, 64) ;  _to_copy_208 = None
        mm_64 = torch.mm(view_339,t_69) ;  view_339 = t_69 = None
        view_340 = mm_64.view(1, 16384, 128, 512) ;  mm_64 = None
        split_tensor_27 = torch.split(view_340,256,dim = -1) ;  view_340 = None
        getitem_289 = split_tensor_27[0]
        getitem_290 = split_tensor_27[1];  split_tensor_27 = None
        silu_10 = torch.nn.functional.silu(getitem_289) ;  getitem_289 = None
        mul_33 = torch.mul(silu_10,getitem_290) ;  silu_10 = getitem_290 = None
        _to_copy_209 = arg83_1.to(dtype = torch.bfloat16) ;  arg83_1 = None
        t_70 = _to_copy_209.t() ;  _to_copy_209 = None
        view_342 = mul_33.view(2097152, 256) ;  mul_33 = None
        mm_65 = torch.mm(view_342,t_70) ;  view_342 = t_70 = None
        view_343 = mm_65.view(1, 16384, 128, 64) ;  mm_65 = None
        cat_5 = torch.cat([view_328,view_333,view_338,view_343],dim = -2) ;  view_328 = view_333 = view_338 = view_343 = None
        add_29 = torch.add(add_19,cat_5) ;  cat_5 = None
        slice_90 = add_19[0:] 
        slice_91 = slice_90[:, 0:4096] ;  slice_90 = None
        slice_92 = slice_91[:, :, 0:] ;  slice_91 = None
        slice_93 = slice_92[:, :, :, 0:] ;  slice_92 = None
        slice_94 = arg1403_1[0:] 
        slice_95 = slice_94[:, 0:4096] ;  slice_94 = None
        slice_96 = slice_95[:, :, 0:] ;  slice_95 = None
        _to_copy_210 = add_28.to(dtype = torch.float32) 
        native_layer_norm_default_45 = (torch.nn.functional.layer_norm(_to_copy_210,[256],arg65_1,arg66_1,1e-05),) ;  _to_copy_210 = None
        getitem_291 = native_layer_norm_default_45[0]
        _to_copy_211 = arg67_1.to(dtype = torch.bfloat16) 
        _to_copy_212 = getitem_291.to(dtype = torch.bfloat16) ;  getitem_291 = None
        t_71 = _to_copy_211.t() ;  _to_copy_211 = None
        view_344 = _to_copy_212.view(262144, 256) ;  _to_copy_212 = None
        mm_66 = torch.mm(view_344,t_71) ;  view_344 = t_71 = None
        view_345 = mm_66.view(1, 512, 512, 8) ;  mm_66 = None
        permute_220 = view_345.permute(0, 3, 1, 2) ;  view_345 = None
        view_346 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_25 = torch.bitwise_not(view_346) ;  view_346 = None
        masked_fill_25 = permute_220.masked_fill(bitwise_not_25,-10000) ;  permute_220 = bitwise_not_25 = None
        _to_copy_213 = masked_fill_25.to(dtype = torch.float32) ;  masked_fill_25 = None
        _softmax_4 = torch.softmax(_to_copy_213, dim = -1) ;  _to_copy_213 = None
        _to_copy_214 = slice_93.to(dtype = torch.float32) ;  slice_93 = None
        native_layer_norm_default_46 = (torch.nn.functional.layer_norm(_to_copy_214,[64],arg62_1,arg63_1,1e-05),) ;  _to_copy_214 = None
        getitem_294 = native_layer_norm_default_46[0]
        _to_copy_215 = arg64_1.to(dtype = torch.bfloat16) 
        _to_copy_216 = getitem_294.to(dtype = torch.bfloat16) ;  getitem_294 = None
        t_72 = _to_copy_215.t() ;  _to_copy_215 = None
        view_347 = _to_copy_216.view(2097152, 64) ;  _to_copy_216 = None
        mm_67 = torch.mm(view_347,t_72) ;  view_347 = t_72 = None
        view_348 = mm_67.view(1, 4096, 512, 512) ;  mm_67 = None
        view_349 = view_348.view(1, 4096, 512, 2, 8, 32) ;  view_348 = None
        permute_221 = view_349.permute(3, 0, 1, 2, 4, 5) ;  view_349 = None
        unbind_int_18 = torch.unbind(permute_221) ;  permute_221 = None
        getitem_297 = unbind_int_18[0]
        getitem_298 = unbind_int_18[1];  unbind_int_18 = None
        sigmoid_19 = torch.sigmoid(getitem_298) ;  getitem_298 = None
        bitwise_not_26 = torch.bitwise_not(slice_96) ;  slice_96 = None
        view_350 = bitwise_not_26.view(1, 4096, 512, 1, 1) ;  bitwise_not_26 = None
        masked_fill_26 = getitem_297.masked_fill(view_350,0) ;  getitem_297 = view_350 = None
        _to_copy_217 = _softmax_4.to(dtype = torch.bfloat16) ;  _softmax_4 = None
        unsqueeze_161 = torch.unsqueeze(_to_copy_217,4) ;  _to_copy_217 = None
        unsqueeze_162 = torch.unsqueeze(unsqueeze_161,5) ;  unsqueeze_161 = None
        permute_222 = unsqueeze_162.permute(0, 4, 2, 1, 5, 3) ;  unsqueeze_162 = None
        unsqueeze_163 = torch.unsqueeze(masked_fill_26,5) ;  masked_fill_26 = None
        permute_223 = unsqueeze_163.permute(0, 1, 5, 3, 4, 2) ;  unsqueeze_163 = None
        permute_224 = permute_222.permute(3, 2, 5, 0, 1, 4) ;  permute_222 = None
        view_351 = permute_224.view(8, 512, 512) ;  permute_224 = None
        permute_225 = permute_223.permute(3, 5, 0, 1, 4, 2) ;  permute_223 = None
        clone_54 = torch.clone(permute_225,memory_format = torch.contiguous_format) ;  permute_225 = None
        _unsafe_view_50 = clone_54.view(8, 512, 131072) ;  clone_54 = None
        bmm_37 = torch.bmm(view_351,_unsafe_view_50) ;  view_351 = _unsafe_view_50 = None
        view_352 = bmm_37.view(8, 512, 1, 1, 4096, 32) ;  bmm_37 = None
        permute_226 = view_352.permute(3, 4, 1, 0, 5, 2) ;  view_352 = None
        view_353 = permute_226.view(1, 4096, 512, 8, 32) ;  permute_226 = None
        mul_34 = torch.mul(sigmoid_19,view_353) ;  sigmoid_19 = view_353 = None
        view_354 = mul_34.view(1, 4096, 512, 256) ;  mul_34 = None
        _to_copy_218 = arg68_1.to(dtype = torch.bfloat16) 
        t_73 = _to_copy_218.t() ;  _to_copy_218 = None
        view_355 = view_354.view(2097152, 256) ;  view_354 = None
        mm_68 = torch.mm(view_355,t_73) ;  view_355 = t_73 = None
        view_356 = mm_68.view(1, 4096, 512, 64) ;  mm_68 = None
        slice_97 = add_19[0:] 
        slice_98 = slice_97[:, 4096:8192] ;  slice_97 = None
        slice_99 = slice_98[:, :, 0:] ;  slice_98 = None
        slice_100 = slice_99[:, :, :, 0:] ;  slice_99 = None
        slice_101 = arg1403_1[0:] 
        slice_102 = slice_101[:, 4096:8192] ;  slice_101 = None
        slice_103 = slice_102[:, :, 0:] ;  slice_102 = None
        _to_copy_219 = add_28.to(dtype = torch.float32) 
        native_layer_norm_default_47 = (torch.nn.functional.layer_norm(_to_copy_219,[256],arg65_1,arg66_1,1e-05),) ;  _to_copy_219 = None
        getitem_299 = native_layer_norm_default_47[0]
        _to_copy_220 = arg67_1.to(dtype = torch.bfloat16) 
        _to_copy_221 = getitem_299.to(dtype = torch.bfloat16) ;  getitem_299 = None
        t_74 = _to_copy_220.t() ;  _to_copy_220 = None
        view_357 = _to_copy_221.view(262144, 256) ;  _to_copy_221 = None
        mm_69 = torch.mm(view_357,t_74) ;  view_357 = t_74 = None
        view_358 = mm_69.view(1, 512, 512, 8) ;  mm_69 = None
        permute_227 = view_358.permute(0, 3, 1, 2) ;  view_358 = None
        view_359 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_27 = torch.bitwise_not(view_359) ;  view_359 = None
        masked_fill_27 = permute_227.masked_fill(bitwise_not_27,-10000) ;  permute_227 = bitwise_not_27 = None
        _to_copy_222 = masked_fill_27.to(dtype = torch.float32) ;  masked_fill_27 = None
        _softmax_5 = torch.softmax(_to_copy_222, dim = -1) ;  _to_copy_222 = None
        _to_copy_223 = slice_100.to(dtype = torch.float32) ;  slice_100 = None
        native_layer_norm_default_48 = (torch.nn.functional.layer_norm(_to_copy_223,[64],arg62_1,arg63_1,1e-05),) ;  _to_copy_223 = None
        getitem_302 = native_layer_norm_default_48[0]
        _to_copy_224 = arg64_1.to(dtype = torch.bfloat16) 
        _to_copy_225 = getitem_302.to(dtype = torch.bfloat16) ;  getitem_302 = None
        t_75 = _to_copy_224.t() ;  _to_copy_224 = None
        view_360 = _to_copy_225.view(2097152, 64) ;  _to_copy_225 = None
        mm_70 = torch.mm(view_360,t_75) ;  view_360 = t_75 = None
        view_361 = mm_70.view(1, 4096, 512, 512) ;  mm_70 = None
        view_362 = view_361.view(1, 4096, 512, 2, 8, 32) ;  view_361 = None
        permute_228 = view_362.permute(3, 0, 1, 2, 4, 5) ;  view_362 = None
        unbind_int_19 = torch.unbind(permute_228) ;  permute_228 = None
        getitem_305 = unbind_int_19[0]
        getitem_306 = unbind_int_19[1];  unbind_int_19 = None
        sigmoid_20 = torch.sigmoid(getitem_306) ;  getitem_306 = None
        bitwise_not_28 = torch.bitwise_not(slice_103) ;  slice_103 = None
        view_363 = bitwise_not_28.view(1, 4096, 512, 1, 1) ;  bitwise_not_28 = None
        masked_fill_28 = getitem_305.masked_fill(view_363,0) ;  getitem_305 = view_363 = None
        _to_copy_226 = _softmax_5.to(dtype = torch.bfloat16) ;  _softmax_5 = None
        unsqueeze_164 = torch.unsqueeze(_to_copy_226,4) ;  _to_copy_226 = None
        unsqueeze_165 = torch.unsqueeze(unsqueeze_164,5) ;  unsqueeze_164 = None
        permute_229 = unsqueeze_165.permute(0, 4, 2, 1, 5, 3) ;  unsqueeze_165 = None
        unsqueeze_166 = torch.unsqueeze(masked_fill_28,5) ;  masked_fill_28 = None
        permute_230 = unsqueeze_166.permute(0, 1, 5, 3, 4, 2) ;  unsqueeze_166 = None
        permute_231 = permute_229.permute(3, 2, 5, 0, 1, 4) ;  permute_229 = None
        view_364 = permute_231.view(8, 512, 512) ;  permute_231 = None
        permute_232 = permute_230.permute(3, 5, 0, 1, 4, 2) ;  permute_230 = None
        clone_55 = torch.clone(permute_232,memory_format = torch.contiguous_format) ;  permute_232 = None
        _unsafe_view_51 = clone_55.view(8, 512, 131072) ;  clone_55 = None
        bmm_38 = torch.bmm(view_364,_unsafe_view_51) ;  view_364 = _unsafe_view_51 = None
        view_365 = bmm_38.view(8, 512, 1, 1, 4096, 32) ;  bmm_38 = None
        permute_233 = view_365.permute(3, 4, 1, 0, 5, 2) ;  view_365 = None
        view_366 = permute_233.view(1, 4096, 512, 8, 32) ;  permute_233 = None
        mul_35 = torch.mul(sigmoid_20,view_366) ;  sigmoid_20 = view_366 = None
        view_367 = mul_35.view(1, 4096, 512, 256) ;  mul_35 = None
        _to_copy_227 = arg68_1.to(dtype = torch.bfloat16) 
        t_76 = _to_copy_227.t() ;  _to_copy_227 = None
        view_368 = view_367.view(2097152, 256) ;  view_367 = None
        mm_71 = torch.mm(view_368,t_76) ;  view_368 = t_76 = None
        view_369 = mm_71.view(1, 4096, 512, 64) ;  mm_71 = None
        slice_104 = add_19[0:] 
        slice_105 = slice_104[:, 8192:12288] ;  slice_104 = None
        slice_106 = slice_105[:, :, 0:] ;  slice_105 = None
        slice_107 = slice_106[:, :, :, 0:] ;  slice_106 = None
        slice_108 = arg1403_1[0:] 
        slice_109 = slice_108[:, 8192:12288] ;  slice_108 = None
        slice_110 = slice_109[:, :, 0:] ;  slice_109 = None
        _to_copy_228 = add_28.to(dtype = torch.float32) 
        native_layer_norm_default_49 = (torch.nn.functional.layer_norm(_to_copy_228,[256],arg65_1,arg66_1,1e-05),) ;  _to_copy_228 = None
        getitem_307 = native_layer_norm_default_49[0]
        _to_copy_229 = arg67_1.to(dtype = torch.bfloat16) 
        _to_copy_230 = getitem_307.to(dtype = torch.bfloat16) ;  getitem_307 = None
        t_77 = _to_copy_229.t() ;  _to_copy_229 = None
        view_370 = _to_copy_230.view(262144, 256) ;  _to_copy_230 = None
        mm_72 = torch.mm(view_370,t_77) ;  view_370 = t_77 = None
        view_371 = mm_72.view(1, 512, 512, 8) ;  mm_72 = None
        permute_234 = view_371.permute(0, 3, 1, 2) ;  view_371 = None
        view_372 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_29 = torch.bitwise_not(view_372) ;  view_372 = None
        masked_fill_29 = permute_234.masked_fill(bitwise_not_29,-10000) ;  permute_234 = bitwise_not_29 = None
        _to_copy_231 = masked_fill_29.to(dtype = torch.float32) ;  masked_fill_29 = None
        _softmax_6 = torch.softmax(_to_copy_231, dim = -1) ;  _to_copy_231 = None
        _to_copy_232 = slice_107.to(dtype = torch.float32) ;  slice_107 = None
        native_layer_norm_default_50 = (torch.nn.functional.layer_norm(_to_copy_232,[64],arg62_1,arg63_1,1e-05),) ;  _to_copy_232 = None
        getitem_310 = native_layer_norm_default_50[0]
        _to_copy_233 = arg64_1.to(dtype = torch.bfloat16) 
        _to_copy_234 = getitem_310.to(dtype = torch.bfloat16) ;  getitem_310 = None
        t_78 = _to_copy_233.t() ;  _to_copy_233 = None
        view_373 = _to_copy_234.view(2097152, 64) ;  _to_copy_234 = None
        mm_73 = torch.mm(view_373,t_78) ;  view_373 = t_78 = None
        view_374 = mm_73.view(1, 4096, 512, 512) ;  mm_73 = None
        view_375 = view_374.view(1, 4096, 512, 2, 8, 32) ;  view_374 = None
        permute_235 = view_375.permute(3, 0, 1, 2, 4, 5) ;  view_375 = None
        unbind_int_20 = torch.unbind(permute_235) ;  permute_235 = None
        getitem_313 = unbind_int_20[0]
        getitem_314 = unbind_int_20[1];  unbind_int_20 = None
        sigmoid_21 = torch.sigmoid(getitem_314) ;  getitem_314 = None
        bitwise_not_30 = torch.bitwise_not(slice_110) ;  slice_110 = None
        view_376 = bitwise_not_30.view(1, 4096, 512, 1, 1) ;  bitwise_not_30 = None
        masked_fill_30 = getitem_313.masked_fill(view_376,0) ;  getitem_313 = view_376 = None
        _to_copy_235 = _softmax_6.to(dtype = torch.bfloat16) ;  _softmax_6 = None
        unsqueeze_167 = torch.unsqueeze(_to_copy_235,4) ;  _to_copy_235 = None
        unsqueeze_168 = torch.unsqueeze(unsqueeze_167,5) ;  unsqueeze_167 = None
        permute_236 = unsqueeze_168.permute(0, 4, 2, 1, 5, 3) ;  unsqueeze_168 = None
        unsqueeze_169 = torch.unsqueeze(masked_fill_30,5) ;  masked_fill_30 = None
        permute_237 = unsqueeze_169.permute(0, 1, 5, 3, 4, 2) ;  unsqueeze_169 = None
        permute_238 = permute_236.permute(3, 2, 5, 0, 1, 4) ;  permute_236 = None
        view_377 = permute_238.view(8, 512, 512) ;  permute_238 = None
        permute_239 = permute_237.permute(3, 5, 0, 1, 4, 2) ;  permute_237 = None
        clone_56 = torch.clone(permute_239,memory_format = torch.contiguous_format) ;  permute_239 = None
        _unsafe_view_52 = clone_56.view(8, 512, 131072) ;  clone_56 = None
        bmm_39 = torch.bmm(view_377,_unsafe_view_52) ;  view_377 = _unsafe_view_52 = None
        view_378 = bmm_39.view(8, 512, 1, 1, 4096, 32) ;  bmm_39 = None
        permute_240 = view_378.permute(3, 4, 1, 0, 5, 2) ;  view_378 = None
        view_379 = permute_240.view(1, 4096, 512, 8, 32) ;  permute_240 = None
        mul_36 = torch.mul(sigmoid_21,view_379) ;  sigmoid_21 = view_379 = None
        view_380 = mul_36.view(1, 4096, 512, 256) ;  mul_36 = None
        _to_copy_236 = arg68_1.to(dtype = torch.bfloat16) 
        t_79 = _to_copy_236.t() ;  _to_copy_236 = None
        view_381 = view_380.view(2097152, 256) ;  view_380 = None
        mm_74 = torch.mm(view_381,t_79) ;  view_381 = t_79 = None
        view_382 = mm_74.view(1, 4096, 512, 64) ;  mm_74 = None
        slice_111 = add_19[0:] ;  add_19 = None
        slice_112 = slice_111[:, 12288:16384] ;  slice_111 = None
        slice_113 = slice_112[:, :, 0:] ;  slice_112 = None
        slice_114 = slice_113[:, :, :, 0:] ;  slice_113 = None
        slice_115 = arg1403_1[0:] 
        slice_116 = slice_115[:, 12288:16384] ;  slice_115 = None
        slice_117 = slice_116[:, :, 0:] ;  slice_116 = None
        _to_copy_237 = add_28.to(dtype = torch.float32) 
        native_layer_norm_default_51 = (torch.nn.functional.layer_norm(_to_copy_237,[256],arg65_1,arg66_1,1e-05),) ;  _to_copy_237 = arg65_1 = arg66_1 = None
        getitem_315 = native_layer_norm_default_51[0]
        _to_copy_238 = arg67_1.to(dtype = torch.bfloat16) ;  arg67_1 = None
        _to_copy_239 = getitem_315.to(dtype = torch.bfloat16) ;  getitem_315 = None
        t_80 = _to_copy_238.t() ;  _to_copy_238 = None
        view_383 = _to_copy_239.view(262144, 256) ;  _to_copy_239 = None
        mm_75 = torch.mm(view_383,t_80) ;  view_383 = t_80 = None
        view_384 = mm_75.view(1, 512, 512, 8) ;  mm_75 = None
        permute_241 = view_384.permute(0, 3, 1, 2) ;  view_384 = None
        view_385 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_31 = torch.bitwise_not(view_385) ;  view_385 = None
        masked_fill_31 = permute_241.masked_fill(bitwise_not_31,-10000) ;  permute_241 = bitwise_not_31 = None
        _to_copy_240 = masked_fill_31.to(dtype = torch.float32) ;  masked_fill_31 = None
        _softmax_7 = torch.softmax(_to_copy_240, dim = -1) ;  _to_copy_240 = None
        _to_copy_241 = slice_114.to(dtype = torch.float32) ;  slice_114 = None
        native_layer_norm_default_52 = (torch.nn.functional.layer_norm(_to_copy_241,[64],arg62_1,arg63_1,1e-05),) ;  _to_copy_241 = arg62_1 = arg63_1 = None
        getitem_318 = native_layer_norm_default_52[0]
        _to_copy_242 = arg64_1.to(dtype = torch.bfloat16) ;  arg64_1 = None
        _to_copy_243 = getitem_318.to(dtype = torch.bfloat16) ;  getitem_318 = None
        t_81 = _to_copy_242.t() ;  _to_copy_242 = None
        view_386 = _to_copy_243.view(2097152, 64) ;  _to_copy_243 = None
        mm_76 = torch.mm(view_386,t_81) ;  view_386 = t_81 = None
        view_387 = mm_76.view(1, 4096, 512, 512) ;  mm_76 = None
        view_388 = view_387.view(1, 4096, 512, 2, 8, 32) ;  view_387 = None
        permute_242 = view_388.permute(3, 0, 1, 2, 4, 5) ;  view_388 = None
        unbind_int_21 = torch.unbind(permute_242) ;  permute_242 = None
        getitem_321 = unbind_int_21[0]
        getitem_322 = unbind_int_21[1];  unbind_int_21 = None
        sigmoid_22 = torch.sigmoid(getitem_322) ;  getitem_322 = None
        bitwise_not_32 = torch.bitwise_not(slice_117) ;  slice_117 = None
        view_389 = bitwise_not_32.view(1, 4096, 512, 1, 1) ;  bitwise_not_32 = None
        masked_fill_32 = getitem_321.masked_fill(view_389,0) ;  getitem_321 = view_389 = None
        _to_copy_244 = _softmax_7.to(dtype = torch.bfloat16) ;  _softmax_7 = None
        unsqueeze_170 = torch.unsqueeze(_to_copy_244,4) ;  _to_copy_244 = None
        unsqueeze_171 = torch.unsqueeze(unsqueeze_170,5) ;  unsqueeze_170 = None
        permute_243 = unsqueeze_171.permute(0, 4, 2, 1, 5, 3) ;  unsqueeze_171 = None
        unsqueeze_172 = torch.unsqueeze(masked_fill_32,5) ;  masked_fill_32 = None
        permute_244 = unsqueeze_172.permute(0, 1, 5, 3, 4, 2) ;  unsqueeze_172 = None
        permute_245 = permute_243.permute(3, 2, 5, 0, 1, 4) ;  permute_243 = None
        view_390 = permute_245.view(8, 512, 512) ;  permute_245 = None
        permute_246 = permute_244.permute(3, 5, 0, 1, 4, 2) ;  permute_244 = None
        clone_57 = torch.clone(permute_246,memory_format = torch.contiguous_format) ;  permute_246 = None
        _unsafe_view_53 = clone_57.view(8, 512, 131072) ;  clone_57 = None
        bmm_40 = torch.bmm(view_390,_unsafe_view_53) ;  view_390 = _unsafe_view_53 = None
        view_391 = bmm_40.view(8, 512, 1, 1, 4096, 32) ;  bmm_40 = None
        permute_247 = view_391.permute(3, 4, 1, 0, 5, 2) ;  view_391 = None
        view_392 = permute_247.view(1, 4096, 512, 8, 32) ;  permute_247 = None
        mul_37 = torch.mul(sigmoid_22,view_392) ;  sigmoid_22 = view_392 = None
        view_393 = mul_37.view(1, 4096, 512, 256) ;  mul_37 = None
        _to_copy_245 = arg68_1.to(dtype = torch.bfloat16) ;  arg68_1 = None
        t_82 = _to_copy_245.t() ;  _to_copy_245 = None
        view_394 = view_393.view(2097152, 256) ;  view_393 = None
        mm_77 = torch.mm(view_394,t_82) ;  view_394 = t_82 = None
        view_395 = mm_77.view(1, 4096, 512, 64) ;  mm_77 = None
        cat_6 = torch.cat([view_356,view_369,view_382,view_395],dim = 1) ;  view_356 = view_369 = view_382 = view_395 = None
        add_30 = torch.add(add_29,cat_6) ;  add_29 = cat_6 = None
        _to_copy_246 = add_28.to(dtype = torch.float32) 
        native_layer_norm_default_53 = (torch.nn.functional.layer_norm(_to_copy_246,[256],arg109_1,arg110_1,1e-05),) ;  _to_copy_246 = arg109_1 = arg110_1 = None
        getitem_323 = native_layer_norm_default_53[0]
        split_with_sizes_default_6 = torch.split(arg112_1,[512,512]) ;  arg112_1 = None
        getitem_326 = split_with_sizes_default_6[0]
        getitem_327 = split_with_sizes_default_6[1];  split_with_sizes_default_6 = None
        split_with_sizes_default_7 = torch.split(arg113_1,[512,512,256]) ;  arg113_1 = None
        getitem_328 = split_with_sizes_default_7[0]
        getitem_329 = split_with_sizes_default_7[1]
        getitem_330 = split_with_sizes_default_7[2];  split_with_sizes_default_7 = None
        _to_copy_247 = getitem_326.to(dtype = torch.bfloat16) ;  getitem_326 = None
        _to_copy_248 = getitem_323.to(dtype = torch.bfloat16) 
        t_83 = _to_copy_247.t() ;  _to_copy_247 = None
        view_396 = _to_copy_248.view(262144, 256) ;  _to_copy_248 = None
        mm_78 = torch.mm(view_396,t_83) ;  view_396 = t_83 = None
        view_397 = mm_78.view(1, 512, 512, 512) ;  mm_78 = None
        _to_copy_249 = getitem_328.to(dtype = torch.bfloat16) ;  getitem_328 = None
        _to_copy_250 = getitem_323.to(dtype = torch.bfloat16) 
        t_84 = _to_copy_249.t() ;  _to_copy_249 = None
        view_398 = _to_copy_250.view(262144, 256) ;  _to_copy_250 = None
        mm_79 = torch.mm(view_398,t_84) ;  view_398 = t_84 = None
        view_399 = mm_79.view(1, 512, 512, 512) ;  mm_79 = None
        sigmoid_23 = torch.sigmoid(view_399) ;  view_399 = None
        mul_38 = torch.mul(view_397,sigmoid_23) ;  view_397 = sigmoid_23 = None
        unsqueeze_173 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_33 = torch.bitwise_not(unsqueeze_173) ;  unsqueeze_173 = None
        masked_fill_33 = mul_38.masked_fill(bitwise_not_33,0) ;  mul_38 = bitwise_not_33 = None
        split_tensor_28 = torch.split(masked_fill_33,256,dim = -1) 
        getitem_333 = split_tensor_28[0]
        unsqueeze_176 = torch.unsqueeze(getitem_333,4) ;  getitem_333 = None
        permute_252 = unsqueeze_176.permute(0, 1, 4, 3, 2) ;  unsqueeze_176 = None
        permute_253 = permute_252.permute(3, 1, 4, 0, 2) ;  permute_252 = None
        view_402 = permute_253.view(256, 512, 512) ;  permute_253 = None
        split_tensor_29 = torch.split(masked_fill_33,256,dim = -1) ;  masked_fill_33 = None
        getitem_336 = split_tensor_29[1];  split_tensor_29 = None
        unsqueeze_177 = torch.unsqueeze(getitem_336,4) ;  getitem_336 = None
        permute_254 = unsqueeze_177.permute(0, 4, 1, 3, 2) ;  unsqueeze_177 = None
        permute_255 = permute_254.permute(3, 4, 0, 2, 1) ;  permute_254 = None
        view_403 = permute_255.view(256, 512, 512) ;  permute_255 = None
        bmm_41 = torch.bmm(view_402,view_403) ;  view_402 = view_403 = None
        view_404 = bmm_41.view(256, 512, 1, 1, 512) ;  bmm_41 = None
        permute_256 = view_404.permute(3, 1, 4, 0, 2) ;  view_404 = None
        view_405 = permute_256.view(1, 512, 512, 256) ;  permute_256 = None
        _to_copy_251 = getitem_327.to(dtype = torch.bfloat16) ;  getitem_327 = None
        _to_copy_252 = getitem_323.to(dtype = torch.bfloat16) 
        t_85 = _to_copy_251.t() ;  _to_copy_251 = None
        view_406 = _to_copy_252.view(262144, 256) ;  _to_copy_252 = None
        mm_80 = torch.mm(view_406,t_85) ;  view_406 = t_85 = None
        view_407 = mm_80.view(1, 512, 512, 512) ;  mm_80 = None
        _to_copy_253 = getitem_329.to(dtype = torch.bfloat16) ;  getitem_329 = None
        _to_copy_254 = getitem_323.to(dtype = torch.bfloat16) 
        t_86 = _to_copy_253.t() ;  _to_copy_253 = None
        view_408 = _to_copy_254.view(262144, 256) ;  _to_copy_254 = None
        mm_81 = torch.mm(view_408,t_86) ;  view_408 = t_86 = None
        view_409 = mm_81.view(1, 512, 512, 512) ;  mm_81 = None
        sigmoid_24 = torch.sigmoid(view_409) ;  view_409 = None
        mul_39 = torch.mul(view_407,sigmoid_24) ;  view_407 = sigmoid_24 = None
        view_410 = mul_39.view(262144, 512) ;  mul_39 = None
        view_411 = view_410.view(1, 512, 512, 512) ;  view_410 = None
        transpose_6 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_178 = torch.unsqueeze(transpose_6,3) ;  transpose_6 = None
        clone_58 = torch.clone(unsqueeze_178,memory_format = torch.contiguous_format) ;  unsqueeze_178 = None
        bitwise_not_34 = torch.bitwise_not(clone_58) ;  clone_58 = None
        masked_fill_34 = view_411.masked_fill(bitwise_not_34,0) ;  view_411 = bitwise_not_34 = None
        view_412 = masked_fill_34.view(262144, 512) ;  masked_fill_34 = None
        view_416 = view_412.view(1, 512, 512, 512) 
        split_tensor_30 = torch.split(view_416,256,dim = -1) ;  view_416 = None
        getitem_339 = split_tensor_30[0]
        unsqueeze_181 = torch.unsqueeze(getitem_339,4) ;  getitem_339 = None
        permute_261 = unsqueeze_181.permute(0, 2, 4, 3, 1) ;  unsqueeze_181 = None
        permute_262 = permute_261.permute(3, 1, 4, 0, 2) ;  permute_261 = None
        view_417 = permute_262.view(256, 512, 512) ;  permute_262 = None
        view_418 = view_412.view(1, 512, 512, 512) ;  view_412 = None
        split_tensor_31 = torch.split(view_418,256,dim = -1) ;  view_418 = None
        getitem_342 = split_tensor_31[1];  split_tensor_31 = None
        unsqueeze_182 = torch.unsqueeze(getitem_342,4) ;  getitem_342 = None
        permute_263 = unsqueeze_182.permute(0, 4, 2, 3, 1) ;  unsqueeze_182 = None
        permute_264 = permute_263.permute(3, 4, 0, 2, 1) ;  permute_263 = None
        view_419 = permute_264.view(256, 512, 512) ;  permute_264 = None
        bmm_42 = torch.bmm(view_417,view_419) ;  view_417 = view_419 = None
        view_420 = bmm_42.view(256, 512, 1, 1, 512) ;  bmm_42 = None
        permute_265 = view_420.permute(3, 1, 4, 0, 2) ;  view_420 = None
        view_421 = permute_265.view(1, 512, 512, 256) ;  permute_265 = None
        _to_copy_255 = view_405.to(dtype = torch.float32) ;  view_405 = None
        native_layer_norm_default_54 = (torch.nn.functional.layer_norm(_to_copy_255,[256],None,None,1e-05),) ;  _to_copy_255 = None
        getitem_343 = native_layer_norm_default_54[0]
        _to_copy_256 = view_421.to(dtype = torch.float32) ;  view_421 = None
        native_layer_norm_default_55 = (torch.nn.functional.layer_norm(_to_copy_256,[256],None,None,1e-05),) ;  _to_copy_256 = None
        getitem_346 = native_layer_norm_default_55[0]
        add_31 = torch.add(getitem_343,getitem_346) ;  getitem_343 = getitem_346 = None
        _to_copy_257 = arg111_1.to(dtype = torch.bfloat16) ;  arg111_1 = None
        _to_copy_258 = add_31.to(dtype = torch.bfloat16) ;  add_31 = None
        t_87 = _to_copy_257.t() ;  _to_copy_257 = None
        view_422 = _to_copy_258.view(262144, 256) ;  _to_copy_258 = None
        mm_82 = torch.mm(view_422,t_87) ;  view_422 = t_87 = None
        view_423 = mm_82.view(1, 512, 512, 256) ;  mm_82 = None
        _to_copy_259 = getitem_330.to(dtype = torch.bfloat16) ;  getitem_330 = None
        _to_copy_260 = getitem_323.to(dtype = torch.bfloat16) ;  getitem_323 = None
        t_88 = _to_copy_259.t() ;  _to_copy_259 = None
        view_424 = _to_copy_260.view(262144, 256) ;  _to_copy_260 = None
        mm_83 = torch.mm(view_424,t_88) ;  view_424 = t_88 = None
        view_425 = mm_83.view(1, 512, 512, 256) ;  mm_83 = None
        sigmoid_25 = torch.sigmoid(view_425) ;  view_425 = None
        mul_40 = torch.mul(view_423,sigmoid_25) ;  view_423 = sigmoid_25 = None
        add_32 = torch.add(add_28,mul_40) ;  mul_40 = None
        split_tensor_32 = torch.split(add_28,512,dim = -2) ;  add_28 = None
        getitem_349 = split_tensor_32[0];  split_tensor_32 = None
        _to_copy_261 = getitem_349.to(dtype = torch.float32) ;  getitem_349 = None
        native_layer_norm_default_56 = (torch.nn.functional.layer_norm(_to_copy_261,[256],arg92_1,arg93_1,1e-05),) ;  _to_copy_261 = arg92_1 = arg93_1 = None
        getitem_350 = native_layer_norm_default_56[0]
        _to_copy_262 = arg94_1.to(dtype = torch.bfloat16) ;  arg94_1 = None
        _to_copy_263 = getitem_350.to(dtype = torch.bfloat16) ;  getitem_350 = None
        t_89 = _to_copy_262.t() ;  _to_copy_262 = None
        view_426 = _to_copy_263.view(262144, 256) ;  _to_copy_263 = None
        mm_84 = torch.mm(view_426,t_89) ;  view_426 = t_89 = None
        view_427 = mm_84.view(1, 512, 512, 2048) ;  mm_84 = None
        split_tensor_33 = torch.split(view_427,1024,dim = -1) ;  view_427 = None
        getitem_353 = split_tensor_33[0]
        getitem_354 = split_tensor_33[1];  split_tensor_33 = None
        silu_11 = torch.nn.functional.silu(getitem_353) ;  getitem_353 = None
        mul_41 = torch.mul(silu_11,getitem_354) ;  silu_11 = getitem_354 = None
        _to_copy_264 = arg95_1.to(dtype = torch.bfloat16) ;  arg95_1 = None
        t_90 = _to_copy_264.t() ;  _to_copy_264 = None
        view_429 = mul_41.view(262144, 1024) ;  mul_41 = None
        mm_85 = torch.mm(view_429,t_90) ;  view_429 = t_90 = None
        view_430 = mm_85.view(1, 512, 512, 256) ;  mm_85 = None
        add_33 = torch.add(add_32,view_430) ;  add_32 = view_430 = None
        _to_copy_265 = add_33.to(dtype = torch.float32) 
        native_layer_norm_default_57 = (torch.nn.functional.layer_norm(_to_copy_265,[256],None,None,1e-05),) ;  _to_copy_265 = None
        getitem_355 = native_layer_norm_default_57[0]
        _to_copy_266 = arg130_1.to(dtype = torch.bfloat16) ;  arg130_1 = None
        _to_copy_267 = getitem_355.to(dtype = torch.bfloat16) 
        t_91 = _to_copy_266.t() ;  _to_copy_266 = None
        view_431 = _to_copy_267.view(262144, 256) ;  _to_copy_267 = None
        mm_86 = torch.mm(view_431,t_91) ;  view_431 = t_91 = None
        view_432 = mm_86.view(1, 512, 512, 8) ;  mm_86 = None
        view_433 = view_432.view(1, 512, 512, 2, 4) ;  view_432 = None
        permute_266 = view_433.permute(0, 3, 4, 1, 2) ;  view_433 = None
        view_434 = permute_266.view(1, 2, 4, 1, 512, 512) ;  permute_266 = None
        view_435 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_35 = torch.bitwise_not(view_435) ;  view_435 = None
        masked_fill_35 = view_434.masked_fill(bitwise_not_35,-10000) ;  view_434 = bitwise_not_35 = None
        view_436 = masked_fill_35.view(1, 2, 4, 512, 512) ;  masked_fill_35 = None
        permute_267 = view_436.permute(1, 0, 2, 3, 4) ;  view_436 = None
        view_437 = permute_267.view(2, 4, 1, 512, 512) ;  permute_267 = None
        _to_copy_268 = arg131_1.to(dtype = torch.bfloat16) ;  arg131_1 = None
        _to_copy_269 = getitem_355.to(dtype = torch.bfloat16) 
        t_92 = _to_copy_268.t() ;  _to_copy_268 = None
        view_438 = _to_copy_269.view(262144, 256) ;  _to_copy_269 = None
        mm_87 = torch.mm(view_438,t_92) ;  view_438 = t_92 = None
        view_439 = mm_87.view(1, 512, 512, 1024) ;  mm_87 = None
        select_7 = torch.select(view_437,0,0) 
        view_440 = view_439.view(1, 512, 512, 4, 4, 64) ;  view_439 = None
        permute_268 = view_440.permute(4, 0, 3, 1, 2, 5) ;  view_440 = None
        view_441 = permute_268.view(4, 4, 512, 512, 64) ;  permute_268 = None
        unbind_int_22 = torch.unbind(view_441) ;  view_441 = None
        getitem_358 = unbind_int_22[0]
        getitem_359 = unbind_int_22[1]
        getitem_360 = unbind_int_22[2]
        getitem_361 = unbind_int_22[3];  unbind_int_22 = None
        expand_15 = select_7.expand(4, 512, 512, 512) ;  select_7 = None
        _scaled_dot_product_efficient_attention_default_6 = (torch.nn.functional.scaled_dot_product_attention(getitem_358,getitem_359,getitem_360,expand_15,False),) ;  getitem_358 = getitem_359 = getitem_360 = expand_15 = None
        getitem_362 = _scaled_dot_product_efficient_attention_default_6[0]
        sigmoid_26 = torch.sigmoid(getitem_361) ;  getitem_361 = None
        mul_42 = torch.mul(getitem_362,sigmoid_26) ;  getitem_362 = sigmoid_26 = None
        view_442 = mul_42.view(1, 4, 512, 512, 64) ;  mul_42 = None
        permute_269 = view_442.permute(0, 2, 3, 1, 4) ;  view_442 = None
        clone_59 = torch.clone(permute_269,memory_format = torch.contiguous_format) ;  permute_269 = None
        _unsafe_view_54 = clone_59.view(1, 512, 512, 256) ;  clone_59 = None
        transpose_7 = torch.transpose(getitem_355,1,2) ;  getitem_355 = None
        _to_copy_270 = arg132_1.to(dtype = torch.bfloat16) ;  arg132_1 = None
        _to_copy_271 = transpose_7.to(dtype = torch.bfloat16) ;  transpose_7 = None
        t_93 = _to_copy_270.t() ;  _to_copy_270 = None
        expand_16 = _to_copy_271.expand(1, 512, 512, 256) ;  _to_copy_271 = None
        view_443 = expand_16.view(512, 512, 256) ;  expand_16 = None
        expand_17 = t_93.expand(1, 512, 256, 1024) ;  t_93 = None
        view_444 = expand_17.view(512, 256, 1024) ;  expand_17 = None
        bmm_43 = torch.bmm(view_443,view_444) ;  view_443 = view_444 = None
        view_445 = bmm_43.view(1, 512, 512, 1024) ;  bmm_43 = None
        select_8 = torch.select(view_437,0,1) ;  view_437 = None
        view_446 = view_445.view(1, 512, 512, 4, 4, 64) ;  view_445 = None
        permute_270 = view_446.permute(4, 0, 3, 1, 2, 5) ;  view_446 = None
        view_447 = permute_270.view(4, 4, 512, 512, 64) ;  permute_270 = None
        unbind_int_23 = torch.unbind(view_447) ;  view_447 = None
        getitem_366 = unbind_int_23[0]
        getitem_367 = unbind_int_23[1]
        getitem_368 = unbind_int_23[2]
        getitem_369 = unbind_int_23[3];  unbind_int_23 = None
        expand_18 = select_8.expand(4, 512, 512, 512) ;  select_8 = None
        _scaled_dot_product_efficient_attention_default_7 = (torch.nn.functional.scaled_dot_product_attention(getitem_366,getitem_367,getitem_368,expand_18,False),) ;  getitem_366 = getitem_367 = getitem_368 = expand_18 = None
        getitem_370 = _scaled_dot_product_efficient_attention_default_7[0]
        sigmoid_27 = torch.sigmoid(getitem_369) ;  getitem_369 = None
        mul_43 = torch.mul(getitem_370,sigmoid_27) ;  getitem_370 = sigmoid_27 = None
        view_448 = mul_43.view(1, 4, 512, 512, 64) ;  mul_43 = None
        permute_271 = view_448.permute(0, 2, 3, 1, 4) ;  view_448 = None
        clone_60 = torch.clone(permute_271,memory_format = torch.contiguous_format) ;  permute_271 = None
        _unsafe_view_55 = clone_60.view(1, 512, 512, 256) ;  clone_60 = None
        cat_7 = torch.cat([_unsafe_view_54,_unsafe_view_55],dim = -1) ;  _unsafe_view_54 = _unsafe_view_55 = None
        slice_118 = arg129_1[0:] ;  arg129_1 = None
        unsqueeze_183 = torch.unsqueeze(slice_118,1) ;  slice_118 = None
        mul_44 = torch.mul(arg133_1,unsqueeze_183) ;  arg133_1 = unsqueeze_183 = None
        _to_copy_272 = mul_44.to(dtype = torch.bfloat16) ;  mul_44 = None
        t_94 = _to_copy_272.t() ;  _to_copy_272 = None
        view_449 = cat_7.view(262144, 512) ;  cat_7 = None
        mm_88 = torch.mm(view_449,t_94) ;  view_449 = t_94 = None
        view_450 = mm_88.view(1, 512, 512, 256) ;  mm_88 = None
        add_34 = torch.add(add_33,view_450) ;  add_33 = view_450 = None
        slice_119 = add_30[0:] 
        slice_120 = slice_119[:, 0:4096] ;  slice_119 = None
        slice_121 = slice_120[:, :, 0:] ;  slice_120 = None
        slice_122 = slice_121[:, :, :, 0:] ;  slice_121 = None
        slice_123 = arg1403_1[0:] 
        slice_124 = slice_123[:, 0:4096] ;  slice_123 = None
        slice_125 = slice_124[:, :, 0:] ;  slice_124 = None
        _to_copy_273 = slice_122.to(dtype = torch.float32) ;  slice_122 = None
        native_layer_norm_default_58 = (torch.nn.functional.layer_norm(_to_copy_273,[64],None,None,1e-05),) ;  _to_copy_273 = None
        getitem_374 = native_layer_norm_default_58[0]
        view_451 = slice_125.view(1, 4096, 512, 1) ;  slice_125 = None
        bitwise_not_36 = torch.bitwise_not(view_451) ;  view_451 = None
        masked_fill_36 = getitem_374.masked_fill(bitwise_not_36,0) ;  getitem_374 = bitwise_not_36 = None
        unbind_int_24 = torch.unbind(arg45_1) 
        getitem_377 = unbind_int_24[0]
        getitem_378 = unbind_int_24[1];  unbind_int_24 = None
        _to_copy_274 = getitem_377.to(dtype = torch.bfloat16) ;  getitem_377 = None
        _to_copy_275 = masked_fill_36.to(dtype = torch.bfloat16) 
        unsqueeze_184 = torch.unsqueeze(_to_copy_274,3) ;  _to_copy_274 = None
        unsqueeze_185 = torch.unsqueeze(unsqueeze_184,4) ;  unsqueeze_184 = None
        unsqueeze_186 = torch.unsqueeze(unsqueeze_185,5) ;  unsqueeze_185 = None
        permute_272 = unsqueeze_186.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_186 = None
        unsqueeze_187 = torch.unsqueeze(_to_copy_275,4) ;  _to_copy_275 = None
        unsqueeze_188 = torch.unsqueeze(unsqueeze_187,5) ;  unsqueeze_187 = None
        permute_273 = unsqueeze_188.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_188 = None
        permute_274 = permute_272.permute(0, 1, 5, 2, 3, 4) ;  permute_272 = None
        view_452 = permute_274.view(1, 64, 64) ;  permute_274 = None
        permute_275 = permute_273.permute(5, 2, 3, 4, 0, 1) ;  permute_273 = None
        view_453 = permute_275.view(1, 64, 2097152) ;  permute_275 = None
        bmm_44 = torch.bmm(view_452,view_453) ;  view_452 = view_453 = None
        view_454 = bmm_44.view(8, 8, 1, 1, 4096, 512) ;  bmm_44 = None
        permute_276 = view_454.permute(0, 1, 3, 4, 5, 2) ;  view_454 = None
        view_455 = permute_276.view(8, 8, 1, 4096, 512) ;  permute_276 = None
        _to_copy_276 = getitem_378.to(dtype = torch.bfloat16) ;  getitem_378 = None
        _to_copy_277 = masked_fill_36.to(dtype = torch.bfloat16) ;  masked_fill_36 = None
        unsqueeze_189 = torch.unsqueeze(_to_copy_276,3) ;  _to_copy_276 = None
        unsqueeze_190 = torch.unsqueeze(unsqueeze_189,4) ;  unsqueeze_189 = None
        unsqueeze_191 = torch.unsqueeze(unsqueeze_190,5) ;  unsqueeze_190 = None
        permute_277 = unsqueeze_191.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_191 = None
        unsqueeze_192 = torch.unsqueeze(_to_copy_277,4) ;  _to_copy_277 = None
        unsqueeze_193 = torch.unsqueeze(unsqueeze_192,5) ;  unsqueeze_192 = None
        permute_278 = unsqueeze_193.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_193 = None
        permute_279 = permute_277.permute(0, 1, 5, 2, 3, 4) ;  permute_277 = None
        view_456 = permute_279.view(1, 64, 64) ;  permute_279 = None
        permute_280 = permute_278.permute(5, 2, 3, 4, 0, 1) ;  permute_278 = None
        view_457 = permute_280.view(1, 64, 2097152) ;  permute_280 = None
        bmm_45 = torch.bmm(view_456,view_457) ;  view_456 = view_457 = None
        view_458 = bmm_45.view(8, 8, 1, 1, 4096, 512) ;  bmm_45 = None
        permute_281 = view_458.permute(0, 1, 3, 4, 5, 2) ;  view_458 = None
        view_459 = permute_281.view(8, 8, 1, 4096, 512) ;  permute_281 = None
        unsqueeze_194 = torch.unsqueeze(view_455,5) ;  view_455 = None
        unsqueeze_195 = torch.unsqueeze(unsqueeze_194,6) ;  unsqueeze_194 = None
        permute_282 = unsqueeze_195.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_195 = None
        unsqueeze_196 = torch.unsqueeze(view_459,5) ;  view_459 = None
        unsqueeze_197 = torch.unsqueeze(unsqueeze_196,6) ;  unsqueeze_196 = None
        permute_283 = unsqueeze_197.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_197 = None
        permute_284 = permute_282.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_282 = None
        clone_61 = torch.clone(permute_284,memory_format = torch.contiguous_format) ;  permute_284 = None
        _unsafe_view_56 = clone_61.view(8, 4096, 4096) ;  clone_61 = None
        permute_285 = permute_283.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_283 = None
        clone_62 = torch.clone(permute_285,memory_format = torch.contiguous_format) ;  permute_285 = None
        _unsafe_view_57 = clone_62.view(8, 4096, 4096) ;  clone_62 = None
        bmm_46 = torch.bmm(_unsafe_view_56,_unsafe_view_57) ;  _unsafe_view_56 = _unsafe_view_57 = None
        view_460 = bmm_46.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_46 = None
        permute_286 = view_460.permute(4, 1, 5, 0, 2, 6, 3) ;  view_460 = None
        view_461 = permute_286.view(1, 512, 512, 8, 8, 8) ;  permute_286 = None
        clone_63 = torch.clone(view_461,memory_format = torch.contiguous_format) ;  view_461 = None
        _unsafe_view_58 = clone_63.view(1, 512, 512, 512) ;  clone_63 = None
        add_35 = torch.add(_unsafe_view_58,0) ;  _unsafe_view_58 = None
        slice_126 = add_30[0:] 
        slice_127 = slice_126[:, 4096:8192] ;  slice_126 = None
        slice_128 = slice_127[:, :, 0:] ;  slice_127 = None
        slice_129 = slice_128[:, :, :, 0:] ;  slice_128 = None
        slice_130 = arg1403_1[0:] 
        slice_131 = slice_130[:, 4096:8192] ;  slice_130 = None
        slice_132 = slice_131[:, :, 0:] ;  slice_131 = None
        _to_copy_278 = slice_129.to(dtype = torch.float32) ;  slice_129 = None
        native_layer_norm_default_59 = (torch.nn.functional.layer_norm(_to_copy_278,[64],None,None,1e-05),) ;  _to_copy_278 = None
        getitem_379 = native_layer_norm_default_59[0]
        view_462 = slice_132.view(1, 4096, 512, 1) ;  slice_132 = None
        bitwise_not_37 = torch.bitwise_not(view_462) ;  view_462 = None
        masked_fill_37 = getitem_379.masked_fill(bitwise_not_37,0) ;  getitem_379 = bitwise_not_37 = None
        unbind_int_25 = torch.unbind(arg45_1) 
        getitem_382 = unbind_int_25[0]
        getitem_383 = unbind_int_25[1];  unbind_int_25 = None
        _to_copy_279 = getitem_382.to(dtype = torch.bfloat16) ;  getitem_382 = None
        _to_copy_280 = masked_fill_37.to(dtype = torch.bfloat16) 
        unsqueeze_198 = torch.unsqueeze(_to_copy_279,3) ;  _to_copy_279 = None
        unsqueeze_199 = torch.unsqueeze(unsqueeze_198,4) ;  unsqueeze_198 = None
        unsqueeze_200 = torch.unsqueeze(unsqueeze_199,5) ;  unsqueeze_199 = None
        permute_287 = unsqueeze_200.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_200 = None
        unsqueeze_201 = torch.unsqueeze(_to_copy_280,4) ;  _to_copy_280 = None
        unsqueeze_202 = torch.unsqueeze(unsqueeze_201,5) ;  unsqueeze_201 = None
        permute_288 = unsqueeze_202.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_202 = None
        permute_289 = permute_287.permute(0, 1, 5, 2, 3, 4) ;  permute_287 = None
        view_463 = permute_289.view(1, 64, 64) ;  permute_289 = None
        permute_290 = permute_288.permute(5, 2, 3, 4, 0, 1) ;  permute_288 = None
        view_464 = permute_290.view(1, 64, 2097152) ;  permute_290 = None
        bmm_47 = torch.bmm(view_463,view_464) ;  view_463 = view_464 = None
        view_465 = bmm_47.view(8, 8, 1, 1, 4096, 512) ;  bmm_47 = None
        permute_291 = view_465.permute(0, 1, 3, 4, 5, 2) ;  view_465 = None
        view_466 = permute_291.view(8, 8, 1, 4096, 512) ;  permute_291 = None
        _to_copy_281 = getitem_383.to(dtype = torch.bfloat16) ;  getitem_383 = None
        _to_copy_282 = masked_fill_37.to(dtype = torch.bfloat16) ;  masked_fill_37 = None
        unsqueeze_203 = torch.unsqueeze(_to_copy_281,3) ;  _to_copy_281 = None
        unsqueeze_204 = torch.unsqueeze(unsqueeze_203,4) ;  unsqueeze_203 = None
        unsqueeze_205 = torch.unsqueeze(unsqueeze_204,5) ;  unsqueeze_204 = None
        permute_292 = unsqueeze_205.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_205 = None
        unsqueeze_206 = torch.unsqueeze(_to_copy_282,4) ;  _to_copy_282 = None
        unsqueeze_207 = torch.unsqueeze(unsqueeze_206,5) ;  unsqueeze_206 = None
        permute_293 = unsqueeze_207.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_207 = None
        permute_294 = permute_292.permute(0, 1, 5, 2, 3, 4) ;  permute_292 = None
        view_467 = permute_294.view(1, 64, 64) ;  permute_294 = None
        permute_295 = permute_293.permute(5, 2, 3, 4, 0, 1) ;  permute_293 = None
        view_468 = permute_295.view(1, 64, 2097152) ;  permute_295 = None
        bmm_48 = torch.bmm(view_467,view_468) ;  view_467 = view_468 = None
        view_469 = bmm_48.view(8, 8, 1, 1, 4096, 512) ;  bmm_48 = None
        permute_296 = view_469.permute(0, 1, 3, 4, 5, 2) ;  view_469 = None
        view_470 = permute_296.view(8, 8, 1, 4096, 512) ;  permute_296 = None
        unsqueeze_208 = torch.unsqueeze(view_466,5) ;  view_466 = None
        unsqueeze_209 = torch.unsqueeze(unsqueeze_208,6) ;  unsqueeze_208 = None
        permute_297 = unsqueeze_209.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_209 = None
        unsqueeze_210 = torch.unsqueeze(view_470,5) ;  view_470 = None
        unsqueeze_211 = torch.unsqueeze(unsqueeze_210,6) ;  unsqueeze_210 = None
        permute_298 = unsqueeze_211.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_211 = None
        permute_299 = permute_297.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_297 = None
        clone_64 = torch.clone(permute_299,memory_format = torch.contiguous_format) ;  permute_299 = None
        _unsafe_view_59 = clone_64.view(8, 4096, 4096) ;  clone_64 = None
        permute_300 = permute_298.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_298 = None
        clone_65 = torch.clone(permute_300,memory_format = torch.contiguous_format) ;  permute_300 = None
        _unsafe_view_60 = clone_65.view(8, 4096, 4096) ;  clone_65 = None
        bmm_49 = torch.bmm(_unsafe_view_59,_unsafe_view_60) ;  _unsafe_view_59 = _unsafe_view_60 = None
        view_471 = bmm_49.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_49 = None
        permute_301 = view_471.permute(4, 1, 5, 0, 2, 6, 3) ;  view_471 = None
        view_472 = permute_301.view(1, 512, 512, 8, 8, 8) ;  permute_301 = None
        clone_66 = torch.clone(view_472,memory_format = torch.contiguous_format) ;  view_472 = None
        _unsafe_view_61 = clone_66.view(1, 512, 512, 512) ;  clone_66 = None
        add_36 = torch.add(add_35,_unsafe_view_61) ;  add_35 = _unsafe_view_61 = None
        slice_133 = add_30[0:] 
        slice_134 = slice_133[:, 8192:12288] ;  slice_133 = None
        slice_135 = slice_134[:, :, 0:] ;  slice_134 = None
        slice_136 = slice_135[:, :, :, 0:] ;  slice_135 = None
        slice_137 = arg1403_1[0:] 
        slice_138 = slice_137[:, 8192:12288] ;  slice_137 = None
        slice_139 = slice_138[:, :, 0:] ;  slice_138 = None
        _to_copy_283 = slice_136.to(dtype = torch.float32) ;  slice_136 = None
        native_layer_norm_default_60 = (torch.nn.functional.layer_norm(_to_copy_283,[64],None,None,1e-05),) ;  _to_copy_283 = None
        getitem_384 = native_layer_norm_default_60[0]
        view_473 = slice_139.view(1, 4096, 512, 1) ;  slice_139 = None
        bitwise_not_38 = torch.bitwise_not(view_473) ;  view_473 = None
        masked_fill_38 = getitem_384.masked_fill(bitwise_not_38,0) ;  getitem_384 = bitwise_not_38 = None
        unbind_int_26 = torch.unbind(arg45_1) 
        getitem_387 = unbind_int_26[0]
        getitem_388 = unbind_int_26[1];  unbind_int_26 = None
        _to_copy_284 = getitem_387.to(dtype = torch.bfloat16) ;  getitem_387 = None
        _to_copy_285 = masked_fill_38.to(dtype = torch.bfloat16) 
        unsqueeze_212 = torch.unsqueeze(_to_copy_284,3) ;  _to_copy_284 = None
        unsqueeze_213 = torch.unsqueeze(unsqueeze_212,4) ;  unsqueeze_212 = None
        unsqueeze_214 = torch.unsqueeze(unsqueeze_213,5) ;  unsqueeze_213 = None
        permute_302 = unsqueeze_214.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_214 = None
        unsqueeze_215 = torch.unsqueeze(_to_copy_285,4) ;  _to_copy_285 = None
        unsqueeze_216 = torch.unsqueeze(unsqueeze_215,5) ;  unsqueeze_215 = None
        permute_303 = unsqueeze_216.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_216 = None
        permute_304 = permute_302.permute(0, 1, 5, 2, 3, 4) ;  permute_302 = None
        view_474 = permute_304.view(1, 64, 64) ;  permute_304 = None
        permute_305 = permute_303.permute(5, 2, 3, 4, 0, 1) ;  permute_303 = None
        view_475 = permute_305.view(1, 64, 2097152) ;  permute_305 = None
        bmm_50 = torch.bmm(view_474,view_475) ;  view_474 = view_475 = None
        view_476 = bmm_50.view(8, 8, 1, 1, 4096, 512) ;  bmm_50 = None
        permute_306 = view_476.permute(0, 1, 3, 4, 5, 2) ;  view_476 = None
        view_477 = permute_306.view(8, 8, 1, 4096, 512) ;  permute_306 = None
        _to_copy_286 = getitem_388.to(dtype = torch.bfloat16) ;  getitem_388 = None
        _to_copy_287 = masked_fill_38.to(dtype = torch.bfloat16) ;  masked_fill_38 = None
        unsqueeze_217 = torch.unsqueeze(_to_copy_286,3) ;  _to_copy_286 = None
        unsqueeze_218 = torch.unsqueeze(unsqueeze_217,4) ;  unsqueeze_217 = None
        unsqueeze_219 = torch.unsqueeze(unsqueeze_218,5) ;  unsqueeze_218 = None
        permute_307 = unsqueeze_219.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_219 = None
        unsqueeze_220 = torch.unsqueeze(_to_copy_287,4) ;  _to_copy_287 = None
        unsqueeze_221 = torch.unsqueeze(unsqueeze_220,5) ;  unsqueeze_220 = None
        permute_308 = unsqueeze_221.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_221 = None
        permute_309 = permute_307.permute(0, 1, 5, 2, 3, 4) ;  permute_307 = None
        view_478 = permute_309.view(1, 64, 64) ;  permute_309 = None
        permute_310 = permute_308.permute(5, 2, 3, 4, 0, 1) ;  permute_308 = None
        view_479 = permute_310.view(1, 64, 2097152) ;  permute_310 = None
        bmm_51 = torch.bmm(view_478,view_479) ;  view_478 = view_479 = None
        view_480 = bmm_51.view(8, 8, 1, 1, 4096, 512) ;  bmm_51 = None
        permute_311 = view_480.permute(0, 1, 3, 4, 5, 2) ;  view_480 = None
        view_481 = permute_311.view(8, 8, 1, 4096, 512) ;  permute_311 = None
        unsqueeze_222 = torch.unsqueeze(view_477,5) ;  view_477 = None
        unsqueeze_223 = torch.unsqueeze(unsqueeze_222,6) ;  unsqueeze_222 = None
        permute_312 = unsqueeze_223.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_223 = None
        unsqueeze_224 = torch.unsqueeze(view_481,5) ;  view_481 = None
        unsqueeze_225 = torch.unsqueeze(unsqueeze_224,6) ;  unsqueeze_224 = None
        permute_313 = unsqueeze_225.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_225 = None
        permute_314 = permute_312.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_312 = None
        clone_67 = torch.clone(permute_314,memory_format = torch.contiguous_format) ;  permute_314 = None
        _unsafe_view_62 = clone_67.view(8, 4096, 4096) ;  clone_67 = None
        permute_315 = permute_313.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_313 = None
        clone_68 = torch.clone(permute_315,memory_format = torch.contiguous_format) ;  permute_315 = None
        _unsafe_view_63 = clone_68.view(8, 4096, 4096) ;  clone_68 = None
        bmm_52 = torch.bmm(_unsafe_view_62,_unsafe_view_63) ;  _unsafe_view_62 = _unsafe_view_63 = None
        view_482 = bmm_52.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_52 = None
        permute_316 = view_482.permute(4, 1, 5, 0, 2, 6, 3) ;  view_482 = None
        view_483 = permute_316.view(1, 512, 512, 8, 8, 8) ;  permute_316 = None
        clone_69 = torch.clone(view_483,memory_format = torch.contiguous_format) ;  view_483 = None
        _unsafe_view_64 = clone_69.view(1, 512, 512, 512) ;  clone_69 = None
        add_37 = torch.add(add_36,_unsafe_view_64) ;  add_36 = _unsafe_view_64 = None
        slice_140 = add_30[0:] 
        slice_141 = slice_140[:, 12288:16384] ;  slice_140 = None
        slice_142 = slice_141[:, :, 0:] ;  slice_141 = None
        slice_143 = slice_142[:, :, :, 0:] ;  slice_142 = None
        slice_144 = arg1403_1[0:] 
        slice_145 = slice_144[:, 12288:16384] ;  slice_144 = None
        slice_146 = slice_145[:, :, 0:] ;  slice_145 = None
        _to_copy_288 = slice_143.to(dtype = torch.float32) ;  slice_143 = None
        native_layer_norm_default_61 = (torch.nn.functional.layer_norm(_to_copy_288,[64],None,None,1e-05),) ;  _to_copy_288 = None
        getitem_389 = native_layer_norm_default_61[0]
        view_484 = slice_146.view(1, 4096, 512, 1) ;  slice_146 = None
        bitwise_not_39 = torch.bitwise_not(view_484) ;  view_484 = None
        masked_fill_39 = getitem_389.masked_fill(bitwise_not_39,0) ;  getitem_389 = bitwise_not_39 = None
        unbind_int_27 = torch.unbind(arg45_1) ;  arg45_1 = None
        getitem_392 = unbind_int_27[0]
        getitem_393 = unbind_int_27[1];  unbind_int_27 = None
        _to_copy_289 = getitem_392.to(dtype = torch.bfloat16) ;  getitem_392 = None
        _to_copy_290 = masked_fill_39.to(dtype = torch.bfloat16) 
        unsqueeze_226 = torch.unsqueeze(_to_copy_289,3) ;  _to_copy_289 = None
        unsqueeze_227 = torch.unsqueeze(unsqueeze_226,4) ;  unsqueeze_226 = None
        unsqueeze_228 = torch.unsqueeze(unsqueeze_227,5) ;  unsqueeze_227 = None
        permute_317 = unsqueeze_228.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_228 = None
        unsqueeze_229 = torch.unsqueeze(_to_copy_290,4) ;  _to_copy_290 = None
        unsqueeze_230 = torch.unsqueeze(unsqueeze_229,5) ;  unsqueeze_229 = None
        permute_318 = unsqueeze_230.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_230 = None
        permute_319 = permute_317.permute(0, 1, 5, 2, 3, 4) ;  permute_317 = None
        view_485 = permute_319.view(1, 64, 64) ;  permute_319 = None
        permute_320 = permute_318.permute(5, 2, 3, 4, 0, 1) ;  permute_318 = None
        view_486 = permute_320.view(1, 64, 2097152) ;  permute_320 = None
        bmm_53 = torch.bmm(view_485,view_486) ;  view_485 = view_486 = None
        view_487 = bmm_53.view(8, 8, 1, 1, 4096, 512) ;  bmm_53 = None
        permute_321 = view_487.permute(0, 1, 3, 4, 5, 2) ;  view_487 = None
        view_488 = permute_321.view(8, 8, 1, 4096, 512) ;  permute_321 = None
        _to_copy_291 = getitem_393.to(dtype = torch.bfloat16) ;  getitem_393 = None
        _to_copy_292 = masked_fill_39.to(dtype = torch.bfloat16) ;  masked_fill_39 = None
        unsqueeze_231 = torch.unsqueeze(_to_copy_291,3) ;  _to_copy_291 = None
        unsqueeze_232 = torch.unsqueeze(unsqueeze_231,4) ;  unsqueeze_231 = None
        unsqueeze_233 = torch.unsqueeze(unsqueeze_232,5) ;  unsqueeze_232 = None
        permute_322 = unsqueeze_233.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_233 = None
        unsqueeze_234 = torch.unsqueeze(_to_copy_292,4) ;  _to_copy_292 = None
        unsqueeze_235 = torch.unsqueeze(unsqueeze_234,5) ;  unsqueeze_234 = None
        permute_323 = unsqueeze_235.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_235 = None
        permute_324 = permute_322.permute(0, 1, 5, 2, 3, 4) ;  permute_322 = None
        view_489 = permute_324.view(1, 64, 64) ;  permute_324 = None
        permute_325 = permute_323.permute(5, 2, 3, 4, 0, 1) ;  permute_323 = None
        view_490 = permute_325.view(1, 64, 2097152) ;  permute_325 = None
        bmm_54 = torch.bmm(view_489,view_490) ;  view_489 = view_490 = None
        view_491 = bmm_54.view(8, 8, 1, 1, 4096, 512) ;  bmm_54 = None
        permute_326 = view_491.permute(0, 1, 3, 4, 5, 2) ;  view_491 = None
        view_492 = permute_326.view(8, 8, 1, 4096, 512) ;  permute_326 = None
        unsqueeze_236 = torch.unsqueeze(view_488,5) ;  view_488 = None
        unsqueeze_237 = torch.unsqueeze(unsqueeze_236,6) ;  unsqueeze_236 = None
        permute_327 = unsqueeze_237.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_237 = None
        unsqueeze_238 = torch.unsqueeze(view_492,5) ;  view_492 = None
        unsqueeze_239 = torch.unsqueeze(unsqueeze_238,6) ;  unsqueeze_238 = None
        permute_328 = unsqueeze_239.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_239 = None
        permute_329 = permute_327.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_327 = None
        clone_70 = torch.clone(permute_329,memory_format = torch.contiguous_format) ;  permute_329 = None
        _unsafe_view_65 = clone_70.view(8, 4096, 4096) ;  clone_70 = None
        permute_330 = permute_328.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_328 = None
        clone_71 = torch.clone(permute_330,memory_format = torch.contiguous_format) ;  permute_330 = None
        _unsafe_view_66 = clone_71.view(8, 4096, 4096) ;  clone_71 = None
        bmm_55 = torch.bmm(_unsafe_view_65,_unsafe_view_66) ;  _unsafe_view_65 = _unsafe_view_66 = None
        view_493 = bmm_55.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_55 = None
        permute_331 = view_493.permute(4, 1, 5, 0, 2, 6, 3) ;  view_493 = None
        view_494 = permute_331.view(1, 512, 512, 8, 8, 8) ;  permute_331 = None
        clone_72 = torch.clone(view_494,memory_format = torch.contiguous_format) ;  view_494 = None
        _unsafe_view_67 = clone_72.view(1, 512, 512, 512) ;  clone_72 = None
        add_38 = torch.add(add_37,_unsafe_view_67) ;  add_37 = _unsafe_view_67 = None
        _to_copy_293 = add_38.to(dtype = torch.float32) ;  add_38 = None
        native_layer_norm_default_62 = (torch.nn.functional.layer_norm(_to_copy_293,[512],arg46_1,arg47_1,0.1),) ;  _to_copy_293 = arg46_1 = arg47_1 = None
        getitem_394 = native_layer_norm_default_62[0]
        _to_copy_294 = arg49_1.to(dtype = torch.bfloat16) ;  arg49_1 = None
        _to_copy_295 = arg48_1.to(dtype = torch.bfloat16) ;  arg48_1 = None
        _to_copy_296 = getitem_394.to(dtype = torch.bfloat16) ;  getitem_394 = None
        view_495 = _to_copy_296.view(262144, 512) ;  _to_copy_296 = None
        t_95 = _to_copy_295.t() ;  _to_copy_295 = None
        addmm_2 = torch.addmm(_to_copy_294,view_495,t_95) ;  _to_copy_294 = view_495 = t_95 = None
        view_496 = addmm_2.view(1, 512, 512, 256) ;  addmm_2 = None
        add_39 = torch.add(add_34,view_496) ;  add_34 = view_496 = None
        split_tensor_34 = torch.split(add_30,128,dim = -2) 
        getitem_397 = split_tensor_34[0]
        getitem_398 = split_tensor_34[1]
        getitem_399 = split_tensor_34[2]
        getitem_400 = split_tensor_34[3];  split_tensor_34 = None
        _to_copy_297 = getitem_397.to(dtype = torch.float32) ;  getitem_397 = None
        native_layer_norm_default_63 = (torch.nn.functional.layer_norm(_to_copy_297,[64],arg84_1,arg85_1,1e-05),) ;  _to_copy_297 = None
        getitem_401 = native_layer_norm_default_63[0]
        _to_copy_298 = arg86_1.to(dtype = torch.bfloat16) 
        _to_copy_299 = getitem_401.to(dtype = torch.bfloat16) ;  getitem_401 = None
        t_96 = _to_copy_298.t() ;  _to_copy_298 = None
        view_497 = _to_copy_299.view(2097152, 64) ;  _to_copy_299 = None
        mm_89 = torch.mm(view_497,t_96) ;  view_497 = t_96 = None
        view_498 = mm_89.view(1, 16384, 128, 512) ;  mm_89 = None
        split_tensor_35 = torch.split(view_498,256,dim = -1) ;  view_498 = None
        getitem_404 = split_tensor_35[0]
        getitem_405 = split_tensor_35[1];  split_tensor_35 = None
        silu_12 = torch.nn.functional.silu(getitem_404) ;  getitem_404 = None
        mul_45 = torch.mul(silu_12,getitem_405) ;  silu_12 = getitem_405 = None
        _to_copy_300 = arg87_1.to(dtype = torch.bfloat16) 
        t_97 = _to_copy_300.t() ;  _to_copy_300 = None
        view_500 = mul_45.view(2097152, 256) ;  mul_45 = None
        mm_90 = torch.mm(view_500,t_97) ;  view_500 = t_97 = None
        view_501 = mm_90.view(1, 16384, 128, 64) ;  mm_90 = None
        _to_copy_301 = getitem_398.to(dtype = torch.float32) ;  getitem_398 = None
        native_layer_norm_default_64 = (torch.nn.functional.layer_norm(_to_copy_301,[64],arg84_1,arg85_1,1e-05),) ;  _to_copy_301 = None
        getitem_406 = native_layer_norm_default_64[0]
        _to_copy_302 = arg86_1.to(dtype = torch.bfloat16) 
        _to_copy_303 = getitem_406.to(dtype = torch.bfloat16) ;  getitem_406 = None
        t_98 = _to_copy_302.t() ;  _to_copy_302 = None
        view_502 = _to_copy_303.view(2097152, 64) ;  _to_copy_303 = None
        mm_91 = torch.mm(view_502,t_98) ;  view_502 = t_98 = None
        view_503 = mm_91.view(1, 16384, 128, 512) ;  mm_91 = None
        split_tensor_36 = torch.split(view_503,256,dim = -1) ;  view_503 = None
        getitem_409 = split_tensor_36[0]
        getitem_410 = split_tensor_36[1];  split_tensor_36 = None
        silu_13 = torch.nn.functional.silu(getitem_409) ;  getitem_409 = None
        mul_46 = torch.mul(silu_13,getitem_410) ;  silu_13 = getitem_410 = None
        _to_copy_304 = arg87_1.to(dtype = torch.bfloat16) 
        t_99 = _to_copy_304.t() ;  _to_copy_304 = None
        view_505 = mul_46.view(2097152, 256) ;  mul_46 = None
        mm_92 = torch.mm(view_505,t_99) ;  view_505 = t_99 = None
        view_506 = mm_92.view(1, 16384, 128, 64) ;  mm_92 = None
        _to_copy_305 = getitem_399.to(dtype = torch.float32) ;  getitem_399 = None
        native_layer_norm_default_65 = (torch.nn.functional.layer_norm(_to_copy_305,[64],arg84_1,arg85_1,1e-05),) ;  _to_copy_305 = None
        getitem_411 = native_layer_norm_default_65[0]
        _to_copy_306 = arg86_1.to(dtype = torch.bfloat16) 
        _to_copy_307 = getitem_411.to(dtype = torch.bfloat16) ;  getitem_411 = None
        t_100 = _to_copy_306.t() ;  _to_copy_306 = None
        view_507 = _to_copy_307.view(2097152, 64) ;  _to_copy_307 = None
        mm_93 = torch.mm(view_507,t_100) ;  view_507 = t_100 = None
        view_508 = mm_93.view(1, 16384, 128, 512) ;  mm_93 = None
        split_tensor_37 = torch.split(view_508,256,dim = -1) ;  view_508 = None
        getitem_414 = split_tensor_37[0]
        getitem_415 = split_tensor_37[1];  split_tensor_37 = None
        silu_14 = torch.nn.functional.silu(getitem_414) ;  getitem_414 = None
        mul_47 = torch.mul(silu_14,getitem_415) ;  silu_14 = getitem_415 = None
        _to_copy_308 = arg87_1.to(dtype = torch.bfloat16) 
        t_101 = _to_copy_308.t() ;  _to_copy_308 = None
        view_510 = mul_47.view(2097152, 256) ;  mul_47 = None
        mm_94 = torch.mm(view_510,t_101) ;  view_510 = t_101 = None
        view_511 = mm_94.view(1, 16384, 128, 64) ;  mm_94 = None
        _to_copy_309 = getitem_400.to(dtype = torch.float32) ;  getitem_400 = None
        native_layer_norm_default_66 = (torch.nn.functional.layer_norm(_to_copy_309,[64],arg84_1,arg85_1,1e-05),) ;  _to_copy_309 = arg84_1 = arg85_1 = None
        getitem_416 = native_layer_norm_default_66[0]
        _to_copy_310 = arg86_1.to(dtype = torch.bfloat16) ;  arg86_1 = None
        _to_copy_311 = getitem_416.to(dtype = torch.bfloat16) ;  getitem_416 = None
        t_102 = _to_copy_310.t() ;  _to_copy_310 = None
        view_512 = _to_copy_311.view(2097152, 64) ;  _to_copy_311 = None
        mm_95 = torch.mm(view_512,t_102) ;  view_512 = t_102 = None
        view_513 = mm_95.view(1, 16384, 128, 512) ;  mm_95 = None
        split_tensor_38 = torch.split(view_513,256,dim = -1) ;  view_513 = None
        getitem_419 = split_tensor_38[0]
        getitem_420 = split_tensor_38[1];  split_tensor_38 = None
        silu_15 = torch.nn.functional.silu(getitem_419) ;  getitem_419 = None
        mul_48 = torch.mul(silu_15,getitem_420) ;  silu_15 = getitem_420 = None
        _to_copy_312 = arg87_1.to(dtype = torch.bfloat16) ;  arg87_1 = None
        t_103 = _to_copy_312.t() ;  _to_copy_312 = None
        view_515 = mul_48.view(2097152, 256) ;  mul_48 = None
        mm_96 = torch.mm(view_515,t_103) ;  view_515 = t_103 = None
        view_516 = mm_96.view(1, 16384, 128, 64) ;  mm_96 = None
        cat_8 = torch.cat([view_501,view_506,view_511,view_516],dim = -2) ;  view_501 = view_506 = view_511 = view_516 = None
        add_40 = torch.add(add_30,cat_8) ;  cat_8 = None
        slice_147 = add_30[0:] 
        slice_148 = slice_147[:, 0:4096] ;  slice_147 = None
        slice_149 = slice_148[:, :, 0:] ;  slice_148 = None
        slice_150 = slice_149[:, :, :, 0:] ;  slice_149 = None
        slice_151 = arg1403_1[0:] 
        slice_152 = slice_151[:, 0:4096] ;  slice_151 = None
        slice_153 = slice_152[:, :, 0:] ;  slice_152 = None
        _to_copy_313 = add_39.to(dtype = torch.float32) 
        native_layer_norm_default_67 = (torch.nn.functional.layer_norm(_to_copy_313,[256],arg72_1,arg73_1,1e-05),) ;  _to_copy_313 = None
        getitem_421 = native_layer_norm_default_67[0]
        _to_copy_314 = arg74_1.to(dtype = torch.bfloat16) 
        _to_copy_315 = getitem_421.to(dtype = torch.bfloat16) ;  getitem_421 = None
        t_104 = _to_copy_314.t() ;  _to_copy_314 = None
        view_517 = _to_copy_315.view(262144, 256) ;  _to_copy_315 = None
        mm_97 = torch.mm(view_517,t_104) ;  view_517 = t_104 = None
        view_518 = mm_97.view(1, 512, 512, 8) ;  mm_97 = None
        permute_332 = view_518.permute(0, 3, 1, 2) ;  view_518 = None
        view_519 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_40 = torch.bitwise_not(view_519) ;  view_519 = None
        masked_fill_40 = permute_332.masked_fill(bitwise_not_40,-10000) ;  permute_332 = bitwise_not_40 = None
        _to_copy_316 = masked_fill_40.to(dtype = torch.float32) ;  masked_fill_40 = None
        _softmax_8 = torch.softmax(_to_copy_316, dim = -1) ;  _to_copy_316 = None
        _to_copy_317 = slice_150.to(dtype = torch.float32) ;  slice_150 = None
        native_layer_norm_default_68 = (torch.nn.functional.layer_norm(_to_copy_317,[64],arg69_1,arg70_1,1e-05),) ;  _to_copy_317 = None
        getitem_424 = native_layer_norm_default_68[0]
        _to_copy_318 = arg71_1.to(dtype = torch.bfloat16) 
        _to_copy_319 = getitem_424.to(dtype = torch.bfloat16) ;  getitem_424 = None
        t_105 = _to_copy_318.t() ;  _to_copy_318 = None
        view_520 = _to_copy_319.view(2097152, 64) ;  _to_copy_319 = None
        mm_98 = torch.mm(view_520,t_105) ;  view_520 = t_105 = None
        view_521 = mm_98.view(1, 4096, 512, 512) ;  mm_98 = None
        view_522 = view_521.view(1, 4096, 512, 2, 8, 32) ;  view_521 = None
        permute_333 = view_522.permute(3, 0, 1, 2, 4, 5) ;  view_522 = None
        unbind_int_28 = torch.unbind(permute_333) ;  permute_333 = None
        getitem_427 = unbind_int_28[0]
        getitem_428 = unbind_int_28[1];  unbind_int_28 = None
        sigmoid_28 = torch.sigmoid(getitem_428) ;  getitem_428 = None
        bitwise_not_41 = torch.bitwise_not(slice_153) ;  slice_153 = None
        view_523 = bitwise_not_41.view(1, 4096, 512, 1, 1) ;  bitwise_not_41 = None
        masked_fill_41 = getitem_427.masked_fill(view_523,0) ;  getitem_427 = view_523 = None
        _to_copy_320 = _softmax_8.to(dtype = torch.bfloat16) ;  _softmax_8 = None
        unsqueeze_240 = torch.unsqueeze(_to_copy_320,4) ;  _to_copy_320 = None
        unsqueeze_241 = torch.unsqueeze(unsqueeze_240,5) ;  unsqueeze_240 = None
        permute_334 = unsqueeze_241.permute(0, 4, 2, 1, 5, 3) ;  unsqueeze_241 = None
        unsqueeze_242 = torch.unsqueeze(masked_fill_41,5) ;  masked_fill_41 = None
        permute_335 = unsqueeze_242.permute(0, 1, 5, 3, 4, 2) ;  unsqueeze_242 = None
        permute_336 = permute_334.permute(3, 2, 5, 0, 1, 4) ;  permute_334 = None
        view_524 = permute_336.view(8, 512, 512) ;  permute_336 = None
        permute_337 = permute_335.permute(3, 5, 0, 1, 4, 2) ;  permute_335 = None
        clone_73 = torch.clone(permute_337,memory_format = torch.contiguous_format) ;  permute_337 = None
        _unsafe_view_68 = clone_73.view(8, 512, 131072) ;  clone_73 = None
        bmm_56 = torch.bmm(view_524,_unsafe_view_68) ;  view_524 = _unsafe_view_68 = None
        view_525 = bmm_56.view(8, 512, 1, 1, 4096, 32) ;  bmm_56 = None
        permute_338 = view_525.permute(3, 4, 1, 0, 5, 2) ;  view_525 = None
        view_526 = permute_338.view(1, 4096, 512, 8, 32) ;  permute_338 = None
        mul_49 = torch.mul(sigmoid_28,view_526) ;  sigmoid_28 = view_526 = None
        view_527 = mul_49.view(1, 4096, 512, 256) ;  mul_49 = None
        _to_copy_321 = arg75_1.to(dtype = torch.bfloat16) 
        t_106 = _to_copy_321.t() ;  _to_copy_321 = None
        view_528 = view_527.view(2097152, 256) ;  view_527 = None
        mm_99 = torch.mm(view_528,t_106) ;  view_528 = t_106 = None
        view_529 = mm_99.view(1, 4096, 512, 64) ;  mm_99 = None
        slice_154 = add_30[0:] 
        slice_155 = slice_154[:, 4096:8192] ;  slice_154 = None
        slice_156 = slice_155[:, :, 0:] ;  slice_155 = None
        slice_157 = slice_156[:, :, :, 0:] ;  slice_156 = None
        slice_158 = arg1403_1[0:] 
        slice_159 = slice_158[:, 4096:8192] ;  slice_158 = None
        slice_160 = slice_159[:, :, 0:] ;  slice_159 = None
        _to_copy_322 = add_39.to(dtype = torch.float32) 
        native_layer_norm_default_69 = (torch.nn.functional.layer_norm(_to_copy_322,[256],arg72_1,arg73_1,1e-05),) ;  _to_copy_322 = None
        getitem_429 = native_layer_norm_default_69[0]
        _to_copy_323 = arg74_1.to(dtype = torch.bfloat16) 
        _to_copy_324 = getitem_429.to(dtype = torch.bfloat16) ;  getitem_429 = None
        t_107 = _to_copy_323.t() ;  _to_copy_323 = None
        view_530 = _to_copy_324.view(262144, 256) ;  _to_copy_324 = None
        mm_100 = torch.mm(view_530,t_107) ;  view_530 = t_107 = None
        view_531 = mm_100.view(1, 512, 512, 8) ;  mm_100 = None
        permute_339 = view_531.permute(0, 3, 1, 2) ;  view_531 = None
        view_532 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_42 = torch.bitwise_not(view_532) ;  view_532 = None
        masked_fill_42 = permute_339.masked_fill(bitwise_not_42,-10000) ;  permute_339 = bitwise_not_42 = None
        _to_copy_325 = masked_fill_42.to(dtype = torch.float32) ;  masked_fill_42 = None
        _softmax_9 = torch.softmax(_to_copy_325, dim = -1) ;  _to_copy_325 = None
        _to_copy_326 = slice_157.to(dtype = torch.float32) ;  slice_157 = None
        native_layer_norm_default_70 = (torch.nn.functional.layer_norm(_to_copy_326,[64],arg69_1,arg70_1,1e-05),) ;  _to_copy_326 = None
        getitem_432 = native_layer_norm_default_70[0]
        _to_copy_327 = arg71_1.to(dtype = torch.bfloat16) 
        _to_copy_328 = getitem_432.to(dtype = torch.bfloat16) ;  getitem_432 = None
        t_108 = _to_copy_327.t() ;  _to_copy_327 = None
        view_533 = _to_copy_328.view(2097152, 64) ;  _to_copy_328 = None
        mm_101 = torch.mm(view_533,t_108) ;  view_533 = t_108 = None
        view_534 = mm_101.view(1, 4096, 512, 512) ;  mm_101 = None
        view_535 = view_534.view(1, 4096, 512, 2, 8, 32) ;  view_534 = None
        permute_340 = view_535.permute(3, 0, 1, 2, 4, 5) ;  view_535 = None
        unbind_int_29 = torch.unbind(permute_340) ;  permute_340 = None
        getitem_435 = unbind_int_29[0]
        getitem_436 = unbind_int_29[1];  unbind_int_29 = None
        sigmoid_29 = torch.sigmoid(getitem_436) ;  getitem_436 = None
        bitwise_not_43 = torch.bitwise_not(slice_160) ;  slice_160 = None
        view_536 = bitwise_not_43.view(1, 4096, 512, 1, 1) ;  bitwise_not_43 = None
        masked_fill_43 = getitem_435.masked_fill(view_536,0) ;  getitem_435 = view_536 = None
        _to_copy_329 = _softmax_9.to(dtype = torch.bfloat16) ;  _softmax_9 = None
        unsqueeze_243 = torch.unsqueeze(_to_copy_329,4) ;  _to_copy_329 = None
        unsqueeze_244 = torch.unsqueeze(unsqueeze_243,5) ;  unsqueeze_243 = None
        permute_341 = unsqueeze_244.permute(0, 4, 2, 1, 5, 3) ;  unsqueeze_244 = None
        unsqueeze_245 = torch.unsqueeze(masked_fill_43,5) ;  masked_fill_43 = None
        permute_342 = unsqueeze_245.permute(0, 1, 5, 3, 4, 2) ;  unsqueeze_245 = None
        permute_343 = permute_341.permute(3, 2, 5, 0, 1, 4) ;  permute_341 = None
        view_537 = permute_343.view(8, 512, 512) ;  permute_343 = None
        permute_344 = permute_342.permute(3, 5, 0, 1, 4, 2) ;  permute_342 = None
        clone_74 = torch.clone(permute_344,memory_format = torch.contiguous_format) ;  permute_344 = None
        _unsafe_view_69 = clone_74.view(8, 512, 131072) ;  clone_74 = None
        bmm_57 = torch.bmm(view_537,_unsafe_view_69) ;  view_537 = _unsafe_view_69 = None
        view_538 = bmm_57.view(8, 512, 1, 1, 4096, 32) ;  bmm_57 = None
        permute_345 = view_538.permute(3, 4, 1, 0, 5, 2) ;  view_538 = None
        view_539 = permute_345.view(1, 4096, 512, 8, 32) ;  permute_345 = None
        mul_50 = torch.mul(sigmoid_29,view_539) ;  sigmoid_29 = view_539 = None
        view_540 = mul_50.view(1, 4096, 512, 256) ;  mul_50 = None
        _to_copy_330 = arg75_1.to(dtype = torch.bfloat16) 
        t_109 = _to_copy_330.t() ;  _to_copy_330 = None
        view_541 = view_540.view(2097152, 256) ;  view_540 = None
        mm_102 = torch.mm(view_541,t_109) ;  view_541 = t_109 = None
        view_542 = mm_102.view(1, 4096, 512, 64) ;  mm_102 = None
        slice_161 = add_30[0:] 
        slice_162 = slice_161[:, 8192:12288] ;  slice_161 = None
        slice_163 = slice_162[:, :, 0:] ;  slice_162 = None
        slice_164 = slice_163[:, :, :, 0:] ;  slice_163 = None
        slice_165 = arg1403_1[0:] 
        slice_166 = slice_165[:, 8192:12288] ;  slice_165 = None
        slice_167 = slice_166[:, :, 0:] ;  slice_166 = None
        _to_copy_331 = add_39.to(dtype = torch.float32) 
        native_layer_norm_default_71 = (torch.nn.functional.layer_norm(_to_copy_331,[256],arg72_1,arg73_1,1e-05),) ;  _to_copy_331 = None
        getitem_437 = native_layer_norm_default_71[0]
        _to_copy_332 = arg74_1.to(dtype = torch.bfloat16) 
        _to_copy_333 = getitem_437.to(dtype = torch.bfloat16) ;  getitem_437 = None
        t_110 = _to_copy_332.t() ;  _to_copy_332 = None
        view_543 = _to_copy_333.view(262144, 256) ;  _to_copy_333 = None
        mm_103 = torch.mm(view_543,t_110) ;  view_543 = t_110 = None
        view_544 = mm_103.view(1, 512, 512, 8) ;  mm_103 = None
        permute_346 = view_544.permute(0, 3, 1, 2) ;  view_544 = None
        view_545 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_44 = torch.bitwise_not(view_545) ;  view_545 = None
        masked_fill_44 = permute_346.masked_fill(bitwise_not_44,-10000) ;  permute_346 = bitwise_not_44 = None
        _to_copy_334 = masked_fill_44.to(dtype = torch.float32) ;  masked_fill_44 = None
        _softmax_10 = torch.softmax(_to_copy_334, dim = -1) ;  _to_copy_334 = None
        _to_copy_335 = slice_164.to(dtype = torch.float32) ;  slice_164 = None
        native_layer_norm_default_72 = (torch.nn.functional.layer_norm(_to_copy_335,[64],arg69_1,arg70_1,1e-05),) ;  _to_copy_335 = None
        getitem_440 = native_layer_norm_default_72[0]
        _to_copy_336 = arg71_1.to(dtype = torch.bfloat16) 
        _to_copy_337 = getitem_440.to(dtype = torch.bfloat16) ;  getitem_440 = None
        t_111 = _to_copy_336.t() ;  _to_copy_336 = None
        view_546 = _to_copy_337.view(2097152, 64) ;  _to_copy_337 = None
        mm_104 = torch.mm(view_546,t_111) ;  view_546 = t_111 = None
        view_547 = mm_104.view(1, 4096, 512, 512) ;  mm_104 = None
        view_548 = view_547.view(1, 4096, 512, 2, 8, 32) ;  view_547 = None
        permute_347 = view_548.permute(3, 0, 1, 2, 4, 5) ;  view_548 = None
        unbind_int_30 = torch.unbind(permute_347) ;  permute_347 = None
        getitem_443 = unbind_int_30[0]
        getitem_444 = unbind_int_30[1];  unbind_int_30 = None
        sigmoid_30 = torch.sigmoid(getitem_444) ;  getitem_444 = None
        bitwise_not_45 = torch.bitwise_not(slice_167) ;  slice_167 = None
        view_549 = bitwise_not_45.view(1, 4096, 512, 1, 1) ;  bitwise_not_45 = None
        masked_fill_45 = getitem_443.masked_fill(view_549,0) ;  getitem_443 = view_549 = None
        _to_copy_338 = _softmax_10.to(dtype = torch.bfloat16) ;  _softmax_10 = None
        unsqueeze_246 = torch.unsqueeze(_to_copy_338,4) ;  _to_copy_338 = None
        unsqueeze_247 = torch.unsqueeze(unsqueeze_246,5) ;  unsqueeze_246 = None
        permute_348 = unsqueeze_247.permute(0, 4, 2, 1, 5, 3) ;  unsqueeze_247 = None
        unsqueeze_248 = torch.unsqueeze(masked_fill_45,5) ;  masked_fill_45 = None
        permute_349 = unsqueeze_248.permute(0, 1, 5, 3, 4, 2) ;  unsqueeze_248 = None
        permute_350 = permute_348.permute(3, 2, 5, 0, 1, 4) ;  permute_348 = None
        view_550 = permute_350.view(8, 512, 512) ;  permute_350 = None
        permute_351 = permute_349.permute(3, 5, 0, 1, 4, 2) ;  permute_349 = None
        clone_75 = torch.clone(permute_351,memory_format = torch.contiguous_format) ;  permute_351 = None
        _unsafe_view_70 = clone_75.view(8, 512, 131072) ;  clone_75 = None
        bmm_58 = torch.bmm(view_550,_unsafe_view_70) ;  view_550 = _unsafe_view_70 = None
        view_551 = bmm_58.view(8, 512, 1, 1, 4096, 32) ;  bmm_58 = None
        permute_352 = view_551.permute(3, 4, 1, 0, 5, 2) ;  view_551 = None
        view_552 = permute_352.view(1, 4096, 512, 8, 32) ;  permute_352 = None
        mul_51 = torch.mul(sigmoid_30,view_552) ;  sigmoid_30 = view_552 = None
        view_553 = mul_51.view(1, 4096, 512, 256) ;  mul_51 = None
        _to_copy_339 = arg75_1.to(dtype = torch.bfloat16) 
        t_112 = _to_copy_339.t() ;  _to_copy_339 = None
        view_554 = view_553.view(2097152, 256) ;  view_553 = None
        mm_105 = torch.mm(view_554,t_112) ;  view_554 = t_112 = None
        view_555 = mm_105.view(1, 4096, 512, 64) ;  mm_105 = None
        slice_168 = add_30[0:] ;  add_30 = None
        slice_169 = slice_168[:, 12288:16384] ;  slice_168 = None
        slice_170 = slice_169[:, :, 0:] ;  slice_169 = None
        slice_171 = slice_170[:, :, :, 0:] ;  slice_170 = None
        slice_172 = arg1403_1[0:] 
        slice_173 = slice_172[:, 12288:16384] ;  slice_172 = None
        slice_174 = slice_173[:, :, 0:] ;  slice_173 = None
        _to_copy_340 = add_39.to(dtype = torch.float32) 
        native_layer_norm_default_73 = (torch.nn.functional.layer_norm(_to_copy_340,[256],arg72_1,arg73_1,1e-05),) ;  _to_copy_340 = arg72_1 = arg73_1 = None
        getitem_445 = native_layer_norm_default_73[0]
        _to_copy_341 = arg74_1.to(dtype = torch.bfloat16) ;  arg74_1 = None
        _to_copy_342 = getitem_445.to(dtype = torch.bfloat16) ;  getitem_445 = None
        t_113 = _to_copy_341.t() ;  _to_copy_341 = None
        view_556 = _to_copy_342.view(262144, 256) ;  _to_copy_342 = None
        mm_106 = torch.mm(view_556,t_113) ;  view_556 = t_113 = None
        view_557 = mm_106.view(1, 512, 512, 8) ;  mm_106 = None
        permute_353 = view_557.permute(0, 3, 1, 2) ;  view_557 = None
        view_558 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_46 = torch.bitwise_not(view_558) ;  view_558 = None
        masked_fill_46 = permute_353.masked_fill(bitwise_not_46,-10000) ;  permute_353 = bitwise_not_46 = None
        _to_copy_343 = masked_fill_46.to(dtype = torch.float32) ;  masked_fill_46 = None
        _softmax_11 = torch.softmax(_to_copy_343, dim = -1) ;  _to_copy_343 = None
        _to_copy_344 = slice_171.to(dtype = torch.float32) ;  slice_171 = None
        native_layer_norm_default_74 = (torch.nn.functional.layer_norm(_to_copy_344,[64],arg69_1,arg70_1,1e-05),) ;  _to_copy_344 = arg69_1 = arg70_1 = None
        getitem_448 = native_layer_norm_default_74[0]
        _to_copy_345 = arg71_1.to(dtype = torch.bfloat16) ;  arg71_1 = None
        _to_copy_346 = getitem_448.to(dtype = torch.bfloat16) ;  getitem_448 = None
        t_114 = _to_copy_345.t() ;  _to_copy_345 = None
        view_559 = _to_copy_346.view(2097152, 64) ;  _to_copy_346 = None
        mm_107 = torch.mm(view_559,t_114) ;  view_559 = t_114 = None
        view_560 = mm_107.view(1, 4096, 512, 512) ;  mm_107 = None
        view_561 = view_560.view(1, 4096, 512, 2, 8, 32) ;  view_560 = None
        permute_354 = view_561.permute(3, 0, 1, 2, 4, 5) ;  view_561 = None
        unbind_int_31 = torch.unbind(permute_354) ;  permute_354 = None
        getitem_451 = unbind_int_31[0]
        getitem_452 = unbind_int_31[1];  unbind_int_31 = None
        sigmoid_31 = torch.sigmoid(getitem_452) ;  getitem_452 = None
        bitwise_not_47 = torch.bitwise_not(slice_174) ;  slice_174 = None
        view_562 = bitwise_not_47.view(1, 4096, 512, 1, 1) ;  bitwise_not_47 = None
        masked_fill_47 = getitem_451.masked_fill(view_562,0) ;  getitem_451 = view_562 = None
        _to_copy_347 = _softmax_11.to(dtype = torch.bfloat16) ;  _softmax_11 = None
        unsqueeze_249 = torch.unsqueeze(_to_copy_347,4) ;  _to_copy_347 = None
        unsqueeze_250 = torch.unsqueeze(unsqueeze_249,5) ;  unsqueeze_249 = None
        permute_355 = unsqueeze_250.permute(0, 4, 2, 1, 5, 3) ;  unsqueeze_250 = None
        unsqueeze_251 = torch.unsqueeze(masked_fill_47,5) ;  masked_fill_47 = None
        permute_356 = unsqueeze_251.permute(0, 1, 5, 3, 4, 2) ;  unsqueeze_251 = None
        permute_357 = permute_355.permute(3, 2, 5, 0, 1, 4) ;  permute_355 = None
        view_563 = permute_357.view(8, 512, 512) ;  permute_357 = None
        permute_358 = permute_356.permute(3, 5, 0, 1, 4, 2) ;  permute_356 = None
        clone_76 = torch.clone(permute_358,memory_format = torch.contiguous_format) ;  permute_358 = None
        _unsafe_view_71 = clone_76.view(8, 512, 131072) ;  clone_76 = None
        bmm_59 = torch.bmm(view_563,_unsafe_view_71) ;  view_563 = _unsafe_view_71 = None
        view_564 = bmm_59.view(8, 512, 1, 1, 4096, 32) ;  bmm_59 = None
        permute_359 = view_564.permute(3, 4, 1, 0, 5, 2) ;  view_564 = None
        view_565 = permute_359.view(1, 4096, 512, 8, 32) ;  permute_359 = None
        mul_52 = torch.mul(sigmoid_31,view_565) ;  sigmoid_31 = view_565 = None
        view_566 = mul_52.view(1, 4096, 512, 256) ;  mul_52 = None
        _to_copy_348 = arg75_1.to(dtype = torch.bfloat16) ;  arg75_1 = None
        t_115 = _to_copy_348.t() ;  _to_copy_348 = None
        view_567 = view_566.view(2097152, 256) ;  view_566 = None
        mm_108 = torch.mm(view_567,t_115) ;  view_567 = t_115 = None
        view_568 = mm_108.view(1, 4096, 512, 64) ;  mm_108 = None
        cat_9 = torch.cat([view_529,view_542,view_555,view_568],dim = 1) ;  view_529 = view_542 = view_555 = view_568 = None
        add_41 = torch.add(add_40,cat_9) ;  add_40 = cat_9 = None
        _to_copy_349 = add_39.to(dtype = torch.float32) 
        native_layer_norm_default_75 = (torch.nn.functional.layer_norm(_to_copy_349,[256],arg114_1,arg115_1,1e-05),) ;  _to_copy_349 = arg114_1 = arg115_1 = None
        getitem_453 = native_layer_norm_default_75[0]
        split_with_sizes_default_8 = torch.split(arg117_1,[512,512]) ;  arg117_1 = None
        getitem_456 = split_with_sizes_default_8[0]
        getitem_457 = split_with_sizes_default_8[1];  split_with_sizes_default_8 = None
        split_with_sizes_default_9 = torch.split(arg118_1,[512,512,256]) ;  arg118_1 = None
        getitem_458 = split_with_sizes_default_9[0]
        getitem_459 = split_with_sizes_default_9[1]
        getitem_460 = split_with_sizes_default_9[2];  split_with_sizes_default_9 = None
        _to_copy_350 = getitem_456.to(dtype = torch.bfloat16) ;  getitem_456 = None
        _to_copy_351 = getitem_453.to(dtype = torch.bfloat16) 
        t_116 = _to_copy_350.t() ;  _to_copy_350 = None
        view_569 = _to_copy_351.view(262144, 256) ;  _to_copy_351 = None
        mm_109 = torch.mm(view_569,t_116) ;  view_569 = t_116 = None
        view_570 = mm_109.view(1, 512, 512, 512) ;  mm_109 = None
        _to_copy_352 = getitem_458.to(dtype = torch.bfloat16) ;  getitem_458 = None
        _to_copy_353 = getitem_453.to(dtype = torch.bfloat16) 
        t_117 = _to_copy_352.t() ;  _to_copy_352 = None
        view_571 = _to_copy_353.view(262144, 256) ;  _to_copy_353 = None
        mm_110 = torch.mm(view_571,t_117) ;  view_571 = t_117 = None
        view_572 = mm_110.view(1, 512, 512, 512) ;  mm_110 = None
        sigmoid_32 = torch.sigmoid(view_572) ;  view_572 = None
        mul_53 = torch.mul(view_570,sigmoid_32) ;  view_570 = sigmoid_32 = None
        unsqueeze_252 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_48 = torch.bitwise_not(unsqueeze_252) ;  unsqueeze_252 = None
        masked_fill_48 = mul_53.masked_fill(bitwise_not_48,0) ;  mul_53 = bitwise_not_48 = None
        split_tensor_39 = torch.split(masked_fill_48,256,dim = -1) 
        getitem_463 = split_tensor_39[0]
        unsqueeze_255 = torch.unsqueeze(getitem_463,4) ;  getitem_463 = None
        permute_364 = unsqueeze_255.permute(0, 1, 4, 3, 2) ;  unsqueeze_255 = None
        permute_365 = permute_364.permute(3, 1, 4, 0, 2) ;  permute_364 = None
        view_575 = permute_365.view(256, 512, 512) ;  permute_365 = None
        split_tensor_40 = torch.split(masked_fill_48,256,dim = -1) ;  masked_fill_48 = None
        getitem_466 = split_tensor_40[1];  split_tensor_40 = None
        unsqueeze_256 = torch.unsqueeze(getitem_466,4) ;  getitem_466 = None
        permute_366 = unsqueeze_256.permute(0, 4, 1, 3, 2) ;  unsqueeze_256 = None
        permute_367 = permute_366.permute(3, 4, 0, 2, 1) ;  permute_366 = None
        view_576 = permute_367.view(256, 512, 512) ;  permute_367 = None
        bmm_60 = torch.bmm(view_575,view_576) ;  view_575 = view_576 = None
        view_577 = bmm_60.view(256, 512, 1, 1, 512) ;  bmm_60 = None
        permute_368 = view_577.permute(3, 1, 4, 0, 2) ;  view_577 = None
        view_578 = permute_368.view(1, 512, 512, 256) ;  permute_368 = None
        _to_copy_354 = getitem_457.to(dtype = torch.bfloat16) ;  getitem_457 = None
        _to_copy_355 = getitem_453.to(dtype = torch.bfloat16) 
        t_118 = _to_copy_354.t() ;  _to_copy_354 = None
        view_579 = _to_copy_355.view(262144, 256) ;  _to_copy_355 = None
        mm_111 = torch.mm(view_579,t_118) ;  view_579 = t_118 = None
        view_580 = mm_111.view(1, 512, 512, 512) ;  mm_111 = None
        _to_copy_356 = getitem_459.to(dtype = torch.bfloat16) ;  getitem_459 = None
        _to_copy_357 = getitem_453.to(dtype = torch.bfloat16) 
        t_119 = _to_copy_356.t() ;  _to_copy_356 = None
        view_581 = _to_copy_357.view(262144, 256) ;  _to_copy_357 = None
        mm_112 = torch.mm(view_581,t_119) ;  view_581 = t_119 = None
        view_582 = mm_112.view(1, 512, 512, 512) ;  mm_112 = None
        sigmoid_33 = torch.sigmoid(view_582) ;  view_582 = None
        mul_54 = torch.mul(view_580,sigmoid_33) ;  view_580 = sigmoid_33 = None
        view_583 = mul_54.view(262144, 512) ;  mul_54 = None
        view_584 = view_583.view(1, 512, 512, 512) ;  view_583 = None
        transpose_8 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_257 = torch.unsqueeze(transpose_8,3) ;  transpose_8 = None
        clone_77 = torch.clone(unsqueeze_257,memory_format = torch.contiguous_format) ;  unsqueeze_257 = None
        bitwise_not_49 = torch.bitwise_not(clone_77) ;  clone_77 = None
        masked_fill_49 = view_584.masked_fill(bitwise_not_49,0) ;  view_584 = bitwise_not_49 = None
        view_585 = masked_fill_49.view(262144, 512) ;  masked_fill_49 = None
        view_589 = view_585.view(1, 512, 512, 512) 
        split_tensor_41 = torch.split(view_589,256,dim = -1) ;  view_589 = None
        getitem_469 = split_tensor_41[0]
        unsqueeze_260 = torch.unsqueeze(getitem_469,4) ;  getitem_469 = None
        permute_373 = unsqueeze_260.permute(0, 2, 4, 3, 1) ;  unsqueeze_260 = None
        permute_374 = permute_373.permute(3, 1, 4, 0, 2) ;  permute_373 = None
        view_590 = permute_374.view(256, 512, 512) ;  permute_374 = None
        view_591 = view_585.view(1, 512, 512, 512) ;  view_585 = None
        split_tensor_42 = torch.split(view_591,256,dim = -1) ;  view_591 = None
        getitem_472 = split_tensor_42[1];  split_tensor_42 = None
        unsqueeze_261 = torch.unsqueeze(getitem_472,4) ;  getitem_472 = None
        permute_375 = unsqueeze_261.permute(0, 4, 2, 3, 1) ;  unsqueeze_261 = None
        permute_376 = permute_375.permute(3, 4, 0, 2, 1) ;  permute_375 = None
        view_592 = permute_376.view(256, 512, 512) ;  permute_376 = None
        bmm_61 = torch.bmm(view_590,view_592) ;  view_590 = view_592 = None
        view_593 = bmm_61.view(256, 512, 1, 1, 512) ;  bmm_61 = None
        permute_377 = view_593.permute(3, 1, 4, 0, 2) ;  view_593 = None
        view_594 = permute_377.view(1, 512, 512, 256) ;  permute_377 = None
        _to_copy_358 = view_578.to(dtype = torch.float32) ;  view_578 = None
        native_layer_norm_default_76 = (torch.nn.functional.layer_norm(_to_copy_358,[256],None,None,1e-05),) ;  _to_copy_358 = None
        getitem_473 = native_layer_norm_default_76[0]
        _to_copy_359 = view_594.to(dtype = torch.float32) ;  view_594 = None
        native_layer_norm_default_77 = (torch.nn.functional.layer_norm(_to_copy_359,[256],None,None,1e-05),) ;  _to_copy_359 = None
        getitem_476 = native_layer_norm_default_77[0]
        add_42 = torch.add(getitem_473,getitem_476) ;  getitem_473 = getitem_476 = None
        _to_copy_360 = arg116_1.to(dtype = torch.bfloat16) ;  arg116_1 = None
        _to_copy_361 = add_42.to(dtype = torch.bfloat16) ;  add_42 = None
        t_120 = _to_copy_360.t() ;  _to_copy_360 = None
        view_595 = _to_copy_361.view(262144, 256) ;  _to_copy_361 = None
        mm_113 = torch.mm(view_595,t_120) ;  view_595 = t_120 = None
        view_596 = mm_113.view(1, 512, 512, 256) ;  mm_113 = None
        _to_copy_362 = getitem_460.to(dtype = torch.bfloat16) ;  getitem_460 = None
        _to_copy_363 = getitem_453.to(dtype = torch.bfloat16) ;  getitem_453 = None
        t_121 = _to_copy_362.t() ;  _to_copy_362 = None
        view_597 = _to_copy_363.view(262144, 256) ;  _to_copy_363 = None
        mm_114 = torch.mm(view_597,t_121) ;  view_597 = t_121 = None
        view_598 = mm_114.view(1, 512, 512, 256) ;  mm_114 = None
        sigmoid_34 = torch.sigmoid(view_598) ;  view_598 = None
        mul_55 = torch.mul(view_596,sigmoid_34) ;  view_596 = sigmoid_34 = None
        add_43 = torch.add(add_39,mul_55) ;  mul_55 = None
        split_tensor_43 = torch.split(add_39,512,dim = -2) ;  add_39 = None
        getitem_479 = split_tensor_43[0];  split_tensor_43 = None
        _to_copy_364 = getitem_479.to(dtype = torch.float32) ;  getitem_479 = None
        native_layer_norm_default_78 = (torch.nn.functional.layer_norm(_to_copy_364,[256],arg96_1,arg97_1,1e-05),) ;  _to_copy_364 = arg96_1 = arg97_1 = None
        getitem_480 = native_layer_norm_default_78[0]
        _to_copy_365 = arg98_1.to(dtype = torch.bfloat16) ;  arg98_1 = None
        _to_copy_366 = getitem_480.to(dtype = torch.bfloat16) ;  getitem_480 = None
        t_122 = _to_copy_365.t() ;  _to_copy_365 = None
        view_599 = _to_copy_366.view(262144, 256) ;  _to_copy_366 = None
        mm_115 = torch.mm(view_599,t_122) ;  view_599 = t_122 = None
        view_600 = mm_115.view(1, 512, 512, 2048) ;  mm_115 = None
        split_tensor_44 = torch.split(view_600,1024,dim = -1) ;  view_600 = None
        getitem_483 = split_tensor_44[0]
        getitem_484 = split_tensor_44[1];  split_tensor_44 = None
        silu_16 = torch.nn.functional.silu(getitem_483) ;  getitem_483 = None
        mul_56 = torch.mul(silu_16,getitem_484) ;  silu_16 = getitem_484 = None
        _to_copy_367 = arg99_1.to(dtype = torch.bfloat16) ;  arg99_1 = None
        t_123 = _to_copy_367.t() ;  _to_copy_367 = None
        view_602 = mul_56.view(262144, 1024) ;  mul_56 = None
        mm_116 = torch.mm(view_602,t_123) ;  view_602 = t_123 = None
        view_603 = mm_116.view(1, 512, 512, 256) ;  mm_116 = None
        add_44 = torch.add(add_43,view_603) ;  add_43 = view_603 = None
        _to_copy_368 = add_44.to(dtype = torch.float32) 
        native_layer_norm_default_79 = (torch.nn.functional.layer_norm(_to_copy_368,[256],None,None,1e-05),) ;  _to_copy_368 = None
        getitem_485 = native_layer_norm_default_79[0]
        _to_copy_369 = arg135_1.to(dtype = torch.bfloat16) ;  arg135_1 = None
        _to_copy_370 = getitem_485.to(dtype = torch.bfloat16) 
        t_124 = _to_copy_369.t() ;  _to_copy_369 = None
        view_604 = _to_copy_370.view(262144, 256) ;  _to_copy_370 = None
        mm_117 = torch.mm(view_604,t_124) ;  view_604 = t_124 = None
        view_605 = mm_117.view(1, 512, 512, 8) ;  mm_117 = None
        view_606 = view_605.view(1, 512, 512, 2, 4) ;  view_605 = None
        permute_378 = view_606.permute(0, 3, 4, 1, 2) ;  view_606 = None
        view_607 = permute_378.view(1, 2, 4, 1, 512, 512) ;  permute_378 = None
        view_608 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_50 = torch.bitwise_not(view_608) ;  view_608 = None
        masked_fill_50 = view_607.masked_fill(bitwise_not_50,-10000) ;  view_607 = bitwise_not_50 = None
        view_609 = masked_fill_50.view(1, 2, 4, 512, 512) ;  masked_fill_50 = None
        permute_379 = view_609.permute(1, 0, 2, 3, 4) ;  view_609 = None
        view_610 = permute_379.view(2, 4, 1, 512, 512) ;  permute_379 = None
        _to_copy_371 = arg136_1.to(dtype = torch.bfloat16) ;  arg136_1 = None
        _to_copy_372 = getitem_485.to(dtype = torch.bfloat16) 
        t_125 = _to_copy_371.t() ;  _to_copy_371 = None
        view_611 = _to_copy_372.view(262144, 256) ;  _to_copy_372 = None
        mm_118 = torch.mm(view_611,t_125) ;  view_611 = t_125 = None
        view_612 = mm_118.view(1, 512, 512, 1024) ;  mm_118 = None
        select_9 = torch.select(view_610,0,0) 
        view_613 = view_612.view(1, 512, 512, 4, 4, 64) ;  view_612 = None
        permute_380 = view_613.permute(4, 0, 3, 1, 2, 5) ;  view_613 = None
        view_614 = permute_380.view(4, 4, 512, 512, 64) ;  permute_380 = None
        unbind_int_32 = torch.unbind(view_614) ;  view_614 = None
        getitem_488 = unbind_int_32[0]
        getitem_489 = unbind_int_32[1]
        getitem_490 = unbind_int_32[2]
        getitem_491 = unbind_int_32[3];  unbind_int_32 = None
        expand_19 = select_9.expand(4, 512, 512, 512) ;  select_9 = None
        _scaled_dot_product_efficient_attention_default_8 = (torch.nn.functional.scaled_dot_product_attention(getitem_488,getitem_489,getitem_490,expand_19,False),) ;  getitem_488 = getitem_489 = getitem_490 = expand_19 = None
        getitem_492 = _scaled_dot_product_efficient_attention_default_8[0]
        sigmoid_35 = torch.sigmoid(getitem_491) ;  getitem_491 = None
        mul_57 = torch.mul(getitem_492,sigmoid_35) ;  getitem_492 = sigmoid_35 = None
        view_615 = mul_57.view(1, 4, 512, 512, 64) ;  mul_57 = None
        permute_381 = view_615.permute(0, 2, 3, 1, 4) ;  view_615 = None
        clone_78 = torch.clone(permute_381,memory_format = torch.contiguous_format) ;  permute_381 = None
        _unsafe_view_72 = clone_78.view(1, 512, 512, 256) ;  clone_78 = None
        transpose_9 = torch.transpose(getitem_485,1,2) ;  getitem_485 = None
        _to_copy_373 = arg137_1.to(dtype = torch.bfloat16) ;  arg137_1 = None
        _to_copy_374 = transpose_9.to(dtype = torch.bfloat16) ;  transpose_9 = None
        t_126 = _to_copy_373.t() ;  _to_copy_373 = None
        expand_20 = _to_copy_374.expand(1, 512, 512, 256) ;  _to_copy_374 = None
        view_616 = expand_20.view(512, 512, 256) ;  expand_20 = None
        expand_21 = t_126.expand(1, 512, 256, 1024) ;  t_126 = None
        view_617 = expand_21.view(512, 256, 1024) ;  expand_21 = None
        bmm_62 = torch.bmm(view_616,view_617) ;  view_616 = view_617 = None
        view_618 = bmm_62.view(1, 512, 512, 1024) ;  bmm_62 = None
        select_10 = torch.select(view_610,0,1) ;  view_610 = None
        view_619 = view_618.view(1, 512, 512, 4, 4, 64) ;  view_618 = None
        permute_382 = view_619.permute(4, 0, 3, 1, 2, 5) ;  view_619 = None
        view_620 = permute_382.view(4, 4, 512, 512, 64) ;  permute_382 = None
        unbind_int_33 = torch.unbind(view_620) ;  view_620 = None
        getitem_496 = unbind_int_33[0]
        getitem_497 = unbind_int_33[1]
        getitem_498 = unbind_int_33[2]
        getitem_499 = unbind_int_33[3];  unbind_int_33 = None
        expand_22 = select_10.expand(4, 512, 512, 512) ;  select_10 = None
        _scaled_dot_product_efficient_attention_default_9 = (torch.nn.functional.scaled_dot_product_attention(getitem_496,getitem_497,getitem_498,expand_22,False),) ;  getitem_496 = getitem_497 = getitem_498 = expand_22 = None
        getitem_500 = _scaled_dot_product_efficient_attention_default_9[0]
        sigmoid_36 = torch.sigmoid(getitem_499) ;  getitem_499 = None
        mul_58 = torch.mul(getitem_500,sigmoid_36) ;  getitem_500 = sigmoid_36 = None
        view_621 = mul_58.view(1, 4, 512, 512, 64) ;  mul_58 = None
        permute_383 = view_621.permute(0, 2, 3, 1, 4) ;  view_621 = None
        clone_79 = torch.clone(permute_383,memory_format = torch.contiguous_format) ;  permute_383 = None
        _unsafe_view_73 = clone_79.view(1, 512, 512, 256) ;  clone_79 = None
        cat_10 = torch.cat([_unsafe_view_72,_unsafe_view_73],dim = -1) ;  _unsafe_view_72 = _unsafe_view_73 = None
        slice_175 = arg134_1[0:] ;  arg134_1 = None
        unsqueeze_262 = torch.unsqueeze(slice_175,1) ;  slice_175 = None
        mul_59 = torch.mul(arg138_1,unsqueeze_262) ;  arg138_1 = unsqueeze_262 = None
        _to_copy_375 = mul_59.to(dtype = torch.bfloat16) ;  mul_59 = None
        t_127 = _to_copy_375.t() ;  _to_copy_375 = None
        view_622 = cat_10.view(262144, 512) ;  cat_10 = None
        mm_119 = torch.mm(view_622,t_127) ;  view_622 = t_127 = None
        view_623 = mm_119.view(1, 512, 512, 256) ;  mm_119 = None
        add_45 = torch.add(add_44,view_623) ;  add_44 = view_623 = None
        slice_176 = add_41[0:] 
        slice_177 = slice_176[:, 0:4096] ;  slice_176 = None
        slice_178 = slice_177[:, :, 0:] ;  slice_177 = None
        slice_179 = slice_178[:, :, :, 0:] ;  slice_178 = None
        slice_180 = arg1403_1[0:] 
        slice_181 = slice_180[:, 0:4096] ;  slice_180 = None
        slice_182 = slice_181[:, :, 0:] ;  slice_181 = None
        _to_copy_376 = slice_179.to(dtype = torch.float32) ;  slice_179 = None
        native_layer_norm_default_80 = (torch.nn.functional.layer_norm(_to_copy_376,[64],None,None,1e-05),) ;  _to_copy_376 = None
        getitem_504 = native_layer_norm_default_80[0]
        view_624 = slice_182.view(1, 4096, 512, 1) ;  slice_182 = None
        bitwise_not_51 = torch.bitwise_not(view_624) ;  view_624 = None
        masked_fill_51 = getitem_504.masked_fill(bitwise_not_51,0) ;  getitem_504 = bitwise_not_51 = None
        unbind_int_34 = torch.unbind(arg50_1) 
        getitem_507 = unbind_int_34[0]
        getitem_508 = unbind_int_34[1];  unbind_int_34 = None
        _to_copy_377 = getitem_507.to(dtype = torch.bfloat16) ;  getitem_507 = None
        _to_copy_378 = masked_fill_51.to(dtype = torch.bfloat16) 
        unsqueeze_263 = torch.unsqueeze(_to_copy_377,3) ;  _to_copy_377 = None
        unsqueeze_264 = torch.unsqueeze(unsqueeze_263,4) ;  unsqueeze_263 = None
        unsqueeze_265 = torch.unsqueeze(unsqueeze_264,5) ;  unsqueeze_264 = None
        permute_384 = unsqueeze_265.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_265 = None
        unsqueeze_266 = torch.unsqueeze(_to_copy_378,4) ;  _to_copy_378 = None
        unsqueeze_267 = torch.unsqueeze(unsqueeze_266,5) ;  unsqueeze_266 = None
        permute_385 = unsqueeze_267.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_267 = None
        permute_386 = permute_384.permute(0, 1, 5, 2, 3, 4) ;  permute_384 = None
        view_625 = permute_386.view(1, 64, 64) ;  permute_386 = None
        permute_387 = permute_385.permute(5, 2, 3, 4, 0, 1) ;  permute_385 = None
        view_626 = permute_387.view(1, 64, 2097152) ;  permute_387 = None
        bmm_63 = torch.bmm(view_625,view_626) ;  view_625 = view_626 = None
        view_627 = bmm_63.view(8, 8, 1, 1, 4096, 512) ;  bmm_63 = None
        permute_388 = view_627.permute(0, 1, 3, 4, 5, 2) ;  view_627 = None
        view_628 = permute_388.view(8, 8, 1, 4096, 512) ;  permute_388 = None
        _to_copy_379 = getitem_508.to(dtype = torch.bfloat16) ;  getitem_508 = None
        _to_copy_380 = masked_fill_51.to(dtype = torch.bfloat16) ;  masked_fill_51 = None
        unsqueeze_268 = torch.unsqueeze(_to_copy_379,3) ;  _to_copy_379 = None
        unsqueeze_269 = torch.unsqueeze(unsqueeze_268,4) ;  unsqueeze_268 = None
        unsqueeze_270 = torch.unsqueeze(unsqueeze_269,5) ;  unsqueeze_269 = None
        permute_389 = unsqueeze_270.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_270 = None
        unsqueeze_271 = torch.unsqueeze(_to_copy_380,4) ;  _to_copy_380 = None
        unsqueeze_272 = torch.unsqueeze(unsqueeze_271,5) ;  unsqueeze_271 = None
        permute_390 = unsqueeze_272.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_272 = None
        permute_391 = permute_389.permute(0, 1, 5, 2, 3, 4) ;  permute_389 = None
        view_629 = permute_391.view(1, 64, 64) ;  permute_391 = None
        permute_392 = permute_390.permute(5, 2, 3, 4, 0, 1) ;  permute_390 = None
        view_630 = permute_392.view(1, 64, 2097152) ;  permute_392 = None
        bmm_64 = torch.bmm(view_629,view_630) ;  view_629 = view_630 = None
        view_631 = bmm_64.view(8, 8, 1, 1, 4096, 512) ;  bmm_64 = None
        permute_393 = view_631.permute(0, 1, 3, 4, 5, 2) ;  view_631 = None
        view_632 = permute_393.view(8, 8, 1, 4096, 512) ;  permute_393 = None
        unsqueeze_273 = torch.unsqueeze(view_628,5) ;  view_628 = None
        unsqueeze_274 = torch.unsqueeze(unsqueeze_273,6) ;  unsqueeze_273 = None
        permute_394 = unsqueeze_274.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_274 = None
        unsqueeze_275 = torch.unsqueeze(view_632,5) ;  view_632 = None
        unsqueeze_276 = torch.unsqueeze(unsqueeze_275,6) ;  unsqueeze_275 = None
        permute_395 = unsqueeze_276.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_276 = None
        permute_396 = permute_394.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_394 = None
        clone_80 = torch.clone(permute_396,memory_format = torch.contiguous_format) ;  permute_396 = None
        _unsafe_view_74 = clone_80.view(8, 4096, 4096) ;  clone_80 = None
        permute_397 = permute_395.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_395 = None
        clone_81 = torch.clone(permute_397,memory_format = torch.contiguous_format) ;  permute_397 = None
        _unsafe_view_75 = clone_81.view(8, 4096, 4096) ;  clone_81 = None
        bmm_65 = torch.bmm(_unsafe_view_74,_unsafe_view_75) ;  _unsafe_view_74 = _unsafe_view_75 = None
        view_633 = bmm_65.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_65 = None
        permute_398 = view_633.permute(4, 1, 5, 0, 2, 6, 3) ;  view_633 = None
        view_634 = permute_398.view(1, 512, 512, 8, 8, 8) ;  permute_398 = None
        clone_82 = torch.clone(view_634,memory_format = torch.contiguous_format) ;  view_634 = None
        _unsafe_view_76 = clone_82.view(1, 512, 512, 512) ;  clone_82 = None
        add_46 = torch.add(_unsafe_view_76,0) ;  _unsafe_view_76 = None
        slice_183 = add_41[0:] 
        slice_184 = slice_183[:, 4096:8192] ;  slice_183 = None
        slice_185 = slice_184[:, :, 0:] ;  slice_184 = None
        slice_186 = slice_185[:, :, :, 0:] ;  slice_185 = None
        slice_187 = arg1403_1[0:] 
        slice_188 = slice_187[:, 4096:8192] ;  slice_187 = None
        slice_189 = slice_188[:, :, 0:] ;  slice_188 = None
        _to_copy_381 = slice_186.to(dtype = torch.float32) ;  slice_186 = None
        native_layer_norm_default_81 = (torch.nn.functional.layer_norm(_to_copy_381,[64],None,None,1e-05),) ;  _to_copy_381 = None
        getitem_509 = native_layer_norm_default_81[0]
        view_635 = slice_189.view(1, 4096, 512, 1) ;  slice_189 = None
        bitwise_not_52 = torch.bitwise_not(view_635) ;  view_635 = None
        masked_fill_52 = getitem_509.masked_fill(bitwise_not_52,0) ;  getitem_509 = bitwise_not_52 = None
        unbind_int_35 = torch.unbind(arg50_1) 
        getitem_512 = unbind_int_35[0]
        getitem_513 = unbind_int_35[1];  unbind_int_35 = None
        _to_copy_382 = getitem_512.to(dtype = torch.bfloat16) ;  getitem_512 = None
        _to_copy_383 = masked_fill_52.to(dtype = torch.bfloat16) 
        unsqueeze_277 = torch.unsqueeze(_to_copy_382,3) ;  _to_copy_382 = None
        unsqueeze_278 = torch.unsqueeze(unsqueeze_277,4) ;  unsqueeze_277 = None
        unsqueeze_279 = torch.unsqueeze(unsqueeze_278,5) ;  unsqueeze_278 = None
        permute_399 = unsqueeze_279.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_279 = None
        unsqueeze_280 = torch.unsqueeze(_to_copy_383,4) ;  _to_copy_383 = None
        unsqueeze_281 = torch.unsqueeze(unsqueeze_280,5) ;  unsqueeze_280 = None
        permute_400 = unsqueeze_281.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_281 = None
        permute_401 = permute_399.permute(0, 1, 5, 2, 3, 4) ;  permute_399 = None
        view_636 = permute_401.view(1, 64, 64) ;  permute_401 = None
        permute_402 = permute_400.permute(5, 2, 3, 4, 0, 1) ;  permute_400 = None
        view_637 = permute_402.view(1, 64, 2097152) ;  permute_402 = None
        bmm_66 = torch.bmm(view_636,view_637) ;  view_636 = view_637 = None
        view_638 = bmm_66.view(8, 8, 1, 1, 4096, 512) ;  bmm_66 = None
        permute_403 = view_638.permute(0, 1, 3, 4, 5, 2) ;  view_638 = None
        view_639 = permute_403.view(8, 8, 1, 4096, 512) ;  permute_403 = None
        _to_copy_384 = getitem_513.to(dtype = torch.bfloat16) ;  getitem_513 = None
        _to_copy_385 = masked_fill_52.to(dtype = torch.bfloat16) ;  masked_fill_52 = None
        unsqueeze_282 = torch.unsqueeze(_to_copy_384,3) ;  _to_copy_384 = None
        unsqueeze_283 = torch.unsqueeze(unsqueeze_282,4) ;  unsqueeze_282 = None
        unsqueeze_284 = torch.unsqueeze(unsqueeze_283,5) ;  unsqueeze_283 = None
        permute_404 = unsqueeze_284.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_284 = None
        unsqueeze_285 = torch.unsqueeze(_to_copy_385,4) ;  _to_copy_385 = None
        unsqueeze_286 = torch.unsqueeze(unsqueeze_285,5) ;  unsqueeze_285 = None
        permute_405 = unsqueeze_286.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_286 = None
        permute_406 = permute_404.permute(0, 1, 5, 2, 3, 4) ;  permute_404 = None
        view_640 = permute_406.view(1, 64, 64) ;  permute_406 = None
        permute_407 = permute_405.permute(5, 2, 3, 4, 0, 1) ;  permute_405 = None
        view_641 = permute_407.view(1, 64, 2097152) ;  permute_407 = None
        bmm_67 = torch.bmm(view_640,view_641) ;  view_640 = view_641 = None
        view_642 = bmm_67.view(8, 8, 1, 1, 4096, 512) ;  bmm_67 = None
        permute_408 = view_642.permute(0, 1, 3, 4, 5, 2) ;  view_642 = None
        view_643 = permute_408.view(8, 8, 1, 4096, 512) ;  permute_408 = None
        unsqueeze_287 = torch.unsqueeze(view_639,5) ;  view_639 = None
        unsqueeze_288 = torch.unsqueeze(unsqueeze_287,6) ;  unsqueeze_287 = None
        permute_409 = unsqueeze_288.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_288 = None
        unsqueeze_289 = torch.unsqueeze(view_643,5) ;  view_643 = None
        unsqueeze_290 = torch.unsqueeze(unsqueeze_289,6) ;  unsqueeze_289 = None
        permute_410 = unsqueeze_290.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_290 = None
        permute_411 = permute_409.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_409 = None
        clone_83 = torch.clone(permute_411,memory_format = torch.contiguous_format) ;  permute_411 = None
        _unsafe_view_77 = clone_83.view(8, 4096, 4096) ;  clone_83 = None
        permute_412 = permute_410.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_410 = None
        clone_84 = torch.clone(permute_412,memory_format = torch.contiguous_format) ;  permute_412 = None
        _unsafe_view_78 = clone_84.view(8, 4096, 4096) ;  clone_84 = None
        bmm_68 = torch.bmm(_unsafe_view_77,_unsafe_view_78) ;  _unsafe_view_77 = _unsafe_view_78 = None
        view_644 = bmm_68.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_68 = None
        permute_413 = view_644.permute(4, 1, 5, 0, 2, 6, 3) ;  view_644 = None
        view_645 = permute_413.view(1, 512, 512, 8, 8, 8) ;  permute_413 = None
        clone_85 = torch.clone(view_645,memory_format = torch.contiguous_format) ;  view_645 = None
        _unsafe_view_79 = clone_85.view(1, 512, 512, 512) ;  clone_85 = None
        add_47 = torch.add(add_46,_unsafe_view_79) ;  add_46 = _unsafe_view_79 = None
        slice_190 = add_41[0:] 
        slice_191 = slice_190[:, 8192:12288] ;  slice_190 = None
        slice_192 = slice_191[:, :, 0:] ;  slice_191 = None
        slice_193 = slice_192[:, :, :, 0:] ;  slice_192 = None
        slice_194 = arg1403_1[0:] 
        slice_195 = slice_194[:, 8192:12288] ;  slice_194 = None
        slice_196 = slice_195[:, :, 0:] ;  slice_195 = None
        _to_copy_386 = slice_193.to(dtype = torch.float32) ;  slice_193 = None
        native_layer_norm_default_82 = (torch.nn.functional.layer_norm(_to_copy_386,[64],None,None,1e-05),) ;  _to_copy_386 = None
        getitem_514 = native_layer_norm_default_82[0]
        view_646 = slice_196.view(1, 4096, 512, 1) ;  slice_196 = None
        bitwise_not_53 = torch.bitwise_not(view_646) ;  view_646 = None
        masked_fill_53 = getitem_514.masked_fill(bitwise_not_53,0) ;  getitem_514 = bitwise_not_53 = None
        unbind_int_36 = torch.unbind(arg50_1) 
        getitem_517 = unbind_int_36[0]
        getitem_518 = unbind_int_36[1];  unbind_int_36 = None
        _to_copy_387 = getitem_517.to(dtype = torch.bfloat16) ;  getitem_517 = None
        _to_copy_388 = masked_fill_53.to(dtype = torch.bfloat16) 
        unsqueeze_291 = torch.unsqueeze(_to_copy_387,3) ;  _to_copy_387 = None
        unsqueeze_292 = torch.unsqueeze(unsqueeze_291,4) ;  unsqueeze_291 = None
        unsqueeze_293 = torch.unsqueeze(unsqueeze_292,5) ;  unsqueeze_292 = None
        permute_414 = unsqueeze_293.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_293 = None
        unsqueeze_294 = torch.unsqueeze(_to_copy_388,4) ;  _to_copy_388 = None
        unsqueeze_295 = torch.unsqueeze(unsqueeze_294,5) ;  unsqueeze_294 = None
        permute_415 = unsqueeze_295.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_295 = None
        permute_416 = permute_414.permute(0, 1, 5, 2, 3, 4) ;  permute_414 = None
        view_647 = permute_416.view(1, 64, 64) ;  permute_416 = None
        permute_417 = permute_415.permute(5, 2, 3, 4, 0, 1) ;  permute_415 = None
        view_648 = permute_417.view(1, 64, 2097152) ;  permute_417 = None
        bmm_69 = torch.bmm(view_647,view_648) ;  view_647 = view_648 = None
        view_649 = bmm_69.view(8, 8, 1, 1, 4096, 512) ;  bmm_69 = None
        permute_418 = view_649.permute(0, 1, 3, 4, 5, 2) ;  view_649 = None
        view_650 = permute_418.view(8, 8, 1, 4096, 512) ;  permute_418 = None
        _to_copy_389 = getitem_518.to(dtype = torch.bfloat16) ;  getitem_518 = None
        _to_copy_390 = masked_fill_53.to(dtype = torch.bfloat16) ;  masked_fill_53 = None
        unsqueeze_296 = torch.unsqueeze(_to_copy_389,3) ;  _to_copy_389 = None
        unsqueeze_297 = torch.unsqueeze(unsqueeze_296,4) ;  unsqueeze_296 = None
        unsqueeze_298 = torch.unsqueeze(unsqueeze_297,5) ;  unsqueeze_297 = None
        permute_419 = unsqueeze_298.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_298 = None
        unsqueeze_299 = torch.unsqueeze(_to_copy_390,4) ;  _to_copy_390 = None
        unsqueeze_300 = torch.unsqueeze(unsqueeze_299,5) ;  unsqueeze_299 = None
        permute_420 = unsqueeze_300.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_300 = None
        permute_421 = permute_419.permute(0, 1, 5, 2, 3, 4) ;  permute_419 = None
        view_651 = permute_421.view(1, 64, 64) ;  permute_421 = None
        permute_422 = permute_420.permute(5, 2, 3, 4, 0, 1) ;  permute_420 = None
        view_652 = permute_422.view(1, 64, 2097152) ;  permute_422 = None
        bmm_70 = torch.bmm(view_651,view_652) ;  view_651 = view_652 = None
        view_653 = bmm_70.view(8, 8, 1, 1, 4096, 512) ;  bmm_70 = None
        permute_423 = view_653.permute(0, 1, 3, 4, 5, 2) ;  view_653 = None
        view_654 = permute_423.view(8, 8, 1, 4096, 512) ;  permute_423 = None
        unsqueeze_301 = torch.unsqueeze(view_650,5) ;  view_650 = None
        unsqueeze_302 = torch.unsqueeze(unsqueeze_301,6) ;  unsqueeze_301 = None
        permute_424 = unsqueeze_302.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_302 = None
        unsqueeze_303 = torch.unsqueeze(view_654,5) ;  view_654 = None
        unsqueeze_304 = torch.unsqueeze(unsqueeze_303,6) ;  unsqueeze_303 = None
        permute_425 = unsqueeze_304.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_304 = None
        permute_426 = permute_424.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_424 = None
        clone_86 = torch.clone(permute_426,memory_format = torch.contiguous_format) ;  permute_426 = None
        _unsafe_view_80 = clone_86.view(8, 4096, 4096) ;  clone_86 = None
        permute_427 = permute_425.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_425 = None
        clone_87 = torch.clone(permute_427,memory_format = torch.contiguous_format) ;  permute_427 = None
        _unsafe_view_81 = clone_87.view(8, 4096, 4096) ;  clone_87 = None
        bmm_71 = torch.bmm(_unsafe_view_80,_unsafe_view_81) ;  _unsafe_view_80 = _unsafe_view_81 = None
        view_655 = bmm_71.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_71 = None
        permute_428 = view_655.permute(4, 1, 5, 0, 2, 6, 3) ;  view_655 = None
        view_656 = permute_428.view(1, 512, 512, 8, 8, 8) ;  permute_428 = None
        clone_88 = torch.clone(view_656,memory_format = torch.contiguous_format) ;  view_656 = None
        _unsafe_view_82 = clone_88.view(1, 512, 512, 512) ;  clone_88 = None
        add_48 = torch.add(add_47,_unsafe_view_82) ;  add_47 = _unsafe_view_82 = None
        slice_197 = add_41[0:] ;  add_41 = None
        slice_198 = slice_197[:, 12288:16384] ;  slice_197 = None
        slice_199 = slice_198[:, :, 0:] ;  slice_198 = None
        slice_200 = slice_199[:, :, :, 0:] ;  slice_199 = None
        slice_201 = arg1403_1[0:] ;  arg1403_1 = None
        slice_202 = slice_201[:, 12288:16384] ;  slice_201 = None
        slice_203 = slice_202[:, :, 0:] ;  slice_202 = None
        _to_copy_391 = slice_200.to(dtype = torch.float32) ;  slice_200 = None
        native_layer_norm_default_83 = (torch.nn.functional.layer_norm(_to_copy_391,[64],None,None,1e-05),) ;  _to_copy_391 = None
        getitem_519 = native_layer_norm_default_83[0]
        view_657 = slice_203.view(1, 4096, 512, 1) ;  slice_203 = None
        bitwise_not_54 = torch.bitwise_not(view_657) ;  view_657 = None
        masked_fill_54 = getitem_519.masked_fill(bitwise_not_54,0) ;  getitem_519 = bitwise_not_54 = None
        unbind_int_37 = torch.unbind(arg50_1) ;  arg50_1 = None
        getitem_522 = unbind_int_37[0]
        getitem_523 = unbind_int_37[1];  unbind_int_37 = None
        _to_copy_392 = getitem_522.to(dtype = torch.bfloat16) ;  getitem_522 = None
        _to_copy_393 = masked_fill_54.to(dtype = torch.bfloat16) 
        unsqueeze_305 = torch.unsqueeze(_to_copy_392,3) ;  _to_copy_392 = None
        unsqueeze_306 = torch.unsqueeze(unsqueeze_305,4) ;  unsqueeze_305 = None
        unsqueeze_307 = torch.unsqueeze(unsqueeze_306,5) ;  unsqueeze_306 = None
        permute_429 = unsqueeze_307.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_307 = None
        unsqueeze_308 = torch.unsqueeze(_to_copy_393,4) ;  _to_copy_393 = None
        unsqueeze_309 = torch.unsqueeze(unsqueeze_308,5) ;  unsqueeze_308 = None
        permute_430 = unsqueeze_309.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_309 = None
        permute_431 = permute_429.permute(0, 1, 5, 2, 3, 4) ;  permute_429 = None
        view_658 = permute_431.view(1, 64, 64) ;  permute_431 = None
        permute_432 = permute_430.permute(5, 2, 3, 4, 0, 1) ;  permute_430 = None
        view_659 = permute_432.view(1, 64, 2097152) ;  permute_432 = None
        bmm_72 = torch.bmm(view_658,view_659) ;  view_658 = view_659 = None
        view_660 = bmm_72.view(8, 8, 1, 1, 4096, 512) ;  bmm_72 = None
        permute_433 = view_660.permute(0, 1, 3, 4, 5, 2) ;  view_660 = None
        view_661 = permute_433.view(8, 8, 1, 4096, 512) ;  permute_433 = None
        _to_copy_394 = getitem_523.to(dtype = torch.bfloat16) ;  getitem_523 = None
        _to_copy_395 = masked_fill_54.to(dtype = torch.bfloat16) ;  masked_fill_54 = None
        unsqueeze_310 = torch.unsqueeze(_to_copy_394,3) ;  _to_copy_394 = None
        unsqueeze_311 = torch.unsqueeze(unsqueeze_310,4) ;  unsqueeze_310 = None
        unsqueeze_312 = torch.unsqueeze(unsqueeze_311,5) ;  unsqueeze_311 = None
        permute_434 = unsqueeze_312.permute(0, 1, 3, 4, 5, 2) ;  unsqueeze_312 = None
        unsqueeze_313 = torch.unsqueeze(_to_copy_395,4) ;  _to_copy_395 = None
        unsqueeze_314 = torch.unsqueeze(unsqueeze_313,5) ;  unsqueeze_313 = None
        permute_435 = unsqueeze_314.permute(4, 5, 0, 1, 2, 3) ;  unsqueeze_314 = None
        permute_436 = permute_434.permute(0, 1, 5, 2, 3, 4) ;  permute_434 = None
        view_662 = permute_436.view(1, 64, 64) ;  permute_436 = None
        permute_437 = permute_435.permute(5, 2, 3, 4, 0, 1) ;  permute_435 = None
        view_663 = permute_437.view(1, 64, 2097152) ;  permute_437 = None
        bmm_73 = torch.bmm(view_662,view_663) ;  view_662 = view_663 = None
        view_664 = bmm_73.view(8, 8, 1, 1, 4096, 512) ;  bmm_73 = None
        permute_438 = view_664.permute(0, 1, 3, 4, 5, 2) ;  view_664 = None
        view_665 = permute_438.view(8, 8, 1, 4096, 512) ;  permute_438 = None
        unsqueeze_315 = torch.unsqueeze(view_661,5) ;  view_661 = None
        unsqueeze_316 = torch.unsqueeze(unsqueeze_315,6) ;  unsqueeze_315 = None
        permute_439 = unsqueeze_316.permute(2, 4, 5, 0, 1, 6, 3) ;  unsqueeze_316 = None
        unsqueeze_317 = torch.unsqueeze(view_665,5) ;  view_665 = None
        unsqueeze_318 = torch.unsqueeze(unsqueeze_317,6) ;  unsqueeze_317 = None
        permute_440 = unsqueeze_318.permute(2, 5, 4, 0, 6, 1, 3) ;  unsqueeze_318 = None
        permute_441 = permute_439.permute(3, 1, 4, 6, 0, 2, 5) ;  permute_439 = None
        clone_89 = torch.clone(permute_441,memory_format = torch.contiguous_format) ;  permute_441 = None
        _unsafe_view_83 = clone_89.view(8, 4096, 4096) ;  clone_89 = None
        permute_442 = permute_440.permute(3, 6, 0, 2, 5, 1, 4) ;  permute_440 = None
        clone_90 = torch.clone(permute_442,memory_format = torch.contiguous_format) ;  permute_442 = None
        _unsafe_view_84 = clone_90.view(8, 4096, 4096) ;  clone_90 = None
        bmm_74 = torch.bmm(_unsafe_view_83,_unsafe_view_84) ;  _unsafe_view_83 = _unsafe_view_84 = None
        view_666 = bmm_74.view(8, 512, 8, 1, 1, 512, 8) ;  bmm_74 = None
        permute_443 = view_666.permute(4, 1, 5, 0, 2, 6, 3) ;  view_666 = None
        view_667 = permute_443.view(1, 512, 512, 8, 8, 8) ;  permute_443 = None
        clone_91 = torch.clone(view_667,memory_format = torch.contiguous_format) ;  view_667 = None
        _unsafe_view_85 = clone_91.view(1, 512, 512, 512) ;  clone_91 = None
        add_49 = torch.add(add_48,_unsafe_view_85) ;  add_48 = _unsafe_view_85 = None
        _to_copy_396 = add_49.to(dtype = torch.float32) ;  add_49 = None
        native_layer_norm_default_84 = (torch.nn.functional.layer_norm(_to_copy_396,[512],arg51_1,arg52_1,0.1),) ;  _to_copy_396 = arg51_1 = arg52_1 = None
        getitem_524 = native_layer_norm_default_84[0]
        _to_copy_397 = arg54_1.to(dtype = torch.bfloat16) ;  arg54_1 = None
        _to_copy_398 = arg53_1.to(dtype = torch.bfloat16) ;  arg53_1 = None
        _to_copy_399 = getitem_524.to(dtype = torch.bfloat16) ;  getitem_524 = None
        view_668 = _to_copy_399.view(262144, 512) ;  _to_copy_399 = None
        t_128 = _to_copy_398.t() ;  _to_copy_398 = None
        addmm_3 = torch.addmm(_to_copy_397,view_668,t_128) ;  _to_copy_397 = view_668 = t_128 = None
        view_669 = addmm_3.view(1, 512, 512, 256) ;  addmm_3 = None
        add_50 = torch.add(add_45,view_669) ;  add_45 = view_669 = None
        _to_copy_400 = add_50.to(dtype = torch.float32) 
        native_layer_norm_default_85 = (torch.nn.functional.layer_norm(_to_copy_400,[256],arg119_1,arg120_1,1e-05),) ;  _to_copy_400 = arg119_1 = arg120_1 = None
        getitem_527 = native_layer_norm_default_85[0]
        split_with_sizes_default_10 = torch.split(arg122_1,[512,512]) ;  arg122_1 = None
        getitem_530 = split_with_sizes_default_10[0]
        getitem_531 = split_with_sizes_default_10[1];  split_with_sizes_default_10 = None
        split_with_sizes_default_11 = torch.split(arg123_1,[512,512,256]) ;  arg123_1 = None
        getitem_532 = split_with_sizes_default_11[0]
        getitem_533 = split_with_sizes_default_11[1]
        getitem_534 = split_with_sizes_default_11[2];  split_with_sizes_default_11 = None
        _to_copy_401 = getitem_530.to(dtype = torch.bfloat16) ;  getitem_530 = None
        _to_copy_402 = getitem_527.to(dtype = torch.bfloat16) 
        t_129 = _to_copy_401.t() ;  _to_copy_401 = None
        view_670 = _to_copy_402.view(262144, 256) ;  _to_copy_402 = None
        mm_120 = torch.mm(view_670,t_129) ;  view_670 = t_129 = None
        view_671 = mm_120.view(1, 512, 512, 512) ;  mm_120 = None
        _to_copy_403 = getitem_532.to(dtype = torch.bfloat16) ;  getitem_532 = None
        _to_copy_404 = getitem_527.to(dtype = torch.bfloat16) 
        t_130 = _to_copy_403.t() ;  _to_copy_403 = None
        view_672 = _to_copy_404.view(262144, 256) ;  _to_copy_404 = None
        mm_121 = torch.mm(view_672,t_130) ;  view_672 = t_130 = None
        view_673 = mm_121.view(1, 512, 512, 512) ;  mm_121 = None
        sigmoid_37 = torch.sigmoid(view_673) ;  view_673 = None
        mul_60 = torch.mul(view_671,sigmoid_37) ;  view_671 = sigmoid_37 = None
        unsqueeze_319 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_55 = torch.bitwise_not(unsqueeze_319) ;  unsqueeze_319 = None
        masked_fill_55 = mul_60.masked_fill(bitwise_not_55,0) ;  mul_60 = bitwise_not_55 = None
        split_tensor_45 = torch.split(masked_fill_55,256,dim = -1) 
        getitem_537 = split_tensor_45[0]
        unsqueeze_322 = torch.unsqueeze(getitem_537,4) ;  getitem_537 = None
        permute_448 = unsqueeze_322.permute(0, 1, 4, 3, 2) ;  unsqueeze_322 = None
        permute_449 = permute_448.permute(3, 1, 4, 0, 2) ;  permute_448 = None
        view_676 = permute_449.view(256, 512, 512) ;  permute_449 = None
        split_tensor_46 = torch.split(masked_fill_55,256,dim = -1) ;  masked_fill_55 = None
        getitem_540 = split_tensor_46[1];  split_tensor_46 = None
        unsqueeze_323 = torch.unsqueeze(getitem_540,4) ;  getitem_540 = None
        permute_450 = unsqueeze_323.permute(0, 4, 1, 3, 2) ;  unsqueeze_323 = None
        permute_451 = permute_450.permute(3, 4, 0, 2, 1) ;  permute_450 = None
        view_677 = permute_451.view(256, 512, 512) ;  permute_451 = None
        bmm_75 = torch.bmm(view_676,view_677) ;  view_676 = view_677 = None
        view_678 = bmm_75.view(256, 512, 1, 1, 512) ;  bmm_75 = None
        permute_452 = view_678.permute(3, 1, 4, 0, 2) ;  view_678 = None
        view_679 = permute_452.view(1, 512, 512, 256) ;  permute_452 = None
        _to_copy_405 = getitem_531.to(dtype = torch.bfloat16) ;  getitem_531 = None
        _to_copy_406 = getitem_527.to(dtype = torch.bfloat16) 
        t_131 = _to_copy_405.t() ;  _to_copy_405 = None
        view_680 = _to_copy_406.view(262144, 256) ;  _to_copy_406 = None
        mm_122 = torch.mm(view_680,t_131) ;  view_680 = t_131 = None
        view_681 = mm_122.view(1, 512, 512, 512) ;  mm_122 = None
        _to_copy_407 = getitem_533.to(dtype = torch.bfloat16) ;  getitem_533 = None
        _to_copy_408 = getitem_527.to(dtype = torch.bfloat16) 
        t_132 = _to_copy_407.t() ;  _to_copy_407 = None
        view_682 = _to_copy_408.view(262144, 256) ;  _to_copy_408 = None
        mm_123 = torch.mm(view_682,t_132) ;  view_682 = t_132 = None
        view_683 = mm_123.view(1, 512, 512, 512) ;  mm_123 = None
        sigmoid_38 = torch.sigmoid(view_683) ;  view_683 = None
        mul_61 = torch.mul(view_681,sigmoid_38) ;  view_681 = sigmoid_38 = None
        view_684 = mul_61.view(262144, 512) ;  mul_61 = None
        view_685 = view_684.view(1, 512, 512, 512) ;  view_684 = None
        transpose_10 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_324 = torch.unsqueeze(transpose_10,3) ;  transpose_10 = None
        clone_92 = torch.clone(unsqueeze_324,memory_format = torch.contiguous_format) ;  unsqueeze_324 = None
        bitwise_not_56 = torch.bitwise_not(clone_92) ;  clone_92 = None
        masked_fill_56 = view_685.masked_fill(bitwise_not_56,0) ;  view_685 = bitwise_not_56 = None
        view_686 = masked_fill_56.view(262144, 512) ;  masked_fill_56 = None
        view_690 = view_686.view(1, 512, 512, 512) 
        split_tensor_47 = torch.split(view_690,256,dim = -1) ;  view_690 = None
        getitem_543 = split_tensor_47[0]
        unsqueeze_327 = torch.unsqueeze(getitem_543,4) ;  getitem_543 = None
        permute_457 = unsqueeze_327.permute(0, 2, 4, 3, 1) ;  unsqueeze_327 = None
        permute_458 = permute_457.permute(3, 1, 4, 0, 2) ;  permute_457 = None
        view_691 = permute_458.view(256, 512, 512) ;  permute_458 = None
        view_692 = view_686.view(1, 512, 512, 512) ;  view_686 = None
        split_tensor_48 = torch.split(view_692,256,dim = -1) ;  view_692 = None
        getitem_546 = split_tensor_48[1];  split_tensor_48 = None
        unsqueeze_328 = torch.unsqueeze(getitem_546,4) ;  getitem_546 = None
        permute_459 = unsqueeze_328.permute(0, 4, 2, 3, 1) ;  unsqueeze_328 = None
        permute_460 = permute_459.permute(3, 4, 0, 2, 1) ;  permute_459 = None
        view_693 = permute_460.view(256, 512, 512) ;  permute_460 = None
        bmm_76 = torch.bmm(view_691,view_693) ;  view_691 = view_693 = None
        view_694 = bmm_76.view(256, 512, 1, 1, 512) ;  bmm_76 = None
        permute_461 = view_694.permute(3, 1, 4, 0, 2) ;  view_694 = None
        view_695 = permute_461.view(1, 512, 512, 256) ;  permute_461 = None
        _to_copy_409 = view_679.to(dtype = torch.float32) ;  view_679 = None
        native_layer_norm_default_86 = (torch.nn.functional.layer_norm(_to_copy_409,[256],None,None,1e-05),) ;  _to_copy_409 = None
        getitem_547 = native_layer_norm_default_86[0]
        _to_copy_410 = view_695.to(dtype = torch.float32) ;  view_695 = None
        native_layer_norm_default_87 = (torch.nn.functional.layer_norm(_to_copy_410,[256],None,None,1e-05),) ;  _to_copy_410 = None
        getitem_550 = native_layer_norm_default_87[0]
        add_51 = torch.add(getitem_547,getitem_550) ;  getitem_547 = getitem_550 = None
        _to_copy_411 = arg121_1.to(dtype = torch.bfloat16) ;  arg121_1 = None
        _to_copy_412 = add_51.to(dtype = torch.bfloat16) ;  add_51 = None
        t_133 = _to_copy_411.t() ;  _to_copy_411 = None
        view_696 = _to_copy_412.view(262144, 256) ;  _to_copy_412 = None
        mm_124 = torch.mm(view_696,t_133) ;  view_696 = t_133 = None
        view_697 = mm_124.view(1, 512, 512, 256) ;  mm_124 = None
        _to_copy_413 = getitem_534.to(dtype = torch.bfloat16) ;  getitem_534 = None
        _to_copy_414 = getitem_527.to(dtype = torch.bfloat16) ;  getitem_527 = None
        t_134 = _to_copy_413.t() ;  _to_copy_413 = None
        view_698 = _to_copy_414.view(262144, 256) ;  _to_copy_414 = None
        mm_125 = torch.mm(view_698,t_134) ;  view_698 = t_134 = None
        view_699 = mm_125.view(1, 512, 512, 256) ;  mm_125 = None
        sigmoid_39 = torch.sigmoid(view_699) ;  view_699 = None
        mul_62 = torch.mul(view_697,sigmoid_39) ;  view_697 = sigmoid_39 = None
        add_52 = torch.add(add_50,mul_62) ;  mul_62 = None
        split_tensor_49 = torch.split(add_50,512,dim = -2) ;  add_50 = None
        getitem_553 = split_tensor_49[0];  split_tensor_49 = None
        _to_copy_415 = getitem_553.to(dtype = torch.float32) ;  getitem_553 = None
        native_layer_norm_default_88 = (torch.nn.functional.layer_norm(_to_copy_415,[256],arg100_1,arg101_1,1e-05),) ;  _to_copy_415 = arg100_1 = arg101_1 = None
        getitem_554 = native_layer_norm_default_88[0]
        _to_copy_416 = arg102_1.to(dtype = torch.bfloat16) ;  arg102_1 = None
        _to_copy_417 = getitem_554.to(dtype = torch.bfloat16) ;  getitem_554 = None
        t_135 = _to_copy_416.t() ;  _to_copy_416 = None
        view_700 = _to_copy_417.view(262144, 256) ;  _to_copy_417 = None
        mm_126 = torch.mm(view_700,t_135) ;  view_700 = t_135 = None
        view_701 = mm_126.view(1, 512, 512, 2048) ;  mm_126 = None
        split_tensor_50 = torch.split(view_701,1024,dim = -1) ;  view_701 = None
        getitem_557 = split_tensor_50[0]
        getitem_558 = split_tensor_50[1];  split_tensor_50 = None
        silu_17 = torch.nn.functional.silu(getitem_557) ;  getitem_557 = None
        mul_63 = torch.mul(silu_17,getitem_558) ;  silu_17 = getitem_558 = None
        _to_copy_418 = arg103_1.to(dtype = torch.bfloat16) ;  arg103_1 = None
        t_136 = _to_copy_418.t() ;  _to_copy_418 = None
        view_703 = mul_63.view(262144, 1024) ;  mul_63 = None
        mm_127 = torch.mm(view_703,t_136) ;  view_703 = t_136 = None
        view_704 = mm_127.view(1, 512, 512, 256) ;  mm_127 = None
        add_53 = torch.add(add_52,view_704) ;  add_52 = view_704 = None
        _to_copy_419 = add_53.to(dtype = torch.float32) 
        native_layer_norm_default_89 = (torch.nn.functional.layer_norm(_to_copy_419,[256],None,None,1e-05),) ;  _to_copy_419 = None
        getitem_559 = native_layer_norm_default_89[0]
        _to_copy_420 = arg140_1.to(dtype = torch.bfloat16) ;  arg140_1 = None
        _to_copy_421 = getitem_559.to(dtype = torch.bfloat16) 
        t_137 = _to_copy_420.t() ;  _to_copy_420 = None
        view_705 = _to_copy_421.view(262144, 256) ;  _to_copy_421 = None
        mm_128 = torch.mm(view_705,t_137) ;  view_705 = t_137 = None
        view_706 = mm_128.view(1, 512, 512, 8) ;  mm_128 = None
        view_707 = view_706.view(1, 512, 512, 2, 4) ;  view_706 = None
        permute_462 = view_707.permute(0, 3, 4, 1, 2) ;  view_707 = None
        view_708 = permute_462.view(1, 2, 4, 1, 512, 512) ;  permute_462 = None
        view_709 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_57 = torch.bitwise_not(view_709) ;  view_709 = None
        masked_fill_57 = view_708.masked_fill(bitwise_not_57,-10000) ;  view_708 = bitwise_not_57 = None
        view_710 = masked_fill_57.view(1, 2, 4, 512, 512) ;  masked_fill_57 = None
        permute_463 = view_710.permute(1, 0, 2, 3, 4) ;  view_710 = None
        view_711 = permute_463.view(2, 4, 1, 512, 512) ;  permute_463 = None
        _to_copy_422 = arg141_1.to(dtype = torch.bfloat16) ;  arg141_1 = None
        _to_copy_423 = getitem_559.to(dtype = torch.bfloat16) 
        t_138 = _to_copy_422.t() ;  _to_copy_422 = None
        view_712 = _to_copy_423.view(262144, 256) ;  _to_copy_423 = None
        mm_129 = torch.mm(view_712,t_138) ;  view_712 = t_138 = None
        view_713 = mm_129.view(1, 512, 512, 1024) ;  mm_129 = None
        select_11 = torch.select(view_711,0,0) 
        view_714 = view_713.view(1, 512, 512, 4, 4, 64) ;  view_713 = None
        permute_464 = view_714.permute(4, 0, 3, 1, 2, 5) ;  view_714 = None
        view_715 = permute_464.view(4, 4, 512, 512, 64) ;  permute_464 = None
        unbind_int_38 = torch.unbind(view_715) ;  view_715 = None
        getitem_562 = unbind_int_38[0]
        getitem_563 = unbind_int_38[1]
        getitem_564 = unbind_int_38[2]
        getitem_565 = unbind_int_38[3];  unbind_int_38 = None
        expand_23 = select_11.expand(4, 512, 512, 512) ;  select_11 = None
        _scaled_dot_product_efficient_attention_default_10 = (torch.nn.functional.scaled_dot_product_attention(getitem_562,getitem_563,getitem_564,expand_23,False),) ;  getitem_562 = getitem_563 = getitem_564 = expand_23 = None
        getitem_566 = _scaled_dot_product_efficient_attention_default_10[0]
        sigmoid_40 = torch.sigmoid(getitem_565) ;  getitem_565 = None
        mul_64 = torch.mul(getitem_566,sigmoid_40) ;  getitem_566 = sigmoid_40 = None
        view_716 = mul_64.view(1, 4, 512, 512, 64) ;  mul_64 = None
        permute_465 = view_716.permute(0, 2, 3, 1, 4) ;  view_716 = None
        clone_93 = torch.clone(permute_465,memory_format = torch.contiguous_format) ;  permute_465 = None
        _unsafe_view_86 = clone_93.view(1, 512, 512, 256) ;  clone_93 = None
        transpose_11 = torch.transpose(getitem_559,1,2) ;  getitem_559 = None
        _to_copy_424 = arg142_1.to(dtype = torch.bfloat16) ;  arg142_1 = None
        _to_copy_425 = transpose_11.to(dtype = torch.bfloat16) ;  transpose_11 = None
        t_139 = _to_copy_424.t() ;  _to_copy_424 = None
        expand_24 = _to_copy_425.expand(1, 512, 512, 256) ;  _to_copy_425 = None
        view_717 = expand_24.view(512, 512, 256) ;  expand_24 = None
        expand_25 = t_139.expand(1, 512, 256, 1024) ;  t_139 = None
        view_718 = expand_25.view(512, 256, 1024) ;  expand_25 = None
        bmm_77 = torch.bmm(view_717,view_718) ;  view_717 = view_718 = None
        view_719 = bmm_77.view(1, 512, 512, 1024) ;  bmm_77 = None
        select_12 = torch.select(view_711,0,1) ;  view_711 = None
        view_720 = view_719.view(1, 512, 512, 4, 4, 64) ;  view_719 = None
        permute_466 = view_720.permute(4, 0, 3, 1, 2, 5) ;  view_720 = None
        view_721 = permute_466.view(4, 4, 512, 512, 64) ;  permute_466 = None
        unbind_int_39 = torch.unbind(view_721) ;  view_721 = None
        getitem_570 = unbind_int_39[0]
        getitem_571 = unbind_int_39[1]
        getitem_572 = unbind_int_39[2]
        getitem_573 = unbind_int_39[3];  unbind_int_39 = None
        expand_26 = select_12.expand(4, 512, 512, 512) ;  select_12 = None
        _scaled_dot_product_efficient_attention_default_11 = (torch.nn.functional.scaled_dot_product_attention(getitem_570,getitem_571,getitem_572,expand_26,False),) ;  getitem_570 = getitem_571 = getitem_572 = expand_26 = None
        getitem_574 = _scaled_dot_product_efficient_attention_default_11[0]
        sigmoid_41 = torch.sigmoid(getitem_573) ;  getitem_573 = None
        mul_65 = torch.mul(getitem_574,sigmoid_41) ;  getitem_574 = sigmoid_41 = None
        view_722 = mul_65.view(1, 4, 512, 512, 64) ;  mul_65 = None
        permute_467 = view_722.permute(0, 2, 3, 1, 4) ;  view_722 = None
        clone_94 = torch.clone(permute_467,memory_format = torch.contiguous_format) ;  permute_467 = None
        _unsafe_view_87 = clone_94.view(1, 512, 512, 256) ;  clone_94 = None
        cat_11 = torch.cat([_unsafe_view_86,_unsafe_view_87],dim = -1) ;  _unsafe_view_86 = _unsafe_view_87 = None
        slice_204 = arg139_1[0:] ;  arg139_1 = None
        unsqueeze_329 = torch.unsqueeze(slice_204,1) ;  slice_204 = None
        mul_66 = torch.mul(arg143_1,unsqueeze_329) ;  arg143_1 = unsqueeze_329 = None
        _to_copy_426 = mul_66.to(dtype = torch.bfloat16) ;  mul_66 = None
        t_140 = _to_copy_426.t() ;  _to_copy_426 = None
        view_723 = cat_11.view(262144, 512) ;  cat_11 = None
        mm_130 = torch.mm(view_723,t_140) ;  view_723 = t_140 = None
        view_724 = mm_130.view(1, 512, 512, 256) ;  mm_130 = None
        add_54 = torch.add(add_53,view_724) ;  add_53 = view_724 = None
        add_55 = torch.add(add_11,add_54) ;  add_11 = add_54 = None
        _to_copy_427 = add_55.to(dtype = torch.float32) 
        native_layer_norm_default_90 = (torch.nn.functional.layer_norm(_to_copy_427,[256],arg148_1,arg149_1,1e-05),) ;  _to_copy_427 = arg148_1 = arg149_1 = None
        getitem_578 = native_layer_norm_default_90[0]
        split_with_sizes_default_12 = torch.split(arg151_1,[512,512]) ;  arg151_1 = None
        getitem_581 = split_with_sizes_default_12[0]
        getitem_582 = split_with_sizes_default_12[1];  split_with_sizes_default_12 = None
        split_with_sizes_default_13 = torch.split(arg152_1,[512,512,256]) ;  arg152_1 = None
        getitem_583 = split_with_sizes_default_13[0]
        getitem_584 = split_with_sizes_default_13[1]
        getitem_585 = split_with_sizes_default_13[2];  split_with_sizes_default_13 = None
        _to_copy_428 = getitem_581.to(dtype = torch.bfloat16) ;  getitem_581 = None
        _to_copy_429 = getitem_578.to(dtype = torch.bfloat16) 
        t_141 = _to_copy_428.t() ;  _to_copy_428 = None
        view_725 = _to_copy_429.view(262144, 256) ;  _to_copy_429 = None
        mm_131 = torch.mm(view_725,t_141) ;  view_725 = t_141 = None
        view_726 = mm_131.view(1, 512, 512, 512) ;  mm_131 = None
        _to_copy_430 = getitem_583.to(dtype = torch.bfloat16) ;  getitem_583 = None
        _to_copy_431 = getitem_578.to(dtype = torch.bfloat16) 
        t_142 = _to_copy_430.t() ;  _to_copy_430 = None
        view_727 = _to_copy_431.view(262144, 256) ;  _to_copy_431 = None
        mm_132 = torch.mm(view_727,t_142) ;  view_727 = t_142 = None
        view_728 = mm_132.view(1, 512, 512, 512) ;  mm_132 = None
        sigmoid_42 = torch.sigmoid(view_728) ;  view_728 = None
        mul_67 = torch.mul(view_726,sigmoid_42) ;  view_726 = sigmoid_42 = None
        unsqueeze_330 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_58 = torch.bitwise_not(unsqueeze_330) ;  unsqueeze_330 = None
        masked_fill_58 = mul_67.masked_fill(bitwise_not_58,0) ;  mul_67 = bitwise_not_58 = None
        split_tensor_51 = torch.split(masked_fill_58,256,dim = -1) 
        getitem_588 = split_tensor_51[0]
        unsqueeze_333 = torch.unsqueeze(getitem_588,4) ;  getitem_588 = None
        permute_472 = unsqueeze_333.permute(0, 1, 4, 3, 2) ;  unsqueeze_333 = None
        permute_473 = permute_472.permute(3, 1, 4, 0, 2) ;  permute_472 = None
        view_731 = permute_473.view(256, 512, 512) ;  permute_473 = None
        split_tensor_52 = torch.split(masked_fill_58,256,dim = -1) ;  masked_fill_58 = None
        getitem_591 = split_tensor_52[1];  split_tensor_52 = None
        unsqueeze_334 = torch.unsqueeze(getitem_591,4) ;  getitem_591 = None
        permute_474 = unsqueeze_334.permute(0, 4, 1, 3, 2) ;  unsqueeze_334 = None
        permute_475 = permute_474.permute(3, 4, 0, 2, 1) ;  permute_474 = None
        view_732 = permute_475.view(256, 512, 512) ;  permute_475 = None
        bmm_78 = torch.bmm(view_731,view_732) ;  view_731 = view_732 = None
        view_733 = bmm_78.view(256, 512, 1, 1, 512) ;  bmm_78 = None
        permute_476 = view_733.permute(3, 1, 4, 0, 2) ;  view_733 = None
        view_734 = permute_476.view(1, 512, 512, 256) ;  permute_476 = None
        _to_copy_432 = getitem_582.to(dtype = torch.bfloat16) ;  getitem_582 = None
        _to_copy_433 = getitem_578.to(dtype = torch.bfloat16) 
        t_143 = _to_copy_432.t() ;  _to_copy_432 = None
        view_735 = _to_copy_433.view(262144, 256) ;  _to_copy_433 = None
        mm_133 = torch.mm(view_735,t_143) ;  view_735 = t_143 = None
        view_736 = mm_133.view(1, 512, 512, 512) ;  mm_133 = None
        _to_copy_434 = getitem_584.to(dtype = torch.bfloat16) ;  getitem_584 = None
        _to_copy_435 = getitem_578.to(dtype = torch.bfloat16) 
        t_144 = _to_copy_434.t() ;  _to_copy_434 = None
        view_737 = _to_copy_435.view(262144, 256) ;  _to_copy_435 = None
        mm_134 = torch.mm(view_737,t_144) ;  view_737 = t_144 = None
        view_738 = mm_134.view(1, 512, 512, 512) ;  mm_134 = None
        sigmoid_43 = torch.sigmoid(view_738) ;  view_738 = None
        mul_68 = torch.mul(view_736,sigmoid_43) ;  view_736 = sigmoid_43 = None
        view_739 = mul_68.view(262144, 512) ;  mul_68 = None
        view_740 = view_739.view(1, 512, 512, 512) ;  view_739 = None
        transpose_12 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_335 = torch.unsqueeze(transpose_12,3) ;  transpose_12 = None
        clone_95 = torch.clone(unsqueeze_335,memory_format = torch.contiguous_format) ;  unsqueeze_335 = None
        bitwise_not_59 = torch.bitwise_not(clone_95) ;  clone_95 = None
        masked_fill_59 = view_740.masked_fill(bitwise_not_59,0) ;  view_740 = bitwise_not_59 = None
        view_741 = masked_fill_59.view(262144, 512) ;  masked_fill_59 = None
        view_745 = view_741.view(1, 512, 512, 512) 
        split_tensor_53 = torch.split(view_745,256,dim = -1) ;  view_745 = None
        getitem_594 = split_tensor_53[0]
        unsqueeze_338 = torch.unsqueeze(getitem_594,4) ;  getitem_594 = None
        permute_481 = unsqueeze_338.permute(0, 2, 4, 3, 1) ;  unsqueeze_338 = None
        permute_482 = permute_481.permute(3, 1, 4, 0, 2) ;  permute_481 = None
        view_746 = permute_482.view(256, 512, 512) ;  permute_482 = None
        view_747 = view_741.view(1, 512, 512, 512) ;  view_741 = None
        split_tensor_54 = torch.split(view_747,256,dim = -1) ;  view_747 = None
        getitem_597 = split_tensor_54[1];  split_tensor_54 = None
        unsqueeze_339 = torch.unsqueeze(getitem_597,4) ;  getitem_597 = None
        permute_483 = unsqueeze_339.permute(0, 4, 2, 3, 1) ;  unsqueeze_339 = None
        permute_484 = permute_483.permute(3, 4, 0, 2, 1) ;  permute_483 = None
        view_748 = permute_484.view(256, 512, 512) ;  permute_484 = None
        bmm_79 = torch.bmm(view_746,view_748) ;  view_746 = view_748 = None
        view_749 = bmm_79.view(256, 512, 1, 1, 512) ;  bmm_79 = None
        permute_485 = view_749.permute(3, 1, 4, 0, 2) ;  view_749 = None
        view_750 = permute_485.view(1, 512, 512, 256) ;  permute_485 = None
        _to_copy_436 = view_734.to(dtype = torch.float32) ;  view_734 = None
        native_layer_norm_default_91 = (torch.nn.functional.layer_norm(_to_copy_436,[256],None,None,1e-05),) ;  _to_copy_436 = None
        getitem_598 = native_layer_norm_default_91[0]
        _to_copy_437 = view_750.to(dtype = torch.float32) ;  view_750 = None
        native_layer_norm_default_92 = (torch.nn.functional.layer_norm(_to_copy_437,[256],None,None,1e-05),) ;  _to_copy_437 = None
        getitem_601 = native_layer_norm_default_92[0]
        add_56 = torch.add(getitem_598,getitem_601) ;  getitem_598 = getitem_601 = None
        _to_copy_438 = arg150_1.to(dtype = torch.bfloat16) ;  arg150_1 = None
        _to_copy_439 = add_56.to(dtype = torch.bfloat16) ;  add_56 = None
        t_145 = _to_copy_438.t() ;  _to_copy_438 = None
        view_751 = _to_copy_439.view(262144, 256) ;  _to_copy_439 = None
        mm_135 = torch.mm(view_751,t_145) ;  view_751 = t_145 = None
        view_752 = mm_135.view(1, 512, 512, 256) ;  mm_135 = None
        _to_copy_440 = getitem_585.to(dtype = torch.bfloat16) ;  getitem_585 = None
        _to_copy_441 = getitem_578.to(dtype = torch.bfloat16) ;  getitem_578 = None
        t_146 = _to_copy_440.t() ;  _to_copy_440 = None
        view_753 = _to_copy_441.view(262144, 256) ;  _to_copy_441 = None
        mm_136 = torch.mm(view_753,t_146) ;  view_753 = t_146 = None
        view_754 = mm_136.view(1, 512, 512, 256) ;  mm_136 = None
        sigmoid_44 = torch.sigmoid(view_754) ;  view_754 = None
        mul_69 = torch.mul(view_752,sigmoid_44) ;  view_752 = sigmoid_44 = None
        add_57 = torch.add(add_55,mul_69) ;  mul_69 = None
        _to_copy_442 = add_55.to(dtype = torch.float32) 
        native_layer_norm_default_93 = (torch.nn.functional.layer_norm(_to_copy_442,[256],None,None,1e-05),) ;  _to_copy_442 = None
        getitem_604 = native_layer_norm_default_93[0]
        _to_copy_443 = arg154_1.to(dtype = torch.bfloat16) ;  arg154_1 = None
        _to_copy_444 = getitem_604.to(dtype = torch.bfloat16) 
        t_147 = _to_copy_443.t() ;  _to_copy_443 = None
        view_755 = _to_copy_444.view(262144, 256) ;  _to_copy_444 = None
        mm_137 = torch.mm(view_755,t_147) ;  view_755 = t_147 = None
        view_756 = mm_137.view(1, 512, 512, 8) ;  mm_137 = None
        view_757 = view_756.view(1, 512, 512, 2, 4) ;  view_756 = None
        permute_486 = view_757.permute(0, 3, 4, 1, 2) ;  view_757 = None
        view_758 = permute_486.view(1, 2, 4, 1, 512, 512) ;  permute_486 = None
        view_759 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_60 = torch.bitwise_not(view_759) ;  view_759 = None
        masked_fill_60 = view_758.masked_fill(bitwise_not_60,-10000) ;  view_758 = bitwise_not_60 = None
        view_760 = masked_fill_60.view(1, 2, 4, 512, 512) ;  masked_fill_60 = None
        permute_487 = view_760.permute(1, 0, 2, 3, 4) ;  view_760 = None
        view_761 = permute_487.view(2, 4, 1, 512, 512) ;  permute_487 = None
        _to_copy_445 = arg155_1.to(dtype = torch.bfloat16) ;  arg155_1 = None
        _to_copy_446 = getitem_604.to(dtype = torch.bfloat16) 
        t_148 = _to_copy_445.t() ;  _to_copy_445 = None
        view_762 = _to_copy_446.view(262144, 256) ;  _to_copy_446 = None
        mm_138 = torch.mm(view_762,t_148) ;  view_762 = t_148 = None
        view_763 = mm_138.view(1, 512, 512, 1024) ;  mm_138 = None
        select_13 = torch.select(view_761,0,0) 
        view_764 = view_763.view(1, 512, 512, 4, 4, 64) ;  view_763 = None
        permute_488 = view_764.permute(4, 0, 3, 1, 2, 5) ;  view_764 = None
        view_765 = permute_488.view(4, 4, 512, 512, 64) ;  permute_488 = None
        unbind_int_40 = torch.unbind(view_765) ;  view_765 = None
        getitem_607 = unbind_int_40[0]
        getitem_608 = unbind_int_40[1]
        getitem_609 = unbind_int_40[2]
        getitem_610 = unbind_int_40[3];  unbind_int_40 = None
        expand_27 = select_13.expand(4, 512, 512, 512) ;  select_13 = None
        _scaled_dot_product_efficient_attention_default_12 = (torch.nn.functional.scaled_dot_product_attention(getitem_607,getitem_608,getitem_609,expand_27,False),) ;  getitem_607 = getitem_608 = getitem_609 = expand_27 = None
        getitem_611 = _scaled_dot_product_efficient_attention_default_12[0]
        sigmoid_45 = torch.sigmoid(getitem_610) ;  getitem_610 = None
        mul_70 = torch.mul(getitem_611,sigmoid_45) ;  getitem_611 = sigmoid_45 = None
        view_766 = mul_70.view(1, 4, 512, 512, 64) ;  mul_70 = None
        permute_489 = view_766.permute(0, 2, 3, 1, 4) ;  view_766 = None
        clone_96 = torch.clone(permute_489,memory_format = torch.contiguous_format) ;  permute_489 = None
        _unsafe_view_88 = clone_96.view(1, 512, 512, 256) ;  clone_96 = None
        transpose_13 = torch.transpose(getitem_604,1,2) ;  getitem_604 = None
        _to_copy_447 = arg156_1.to(dtype = torch.bfloat16) ;  arg156_1 = None
        _to_copy_448 = transpose_13.to(dtype = torch.bfloat16) ;  transpose_13 = None
        t_149 = _to_copy_447.t() ;  _to_copy_447 = None
        expand_28 = _to_copy_448.expand(1, 512, 512, 256) ;  _to_copy_448 = None
        view_767 = expand_28.view(512, 512, 256) ;  expand_28 = None
        expand_29 = t_149.expand(1, 512, 256, 1024) ;  t_149 = None
        view_768 = expand_29.view(512, 256, 1024) ;  expand_29 = None
        bmm_80 = torch.bmm(view_767,view_768) ;  view_767 = view_768 = None
        view_769 = bmm_80.view(1, 512, 512, 1024) ;  bmm_80 = None
        select_14 = torch.select(view_761,0,1) ;  view_761 = None
        view_770 = view_769.view(1, 512, 512, 4, 4, 64) ;  view_769 = None
        permute_490 = view_770.permute(4, 0, 3, 1, 2, 5) ;  view_770 = None
        view_771 = permute_490.view(4, 4, 512, 512, 64) ;  permute_490 = None
        unbind_int_41 = torch.unbind(view_771) ;  view_771 = None
        getitem_615 = unbind_int_41[0]
        getitem_616 = unbind_int_41[1]
        getitem_617 = unbind_int_41[2]
        getitem_618 = unbind_int_41[3];  unbind_int_41 = None
        expand_30 = select_14.expand(4, 512, 512, 512) ;  select_14 = None
        _scaled_dot_product_efficient_attention_default_13 = (torch.nn.functional.scaled_dot_product_attention(getitem_615,getitem_616,getitem_617,expand_30,False),) ;  getitem_615 = getitem_616 = getitem_617 = expand_30 = None
        getitem_619 = _scaled_dot_product_efficient_attention_default_13[0]
        sigmoid_46 = torch.sigmoid(getitem_618) ;  getitem_618 = None
        mul_71 = torch.mul(getitem_619,sigmoid_46) ;  getitem_619 = sigmoid_46 = None
        view_772 = mul_71.view(1, 4, 512, 512, 64) ;  mul_71 = None
        permute_491 = view_772.permute(0, 2, 3, 1, 4) ;  view_772 = None
        clone_97 = torch.clone(permute_491,memory_format = torch.contiguous_format) ;  permute_491 = None
        _unsafe_view_89 = clone_97.view(1, 512, 512, 256) ;  clone_97 = None
        cat_12 = torch.cat([_unsafe_view_88,_unsafe_view_89],dim = -1) ;  _unsafe_view_88 = _unsafe_view_89 = None
        slice_205 = arg153_1[0:] ;  arg153_1 = None
        unsqueeze_340 = torch.unsqueeze(slice_205,1) ;  slice_205 = None
        mul_72 = torch.mul(arg157_1,unsqueeze_340) ;  arg157_1 = unsqueeze_340 = None
        _to_copy_449 = mul_72.to(dtype = torch.bfloat16) ;  mul_72 = None
        t_150 = _to_copy_449.t() ;  _to_copy_449 = None
        view_773 = cat_12.view(262144, 512) ;  cat_12 = None
        mm_139 = torch.mm(view_773,t_150) ;  view_773 = t_150 = None
        view_774 = mm_139.view(1, 512, 512, 256) ;  mm_139 = None
        add_58 = torch.add(add_57,view_774) ;  add_57 = view_774 = None
        split_tensor_55 = torch.split(add_55,512,dim = -2) 
        getitem_623 = split_tensor_55[0];  split_tensor_55 = None
        _to_copy_450 = getitem_623.to(dtype = torch.float32) ;  getitem_623 = None
        native_layer_norm_default_94 = (torch.nn.functional.layer_norm(_to_copy_450,[256],arg144_1,arg145_1,1e-05),) ;  _to_copy_450 = arg144_1 = arg145_1 = None
        getitem_624 = native_layer_norm_default_94[0]
        _to_copy_451 = arg146_1.to(dtype = torch.bfloat16) ;  arg146_1 = None
        _to_copy_452 = getitem_624.to(dtype = torch.bfloat16) ;  getitem_624 = None
        t_151 = _to_copy_451.t() ;  _to_copy_451 = None
        view_775 = _to_copy_452.view(262144, 256) ;  _to_copy_452 = None
        mm_140 = torch.mm(view_775,t_151) ;  view_775 = t_151 = None
        view_776 = mm_140.view(1, 512, 512, 1024) ;  mm_140 = None
        split_tensor_56 = torch.split(view_776,512,dim = -1) ;  view_776 = None
        getitem_627 = split_tensor_56[0]
        getitem_628 = split_tensor_56[1];  split_tensor_56 = None
        silu_18 = torch.nn.functional.silu(getitem_627) ;  getitem_627 = None
        mul_73 = torch.mul(silu_18,getitem_628) ;  silu_18 = getitem_628 = None
        _to_copy_453 = arg147_1.to(dtype = torch.bfloat16) ;  arg147_1 = None
        t_152 = _to_copy_453.t() ;  _to_copy_453 = None
        view_778 = mul_73.view(262144, 512) ;  mul_73 = None
        mm_141 = torch.mm(view_778,t_152) ;  view_778 = t_152 = None
        view_779 = mm_141.view(1, 512, 512, 256) ;  mm_141 = None
        add_59 = torch.add(add_58,view_779) ;  add_58 = view_779 = None
        _to_copy_454 = add_1.to(dtype = torch.float32) 
        native_layer_norm_default_95 = (torch.nn.functional.layer_norm(_to_copy_454,[384],arg162_1,arg163_1,1e-05),) ;  _to_copy_454 = arg162_1 = arg163_1 = None
        getitem_629 = native_layer_norm_default_95[0]
        _to_copy_455 = add_55.to(dtype = torch.float32) ;  add_55 = None
        native_layer_norm_default_96 = (torch.nn.functional.layer_norm(_to_copy_455,[256],arg164_1,arg165_1,1e-05),) ;  _to_copy_455 = arg164_1 = arg165_1 = None
        getitem_632 = native_layer_norm_default_96[0]
        _to_copy_456 = arg166_1.to(dtype = torch.bfloat16) ;  arg166_1 = None
        _to_copy_457 = getitem_632.to(dtype = torch.bfloat16) ;  getitem_632 = None
        t_153 = _to_copy_456.t() ;  _to_copy_456 = None
        view_780 = _to_copy_457.view(262144, 256) ;  _to_copy_457 = None
        mm_142 = torch.mm(view_780,t_153) ;  view_780 = t_153 = None
        view_781 = mm_142.view(1, 512, 512, 16) ;  mm_142 = None
        permute_492 = view_781.permute(0, 3, 1, 2) ;  view_781 = None
        view_782 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_61 = torch.bitwise_not(view_782) ;  view_782 = None
        masked_fill_61 = permute_492.masked_fill(bitwise_not_61,-10000) ;  permute_492 = bitwise_not_61 = None
        _to_copy_458 = getitem_629.to(dtype = torch.bfloat16) ;  getitem_629 = None
        _to_copy_459 = arg168_1.to(dtype = torch.bfloat16) ;  arg168_1 = None
        unsqueeze_341 = torch.unsqueeze(_to_copy_458,3) ;  _to_copy_458 = None
        unsqueeze_342 = torch.unsqueeze(unsqueeze_341,4) ;  unsqueeze_341 = None
        unsqueeze_343 = torch.unsqueeze(unsqueeze_342,5) ;  unsqueeze_342 = None
        permute_493 = unsqueeze_343.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_343 = None
        unsqueeze_344 = torch.unsqueeze(_to_copy_459,4) ;  _to_copy_459 = None
        unsqueeze_345 = torch.unsqueeze(unsqueeze_344,5) ;  unsqueeze_344 = None
        permute_494 = unsqueeze_345.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_345 = None
        permute_495 = permute_493.permute(3, 5, 0, 1, 2, 4) ;  permute_493 = None
        view_783 = permute_495.view(1, 512, 384) ;  permute_495 = None
        permute_496 = permute_494.permute(5, 0, 1, 2, 4, 3) ;  permute_494 = None
        view_784 = permute_496.view(1, 384, 1536) ;  permute_496 = None
        bmm_81 = torch.bmm(view_783,view_784) ;  view_783 = view_784 = None
        view_785 = bmm_81.view(512, 1, 4, 1, 16, 24) ;  bmm_81 = None
        permute_497 = view_785.permute(2, 3, 4, 0, 5, 1) ;  view_785 = None
        view_786 = permute_497.view(4, 1, 16, 512, 24) ;  permute_497 = None
        unbind_int_42 = torch.unbind(view_786) ;  view_786 = None
        getitem_635 = unbind_int_42[0]
        getitem_636 = unbind_int_42[1]
        getitem_637 = unbind_int_42[2]
        getitem_638 = unbind_int_42[3];  unbind_int_42 = None
        view_787 = arg167_1.view(1, 16, 1, 24) ;  arg167_1 = None
        add_60 = torch.add(getitem_635,view_787) ;  getitem_635 = view_787 = None
        _to_copy_460 = add_60.to(dtype = torch.bfloat16) ;  add_60 = None
        expand_31 = masked_fill_61.expand(1, 16, 512, 512) ;  masked_fill_61 = None
        _scaled_dot_product_efficient_attention_default_14 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_460,getitem_636,getitem_637,expand_31,False),) ;  _to_copy_460 = getitem_636 = getitem_637 = expand_31 = None
        getitem_639 = _scaled_dot_product_efficient_attention_default_14[0]
        add_61 = torch.add(getitem_638,1) ;  getitem_638 = None
        sigmoid_47 = torch.sigmoid(add_61) ;  add_61 = None
        mul_74 = torch.mul(getitem_639,sigmoid_47) ;  getitem_639 = sigmoid_47 = None
        _to_copy_461 = arg169_1.to(dtype = torch.bfloat16) ;  arg169_1 = None
        unsqueeze_346 = torch.unsqueeze(mul_74,4) ;  mul_74 = None
        permute_498 = unsqueeze_346.permute(0, 2, 4, 3, 1) ;  unsqueeze_346 = None
        unsqueeze_347 = torch.unsqueeze(_to_copy_461,3) ;  _to_copy_461 = None
        unsqueeze_348 = torch.unsqueeze(unsqueeze_347,4) ;  unsqueeze_347 = None
        permute_499 = unsqueeze_348.permute(3, 4, 2, 1, 0) ;  unsqueeze_348 = None
        permute_500 = permute_498.permute(1, 3, 4, 0, 2) ;  permute_498 = None
        clone_98 = torch.clone(permute_500,memory_format = torch.contiguous_format) ;  permute_500 = None
        _unsafe_view_90 = clone_98.view(1, 512, 384) ;  clone_98 = None
        permute_501 = permute_499.permute(3, 4, 0, 2, 1) ;  permute_499 = None
        clone_99 = torch.clone(permute_501,memory_format = torch.contiguous_format) ;  permute_501 = None
        _unsafe_view_91 = clone_99.view(1, 384, 384) ;  clone_99 = None
        bmm_82 = torch.bmm(_unsafe_view_90,_unsafe_view_91) ;  _unsafe_view_90 = _unsafe_view_91 = None
        view_788 = bmm_82.view(512, 1, 1, 1, 384) ;  bmm_82 = None
        permute_502 = view_788.permute(3, 0, 4, 1, 2) ;  view_788 = None
        view_789 = permute_502.view(1, 512, 384) ;  permute_502 = None
        unsqueeze_349 = torch.unsqueeze(arg1406_1,-1) 
        mul_75 = torch.mul(view_789,unsqueeze_349) ;  view_789 = unsqueeze_349 = None
        add_62 = torch.add(add_1,mul_75) ;  mul_75 = None
        split_tensor_57 = torch.split(add_1,512,dim = -2) ;  add_1 = None
        getitem_643 = split_tensor_57[0];  split_tensor_57 = None
        _to_copy_462 = getitem_643.to(dtype = torch.float32) ;  getitem_643 = None
        native_layer_norm_default_97 = (torch.nn.functional.layer_norm(_to_copy_462,[384],arg158_1,arg159_1,1e-05),) ;  _to_copy_462 = arg158_1 = arg159_1 = None
        getitem_644 = native_layer_norm_default_97[0]
        _to_copy_463 = arg160_1.to(dtype = torch.bfloat16) ;  arg160_1 = None
        _to_copy_464 = getitem_644.to(dtype = torch.bfloat16) ;  getitem_644 = None
        t_154 = _to_copy_463.t() ;  _to_copy_463 = None
        view_790 = _to_copy_464.view(512, 384) ;  _to_copy_464 = None
        mm_143 = torch.mm(view_790,t_154) ;  view_790 = t_154 = None
        view_791 = mm_143.view(1, 512, 1536) ;  mm_143 = None
        split_tensor_58 = torch.split(view_791,768,dim = -1) ;  view_791 = None
        getitem_647 = split_tensor_58[0]
        getitem_648 = split_tensor_58[1];  split_tensor_58 = None
        silu_19 = torch.nn.functional.silu(getitem_647) ;  getitem_647 = None
        mul_76 = torch.mul(silu_19,getitem_648) ;  silu_19 = getitem_648 = None
        _to_copy_465 = arg161_1.to(dtype = torch.bfloat16) ;  arg161_1 = None
        t_155 = _to_copy_465.t() ;  _to_copy_465 = None
        view_793 = mul_76.view(512, 768) ;  mul_76 = None
        mm_144 = torch.mm(view_793,t_155) ;  view_793 = t_155 = None
        view_794 = mm_144.view(1, 512, 384) ;  mm_144 = None
        add_63 = torch.add(add_62,view_794) ;  add_62 = view_794 = None
        _to_copy_466 = add_59.to(dtype = torch.float32) 
        native_layer_norm_default_98 = (torch.nn.functional.layer_norm(_to_copy_466,[256],arg174_1,arg175_1,1e-05),) ;  _to_copy_466 = arg174_1 = arg175_1 = None
        getitem_649 = native_layer_norm_default_98[0]
        split_with_sizes_default_14 = torch.split(arg177_1,[512,512]) ;  arg177_1 = None
        getitem_652 = split_with_sizes_default_14[0]
        getitem_653 = split_with_sizes_default_14[1];  split_with_sizes_default_14 = None
        split_with_sizes_default_15 = torch.split(arg178_1,[512,512,256]) ;  arg178_1 = None
        getitem_654 = split_with_sizes_default_15[0]
        getitem_655 = split_with_sizes_default_15[1]
        getitem_656 = split_with_sizes_default_15[2];  split_with_sizes_default_15 = None
        _to_copy_467 = getitem_652.to(dtype = torch.bfloat16) ;  getitem_652 = None
        _to_copy_468 = getitem_649.to(dtype = torch.bfloat16) 
        t_156 = _to_copy_467.t() ;  _to_copy_467 = None
        view_795 = _to_copy_468.view(262144, 256) ;  _to_copy_468 = None
        mm_145 = torch.mm(view_795,t_156) ;  view_795 = t_156 = None
        view_796 = mm_145.view(1, 512, 512, 512) ;  mm_145 = None
        _to_copy_469 = getitem_654.to(dtype = torch.bfloat16) ;  getitem_654 = None
        _to_copy_470 = getitem_649.to(dtype = torch.bfloat16) 
        t_157 = _to_copy_469.t() ;  _to_copy_469 = None
        view_797 = _to_copy_470.view(262144, 256) ;  _to_copy_470 = None
        mm_146 = torch.mm(view_797,t_157) ;  view_797 = t_157 = None
        view_798 = mm_146.view(1, 512, 512, 512) ;  mm_146 = None
        sigmoid_48 = torch.sigmoid(view_798) ;  view_798 = None
        mul_77 = torch.mul(view_796,sigmoid_48) ;  view_796 = sigmoid_48 = None
        unsqueeze_350 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_62 = torch.bitwise_not(unsqueeze_350) ;  unsqueeze_350 = None
        masked_fill_62 = mul_77.masked_fill(bitwise_not_62,0) ;  mul_77 = bitwise_not_62 = None
        split_tensor_59 = torch.split(masked_fill_62,256,dim = -1) 
        getitem_659 = split_tensor_59[0]
        unsqueeze_353 = torch.unsqueeze(getitem_659,4) ;  getitem_659 = None
        permute_507 = unsqueeze_353.permute(0, 1, 4, 3, 2) ;  unsqueeze_353 = None
        permute_508 = permute_507.permute(3, 1, 4, 0, 2) ;  permute_507 = None
        view_801 = permute_508.view(256, 512, 512) ;  permute_508 = None
        split_tensor_60 = torch.split(masked_fill_62,256,dim = -1) ;  masked_fill_62 = None
        getitem_662 = split_tensor_60[1];  split_tensor_60 = None
        unsqueeze_354 = torch.unsqueeze(getitem_662,4) ;  getitem_662 = None
        permute_509 = unsqueeze_354.permute(0, 4, 1, 3, 2) ;  unsqueeze_354 = None
        permute_510 = permute_509.permute(3, 4, 0, 2, 1) ;  permute_509 = None
        view_802 = permute_510.view(256, 512, 512) ;  permute_510 = None
        bmm_83 = torch.bmm(view_801,view_802) ;  view_801 = view_802 = None
        view_803 = bmm_83.view(256, 512, 1, 1, 512) ;  bmm_83 = None
        permute_511 = view_803.permute(3, 1, 4, 0, 2) ;  view_803 = None
        view_804 = permute_511.view(1, 512, 512, 256) ;  permute_511 = None
        _to_copy_471 = getitem_653.to(dtype = torch.bfloat16) ;  getitem_653 = None
        _to_copy_472 = getitem_649.to(dtype = torch.bfloat16) 
        t_158 = _to_copy_471.t() ;  _to_copy_471 = None
        view_805 = _to_copy_472.view(262144, 256) ;  _to_copy_472 = None
        mm_147 = torch.mm(view_805,t_158) ;  view_805 = t_158 = None
        view_806 = mm_147.view(1, 512, 512, 512) ;  mm_147 = None
        _to_copy_473 = getitem_655.to(dtype = torch.bfloat16) ;  getitem_655 = None
        _to_copy_474 = getitem_649.to(dtype = torch.bfloat16) 
        t_159 = _to_copy_473.t() ;  _to_copy_473 = None
        view_807 = _to_copy_474.view(262144, 256) ;  _to_copy_474 = None
        mm_148 = torch.mm(view_807,t_159) ;  view_807 = t_159 = None
        view_808 = mm_148.view(1, 512, 512, 512) ;  mm_148 = None
        sigmoid_49 = torch.sigmoid(view_808) ;  view_808 = None
        mul_78 = torch.mul(view_806,sigmoid_49) ;  view_806 = sigmoid_49 = None
        view_809 = mul_78.view(262144, 512) ;  mul_78 = None
        view_810 = view_809.view(1, 512, 512, 512) ;  view_809 = None
        transpose_14 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_355 = torch.unsqueeze(transpose_14,3) ;  transpose_14 = None
        clone_100 = torch.clone(unsqueeze_355,memory_format = torch.contiguous_format) ;  unsqueeze_355 = None
        bitwise_not_63 = torch.bitwise_not(clone_100) ;  clone_100 = None
        masked_fill_63 = view_810.masked_fill(bitwise_not_63,0) ;  view_810 = bitwise_not_63 = None
        view_811 = masked_fill_63.view(262144, 512) ;  masked_fill_63 = None
        view_815 = view_811.view(1, 512, 512, 512) 
        split_tensor_61 = torch.split(view_815,256,dim = -1) ;  view_815 = None
        getitem_665 = split_tensor_61[0]
        unsqueeze_358 = torch.unsqueeze(getitem_665,4) ;  getitem_665 = None
        permute_516 = unsqueeze_358.permute(0, 2, 4, 3, 1) ;  unsqueeze_358 = None
        permute_517 = permute_516.permute(3, 1, 4, 0, 2) ;  permute_516 = None
        view_816 = permute_517.view(256, 512, 512) ;  permute_517 = None
        view_817 = view_811.view(1, 512, 512, 512) ;  view_811 = None
        split_tensor_62 = torch.split(view_817,256,dim = -1) ;  view_817 = None
        getitem_668 = split_tensor_62[1];  split_tensor_62 = None
        unsqueeze_359 = torch.unsqueeze(getitem_668,4) ;  getitem_668 = None
        permute_518 = unsqueeze_359.permute(0, 4, 2, 3, 1) ;  unsqueeze_359 = None
        permute_519 = permute_518.permute(3, 4, 0, 2, 1) ;  permute_518 = None
        view_818 = permute_519.view(256, 512, 512) ;  permute_519 = None
        bmm_84 = torch.bmm(view_816,view_818) ;  view_816 = view_818 = None
        view_819 = bmm_84.view(256, 512, 1, 1, 512) ;  bmm_84 = None
        permute_520 = view_819.permute(3, 1, 4, 0, 2) ;  view_819 = None
        view_820 = permute_520.view(1, 512, 512, 256) ;  permute_520 = None
        _to_copy_475 = view_804.to(dtype = torch.float32) ;  view_804 = None
        native_layer_norm_default_99 = (torch.nn.functional.layer_norm(_to_copy_475,[256],None,None,1e-05),) ;  _to_copy_475 = None
        getitem_669 = native_layer_norm_default_99[0]
        _to_copy_476 = view_820.to(dtype = torch.float32) ;  view_820 = None
        native_layer_norm_default_100 = (torch.nn.functional.layer_norm(_to_copy_476,[256],None,None,1e-05),) ;  _to_copy_476 = None
        getitem_672 = native_layer_norm_default_100[0]
        add_64 = torch.add(getitem_669,getitem_672) ;  getitem_669 = getitem_672 = None
        _to_copy_477 = arg176_1.to(dtype = torch.bfloat16) ;  arg176_1 = None
        _to_copy_478 = add_64.to(dtype = torch.bfloat16) ;  add_64 = None
        t_160 = _to_copy_477.t() ;  _to_copy_477 = None
        view_821 = _to_copy_478.view(262144, 256) ;  _to_copy_478 = None
        mm_149 = torch.mm(view_821,t_160) ;  view_821 = t_160 = None
        view_822 = mm_149.view(1, 512, 512, 256) ;  mm_149 = None
        _to_copy_479 = getitem_656.to(dtype = torch.bfloat16) ;  getitem_656 = None
        _to_copy_480 = getitem_649.to(dtype = torch.bfloat16) ;  getitem_649 = None
        t_161 = _to_copy_479.t() ;  _to_copy_479 = None
        view_823 = _to_copy_480.view(262144, 256) ;  _to_copy_480 = None
        mm_150 = torch.mm(view_823,t_161) ;  view_823 = t_161 = None
        view_824 = mm_150.view(1, 512, 512, 256) ;  mm_150 = None
        sigmoid_50 = torch.sigmoid(view_824) ;  view_824 = None
        mul_79 = torch.mul(view_822,sigmoid_50) ;  view_822 = sigmoid_50 = None
        add_65 = torch.add(add_59,mul_79) ;  mul_79 = None
        _to_copy_481 = add_59.to(dtype = torch.float32) 
        native_layer_norm_default_101 = (torch.nn.functional.layer_norm(_to_copy_481,[256],None,None,1e-05),) ;  _to_copy_481 = None
        getitem_675 = native_layer_norm_default_101[0]
        _to_copy_482 = arg180_1.to(dtype = torch.bfloat16) ;  arg180_1 = None
        _to_copy_483 = getitem_675.to(dtype = torch.bfloat16) 
        t_162 = _to_copy_482.t() ;  _to_copy_482 = None
        view_825 = _to_copy_483.view(262144, 256) ;  _to_copy_483 = None
        mm_151 = torch.mm(view_825,t_162) ;  view_825 = t_162 = None
        view_826 = mm_151.view(1, 512, 512, 8) ;  mm_151 = None
        view_827 = view_826.view(1, 512, 512, 2, 4) ;  view_826 = None
        permute_521 = view_827.permute(0, 3, 4, 1, 2) ;  view_827 = None
        view_828 = permute_521.view(1, 2, 4, 1, 512, 512) ;  permute_521 = None
        view_829 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_64 = torch.bitwise_not(view_829) ;  view_829 = None
        masked_fill_64 = view_828.masked_fill(bitwise_not_64,-10000) ;  view_828 = bitwise_not_64 = None
        view_830 = masked_fill_64.view(1, 2, 4, 512, 512) ;  masked_fill_64 = None
        permute_522 = view_830.permute(1, 0, 2, 3, 4) ;  view_830 = None
        view_831 = permute_522.view(2, 4, 1, 512, 512) ;  permute_522 = None
        _to_copy_484 = arg181_1.to(dtype = torch.bfloat16) ;  arg181_1 = None
        _to_copy_485 = getitem_675.to(dtype = torch.bfloat16) 
        t_163 = _to_copy_484.t() ;  _to_copy_484 = None
        view_832 = _to_copy_485.view(262144, 256) ;  _to_copy_485 = None
        mm_152 = torch.mm(view_832,t_163) ;  view_832 = t_163 = None
        view_833 = mm_152.view(1, 512, 512, 1024) ;  mm_152 = None
        select_15 = torch.select(view_831,0,0) 
        view_834 = view_833.view(1, 512, 512, 4, 4, 64) ;  view_833 = None
        permute_523 = view_834.permute(4, 0, 3, 1, 2, 5) ;  view_834 = None
        view_835 = permute_523.view(4, 4, 512, 512, 64) ;  permute_523 = None
        unbind_int_43 = torch.unbind(view_835) ;  view_835 = None
        getitem_678 = unbind_int_43[0]
        getitem_679 = unbind_int_43[1]
        getitem_680 = unbind_int_43[2]
        getitem_681 = unbind_int_43[3];  unbind_int_43 = None
        expand_32 = select_15.expand(4, 512, 512, 512) ;  select_15 = None
        _scaled_dot_product_efficient_attention_default_15 = (torch.nn.functional.scaled_dot_product_attention(getitem_678,getitem_679,getitem_680,expand_32,False),) ;  getitem_678 = getitem_679 = getitem_680 = expand_32 = None
        getitem_682 = _scaled_dot_product_efficient_attention_default_15[0]
        sigmoid_51 = torch.sigmoid(getitem_681) ;  getitem_681 = None
        mul_80 = torch.mul(getitem_682,sigmoid_51) ;  getitem_682 = sigmoid_51 = None
        view_836 = mul_80.view(1, 4, 512, 512, 64) ;  mul_80 = None
        permute_524 = view_836.permute(0, 2, 3, 1, 4) ;  view_836 = None
        clone_101 = torch.clone(permute_524,memory_format = torch.contiguous_format) ;  permute_524 = None
        _unsafe_view_92 = clone_101.view(1, 512, 512, 256) ;  clone_101 = None
        transpose_15 = torch.transpose(getitem_675,1,2) ;  getitem_675 = None
        _to_copy_486 = arg182_1.to(dtype = torch.bfloat16) ;  arg182_1 = None
        _to_copy_487 = transpose_15.to(dtype = torch.bfloat16) ;  transpose_15 = None
        t_164 = _to_copy_486.t() ;  _to_copy_486 = None
        expand_33 = _to_copy_487.expand(1, 512, 512, 256) ;  _to_copy_487 = None
        view_837 = expand_33.view(512, 512, 256) ;  expand_33 = None
        expand_34 = t_164.expand(1, 512, 256, 1024) ;  t_164 = None
        view_838 = expand_34.view(512, 256, 1024) ;  expand_34 = None
        bmm_85 = torch.bmm(view_837,view_838) ;  view_837 = view_838 = None
        view_839 = bmm_85.view(1, 512, 512, 1024) ;  bmm_85 = None
        select_16 = torch.select(view_831,0,1) ;  view_831 = None
        view_840 = view_839.view(1, 512, 512, 4, 4, 64) ;  view_839 = None
        permute_525 = view_840.permute(4, 0, 3, 1, 2, 5) ;  view_840 = None
        view_841 = permute_525.view(4, 4, 512, 512, 64) ;  permute_525 = None
        unbind_int_44 = torch.unbind(view_841) ;  view_841 = None
        getitem_686 = unbind_int_44[0]
        getitem_687 = unbind_int_44[1]
        getitem_688 = unbind_int_44[2]
        getitem_689 = unbind_int_44[3];  unbind_int_44 = None
        expand_35 = select_16.expand(4, 512, 512, 512) ;  select_16 = None
        _scaled_dot_product_efficient_attention_default_16 = (torch.nn.functional.scaled_dot_product_attention(getitem_686,getitem_687,getitem_688,expand_35,False),) ;  getitem_686 = getitem_687 = getitem_688 = expand_35 = None
        getitem_690 = _scaled_dot_product_efficient_attention_default_16[0]
        sigmoid_52 = torch.sigmoid(getitem_689) ;  getitem_689 = None
        mul_81 = torch.mul(getitem_690,sigmoid_52) ;  getitem_690 = sigmoid_52 = None
        view_842 = mul_81.view(1, 4, 512, 512, 64) ;  mul_81 = None
        permute_526 = view_842.permute(0, 2, 3, 1, 4) ;  view_842 = None
        clone_102 = torch.clone(permute_526,memory_format = torch.contiguous_format) ;  permute_526 = None
        _unsafe_view_93 = clone_102.view(1, 512, 512, 256) ;  clone_102 = None
        cat_13 = torch.cat([_unsafe_view_92,_unsafe_view_93],dim = -1) ;  _unsafe_view_92 = _unsafe_view_93 = None
        slice_206 = arg179_1[0:] ;  arg179_1 = None
        unsqueeze_360 = torch.unsqueeze(slice_206,1) ;  slice_206 = None
        mul_82 = torch.mul(arg183_1,unsqueeze_360) ;  arg183_1 = unsqueeze_360 = None
        _to_copy_488 = mul_82.to(dtype = torch.bfloat16) ;  mul_82 = None
        t_165 = _to_copy_488.t() ;  _to_copy_488 = None
        view_843 = cat_13.view(262144, 512) ;  cat_13 = None
        mm_153 = torch.mm(view_843,t_165) ;  view_843 = t_165 = None
        view_844 = mm_153.view(1, 512, 512, 256) ;  mm_153 = None
        add_66 = torch.add(add_65,view_844) ;  add_65 = view_844 = None
        split_tensor_63 = torch.split(add_59,512,dim = -2) 
        getitem_694 = split_tensor_63[0];  split_tensor_63 = None
        _to_copy_489 = getitem_694.to(dtype = torch.float32) ;  getitem_694 = None
        native_layer_norm_default_102 = (torch.nn.functional.layer_norm(_to_copy_489,[256],arg170_1,arg171_1,1e-05),) ;  _to_copy_489 = arg170_1 = arg171_1 = None
        getitem_695 = native_layer_norm_default_102[0]
        _to_copy_490 = arg172_1.to(dtype = torch.bfloat16) ;  arg172_1 = None
        _to_copy_491 = getitem_695.to(dtype = torch.bfloat16) ;  getitem_695 = None
        t_166 = _to_copy_490.t() ;  _to_copy_490 = None
        view_845 = _to_copy_491.view(262144, 256) ;  _to_copy_491 = None
        mm_154 = torch.mm(view_845,t_166) ;  view_845 = t_166 = None
        view_846 = mm_154.view(1, 512, 512, 1024) ;  mm_154 = None
        split_tensor_64 = torch.split(view_846,512,dim = -1) ;  view_846 = None
        getitem_698 = split_tensor_64[0]
        getitem_699 = split_tensor_64[1];  split_tensor_64 = None
        silu_20 = torch.nn.functional.silu(getitem_698) ;  getitem_698 = None
        mul_83 = torch.mul(silu_20,getitem_699) ;  silu_20 = getitem_699 = None
        _to_copy_492 = arg173_1.to(dtype = torch.bfloat16) ;  arg173_1 = None
        t_167 = _to_copy_492.t() ;  _to_copy_492 = None
        view_848 = mul_83.view(262144, 512) ;  mul_83 = None
        mm_155 = torch.mm(view_848,t_167) ;  view_848 = t_167 = None
        view_849 = mm_155.view(1, 512, 512, 256) ;  mm_155 = None
        add_67 = torch.add(add_66,view_849) ;  add_66 = view_849 = None
        _to_copy_493 = add_63.to(dtype = torch.float32) 
        native_layer_norm_default_103 = (torch.nn.functional.layer_norm(_to_copy_493,[384],arg188_1,arg189_1,1e-05),) ;  _to_copy_493 = arg188_1 = arg189_1 = None
        getitem_700 = native_layer_norm_default_103[0]
        _to_copy_494 = add_59.to(dtype = torch.float32) ;  add_59 = None
        native_layer_norm_default_104 = (torch.nn.functional.layer_norm(_to_copy_494,[256],arg190_1,arg191_1,1e-05),) ;  _to_copy_494 = arg190_1 = arg191_1 = None
        getitem_703 = native_layer_norm_default_104[0]
        _to_copy_495 = arg192_1.to(dtype = torch.bfloat16) ;  arg192_1 = None
        _to_copy_496 = getitem_703.to(dtype = torch.bfloat16) ;  getitem_703 = None
        t_168 = _to_copy_495.t() ;  _to_copy_495 = None
        view_850 = _to_copy_496.view(262144, 256) ;  _to_copy_496 = None
        mm_156 = torch.mm(view_850,t_168) ;  view_850 = t_168 = None
        view_851 = mm_156.view(1, 512, 512, 16) ;  mm_156 = None
        permute_527 = view_851.permute(0, 3, 1, 2) ;  view_851 = None
        view_852 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_65 = torch.bitwise_not(view_852) ;  view_852 = None
        masked_fill_65 = permute_527.masked_fill(bitwise_not_65,-10000) ;  permute_527 = bitwise_not_65 = None
        _to_copy_497 = getitem_700.to(dtype = torch.bfloat16) ;  getitem_700 = None
        _to_copy_498 = arg194_1.to(dtype = torch.bfloat16) ;  arg194_1 = None
        unsqueeze_361 = torch.unsqueeze(_to_copy_497,3) ;  _to_copy_497 = None
        unsqueeze_362 = torch.unsqueeze(unsqueeze_361,4) ;  unsqueeze_361 = None
        unsqueeze_363 = torch.unsqueeze(unsqueeze_362,5) ;  unsqueeze_362 = None
        permute_528 = unsqueeze_363.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_363 = None
        unsqueeze_364 = torch.unsqueeze(_to_copy_498,4) ;  _to_copy_498 = None
        unsqueeze_365 = torch.unsqueeze(unsqueeze_364,5) ;  unsqueeze_364 = None
        permute_529 = unsqueeze_365.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_365 = None
        permute_530 = permute_528.permute(3, 5, 0, 1, 2, 4) ;  permute_528 = None
        view_853 = permute_530.view(1, 512, 384) ;  permute_530 = None
        permute_531 = permute_529.permute(5, 0, 1, 2, 4, 3) ;  permute_529 = None
        view_854 = permute_531.view(1, 384, 1536) ;  permute_531 = None
        bmm_86 = torch.bmm(view_853,view_854) ;  view_853 = view_854 = None
        view_855 = bmm_86.view(512, 1, 4, 1, 16, 24) ;  bmm_86 = None
        permute_532 = view_855.permute(2, 3, 4, 0, 5, 1) ;  view_855 = None
        view_856 = permute_532.view(4, 1, 16, 512, 24) ;  permute_532 = None
        unbind_int_45 = torch.unbind(view_856) ;  view_856 = None
        getitem_706 = unbind_int_45[0]
        getitem_707 = unbind_int_45[1]
        getitem_708 = unbind_int_45[2]
        getitem_709 = unbind_int_45[3];  unbind_int_45 = None
        view_857 = arg193_1.view(1, 16, 1, 24) ;  arg193_1 = None
        add_68 = torch.add(getitem_706,view_857) ;  getitem_706 = view_857 = None
        _to_copy_499 = add_68.to(dtype = torch.bfloat16) ;  add_68 = None
        expand_36 = masked_fill_65.expand(1, 16, 512, 512) ;  masked_fill_65 = None
        _scaled_dot_product_efficient_attention_default_17 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_499,getitem_707,getitem_708,expand_36,False),) ;  _to_copy_499 = getitem_707 = getitem_708 = expand_36 = None
        getitem_710 = _scaled_dot_product_efficient_attention_default_17[0]
        add_69 = torch.add(getitem_709,1) ;  getitem_709 = None
        sigmoid_53 = torch.sigmoid(add_69) ;  add_69 = None
        mul_84 = torch.mul(getitem_710,sigmoid_53) ;  getitem_710 = sigmoid_53 = None
        _to_copy_500 = arg195_1.to(dtype = torch.bfloat16) ;  arg195_1 = None
        unsqueeze_366 = torch.unsqueeze(mul_84,4) ;  mul_84 = None
        permute_533 = unsqueeze_366.permute(0, 2, 4, 3, 1) ;  unsqueeze_366 = None
        unsqueeze_367 = torch.unsqueeze(_to_copy_500,3) ;  _to_copy_500 = None
        unsqueeze_368 = torch.unsqueeze(unsqueeze_367,4) ;  unsqueeze_367 = None
        permute_534 = unsqueeze_368.permute(3, 4, 2, 1, 0) ;  unsqueeze_368 = None
        permute_535 = permute_533.permute(1, 3, 4, 0, 2) ;  permute_533 = None
        clone_103 = torch.clone(permute_535,memory_format = torch.contiguous_format) ;  permute_535 = None
        _unsafe_view_94 = clone_103.view(1, 512, 384) ;  clone_103 = None
        permute_536 = permute_534.permute(3, 4, 0, 2, 1) ;  permute_534 = None
        clone_104 = torch.clone(permute_536,memory_format = torch.contiguous_format) ;  permute_536 = None
        _unsafe_view_95 = clone_104.view(1, 384, 384) ;  clone_104 = None
        bmm_87 = torch.bmm(_unsafe_view_94,_unsafe_view_95) ;  _unsafe_view_94 = _unsafe_view_95 = None
        view_858 = bmm_87.view(512, 1, 1, 1, 384) ;  bmm_87 = None
        permute_537 = view_858.permute(3, 0, 4, 1, 2) ;  view_858 = None
        view_859 = permute_537.view(1, 512, 384) ;  permute_537 = None
        unsqueeze_369 = torch.unsqueeze(arg1406_1,-1) 
        mul_85 = torch.mul(view_859,unsqueeze_369) ;  view_859 = unsqueeze_369 = None
        add_70 = torch.add(add_63,mul_85) ;  mul_85 = None
        split_tensor_65 = torch.split(add_63,512,dim = -2) ;  add_63 = None
        getitem_714 = split_tensor_65[0];  split_tensor_65 = None
        _to_copy_501 = getitem_714.to(dtype = torch.float32) ;  getitem_714 = None
        native_layer_norm_default_105 = (torch.nn.functional.layer_norm(_to_copy_501,[384],arg184_1,arg185_1,1e-05),) ;  _to_copy_501 = arg184_1 = arg185_1 = None
        getitem_715 = native_layer_norm_default_105[0]
        _to_copy_502 = arg186_1.to(dtype = torch.bfloat16) ;  arg186_1 = None
        _to_copy_503 = getitem_715.to(dtype = torch.bfloat16) ;  getitem_715 = None
        t_169 = _to_copy_502.t() ;  _to_copy_502 = None
        view_860 = _to_copy_503.view(512, 384) ;  _to_copy_503 = None
        mm_157 = torch.mm(view_860,t_169) ;  view_860 = t_169 = None
        view_861 = mm_157.view(1, 512, 1536) ;  mm_157 = None
        split_tensor_66 = torch.split(view_861,768,dim = -1) ;  view_861 = None
        getitem_718 = split_tensor_66[0]
        getitem_719 = split_tensor_66[1];  split_tensor_66 = None
        silu_21 = torch.nn.functional.silu(getitem_718) ;  getitem_718 = None
        mul_86 = torch.mul(silu_21,getitem_719) ;  silu_21 = getitem_719 = None
        _to_copy_504 = arg187_1.to(dtype = torch.bfloat16) ;  arg187_1 = None
        t_170 = _to_copy_504.t() ;  _to_copy_504 = None
        view_863 = mul_86.view(512, 768) ;  mul_86 = None
        mm_158 = torch.mm(view_863,t_170) ;  view_863 = t_170 = None
        view_864 = mm_158.view(1, 512, 384) ;  mm_158 = None
        add_71 = torch.add(add_70,view_864) ;  add_70 = view_864 = None
        _to_copy_505 = add_67.to(dtype = torch.float32) 
        native_layer_norm_default_106 = (torch.nn.functional.layer_norm(_to_copy_505,[256],arg200_1,arg201_1,1e-05),) ;  _to_copy_505 = arg200_1 = arg201_1 = None
        getitem_720 = native_layer_norm_default_106[0]
        split_with_sizes_default_16 = torch.split(arg203_1,[512,512]) ;  arg203_1 = None
        getitem_723 = split_with_sizes_default_16[0]
        getitem_724 = split_with_sizes_default_16[1];  split_with_sizes_default_16 = None
        split_with_sizes_default_17 = torch.split(arg204_1,[512,512,256]) ;  arg204_1 = None
        getitem_725 = split_with_sizes_default_17[0]
        getitem_726 = split_with_sizes_default_17[1]
        getitem_727 = split_with_sizes_default_17[2];  split_with_sizes_default_17 = None
        _to_copy_506 = getitem_723.to(dtype = torch.bfloat16) ;  getitem_723 = None
        _to_copy_507 = getitem_720.to(dtype = torch.bfloat16) 
        t_171 = _to_copy_506.t() ;  _to_copy_506 = None
        view_865 = _to_copy_507.view(262144, 256) ;  _to_copy_507 = None
        mm_159 = torch.mm(view_865,t_171) ;  view_865 = t_171 = None
        view_866 = mm_159.view(1, 512, 512, 512) ;  mm_159 = None
        _to_copy_508 = getitem_725.to(dtype = torch.bfloat16) ;  getitem_725 = None
        _to_copy_509 = getitem_720.to(dtype = torch.bfloat16) 
        t_172 = _to_copy_508.t() ;  _to_copy_508 = None
        view_867 = _to_copy_509.view(262144, 256) ;  _to_copy_509 = None
        mm_160 = torch.mm(view_867,t_172) ;  view_867 = t_172 = None
        view_868 = mm_160.view(1, 512, 512, 512) ;  mm_160 = None
        sigmoid_54 = torch.sigmoid(view_868) ;  view_868 = None
        mul_87 = torch.mul(view_866,sigmoid_54) ;  view_866 = sigmoid_54 = None
        unsqueeze_370 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_66 = torch.bitwise_not(unsqueeze_370) ;  unsqueeze_370 = None
        masked_fill_66 = mul_87.masked_fill(bitwise_not_66,0) ;  mul_87 = bitwise_not_66 = None
        split_tensor_67 = torch.split(masked_fill_66,256,dim = -1) 
        getitem_730 = split_tensor_67[0]
        unsqueeze_373 = torch.unsqueeze(getitem_730,4) ;  getitem_730 = None
        permute_542 = unsqueeze_373.permute(0, 1, 4, 3, 2) ;  unsqueeze_373 = None
        permute_543 = permute_542.permute(3, 1, 4, 0, 2) ;  permute_542 = None
        view_871 = permute_543.view(256, 512, 512) ;  permute_543 = None
        split_tensor_68 = torch.split(masked_fill_66,256,dim = -1) ;  masked_fill_66 = None
        getitem_733 = split_tensor_68[1];  split_tensor_68 = None
        unsqueeze_374 = torch.unsqueeze(getitem_733,4) ;  getitem_733 = None
        permute_544 = unsqueeze_374.permute(0, 4, 1, 3, 2) ;  unsqueeze_374 = None
        permute_545 = permute_544.permute(3, 4, 0, 2, 1) ;  permute_544 = None
        view_872 = permute_545.view(256, 512, 512) ;  permute_545 = None
        bmm_88 = torch.bmm(view_871,view_872) ;  view_871 = view_872 = None
        view_873 = bmm_88.view(256, 512, 1, 1, 512) ;  bmm_88 = None
        permute_546 = view_873.permute(3, 1, 4, 0, 2) ;  view_873 = None
        view_874 = permute_546.view(1, 512, 512, 256) ;  permute_546 = None
        _to_copy_510 = getitem_724.to(dtype = torch.bfloat16) ;  getitem_724 = None
        _to_copy_511 = getitem_720.to(dtype = torch.bfloat16) 
        t_173 = _to_copy_510.t() ;  _to_copy_510 = None
        view_875 = _to_copy_511.view(262144, 256) ;  _to_copy_511 = None
        mm_161 = torch.mm(view_875,t_173) ;  view_875 = t_173 = None
        view_876 = mm_161.view(1, 512, 512, 512) ;  mm_161 = None
        _to_copy_512 = getitem_726.to(dtype = torch.bfloat16) ;  getitem_726 = None
        _to_copy_513 = getitem_720.to(dtype = torch.bfloat16) 
        t_174 = _to_copy_512.t() ;  _to_copy_512 = None
        view_877 = _to_copy_513.view(262144, 256) ;  _to_copy_513 = None
        mm_162 = torch.mm(view_877,t_174) ;  view_877 = t_174 = None
        view_878 = mm_162.view(1, 512, 512, 512) ;  mm_162 = None
        sigmoid_55 = torch.sigmoid(view_878) ;  view_878 = None
        mul_88 = torch.mul(view_876,sigmoid_55) ;  view_876 = sigmoid_55 = None
        view_879 = mul_88.view(262144, 512) ;  mul_88 = None
        view_880 = view_879.view(1, 512, 512, 512) ;  view_879 = None
        transpose_16 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_375 = torch.unsqueeze(transpose_16,3) ;  transpose_16 = None
        clone_105 = torch.clone(unsqueeze_375,memory_format = torch.contiguous_format) ;  unsqueeze_375 = None
        bitwise_not_67 = torch.bitwise_not(clone_105) ;  clone_105 = None
        masked_fill_67 = view_880.masked_fill(bitwise_not_67,0) ;  view_880 = bitwise_not_67 = None
        view_881 = masked_fill_67.view(262144, 512) ;  masked_fill_67 = None
        view_885 = view_881.view(1, 512, 512, 512) 
        split_tensor_69 = torch.split(view_885,256,dim = -1) ;  view_885 = None
        getitem_736 = split_tensor_69[0]
        unsqueeze_378 = torch.unsqueeze(getitem_736,4) ;  getitem_736 = None
        permute_551 = unsqueeze_378.permute(0, 2, 4, 3, 1) ;  unsqueeze_378 = None
        permute_552 = permute_551.permute(3, 1, 4, 0, 2) ;  permute_551 = None
        view_886 = permute_552.view(256, 512, 512) ;  permute_552 = None
        view_887 = view_881.view(1, 512, 512, 512) ;  view_881 = None
        split_tensor_70 = torch.split(view_887,256,dim = -1) ;  view_887 = None
        getitem_739 = split_tensor_70[1];  split_tensor_70 = None
        unsqueeze_379 = torch.unsqueeze(getitem_739,4) ;  getitem_739 = None
        permute_553 = unsqueeze_379.permute(0, 4, 2, 3, 1) ;  unsqueeze_379 = None
        permute_554 = permute_553.permute(3, 4, 0, 2, 1) ;  permute_553 = None
        view_888 = permute_554.view(256, 512, 512) ;  permute_554 = None
        bmm_89 = torch.bmm(view_886,view_888) ;  view_886 = view_888 = None
        view_889 = bmm_89.view(256, 512, 1, 1, 512) ;  bmm_89 = None
        permute_555 = view_889.permute(3, 1, 4, 0, 2) ;  view_889 = None
        view_890 = permute_555.view(1, 512, 512, 256) ;  permute_555 = None
        _to_copy_514 = view_874.to(dtype = torch.float32) ;  view_874 = None
        native_layer_norm_default_107 = (torch.nn.functional.layer_norm(_to_copy_514,[256],None,None,1e-05),) ;  _to_copy_514 = None
        getitem_740 = native_layer_norm_default_107[0]
        _to_copy_515 = view_890.to(dtype = torch.float32) ;  view_890 = None
        native_layer_norm_default_108 = (torch.nn.functional.layer_norm(_to_copy_515,[256],None,None,1e-05),) ;  _to_copy_515 = None
        getitem_743 = native_layer_norm_default_108[0]
        add_72 = torch.add(getitem_740,getitem_743) ;  getitem_740 = getitem_743 = None
        _to_copy_516 = arg202_1.to(dtype = torch.bfloat16) ;  arg202_1 = None
        _to_copy_517 = add_72.to(dtype = torch.bfloat16) ;  add_72 = None
        t_175 = _to_copy_516.t() ;  _to_copy_516 = None
        view_891 = _to_copy_517.view(262144, 256) ;  _to_copy_517 = None
        mm_163 = torch.mm(view_891,t_175) ;  view_891 = t_175 = None
        view_892 = mm_163.view(1, 512, 512, 256) ;  mm_163 = None
        _to_copy_518 = getitem_727.to(dtype = torch.bfloat16) ;  getitem_727 = None
        _to_copy_519 = getitem_720.to(dtype = torch.bfloat16) ;  getitem_720 = None
        t_176 = _to_copy_518.t() ;  _to_copy_518 = None
        view_893 = _to_copy_519.view(262144, 256) ;  _to_copy_519 = None
        mm_164 = torch.mm(view_893,t_176) ;  view_893 = t_176 = None
        view_894 = mm_164.view(1, 512, 512, 256) ;  mm_164 = None
        sigmoid_56 = torch.sigmoid(view_894) ;  view_894 = None
        mul_89 = torch.mul(view_892,sigmoid_56) ;  view_892 = sigmoid_56 = None
        add_73 = torch.add(add_67,mul_89) ;  mul_89 = None
        _to_copy_520 = add_67.to(dtype = torch.float32) 
        native_layer_norm_default_109 = (torch.nn.functional.layer_norm(_to_copy_520,[256],None,None,1e-05),) ;  _to_copy_520 = None
        getitem_746 = native_layer_norm_default_109[0]
        _to_copy_521 = arg206_1.to(dtype = torch.bfloat16) ;  arg206_1 = None
        _to_copy_522 = getitem_746.to(dtype = torch.bfloat16) 
        t_177 = _to_copy_521.t() ;  _to_copy_521 = None
        view_895 = _to_copy_522.view(262144, 256) ;  _to_copy_522 = None
        mm_165 = torch.mm(view_895,t_177) ;  view_895 = t_177 = None
        view_896 = mm_165.view(1, 512, 512, 8) ;  mm_165 = None
        view_897 = view_896.view(1, 512, 512, 2, 4) ;  view_896 = None
        permute_556 = view_897.permute(0, 3, 4, 1, 2) ;  view_897 = None
        view_898 = permute_556.view(1, 2, 4, 1, 512, 512) ;  permute_556 = None
        view_899 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_68 = torch.bitwise_not(view_899) ;  view_899 = None
        masked_fill_68 = view_898.masked_fill(bitwise_not_68,-10000) ;  view_898 = bitwise_not_68 = None
        view_900 = masked_fill_68.view(1, 2, 4, 512, 512) ;  masked_fill_68 = None
        permute_557 = view_900.permute(1, 0, 2, 3, 4) ;  view_900 = None
        view_901 = permute_557.view(2, 4, 1, 512, 512) ;  permute_557 = None
        _to_copy_523 = arg207_1.to(dtype = torch.bfloat16) ;  arg207_1 = None
        _to_copy_524 = getitem_746.to(dtype = torch.bfloat16) 
        t_178 = _to_copy_523.t() ;  _to_copy_523 = None
        view_902 = _to_copy_524.view(262144, 256) ;  _to_copy_524 = None
        mm_166 = torch.mm(view_902,t_178) ;  view_902 = t_178 = None
        view_903 = mm_166.view(1, 512, 512, 1024) ;  mm_166 = None
        select_17 = torch.select(view_901,0,0) 
        view_904 = view_903.view(1, 512, 512, 4, 4, 64) ;  view_903 = None
        permute_558 = view_904.permute(4, 0, 3, 1, 2, 5) ;  view_904 = None
        view_905 = permute_558.view(4, 4, 512, 512, 64) ;  permute_558 = None
        unbind_int_46 = torch.unbind(view_905) ;  view_905 = None
        getitem_749 = unbind_int_46[0]
        getitem_750 = unbind_int_46[1]
        getitem_751 = unbind_int_46[2]
        getitem_752 = unbind_int_46[3];  unbind_int_46 = None
        expand_37 = select_17.expand(4, 512, 512, 512) ;  select_17 = None
        _scaled_dot_product_efficient_attention_default_18 = (torch.nn.functional.scaled_dot_product_attention(getitem_749,getitem_750,getitem_751,expand_37,False),) ;  getitem_749 = getitem_750 = getitem_751 = expand_37 = None
        getitem_753 = _scaled_dot_product_efficient_attention_default_18[0]
        sigmoid_57 = torch.sigmoid(getitem_752) ;  getitem_752 = None
        mul_90 = torch.mul(getitem_753,sigmoid_57) ;  getitem_753 = sigmoid_57 = None
        view_906 = mul_90.view(1, 4, 512, 512, 64) ;  mul_90 = None
        permute_559 = view_906.permute(0, 2, 3, 1, 4) ;  view_906 = None
        clone_106 = torch.clone(permute_559,memory_format = torch.contiguous_format) ;  permute_559 = None
        _unsafe_view_96 = clone_106.view(1, 512, 512, 256) ;  clone_106 = None
        transpose_17 = torch.transpose(getitem_746,1,2) ;  getitem_746 = None
        _to_copy_525 = arg208_1.to(dtype = torch.bfloat16) ;  arg208_1 = None
        _to_copy_526 = transpose_17.to(dtype = torch.bfloat16) ;  transpose_17 = None
        t_179 = _to_copy_525.t() ;  _to_copy_525 = None
        expand_38 = _to_copy_526.expand(1, 512, 512, 256) ;  _to_copy_526 = None
        view_907 = expand_38.view(512, 512, 256) ;  expand_38 = None
        expand_39 = t_179.expand(1, 512, 256, 1024) ;  t_179 = None
        view_908 = expand_39.view(512, 256, 1024) ;  expand_39 = None
        bmm_90 = torch.bmm(view_907,view_908) ;  view_907 = view_908 = None
        view_909 = bmm_90.view(1, 512, 512, 1024) ;  bmm_90 = None
        select_18 = torch.select(view_901,0,1) ;  view_901 = None
        view_910 = view_909.view(1, 512, 512, 4, 4, 64) ;  view_909 = None
        permute_560 = view_910.permute(4, 0, 3, 1, 2, 5) ;  view_910 = None
        view_911 = permute_560.view(4, 4, 512, 512, 64) ;  permute_560 = None
        unbind_int_47 = torch.unbind(view_911) ;  view_911 = None
        getitem_757 = unbind_int_47[0]
        getitem_758 = unbind_int_47[1]
        getitem_759 = unbind_int_47[2]
        getitem_760 = unbind_int_47[3];  unbind_int_47 = None
        expand_40 = select_18.expand(4, 512, 512, 512) ;  select_18 = None
        _scaled_dot_product_efficient_attention_default_19 = (torch.nn.functional.scaled_dot_product_attention(getitem_757,getitem_758,getitem_759,expand_40,False),) ;  getitem_757 = getitem_758 = getitem_759 = expand_40 = None
        getitem_761 = _scaled_dot_product_efficient_attention_default_19[0]
        sigmoid_58 = torch.sigmoid(getitem_760) ;  getitem_760 = None
        mul_91 = torch.mul(getitem_761,sigmoid_58) ;  getitem_761 = sigmoid_58 = None
        view_912 = mul_91.view(1, 4, 512, 512, 64) ;  mul_91 = None
        permute_561 = view_912.permute(0, 2, 3, 1, 4) ;  view_912 = None
        clone_107 = torch.clone(permute_561,memory_format = torch.contiguous_format) ;  permute_561 = None
        _unsafe_view_97 = clone_107.view(1, 512, 512, 256) ;  clone_107 = None
        cat_14 = torch.cat([_unsafe_view_96,_unsafe_view_97],dim = -1) ;  _unsafe_view_96 = _unsafe_view_97 = None
        slice_207 = arg205_1[0:] ;  arg205_1 = None
        unsqueeze_380 = torch.unsqueeze(slice_207,1) ;  slice_207 = None
        mul_92 = torch.mul(arg209_1,unsqueeze_380) ;  arg209_1 = unsqueeze_380 = None
        _to_copy_527 = mul_92.to(dtype = torch.bfloat16) ;  mul_92 = None
        t_180 = _to_copy_527.t() ;  _to_copy_527 = None
        view_913 = cat_14.view(262144, 512) ;  cat_14 = None
        mm_167 = torch.mm(view_913,t_180) ;  view_913 = t_180 = None
        view_914 = mm_167.view(1, 512, 512, 256) ;  mm_167 = None
        add_74 = torch.add(add_73,view_914) ;  add_73 = view_914 = None
        split_tensor_71 = torch.split(add_67,512,dim = -2) 
        getitem_765 = split_tensor_71[0];  split_tensor_71 = None
        _to_copy_528 = getitem_765.to(dtype = torch.float32) ;  getitem_765 = None
        native_layer_norm_default_110 = (torch.nn.functional.layer_norm(_to_copy_528,[256],arg196_1,arg197_1,1e-05),) ;  _to_copy_528 = arg196_1 = arg197_1 = None
        getitem_766 = native_layer_norm_default_110[0]
        _to_copy_529 = arg198_1.to(dtype = torch.bfloat16) ;  arg198_1 = None
        _to_copy_530 = getitem_766.to(dtype = torch.bfloat16) ;  getitem_766 = None
        t_181 = _to_copy_529.t() ;  _to_copy_529 = None
        view_915 = _to_copy_530.view(262144, 256) ;  _to_copy_530 = None
        mm_168 = torch.mm(view_915,t_181) ;  view_915 = t_181 = None
        view_916 = mm_168.view(1, 512, 512, 1024) ;  mm_168 = None
        split_tensor_72 = torch.split(view_916,512,dim = -1) ;  view_916 = None
        getitem_769 = split_tensor_72[0]
        getitem_770 = split_tensor_72[1];  split_tensor_72 = None
        silu_22 = torch.nn.functional.silu(getitem_769) ;  getitem_769 = None
        mul_93 = torch.mul(silu_22,getitem_770) ;  silu_22 = getitem_770 = None
        _to_copy_531 = arg199_1.to(dtype = torch.bfloat16) ;  arg199_1 = None
        t_182 = _to_copy_531.t() ;  _to_copy_531 = None
        view_918 = mul_93.view(262144, 512) ;  mul_93 = None
        mm_169 = torch.mm(view_918,t_182) ;  view_918 = t_182 = None
        view_919 = mm_169.view(1, 512, 512, 256) ;  mm_169 = None
        add_75 = torch.add(add_74,view_919) ;  add_74 = view_919 = None
        _to_copy_532 = add_71.to(dtype = torch.float32) 
        native_layer_norm_default_111 = (torch.nn.functional.layer_norm(_to_copy_532,[384],arg214_1,arg215_1,1e-05),) ;  _to_copy_532 = arg214_1 = arg215_1 = None
        getitem_771 = native_layer_norm_default_111[0]
        _to_copy_533 = add_67.to(dtype = torch.float32) ;  add_67 = None
        native_layer_norm_default_112 = (torch.nn.functional.layer_norm(_to_copy_533,[256],arg216_1,arg217_1,1e-05),) ;  _to_copy_533 = arg216_1 = arg217_1 = None
        getitem_774 = native_layer_norm_default_112[0]
        _to_copy_534 = arg218_1.to(dtype = torch.bfloat16) ;  arg218_1 = None
        _to_copy_535 = getitem_774.to(dtype = torch.bfloat16) ;  getitem_774 = None
        t_183 = _to_copy_534.t() ;  _to_copy_534 = None
        view_920 = _to_copy_535.view(262144, 256) ;  _to_copy_535 = None
        mm_170 = torch.mm(view_920,t_183) ;  view_920 = t_183 = None
        view_921 = mm_170.view(1, 512, 512, 16) ;  mm_170 = None
        permute_562 = view_921.permute(0, 3, 1, 2) ;  view_921 = None
        view_922 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_69 = torch.bitwise_not(view_922) ;  view_922 = None
        masked_fill_69 = permute_562.masked_fill(bitwise_not_69,-10000) ;  permute_562 = bitwise_not_69 = None
        _to_copy_536 = getitem_771.to(dtype = torch.bfloat16) ;  getitem_771 = None
        _to_copy_537 = arg220_1.to(dtype = torch.bfloat16) ;  arg220_1 = None
        unsqueeze_381 = torch.unsqueeze(_to_copy_536,3) ;  _to_copy_536 = None
        unsqueeze_382 = torch.unsqueeze(unsqueeze_381,4) ;  unsqueeze_381 = None
        unsqueeze_383 = torch.unsqueeze(unsqueeze_382,5) ;  unsqueeze_382 = None
        permute_563 = unsqueeze_383.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_383 = None
        unsqueeze_384 = torch.unsqueeze(_to_copy_537,4) ;  _to_copy_537 = None
        unsqueeze_385 = torch.unsqueeze(unsqueeze_384,5) ;  unsqueeze_384 = None
        permute_564 = unsqueeze_385.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_385 = None
        permute_565 = permute_563.permute(3, 5, 0, 1, 2, 4) ;  permute_563 = None
        view_923 = permute_565.view(1, 512, 384) ;  permute_565 = None
        permute_566 = permute_564.permute(5, 0, 1, 2, 4, 3) ;  permute_564 = None
        view_924 = permute_566.view(1, 384, 1536) ;  permute_566 = None
        bmm_91 = torch.bmm(view_923,view_924) ;  view_923 = view_924 = None
        view_925 = bmm_91.view(512, 1, 4, 1, 16, 24) ;  bmm_91 = None
        permute_567 = view_925.permute(2, 3, 4, 0, 5, 1) ;  view_925 = None
        view_926 = permute_567.view(4, 1, 16, 512, 24) ;  permute_567 = None
        unbind_int_48 = torch.unbind(view_926) ;  view_926 = None
        getitem_777 = unbind_int_48[0]
        getitem_778 = unbind_int_48[1]
        getitem_779 = unbind_int_48[2]
        getitem_780 = unbind_int_48[3];  unbind_int_48 = None
        view_927 = arg219_1.view(1, 16, 1, 24) ;  arg219_1 = None
        add_76 = torch.add(getitem_777,view_927) ;  getitem_777 = view_927 = None
        _to_copy_538 = add_76.to(dtype = torch.bfloat16) ;  add_76 = None
        expand_41 = masked_fill_69.expand(1, 16, 512, 512) ;  masked_fill_69 = None
        _scaled_dot_product_efficient_attention_default_20 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_538,getitem_778,getitem_779,expand_41,False),) ;  _to_copy_538 = getitem_778 = getitem_779 = expand_41 = None
        getitem_781 = _scaled_dot_product_efficient_attention_default_20[0]
        add_77 = torch.add(getitem_780,1) ;  getitem_780 = None
        sigmoid_59 = torch.sigmoid(add_77) ;  add_77 = None
        mul_94 = torch.mul(getitem_781,sigmoid_59) ;  getitem_781 = sigmoid_59 = None
        _to_copy_539 = arg221_1.to(dtype = torch.bfloat16) ;  arg221_1 = None
        unsqueeze_386 = torch.unsqueeze(mul_94,4) ;  mul_94 = None
        permute_568 = unsqueeze_386.permute(0, 2, 4, 3, 1) ;  unsqueeze_386 = None
        unsqueeze_387 = torch.unsqueeze(_to_copy_539,3) ;  _to_copy_539 = None
        unsqueeze_388 = torch.unsqueeze(unsqueeze_387,4) ;  unsqueeze_387 = None
        permute_569 = unsqueeze_388.permute(3, 4, 2, 1, 0) ;  unsqueeze_388 = None
        permute_570 = permute_568.permute(1, 3, 4, 0, 2) ;  permute_568 = None
        clone_108 = torch.clone(permute_570,memory_format = torch.contiguous_format) ;  permute_570 = None
        _unsafe_view_98 = clone_108.view(1, 512, 384) ;  clone_108 = None
        permute_571 = permute_569.permute(3, 4, 0, 2, 1) ;  permute_569 = None
        clone_109 = torch.clone(permute_571,memory_format = torch.contiguous_format) ;  permute_571 = None
        _unsafe_view_99 = clone_109.view(1, 384, 384) ;  clone_109 = None
        bmm_92 = torch.bmm(_unsafe_view_98,_unsafe_view_99) ;  _unsafe_view_98 = _unsafe_view_99 = None
        view_928 = bmm_92.view(512, 1, 1, 1, 384) ;  bmm_92 = None
        permute_572 = view_928.permute(3, 0, 4, 1, 2) ;  view_928 = None
        view_929 = permute_572.view(1, 512, 384) ;  permute_572 = None
        unsqueeze_389 = torch.unsqueeze(arg1406_1,-1) 
        mul_95 = torch.mul(view_929,unsqueeze_389) ;  view_929 = unsqueeze_389 = None
        add_78 = torch.add(add_71,mul_95) ;  mul_95 = None
        split_tensor_73 = torch.split(add_71,512,dim = -2) ;  add_71 = None
        getitem_785 = split_tensor_73[0];  split_tensor_73 = None
        _to_copy_540 = getitem_785.to(dtype = torch.float32) ;  getitem_785 = None
        native_layer_norm_default_113 = (torch.nn.functional.layer_norm(_to_copy_540,[384],arg210_1,arg211_1,1e-05),) ;  _to_copy_540 = arg210_1 = arg211_1 = None
        getitem_786 = native_layer_norm_default_113[0]
        _to_copy_541 = arg212_1.to(dtype = torch.bfloat16) ;  arg212_1 = None
        _to_copy_542 = getitem_786.to(dtype = torch.bfloat16) ;  getitem_786 = None
        t_184 = _to_copy_541.t() ;  _to_copy_541 = None
        view_930 = _to_copy_542.view(512, 384) ;  _to_copy_542 = None
        mm_171 = torch.mm(view_930,t_184) ;  view_930 = t_184 = None
        view_931 = mm_171.view(1, 512, 1536) ;  mm_171 = None
        split_tensor_74 = torch.split(view_931,768,dim = -1) ;  view_931 = None
        getitem_789 = split_tensor_74[0]
        getitem_790 = split_tensor_74[1];  split_tensor_74 = None
        silu_23 = torch.nn.functional.silu(getitem_789) ;  getitem_789 = None
        mul_96 = torch.mul(silu_23,getitem_790) ;  silu_23 = getitem_790 = None
        _to_copy_543 = arg213_1.to(dtype = torch.bfloat16) ;  arg213_1 = None
        t_185 = _to_copy_543.t() ;  _to_copy_543 = None
        view_933 = mul_96.view(512, 768) ;  mul_96 = None
        mm_172 = torch.mm(view_933,t_185) ;  view_933 = t_185 = None
        view_934 = mm_172.view(1, 512, 384) ;  mm_172 = None
        add_79 = torch.add(add_78,view_934) ;  add_78 = view_934 = None
        _to_copy_544 = add_75.to(dtype = torch.float32) 
        native_layer_norm_default_114 = (torch.nn.functional.layer_norm(_to_copy_544,[256],arg226_1,arg227_1,1e-05),) ;  _to_copy_544 = arg226_1 = arg227_1 = None
        getitem_791 = native_layer_norm_default_114[0]
        split_with_sizes_default_18 = torch.split(arg229_1,[512,512]) ;  arg229_1 = None
        getitem_794 = split_with_sizes_default_18[0]
        getitem_795 = split_with_sizes_default_18[1];  split_with_sizes_default_18 = None
        split_with_sizes_default_19 = torch.split(arg230_1,[512,512,256]) ;  arg230_1 = None
        getitem_796 = split_with_sizes_default_19[0]
        getitem_797 = split_with_sizes_default_19[1]
        getitem_798 = split_with_sizes_default_19[2];  split_with_sizes_default_19 = None
        _to_copy_545 = getitem_794.to(dtype = torch.bfloat16) ;  getitem_794 = None
        _to_copy_546 = getitem_791.to(dtype = torch.bfloat16) 
        t_186 = _to_copy_545.t() ;  _to_copy_545 = None
        view_935 = _to_copy_546.view(262144, 256) ;  _to_copy_546 = None
        mm_173 = torch.mm(view_935,t_186) ;  view_935 = t_186 = None
        view_936 = mm_173.view(1, 512, 512, 512) ;  mm_173 = None
        _to_copy_547 = getitem_796.to(dtype = torch.bfloat16) ;  getitem_796 = None
        _to_copy_548 = getitem_791.to(dtype = torch.bfloat16) 
        t_187 = _to_copy_547.t() ;  _to_copy_547 = None
        view_937 = _to_copy_548.view(262144, 256) ;  _to_copy_548 = None
        mm_174 = torch.mm(view_937,t_187) ;  view_937 = t_187 = None
        view_938 = mm_174.view(1, 512, 512, 512) ;  mm_174 = None
        sigmoid_60 = torch.sigmoid(view_938) ;  view_938 = None
        mul_97 = torch.mul(view_936,sigmoid_60) ;  view_936 = sigmoid_60 = None
        unsqueeze_390 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_70 = torch.bitwise_not(unsqueeze_390) ;  unsqueeze_390 = None
        masked_fill_70 = mul_97.masked_fill(bitwise_not_70,0) ;  mul_97 = bitwise_not_70 = None
        split_tensor_75 = torch.split(masked_fill_70,256,dim = -1) 
        getitem_801 = split_tensor_75[0]
        unsqueeze_393 = torch.unsqueeze(getitem_801,4) ;  getitem_801 = None
        permute_577 = unsqueeze_393.permute(0, 1, 4, 3, 2) ;  unsqueeze_393 = None
        permute_578 = permute_577.permute(3, 1, 4, 0, 2) ;  permute_577 = None
        view_941 = permute_578.view(256, 512, 512) ;  permute_578 = None
        split_tensor_76 = torch.split(masked_fill_70,256,dim = -1) ;  masked_fill_70 = None
        getitem_804 = split_tensor_76[1];  split_tensor_76 = None
        unsqueeze_394 = torch.unsqueeze(getitem_804,4) ;  getitem_804 = None
        permute_579 = unsqueeze_394.permute(0, 4, 1, 3, 2) ;  unsqueeze_394 = None
        permute_580 = permute_579.permute(3, 4, 0, 2, 1) ;  permute_579 = None
        view_942 = permute_580.view(256, 512, 512) ;  permute_580 = None
        bmm_93 = torch.bmm(view_941,view_942) ;  view_941 = view_942 = None
        view_943 = bmm_93.view(256, 512, 1, 1, 512) ;  bmm_93 = None
        permute_581 = view_943.permute(3, 1, 4, 0, 2) ;  view_943 = None
        view_944 = permute_581.view(1, 512, 512, 256) ;  permute_581 = None
        _to_copy_549 = getitem_795.to(dtype = torch.bfloat16) ;  getitem_795 = None
        _to_copy_550 = getitem_791.to(dtype = torch.bfloat16) 
        t_188 = _to_copy_549.t() ;  _to_copy_549 = None
        view_945 = _to_copy_550.view(262144, 256) ;  _to_copy_550 = None
        mm_175 = torch.mm(view_945,t_188) ;  view_945 = t_188 = None
        view_946 = mm_175.view(1, 512, 512, 512) ;  mm_175 = None
        _to_copy_551 = getitem_797.to(dtype = torch.bfloat16) ;  getitem_797 = None
        _to_copy_552 = getitem_791.to(dtype = torch.bfloat16) 
        t_189 = _to_copy_551.t() ;  _to_copy_551 = None
        view_947 = _to_copy_552.view(262144, 256) ;  _to_copy_552 = None
        mm_176 = torch.mm(view_947,t_189) ;  view_947 = t_189 = None
        view_948 = mm_176.view(1, 512, 512, 512) ;  mm_176 = None
        sigmoid_61 = torch.sigmoid(view_948) ;  view_948 = None
        mul_98 = torch.mul(view_946,sigmoid_61) ;  view_946 = sigmoid_61 = None
        view_949 = mul_98.view(262144, 512) ;  mul_98 = None
        view_950 = view_949.view(1, 512, 512, 512) ;  view_949 = None
        transpose_18 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_395 = torch.unsqueeze(transpose_18,3) ;  transpose_18 = None
        clone_110 = torch.clone(unsqueeze_395,memory_format = torch.contiguous_format) ;  unsqueeze_395 = None
        bitwise_not_71 = torch.bitwise_not(clone_110) ;  clone_110 = None
        masked_fill_71 = view_950.masked_fill(bitwise_not_71,0) ;  view_950 = bitwise_not_71 = None
        view_951 = masked_fill_71.view(262144, 512) ;  masked_fill_71 = None
        view_955 = view_951.view(1, 512, 512, 512) 
        split_tensor_77 = torch.split(view_955,256,dim = -1) ;  view_955 = None
        getitem_807 = split_tensor_77[0]
        unsqueeze_398 = torch.unsqueeze(getitem_807,4) ;  getitem_807 = None
        permute_586 = unsqueeze_398.permute(0, 2, 4, 3, 1) ;  unsqueeze_398 = None
        permute_587 = permute_586.permute(3, 1, 4, 0, 2) ;  permute_586 = None
        view_956 = permute_587.view(256, 512, 512) ;  permute_587 = None
        view_957 = view_951.view(1, 512, 512, 512) ;  view_951 = None
        split_tensor_78 = torch.split(view_957,256,dim = -1) ;  view_957 = None
        getitem_810 = split_tensor_78[1];  split_tensor_78 = None
        unsqueeze_399 = torch.unsqueeze(getitem_810,4) ;  getitem_810 = None
        permute_588 = unsqueeze_399.permute(0, 4, 2, 3, 1) ;  unsqueeze_399 = None
        permute_589 = permute_588.permute(3, 4, 0, 2, 1) ;  permute_588 = None
        view_958 = permute_589.view(256, 512, 512) ;  permute_589 = None
        bmm_94 = torch.bmm(view_956,view_958) ;  view_956 = view_958 = None
        view_959 = bmm_94.view(256, 512, 1, 1, 512) ;  bmm_94 = None
        permute_590 = view_959.permute(3, 1, 4, 0, 2) ;  view_959 = None
        view_960 = permute_590.view(1, 512, 512, 256) ;  permute_590 = None
        _to_copy_553 = view_944.to(dtype = torch.float32) ;  view_944 = None
        native_layer_norm_default_115 = (torch.nn.functional.layer_norm(_to_copy_553,[256],None,None,1e-05),) ;  _to_copy_553 = None
        getitem_811 = native_layer_norm_default_115[0]
        _to_copy_554 = view_960.to(dtype = torch.float32) ;  view_960 = None
        native_layer_norm_default_116 = (torch.nn.functional.layer_norm(_to_copy_554,[256],None,None,1e-05),) ;  _to_copy_554 = None
        getitem_814 = native_layer_norm_default_116[0]
        add_80 = torch.add(getitem_811,getitem_814) ;  getitem_811 = getitem_814 = None
        _to_copy_555 = arg228_1.to(dtype = torch.bfloat16) ;  arg228_1 = None
        _to_copy_556 = add_80.to(dtype = torch.bfloat16) ;  add_80 = None
        t_190 = _to_copy_555.t() ;  _to_copy_555 = None
        view_961 = _to_copy_556.view(262144, 256) ;  _to_copy_556 = None
        mm_177 = torch.mm(view_961,t_190) ;  view_961 = t_190 = None
        view_962 = mm_177.view(1, 512, 512, 256) ;  mm_177 = None
        _to_copy_557 = getitem_798.to(dtype = torch.bfloat16) ;  getitem_798 = None
        _to_copy_558 = getitem_791.to(dtype = torch.bfloat16) ;  getitem_791 = None
        t_191 = _to_copy_557.t() ;  _to_copy_557 = None
        view_963 = _to_copy_558.view(262144, 256) ;  _to_copy_558 = None
        mm_178 = torch.mm(view_963,t_191) ;  view_963 = t_191 = None
        view_964 = mm_178.view(1, 512, 512, 256) ;  mm_178 = None
        sigmoid_62 = torch.sigmoid(view_964) ;  view_964 = None
        mul_99 = torch.mul(view_962,sigmoid_62) ;  view_962 = sigmoid_62 = None
        add_81 = torch.add(add_75,mul_99) ;  mul_99 = None
        _to_copy_559 = add_75.to(dtype = torch.float32) 
        native_layer_norm_default_117 = (torch.nn.functional.layer_norm(_to_copy_559,[256],None,None,1e-05),) ;  _to_copy_559 = None
        getitem_817 = native_layer_norm_default_117[0]
        _to_copy_560 = arg232_1.to(dtype = torch.bfloat16) ;  arg232_1 = None
        _to_copy_561 = getitem_817.to(dtype = torch.bfloat16) 
        t_192 = _to_copy_560.t() ;  _to_copy_560 = None
        view_965 = _to_copy_561.view(262144, 256) ;  _to_copy_561 = None
        mm_179 = torch.mm(view_965,t_192) ;  view_965 = t_192 = None
        view_966 = mm_179.view(1, 512, 512, 8) ;  mm_179 = None
        view_967 = view_966.view(1, 512, 512, 2, 4) ;  view_966 = None
        permute_591 = view_967.permute(0, 3, 4, 1, 2) ;  view_967 = None
        view_968 = permute_591.view(1, 2, 4, 1, 512, 512) ;  permute_591 = None
        view_969 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_72 = torch.bitwise_not(view_969) ;  view_969 = None
        masked_fill_72 = view_968.masked_fill(bitwise_not_72,-10000) ;  view_968 = bitwise_not_72 = None
        view_970 = masked_fill_72.view(1, 2, 4, 512, 512) ;  masked_fill_72 = None
        permute_592 = view_970.permute(1, 0, 2, 3, 4) ;  view_970 = None
        view_971 = permute_592.view(2, 4, 1, 512, 512) ;  permute_592 = None
        _to_copy_562 = arg233_1.to(dtype = torch.bfloat16) ;  arg233_1 = None
        _to_copy_563 = getitem_817.to(dtype = torch.bfloat16) 
        t_193 = _to_copy_562.t() ;  _to_copy_562 = None
        view_972 = _to_copy_563.view(262144, 256) ;  _to_copy_563 = None
        mm_180 = torch.mm(view_972,t_193) ;  view_972 = t_193 = None
        view_973 = mm_180.view(1, 512, 512, 1024) ;  mm_180 = None
        select_19 = torch.select(view_971,0,0) 
        view_974 = view_973.view(1, 512, 512, 4, 4, 64) ;  view_973 = None
        permute_593 = view_974.permute(4, 0, 3, 1, 2, 5) ;  view_974 = None
        view_975 = permute_593.view(4, 4, 512, 512, 64) ;  permute_593 = None
        unbind_int_49 = torch.unbind(view_975) ;  view_975 = None
        getitem_820 = unbind_int_49[0]
        getitem_821 = unbind_int_49[1]
        getitem_822 = unbind_int_49[2]
        getitem_823 = unbind_int_49[3];  unbind_int_49 = None
        expand_42 = select_19.expand(4, 512, 512, 512) ;  select_19 = None
        _scaled_dot_product_efficient_attention_default_21 = (torch.nn.functional.scaled_dot_product_attention(getitem_820,getitem_821,getitem_822,expand_42,False),) ;  getitem_820 = getitem_821 = getitem_822 = expand_42 = None
        getitem_824 = _scaled_dot_product_efficient_attention_default_21[0]
        sigmoid_63 = torch.sigmoid(getitem_823) ;  getitem_823 = None
        mul_100 = torch.mul(getitem_824,sigmoid_63) ;  getitem_824 = sigmoid_63 = None
        view_976 = mul_100.view(1, 4, 512, 512, 64) ;  mul_100 = None
        permute_594 = view_976.permute(0, 2, 3, 1, 4) ;  view_976 = None
        clone_111 = torch.clone(permute_594,memory_format = torch.contiguous_format) ;  permute_594 = None
        _unsafe_view_100 = clone_111.view(1, 512, 512, 256) ;  clone_111 = None
        transpose_19 = torch.transpose(getitem_817,1,2) ;  getitem_817 = None
        _to_copy_564 = arg234_1.to(dtype = torch.bfloat16) ;  arg234_1 = None
        _to_copy_565 = transpose_19.to(dtype = torch.bfloat16) ;  transpose_19 = None
        t_194 = _to_copy_564.t() ;  _to_copy_564 = None
        expand_43 = _to_copy_565.expand(1, 512, 512, 256) ;  _to_copy_565 = None
        view_977 = expand_43.view(512, 512, 256) ;  expand_43 = None
        expand_44 = t_194.expand(1, 512, 256, 1024) ;  t_194 = None
        view_978 = expand_44.view(512, 256, 1024) ;  expand_44 = None
        bmm_95 = torch.bmm(view_977,view_978) ;  view_977 = view_978 = None
        view_979 = bmm_95.view(1, 512, 512, 1024) ;  bmm_95 = None
        select_20 = torch.select(view_971,0,1) ;  view_971 = None
        view_980 = view_979.view(1, 512, 512, 4, 4, 64) ;  view_979 = None
        permute_595 = view_980.permute(4, 0, 3, 1, 2, 5) ;  view_980 = None
        view_981 = permute_595.view(4, 4, 512, 512, 64) ;  permute_595 = None
        unbind_int_50 = torch.unbind(view_981) ;  view_981 = None
        getitem_828 = unbind_int_50[0]
        getitem_829 = unbind_int_50[1]
        getitem_830 = unbind_int_50[2]
        getitem_831 = unbind_int_50[3];  unbind_int_50 = None
        expand_45 = select_20.expand(4, 512, 512, 512) ;  select_20 = None
        _scaled_dot_product_efficient_attention_default_22 = (torch.nn.functional.scaled_dot_product_attention(getitem_828,getitem_829,getitem_830,expand_45,False),) ;  getitem_828 = getitem_829 = getitem_830 = expand_45 = None
        getitem_832 = _scaled_dot_product_efficient_attention_default_22[0]
        sigmoid_64 = torch.sigmoid(getitem_831) ;  getitem_831 = None
        mul_101 = torch.mul(getitem_832,sigmoid_64) ;  getitem_832 = sigmoid_64 = None
        view_982 = mul_101.view(1, 4, 512, 512, 64) ;  mul_101 = None
        permute_596 = view_982.permute(0, 2, 3, 1, 4) ;  view_982 = None
        clone_112 = torch.clone(permute_596,memory_format = torch.contiguous_format) ;  permute_596 = None
        _unsafe_view_101 = clone_112.view(1, 512, 512, 256) ;  clone_112 = None
        cat_15 = torch.cat([_unsafe_view_100,_unsafe_view_101],dim = -1) ;  _unsafe_view_100 = _unsafe_view_101 = None
        slice_208 = arg231_1[0:] ;  arg231_1 = None
        unsqueeze_400 = torch.unsqueeze(slice_208,1) ;  slice_208 = None
        mul_102 = torch.mul(arg235_1,unsqueeze_400) ;  arg235_1 = unsqueeze_400 = None
        _to_copy_566 = mul_102.to(dtype = torch.bfloat16) ;  mul_102 = None
        t_195 = _to_copy_566.t() ;  _to_copy_566 = None
        view_983 = cat_15.view(262144, 512) ;  cat_15 = None
        mm_181 = torch.mm(view_983,t_195) ;  view_983 = t_195 = None
        view_984 = mm_181.view(1, 512, 512, 256) ;  mm_181 = None
        add_82 = torch.add(add_81,view_984) ;  add_81 = view_984 = None
        split_tensor_79 = torch.split(add_75,512,dim = -2) 
        getitem_836 = split_tensor_79[0];  split_tensor_79 = None
        _to_copy_567 = getitem_836.to(dtype = torch.float32) ;  getitem_836 = None
        native_layer_norm_default_118 = (torch.nn.functional.layer_norm(_to_copy_567,[256],arg222_1,arg223_1,1e-05),) ;  _to_copy_567 = arg222_1 = arg223_1 = None
        getitem_837 = native_layer_norm_default_118[0]
        _to_copy_568 = arg224_1.to(dtype = torch.bfloat16) ;  arg224_1 = None
        _to_copy_569 = getitem_837.to(dtype = torch.bfloat16) ;  getitem_837 = None
        t_196 = _to_copy_568.t() ;  _to_copy_568 = None
        view_985 = _to_copy_569.view(262144, 256) ;  _to_copy_569 = None
        mm_182 = torch.mm(view_985,t_196) ;  view_985 = t_196 = None
        view_986 = mm_182.view(1, 512, 512, 1024) ;  mm_182 = None
        split_tensor_80 = torch.split(view_986,512,dim = -1) ;  view_986 = None
        getitem_840 = split_tensor_80[0]
        getitem_841 = split_tensor_80[1];  split_tensor_80 = None
        silu_24 = torch.nn.functional.silu(getitem_840) ;  getitem_840 = None
        mul_103 = torch.mul(silu_24,getitem_841) ;  silu_24 = getitem_841 = None
        _to_copy_570 = arg225_1.to(dtype = torch.bfloat16) ;  arg225_1 = None
        t_197 = _to_copy_570.t() ;  _to_copy_570 = None
        view_988 = mul_103.view(262144, 512) ;  mul_103 = None
        mm_183 = torch.mm(view_988,t_197) ;  view_988 = t_197 = None
        view_989 = mm_183.view(1, 512, 512, 256) ;  mm_183 = None
        add_83 = torch.add(add_82,view_989) ;  add_82 = view_989 = None
        _to_copy_571 = add_79.to(dtype = torch.float32) 
        native_layer_norm_default_119 = (torch.nn.functional.layer_norm(_to_copy_571,[384],arg240_1,arg241_1,1e-05),) ;  _to_copy_571 = arg240_1 = arg241_1 = None
        getitem_842 = native_layer_norm_default_119[0]
        _to_copy_572 = add_75.to(dtype = torch.float32) ;  add_75 = None
        native_layer_norm_default_120 = (torch.nn.functional.layer_norm(_to_copy_572,[256],arg242_1,arg243_1,1e-05),) ;  _to_copy_572 = arg242_1 = arg243_1 = None
        getitem_845 = native_layer_norm_default_120[0]
        _to_copy_573 = arg244_1.to(dtype = torch.bfloat16) ;  arg244_1 = None
        _to_copy_574 = getitem_845.to(dtype = torch.bfloat16) ;  getitem_845 = None
        t_198 = _to_copy_573.t() ;  _to_copy_573 = None
        view_990 = _to_copy_574.view(262144, 256) ;  _to_copy_574 = None
        mm_184 = torch.mm(view_990,t_198) ;  view_990 = t_198 = None
        view_991 = mm_184.view(1, 512, 512, 16) ;  mm_184 = None
        permute_597 = view_991.permute(0, 3, 1, 2) ;  view_991 = None
        view_992 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_73 = torch.bitwise_not(view_992) ;  view_992 = None
        masked_fill_73 = permute_597.masked_fill(bitwise_not_73,-10000) ;  permute_597 = bitwise_not_73 = None
        _to_copy_575 = getitem_842.to(dtype = torch.bfloat16) ;  getitem_842 = None
        _to_copy_576 = arg246_1.to(dtype = torch.bfloat16) ;  arg246_1 = None
        unsqueeze_401 = torch.unsqueeze(_to_copy_575,3) ;  _to_copy_575 = None
        unsqueeze_402 = torch.unsqueeze(unsqueeze_401,4) ;  unsqueeze_401 = None
        unsqueeze_403 = torch.unsqueeze(unsqueeze_402,5) ;  unsqueeze_402 = None
        permute_598 = unsqueeze_403.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_403 = None
        unsqueeze_404 = torch.unsqueeze(_to_copy_576,4) ;  _to_copy_576 = None
        unsqueeze_405 = torch.unsqueeze(unsqueeze_404,5) ;  unsqueeze_404 = None
        permute_599 = unsqueeze_405.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_405 = None
        permute_600 = permute_598.permute(3, 5, 0, 1, 2, 4) ;  permute_598 = None
        view_993 = permute_600.view(1, 512, 384) ;  permute_600 = None
        permute_601 = permute_599.permute(5, 0, 1, 2, 4, 3) ;  permute_599 = None
        view_994 = permute_601.view(1, 384, 1536) ;  permute_601 = None
        bmm_96 = torch.bmm(view_993,view_994) ;  view_993 = view_994 = None
        view_995 = bmm_96.view(512, 1, 4, 1, 16, 24) ;  bmm_96 = None
        permute_602 = view_995.permute(2, 3, 4, 0, 5, 1) ;  view_995 = None
        view_996 = permute_602.view(4, 1, 16, 512, 24) ;  permute_602 = None
        unbind_int_51 = torch.unbind(view_996) ;  view_996 = None
        getitem_848 = unbind_int_51[0]
        getitem_849 = unbind_int_51[1]
        getitem_850 = unbind_int_51[2]
        getitem_851 = unbind_int_51[3];  unbind_int_51 = None
        view_997 = arg245_1.view(1, 16, 1, 24) ;  arg245_1 = None
        add_84 = torch.add(getitem_848,view_997) ;  getitem_848 = view_997 = None
        _to_copy_577 = add_84.to(dtype = torch.bfloat16) ;  add_84 = None
        expand_46 = masked_fill_73.expand(1, 16, 512, 512) ;  masked_fill_73 = None
        _scaled_dot_product_efficient_attention_default_23 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_577,getitem_849,getitem_850,expand_46,False),) ;  _to_copy_577 = getitem_849 = getitem_850 = expand_46 = None
        getitem_852 = _scaled_dot_product_efficient_attention_default_23[0]
        add_85 = torch.add(getitem_851,1) ;  getitem_851 = None
        sigmoid_65 = torch.sigmoid(add_85) ;  add_85 = None
        mul_104 = torch.mul(getitem_852,sigmoid_65) ;  getitem_852 = sigmoid_65 = None
        _to_copy_578 = arg247_1.to(dtype = torch.bfloat16) ;  arg247_1 = None
        unsqueeze_406 = torch.unsqueeze(mul_104,4) ;  mul_104 = None
        permute_603 = unsqueeze_406.permute(0, 2, 4, 3, 1) ;  unsqueeze_406 = None
        unsqueeze_407 = torch.unsqueeze(_to_copy_578,3) ;  _to_copy_578 = None
        unsqueeze_408 = torch.unsqueeze(unsqueeze_407,4) ;  unsqueeze_407 = None
        permute_604 = unsqueeze_408.permute(3, 4, 2, 1, 0) ;  unsqueeze_408 = None
        permute_605 = permute_603.permute(1, 3, 4, 0, 2) ;  permute_603 = None
        clone_113 = torch.clone(permute_605,memory_format = torch.contiguous_format) ;  permute_605 = None
        _unsafe_view_102 = clone_113.view(1, 512, 384) ;  clone_113 = None
        permute_606 = permute_604.permute(3, 4, 0, 2, 1) ;  permute_604 = None
        clone_114 = torch.clone(permute_606,memory_format = torch.contiguous_format) ;  permute_606 = None
        _unsafe_view_103 = clone_114.view(1, 384, 384) ;  clone_114 = None
        bmm_97 = torch.bmm(_unsafe_view_102,_unsafe_view_103) ;  _unsafe_view_102 = _unsafe_view_103 = None
        view_998 = bmm_97.view(512, 1, 1, 1, 384) ;  bmm_97 = None
        permute_607 = view_998.permute(3, 0, 4, 1, 2) ;  view_998 = None
        view_999 = permute_607.view(1, 512, 384) ;  permute_607 = None
        unsqueeze_409 = torch.unsqueeze(arg1406_1,-1) 
        mul_105 = torch.mul(view_999,unsqueeze_409) ;  view_999 = unsqueeze_409 = None
        add_86 = torch.add(add_79,mul_105) ;  mul_105 = None
        split_tensor_81 = torch.split(add_79,512,dim = -2) ;  add_79 = None
        getitem_856 = split_tensor_81[0];  split_tensor_81 = None
        _to_copy_579 = getitem_856.to(dtype = torch.float32) ;  getitem_856 = None
        native_layer_norm_default_121 = (torch.nn.functional.layer_norm(_to_copy_579,[384],arg236_1,arg237_1,1e-05),) ;  _to_copy_579 = arg236_1 = arg237_1 = None
        getitem_857 = native_layer_norm_default_121[0]
        _to_copy_580 = arg238_1.to(dtype = torch.bfloat16) ;  arg238_1 = None
        _to_copy_581 = getitem_857.to(dtype = torch.bfloat16) ;  getitem_857 = None
        t_199 = _to_copy_580.t() ;  _to_copy_580 = None
        view_1000 = _to_copy_581.view(512, 384) ;  _to_copy_581 = None
        mm_185 = torch.mm(view_1000,t_199) ;  view_1000 = t_199 = None
        view_1001 = mm_185.view(1, 512, 1536) ;  mm_185 = None
        split_tensor_82 = torch.split(view_1001,768,dim = -1) ;  view_1001 = None
        getitem_860 = split_tensor_82[0]
        getitem_861 = split_tensor_82[1];  split_tensor_82 = None
        silu_25 = torch.nn.functional.silu(getitem_860) ;  getitem_860 = None
        mul_106 = torch.mul(silu_25,getitem_861) ;  silu_25 = getitem_861 = None
        _to_copy_582 = arg239_1.to(dtype = torch.bfloat16) ;  arg239_1 = None
        t_200 = _to_copy_582.t() ;  _to_copy_582 = None
        view_1003 = mul_106.view(512, 768) ;  mul_106 = None
        mm_186 = torch.mm(view_1003,t_200) ;  view_1003 = t_200 = None
        view_1004 = mm_186.view(1, 512, 384) ;  mm_186 = None
        add_87 = torch.add(add_86,view_1004) ;  add_86 = view_1004 = None
        _to_copy_583 = add_83.to(dtype = torch.float32) 
        native_layer_norm_default_122 = (torch.nn.functional.layer_norm(_to_copy_583,[256],arg252_1,arg253_1,1e-05),) ;  _to_copy_583 = arg252_1 = arg253_1 = None
        getitem_862 = native_layer_norm_default_122[0]
        split_with_sizes_default_20 = torch.split(arg255_1,[512,512]) ;  arg255_1 = None
        getitem_865 = split_with_sizes_default_20[0]
        getitem_866 = split_with_sizes_default_20[1];  split_with_sizes_default_20 = None
        split_with_sizes_default_21 = torch.split(arg256_1,[512,512,256]) ;  arg256_1 = None
        getitem_867 = split_with_sizes_default_21[0]
        getitem_868 = split_with_sizes_default_21[1]
        getitem_869 = split_with_sizes_default_21[2];  split_with_sizes_default_21 = None
        _to_copy_584 = getitem_865.to(dtype = torch.bfloat16) ;  getitem_865 = None
        _to_copy_585 = getitem_862.to(dtype = torch.bfloat16) 
        t_201 = _to_copy_584.t() ;  _to_copy_584 = None
        view_1005 = _to_copy_585.view(262144, 256) ;  _to_copy_585 = None
        mm_187 = torch.mm(view_1005,t_201) ;  view_1005 = t_201 = None
        view_1006 = mm_187.view(1, 512, 512, 512) ;  mm_187 = None
        _to_copy_586 = getitem_867.to(dtype = torch.bfloat16) ;  getitem_867 = None
        _to_copy_587 = getitem_862.to(dtype = torch.bfloat16) 
        t_202 = _to_copy_586.t() ;  _to_copy_586 = None
        view_1007 = _to_copy_587.view(262144, 256) ;  _to_copy_587 = None
        mm_188 = torch.mm(view_1007,t_202) ;  view_1007 = t_202 = None
        view_1008 = mm_188.view(1, 512, 512, 512) ;  mm_188 = None
        sigmoid_66 = torch.sigmoid(view_1008) ;  view_1008 = None
        mul_107 = torch.mul(view_1006,sigmoid_66) ;  view_1006 = sigmoid_66 = None
        unsqueeze_410 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_74 = torch.bitwise_not(unsqueeze_410) ;  unsqueeze_410 = None
        masked_fill_74 = mul_107.masked_fill(bitwise_not_74,0) ;  mul_107 = bitwise_not_74 = None
        split_tensor_83 = torch.split(masked_fill_74,256,dim = -1) 
        getitem_872 = split_tensor_83[0]
        unsqueeze_413 = torch.unsqueeze(getitem_872,4) ;  getitem_872 = None
        permute_612 = unsqueeze_413.permute(0, 1, 4, 3, 2) ;  unsqueeze_413 = None
        permute_613 = permute_612.permute(3, 1, 4, 0, 2) ;  permute_612 = None
        view_1011 = permute_613.view(256, 512, 512) ;  permute_613 = None
        split_tensor_84 = torch.split(masked_fill_74,256,dim = -1) ;  masked_fill_74 = None
        getitem_875 = split_tensor_84[1];  split_tensor_84 = None
        unsqueeze_414 = torch.unsqueeze(getitem_875,4) ;  getitem_875 = None
        permute_614 = unsqueeze_414.permute(0, 4, 1, 3, 2) ;  unsqueeze_414 = None
        permute_615 = permute_614.permute(3, 4, 0, 2, 1) ;  permute_614 = None
        view_1012 = permute_615.view(256, 512, 512) ;  permute_615 = None
        bmm_98 = torch.bmm(view_1011,view_1012) ;  view_1011 = view_1012 = None
        view_1013 = bmm_98.view(256, 512, 1, 1, 512) ;  bmm_98 = None
        permute_616 = view_1013.permute(3, 1, 4, 0, 2) ;  view_1013 = None
        view_1014 = permute_616.view(1, 512, 512, 256) ;  permute_616 = None
        _to_copy_588 = getitem_866.to(dtype = torch.bfloat16) ;  getitem_866 = None
        _to_copy_589 = getitem_862.to(dtype = torch.bfloat16) 
        t_203 = _to_copy_588.t() ;  _to_copy_588 = None
        view_1015 = _to_copy_589.view(262144, 256) ;  _to_copy_589 = None
        mm_189 = torch.mm(view_1015,t_203) ;  view_1015 = t_203 = None
        view_1016 = mm_189.view(1, 512, 512, 512) ;  mm_189 = None
        _to_copy_590 = getitem_868.to(dtype = torch.bfloat16) ;  getitem_868 = None
        _to_copy_591 = getitem_862.to(dtype = torch.bfloat16) 
        t_204 = _to_copy_590.t() ;  _to_copy_590 = None
        view_1017 = _to_copy_591.view(262144, 256) ;  _to_copy_591 = None
        mm_190 = torch.mm(view_1017,t_204) ;  view_1017 = t_204 = None
        view_1018 = mm_190.view(1, 512, 512, 512) ;  mm_190 = None
        sigmoid_67 = torch.sigmoid(view_1018) ;  view_1018 = None
        mul_108 = torch.mul(view_1016,sigmoid_67) ;  view_1016 = sigmoid_67 = None
        view_1019 = mul_108.view(262144, 512) ;  mul_108 = None
        view_1020 = view_1019.view(1, 512, 512, 512) ;  view_1019 = None
        transpose_20 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_415 = torch.unsqueeze(transpose_20,3) ;  transpose_20 = None
        clone_115 = torch.clone(unsqueeze_415,memory_format = torch.contiguous_format) ;  unsqueeze_415 = None
        bitwise_not_75 = torch.bitwise_not(clone_115) ;  clone_115 = None
        masked_fill_75 = view_1020.masked_fill(bitwise_not_75,0) ;  view_1020 = bitwise_not_75 = None
        view_1021 = masked_fill_75.view(262144, 512) ;  masked_fill_75 = None
        view_1025 = view_1021.view(1, 512, 512, 512) 
        split_tensor_85 = torch.split(view_1025,256,dim = -1) ;  view_1025 = None
        getitem_878 = split_tensor_85[0]
        unsqueeze_418 = torch.unsqueeze(getitem_878,4) ;  getitem_878 = None
        permute_621 = unsqueeze_418.permute(0, 2, 4, 3, 1) ;  unsqueeze_418 = None
        permute_622 = permute_621.permute(3, 1, 4, 0, 2) ;  permute_621 = None
        view_1026 = permute_622.view(256, 512, 512) ;  permute_622 = None
        view_1027 = view_1021.view(1, 512, 512, 512) ;  view_1021 = None
        split_tensor_86 = torch.split(view_1027,256,dim = -1) ;  view_1027 = None
        getitem_881 = split_tensor_86[1];  split_tensor_86 = None
        unsqueeze_419 = torch.unsqueeze(getitem_881,4) ;  getitem_881 = None
        permute_623 = unsqueeze_419.permute(0, 4, 2, 3, 1) ;  unsqueeze_419 = None
        permute_624 = permute_623.permute(3, 4, 0, 2, 1) ;  permute_623 = None
        view_1028 = permute_624.view(256, 512, 512) ;  permute_624 = None
        bmm_99 = torch.bmm(view_1026,view_1028) ;  view_1026 = view_1028 = None
        view_1029 = bmm_99.view(256, 512, 1, 1, 512) ;  bmm_99 = None
        permute_625 = view_1029.permute(3, 1, 4, 0, 2) ;  view_1029 = None
        view_1030 = permute_625.view(1, 512, 512, 256) ;  permute_625 = None
        _to_copy_592 = view_1014.to(dtype = torch.float32) ;  view_1014 = None
        native_layer_norm_default_123 = (torch.nn.functional.layer_norm(_to_copy_592,[256],None,None,1e-05),) ;  _to_copy_592 = None
        getitem_882 = native_layer_norm_default_123[0]
        _to_copy_593 = view_1030.to(dtype = torch.float32) ;  view_1030 = None
        native_layer_norm_default_124 = (torch.nn.functional.layer_norm(_to_copy_593,[256],None,None,1e-05),) ;  _to_copy_593 = None
        getitem_885 = native_layer_norm_default_124[0]
        add_88 = torch.add(getitem_882,getitem_885) ;  getitem_882 = getitem_885 = None
        _to_copy_594 = arg254_1.to(dtype = torch.bfloat16) ;  arg254_1 = None
        _to_copy_595 = add_88.to(dtype = torch.bfloat16) ;  add_88 = None
        t_205 = _to_copy_594.t() ;  _to_copy_594 = None
        view_1031 = _to_copy_595.view(262144, 256) ;  _to_copy_595 = None
        mm_191 = torch.mm(view_1031,t_205) ;  view_1031 = t_205 = None
        view_1032 = mm_191.view(1, 512, 512, 256) ;  mm_191 = None
        _to_copy_596 = getitem_869.to(dtype = torch.bfloat16) ;  getitem_869 = None
        _to_copy_597 = getitem_862.to(dtype = torch.bfloat16) ;  getitem_862 = None
        t_206 = _to_copy_596.t() ;  _to_copy_596 = None
        view_1033 = _to_copy_597.view(262144, 256) ;  _to_copy_597 = None
        mm_192 = torch.mm(view_1033,t_206) ;  view_1033 = t_206 = None
        view_1034 = mm_192.view(1, 512, 512, 256) ;  mm_192 = None
        sigmoid_68 = torch.sigmoid(view_1034) ;  view_1034 = None
        mul_109 = torch.mul(view_1032,sigmoid_68) ;  view_1032 = sigmoid_68 = None
        add_89 = torch.add(add_83,mul_109) ;  mul_109 = None
        _to_copy_598 = add_83.to(dtype = torch.float32) 
        native_layer_norm_default_125 = (torch.nn.functional.layer_norm(_to_copy_598,[256],None,None,1e-05),) ;  _to_copy_598 = None
        getitem_888 = native_layer_norm_default_125[0]
        _to_copy_599 = arg258_1.to(dtype = torch.bfloat16) ;  arg258_1 = None
        _to_copy_600 = getitem_888.to(dtype = torch.bfloat16) 
        t_207 = _to_copy_599.t() ;  _to_copy_599 = None
        view_1035 = _to_copy_600.view(262144, 256) ;  _to_copy_600 = None
        mm_193 = torch.mm(view_1035,t_207) ;  view_1035 = t_207 = None
        view_1036 = mm_193.view(1, 512, 512, 8) ;  mm_193 = None
        view_1037 = view_1036.view(1, 512, 512, 2, 4) ;  view_1036 = None
        permute_626 = view_1037.permute(0, 3, 4, 1, 2) ;  view_1037 = None
        view_1038 = permute_626.view(1, 2, 4, 1, 512, 512) ;  permute_626 = None
        view_1039 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_76 = torch.bitwise_not(view_1039) ;  view_1039 = None
        masked_fill_76 = view_1038.masked_fill(bitwise_not_76,-10000) ;  view_1038 = bitwise_not_76 = None
        view_1040 = masked_fill_76.view(1, 2, 4, 512, 512) ;  masked_fill_76 = None
        permute_627 = view_1040.permute(1, 0, 2, 3, 4) ;  view_1040 = None
        view_1041 = permute_627.view(2, 4, 1, 512, 512) ;  permute_627 = None
        _to_copy_601 = arg259_1.to(dtype = torch.bfloat16) ;  arg259_1 = None
        _to_copy_602 = getitem_888.to(dtype = torch.bfloat16) 
        t_208 = _to_copy_601.t() ;  _to_copy_601 = None
        view_1042 = _to_copy_602.view(262144, 256) ;  _to_copy_602 = None
        mm_194 = torch.mm(view_1042,t_208) ;  view_1042 = t_208 = None
        view_1043 = mm_194.view(1, 512, 512, 1024) ;  mm_194 = None
        select_21 = torch.select(view_1041,0,0) 
        view_1044 = view_1043.view(1, 512, 512, 4, 4, 64) ;  view_1043 = None
        permute_628 = view_1044.permute(4, 0, 3, 1, 2, 5) ;  view_1044 = None
        view_1045 = permute_628.view(4, 4, 512, 512, 64) ;  permute_628 = None
        unbind_int_52 = torch.unbind(view_1045) ;  view_1045 = None
        getitem_891 = unbind_int_52[0]
        getitem_892 = unbind_int_52[1]
        getitem_893 = unbind_int_52[2]
        getitem_894 = unbind_int_52[3];  unbind_int_52 = None
        expand_47 = select_21.expand(4, 512, 512, 512) ;  select_21 = None
        _scaled_dot_product_efficient_attention_default_24 = (torch.nn.functional.scaled_dot_product_attention(getitem_891,getitem_892,getitem_893,expand_47,False),) ;  getitem_891 = getitem_892 = getitem_893 = expand_47 = None
        getitem_895 = _scaled_dot_product_efficient_attention_default_24[0]
        sigmoid_69 = torch.sigmoid(getitem_894) ;  getitem_894 = None
        mul_110 = torch.mul(getitem_895,sigmoid_69) ;  getitem_895 = sigmoid_69 = None
        view_1046 = mul_110.view(1, 4, 512, 512, 64) ;  mul_110 = None
        permute_629 = view_1046.permute(0, 2, 3, 1, 4) ;  view_1046 = None
        clone_116 = torch.clone(permute_629,memory_format = torch.contiguous_format) ;  permute_629 = None
        _unsafe_view_104 = clone_116.view(1, 512, 512, 256) ;  clone_116 = None
        transpose_21 = torch.transpose(getitem_888,1,2) ;  getitem_888 = None
        _to_copy_603 = arg260_1.to(dtype = torch.bfloat16) ;  arg260_1 = None
        _to_copy_604 = transpose_21.to(dtype = torch.bfloat16) ;  transpose_21 = None
        t_209 = _to_copy_603.t() ;  _to_copy_603 = None
        expand_48 = _to_copy_604.expand(1, 512, 512, 256) ;  _to_copy_604 = None
        view_1047 = expand_48.view(512, 512, 256) ;  expand_48 = None
        expand_49 = t_209.expand(1, 512, 256, 1024) ;  t_209 = None
        view_1048 = expand_49.view(512, 256, 1024) ;  expand_49 = None
        bmm_100 = torch.bmm(view_1047,view_1048) ;  view_1047 = view_1048 = None
        view_1049 = bmm_100.view(1, 512, 512, 1024) ;  bmm_100 = None
        select_22 = torch.select(view_1041,0,1) ;  view_1041 = None
        view_1050 = view_1049.view(1, 512, 512, 4, 4, 64) ;  view_1049 = None
        permute_630 = view_1050.permute(4, 0, 3, 1, 2, 5) ;  view_1050 = None
        view_1051 = permute_630.view(4, 4, 512, 512, 64) ;  permute_630 = None
        unbind_int_53 = torch.unbind(view_1051) ;  view_1051 = None
        getitem_899 = unbind_int_53[0]
        getitem_900 = unbind_int_53[1]
        getitem_901 = unbind_int_53[2]
        getitem_902 = unbind_int_53[3];  unbind_int_53 = None
        expand_50 = select_22.expand(4, 512, 512, 512) ;  select_22 = None
        _scaled_dot_product_efficient_attention_default_25 = (torch.nn.functional.scaled_dot_product_attention(getitem_899,getitem_900,getitem_901,expand_50,False),) ;  getitem_899 = getitem_900 = getitem_901 = expand_50 = None
        getitem_903 = _scaled_dot_product_efficient_attention_default_25[0]
        sigmoid_70 = torch.sigmoid(getitem_902) ;  getitem_902 = None
        mul_111 = torch.mul(getitem_903,sigmoid_70) ;  getitem_903 = sigmoid_70 = None
        view_1052 = mul_111.view(1, 4, 512, 512, 64) ;  mul_111 = None
        permute_631 = view_1052.permute(0, 2, 3, 1, 4) ;  view_1052 = None
        clone_117 = torch.clone(permute_631,memory_format = torch.contiguous_format) ;  permute_631 = None
        _unsafe_view_105 = clone_117.view(1, 512, 512, 256) ;  clone_117 = None
        cat_16 = torch.cat([_unsafe_view_104,_unsafe_view_105],dim = -1) ;  _unsafe_view_104 = _unsafe_view_105 = None
        slice_209 = arg257_1[0:] ;  arg257_1 = None
        unsqueeze_420 = torch.unsqueeze(slice_209,1) ;  slice_209 = None
        mul_112 = torch.mul(arg261_1,unsqueeze_420) ;  arg261_1 = unsqueeze_420 = None
        _to_copy_605 = mul_112.to(dtype = torch.bfloat16) ;  mul_112 = None
        t_210 = _to_copy_605.t() ;  _to_copy_605 = None
        view_1053 = cat_16.view(262144, 512) ;  cat_16 = None
        mm_195 = torch.mm(view_1053,t_210) ;  view_1053 = t_210 = None
        view_1054 = mm_195.view(1, 512, 512, 256) ;  mm_195 = None
        add_90 = torch.add(add_89,view_1054) ;  add_89 = view_1054 = None
        split_tensor_87 = torch.split(add_83,512,dim = -2) 
        getitem_907 = split_tensor_87[0];  split_tensor_87 = None
        _to_copy_606 = getitem_907.to(dtype = torch.float32) ;  getitem_907 = None
        native_layer_norm_default_126 = (torch.nn.functional.layer_norm(_to_copy_606,[256],arg248_1,arg249_1,1e-05),) ;  _to_copy_606 = arg248_1 = arg249_1 = None
        getitem_908 = native_layer_norm_default_126[0]
        _to_copy_607 = arg250_1.to(dtype = torch.bfloat16) ;  arg250_1 = None
        _to_copy_608 = getitem_908.to(dtype = torch.bfloat16) ;  getitem_908 = None
        t_211 = _to_copy_607.t() ;  _to_copy_607 = None
        view_1055 = _to_copy_608.view(262144, 256) ;  _to_copy_608 = None
        mm_196 = torch.mm(view_1055,t_211) ;  view_1055 = t_211 = None
        view_1056 = mm_196.view(1, 512, 512, 1024) ;  mm_196 = None
        split_tensor_88 = torch.split(view_1056,512,dim = -1) ;  view_1056 = None
        getitem_911 = split_tensor_88[0]
        getitem_912 = split_tensor_88[1];  split_tensor_88 = None
        silu_26 = torch.nn.functional.silu(getitem_911) ;  getitem_911 = None
        mul_113 = torch.mul(silu_26,getitem_912) ;  silu_26 = getitem_912 = None
        _to_copy_609 = arg251_1.to(dtype = torch.bfloat16) ;  arg251_1 = None
        t_212 = _to_copy_609.t() ;  _to_copy_609 = None
        view_1058 = mul_113.view(262144, 512) ;  mul_113 = None
        mm_197 = torch.mm(view_1058,t_212) ;  view_1058 = t_212 = None
        view_1059 = mm_197.view(1, 512, 512, 256) ;  mm_197 = None
        add_91 = torch.add(add_90,view_1059) ;  add_90 = view_1059 = None
        _to_copy_610 = add_87.to(dtype = torch.float32) 
        native_layer_norm_default_127 = (torch.nn.functional.layer_norm(_to_copy_610,[384],arg266_1,arg267_1,1e-05),) ;  _to_copy_610 = arg266_1 = arg267_1 = None
        getitem_913 = native_layer_norm_default_127[0]
        _to_copy_611 = add_83.to(dtype = torch.float32) ;  add_83 = None
        native_layer_norm_default_128 = (torch.nn.functional.layer_norm(_to_copy_611,[256],arg268_1,arg269_1,1e-05),) ;  _to_copy_611 = arg268_1 = arg269_1 = None
        getitem_916 = native_layer_norm_default_128[0]
        _to_copy_612 = arg270_1.to(dtype = torch.bfloat16) ;  arg270_1 = None
        _to_copy_613 = getitem_916.to(dtype = torch.bfloat16) ;  getitem_916 = None
        t_213 = _to_copy_612.t() ;  _to_copy_612 = None
        view_1060 = _to_copy_613.view(262144, 256) ;  _to_copy_613 = None
        mm_198 = torch.mm(view_1060,t_213) ;  view_1060 = t_213 = None
        view_1061 = mm_198.view(1, 512, 512, 16) ;  mm_198 = None
        permute_632 = view_1061.permute(0, 3, 1, 2) ;  view_1061 = None
        view_1062 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_77 = torch.bitwise_not(view_1062) ;  view_1062 = None
        masked_fill_77 = permute_632.masked_fill(bitwise_not_77,-10000) ;  permute_632 = bitwise_not_77 = None
        _to_copy_614 = getitem_913.to(dtype = torch.bfloat16) ;  getitem_913 = None
        _to_copy_615 = arg272_1.to(dtype = torch.bfloat16) ;  arg272_1 = None
        unsqueeze_421 = torch.unsqueeze(_to_copy_614,3) ;  _to_copy_614 = None
        unsqueeze_422 = torch.unsqueeze(unsqueeze_421,4) ;  unsqueeze_421 = None
        unsqueeze_423 = torch.unsqueeze(unsqueeze_422,5) ;  unsqueeze_422 = None
        permute_633 = unsqueeze_423.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_423 = None
        unsqueeze_424 = torch.unsqueeze(_to_copy_615,4) ;  _to_copy_615 = None
        unsqueeze_425 = torch.unsqueeze(unsqueeze_424,5) ;  unsqueeze_424 = None
        permute_634 = unsqueeze_425.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_425 = None
        permute_635 = permute_633.permute(3, 5, 0, 1, 2, 4) ;  permute_633 = None
        view_1063 = permute_635.view(1, 512, 384) ;  permute_635 = None
        permute_636 = permute_634.permute(5, 0, 1, 2, 4, 3) ;  permute_634 = None
        view_1064 = permute_636.view(1, 384, 1536) ;  permute_636 = None
        bmm_101 = torch.bmm(view_1063,view_1064) ;  view_1063 = view_1064 = None
        view_1065 = bmm_101.view(512, 1, 4, 1, 16, 24) ;  bmm_101 = None
        permute_637 = view_1065.permute(2, 3, 4, 0, 5, 1) ;  view_1065 = None
        view_1066 = permute_637.view(4, 1, 16, 512, 24) ;  permute_637 = None
        unbind_int_54 = torch.unbind(view_1066) ;  view_1066 = None
        getitem_919 = unbind_int_54[0]
        getitem_920 = unbind_int_54[1]
        getitem_921 = unbind_int_54[2]
        getitem_922 = unbind_int_54[3];  unbind_int_54 = None
        view_1067 = arg271_1.view(1, 16, 1, 24) ;  arg271_1 = None
        add_92 = torch.add(getitem_919,view_1067) ;  getitem_919 = view_1067 = None
        _to_copy_616 = add_92.to(dtype = torch.bfloat16) ;  add_92 = None
        expand_51 = masked_fill_77.expand(1, 16, 512, 512) ;  masked_fill_77 = None
        _scaled_dot_product_efficient_attention_default_26 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_616,getitem_920,getitem_921,expand_51,False),) ;  _to_copy_616 = getitem_920 = getitem_921 = expand_51 = None
        getitem_923 = _scaled_dot_product_efficient_attention_default_26[0]
        add_93 = torch.add(getitem_922,1) ;  getitem_922 = None
        sigmoid_71 = torch.sigmoid(add_93) ;  add_93 = None
        mul_114 = torch.mul(getitem_923,sigmoid_71) ;  getitem_923 = sigmoid_71 = None
        _to_copy_617 = arg273_1.to(dtype = torch.bfloat16) ;  arg273_1 = None
        unsqueeze_426 = torch.unsqueeze(mul_114,4) ;  mul_114 = None
        permute_638 = unsqueeze_426.permute(0, 2, 4, 3, 1) ;  unsqueeze_426 = None
        unsqueeze_427 = torch.unsqueeze(_to_copy_617,3) ;  _to_copy_617 = None
        unsqueeze_428 = torch.unsqueeze(unsqueeze_427,4) ;  unsqueeze_427 = None
        permute_639 = unsqueeze_428.permute(3, 4, 2, 1, 0) ;  unsqueeze_428 = None
        permute_640 = permute_638.permute(1, 3, 4, 0, 2) ;  permute_638 = None
        clone_118 = torch.clone(permute_640,memory_format = torch.contiguous_format) ;  permute_640 = None
        _unsafe_view_106 = clone_118.view(1, 512, 384) ;  clone_118 = None
        permute_641 = permute_639.permute(3, 4, 0, 2, 1) ;  permute_639 = None
        clone_119 = torch.clone(permute_641,memory_format = torch.contiguous_format) ;  permute_641 = None
        _unsafe_view_107 = clone_119.view(1, 384, 384) ;  clone_119 = None
        bmm_102 = torch.bmm(_unsafe_view_106,_unsafe_view_107) ;  _unsafe_view_106 = _unsafe_view_107 = None
        view_1068 = bmm_102.view(512, 1, 1, 1, 384) ;  bmm_102 = None
        permute_642 = view_1068.permute(3, 0, 4, 1, 2) ;  view_1068 = None
        view_1069 = permute_642.view(1, 512, 384) ;  permute_642 = None
        unsqueeze_429 = torch.unsqueeze(arg1406_1,-1) 
        mul_115 = torch.mul(view_1069,unsqueeze_429) ;  view_1069 = unsqueeze_429 = None
        add_94 = torch.add(add_87,mul_115) ;  mul_115 = None
        split_tensor_89 = torch.split(add_87,512,dim = -2) ;  add_87 = None
        getitem_927 = split_tensor_89[0];  split_tensor_89 = None
        _to_copy_618 = getitem_927.to(dtype = torch.float32) ;  getitem_927 = None
        native_layer_norm_default_129 = (torch.nn.functional.layer_norm(_to_copy_618,[384],arg262_1,arg263_1,1e-05),) ;  _to_copy_618 = arg262_1 = arg263_1 = None
        getitem_928 = native_layer_norm_default_129[0]
        _to_copy_619 = arg264_1.to(dtype = torch.bfloat16) ;  arg264_1 = None
        _to_copy_620 = getitem_928.to(dtype = torch.bfloat16) ;  getitem_928 = None
        t_214 = _to_copy_619.t() ;  _to_copy_619 = None
        view_1070 = _to_copy_620.view(512, 384) ;  _to_copy_620 = None
        mm_199 = torch.mm(view_1070,t_214) ;  view_1070 = t_214 = None
        view_1071 = mm_199.view(1, 512, 1536) ;  mm_199 = None
        split_tensor_90 = torch.split(view_1071,768,dim = -1) ;  view_1071 = None
        getitem_931 = split_tensor_90[0]
        getitem_932 = split_tensor_90[1];  split_tensor_90 = None
        silu_27 = torch.nn.functional.silu(getitem_931) ;  getitem_931 = None
        mul_116 = torch.mul(silu_27,getitem_932) ;  silu_27 = getitem_932 = None
        _to_copy_621 = arg265_1.to(dtype = torch.bfloat16) ;  arg265_1 = None
        t_215 = _to_copy_621.t() ;  _to_copy_621 = None
        view_1073 = mul_116.view(512, 768) ;  mul_116 = None
        mm_200 = torch.mm(view_1073,t_215) ;  view_1073 = t_215 = None
        view_1074 = mm_200.view(1, 512, 384) ;  mm_200 = None
        add_95 = torch.add(add_94,view_1074) ;  add_94 = view_1074 = None
        _to_copy_622 = add_91.to(dtype = torch.float32) 
        native_layer_norm_default_130 = (torch.nn.functional.layer_norm(_to_copy_622,[256],arg278_1,arg279_1,1e-05),) ;  _to_copy_622 = arg278_1 = arg279_1 = None
        getitem_933 = native_layer_norm_default_130[0]
        split_with_sizes_default_22 = torch.split(arg281_1,[512,512]) ;  arg281_1 = None
        getitem_936 = split_with_sizes_default_22[0]
        getitem_937 = split_with_sizes_default_22[1];  split_with_sizes_default_22 = None
        split_with_sizes_default_23 = torch.split(arg282_1,[512,512,256]) ;  arg282_1 = None
        getitem_938 = split_with_sizes_default_23[0]
        getitem_939 = split_with_sizes_default_23[1]
        getitem_940 = split_with_sizes_default_23[2];  split_with_sizes_default_23 = None
        _to_copy_623 = getitem_936.to(dtype = torch.bfloat16) ;  getitem_936 = None
        _to_copy_624 = getitem_933.to(dtype = torch.bfloat16) 
        t_216 = _to_copy_623.t() ;  _to_copy_623 = None
        view_1075 = _to_copy_624.view(262144, 256) ;  _to_copy_624 = None
        mm_201 = torch.mm(view_1075,t_216) ;  view_1075 = t_216 = None
        view_1076 = mm_201.view(1, 512, 512, 512) ;  mm_201 = None
        _to_copy_625 = getitem_938.to(dtype = torch.bfloat16) ;  getitem_938 = None
        _to_copy_626 = getitem_933.to(dtype = torch.bfloat16) 
        t_217 = _to_copy_625.t() ;  _to_copy_625 = None
        view_1077 = _to_copy_626.view(262144, 256) ;  _to_copy_626 = None
        mm_202 = torch.mm(view_1077,t_217) ;  view_1077 = t_217 = None
        view_1078 = mm_202.view(1, 512, 512, 512) ;  mm_202 = None
        sigmoid_72 = torch.sigmoid(view_1078) ;  view_1078 = None
        mul_117 = torch.mul(view_1076,sigmoid_72) ;  view_1076 = sigmoid_72 = None
        unsqueeze_430 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_78 = torch.bitwise_not(unsqueeze_430) ;  unsqueeze_430 = None
        masked_fill_78 = mul_117.masked_fill(bitwise_not_78,0) ;  mul_117 = bitwise_not_78 = None
        split_tensor_91 = torch.split(masked_fill_78,256,dim = -1) 
        getitem_943 = split_tensor_91[0]
        unsqueeze_433 = torch.unsqueeze(getitem_943,4) ;  getitem_943 = None
        permute_647 = unsqueeze_433.permute(0, 1, 4, 3, 2) ;  unsqueeze_433 = None
        permute_648 = permute_647.permute(3, 1, 4, 0, 2) ;  permute_647 = None
        view_1081 = permute_648.view(256, 512, 512) ;  permute_648 = None
        split_tensor_92 = torch.split(masked_fill_78,256,dim = -1) ;  masked_fill_78 = None
        getitem_946 = split_tensor_92[1];  split_tensor_92 = None
        unsqueeze_434 = torch.unsqueeze(getitem_946,4) ;  getitem_946 = None
        permute_649 = unsqueeze_434.permute(0, 4, 1, 3, 2) ;  unsqueeze_434 = None
        permute_650 = permute_649.permute(3, 4, 0, 2, 1) ;  permute_649 = None
        view_1082 = permute_650.view(256, 512, 512) ;  permute_650 = None
        bmm_103 = torch.bmm(view_1081,view_1082) ;  view_1081 = view_1082 = None
        view_1083 = bmm_103.view(256, 512, 1, 1, 512) ;  bmm_103 = None
        permute_651 = view_1083.permute(3, 1, 4, 0, 2) ;  view_1083 = None
        view_1084 = permute_651.view(1, 512, 512, 256) ;  permute_651 = None
        _to_copy_627 = getitem_937.to(dtype = torch.bfloat16) ;  getitem_937 = None
        _to_copy_628 = getitem_933.to(dtype = torch.bfloat16) 
        t_218 = _to_copy_627.t() ;  _to_copy_627 = None
        view_1085 = _to_copy_628.view(262144, 256) ;  _to_copy_628 = None
        mm_203 = torch.mm(view_1085,t_218) ;  view_1085 = t_218 = None
        view_1086 = mm_203.view(1, 512, 512, 512) ;  mm_203 = None
        _to_copy_629 = getitem_939.to(dtype = torch.bfloat16) ;  getitem_939 = None
        _to_copy_630 = getitem_933.to(dtype = torch.bfloat16) 
        t_219 = _to_copy_629.t() ;  _to_copy_629 = None
        view_1087 = _to_copy_630.view(262144, 256) ;  _to_copy_630 = None
        mm_204 = torch.mm(view_1087,t_219) ;  view_1087 = t_219 = None
        view_1088 = mm_204.view(1, 512, 512, 512) ;  mm_204 = None
        sigmoid_73 = torch.sigmoid(view_1088) ;  view_1088 = None
        mul_118 = torch.mul(view_1086,sigmoid_73) ;  view_1086 = sigmoid_73 = None
        view_1089 = mul_118.view(262144, 512) ;  mul_118 = None
        view_1090 = view_1089.view(1, 512, 512, 512) ;  view_1089 = None
        transpose_22 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_435 = torch.unsqueeze(transpose_22,3) ;  transpose_22 = None
        clone_120 = torch.clone(unsqueeze_435,memory_format = torch.contiguous_format) ;  unsqueeze_435 = None
        bitwise_not_79 = torch.bitwise_not(clone_120) ;  clone_120 = None
        masked_fill_79 = view_1090.masked_fill(bitwise_not_79,0) ;  view_1090 = bitwise_not_79 = None
        view_1091 = masked_fill_79.view(262144, 512) ;  masked_fill_79 = None
        view_1095 = view_1091.view(1, 512, 512, 512) 
        split_tensor_93 = torch.split(view_1095,256,dim = -1) ;  view_1095 = None
        getitem_949 = split_tensor_93[0]
        unsqueeze_438 = torch.unsqueeze(getitem_949,4) ;  getitem_949 = None
        permute_656 = unsqueeze_438.permute(0, 2, 4, 3, 1) ;  unsqueeze_438 = None
        permute_657 = permute_656.permute(3, 1, 4, 0, 2) ;  permute_656 = None
        view_1096 = permute_657.view(256, 512, 512) ;  permute_657 = None
        view_1097 = view_1091.view(1, 512, 512, 512) ;  view_1091 = None
        split_tensor_94 = torch.split(view_1097,256,dim = -1) ;  view_1097 = None
        getitem_952 = split_tensor_94[1];  split_tensor_94 = None
        unsqueeze_439 = torch.unsqueeze(getitem_952,4) ;  getitem_952 = None
        permute_658 = unsqueeze_439.permute(0, 4, 2, 3, 1) ;  unsqueeze_439 = None
        permute_659 = permute_658.permute(3, 4, 0, 2, 1) ;  permute_658 = None
        view_1098 = permute_659.view(256, 512, 512) ;  permute_659 = None
        bmm_104 = torch.bmm(view_1096,view_1098) ;  view_1096 = view_1098 = None
        view_1099 = bmm_104.view(256, 512, 1, 1, 512) ;  bmm_104 = None
        permute_660 = view_1099.permute(3, 1, 4, 0, 2) ;  view_1099 = None
        view_1100 = permute_660.view(1, 512, 512, 256) ;  permute_660 = None
        _to_copy_631 = view_1084.to(dtype = torch.float32) ;  view_1084 = None
        native_layer_norm_default_131 = (torch.nn.functional.layer_norm(_to_copy_631,[256],None,None,1e-05),) ;  _to_copy_631 = None
        getitem_953 = native_layer_norm_default_131[0]
        _to_copy_632 = view_1100.to(dtype = torch.float32) ;  view_1100 = None
        native_layer_norm_default_132 = (torch.nn.functional.layer_norm(_to_copy_632,[256],None,None,1e-05),) ;  _to_copy_632 = None
        getitem_956 = native_layer_norm_default_132[0]
        add_96 = torch.add(getitem_953,getitem_956) ;  getitem_953 = getitem_956 = None
        _to_copy_633 = arg280_1.to(dtype = torch.bfloat16) ;  arg280_1 = None
        _to_copy_634 = add_96.to(dtype = torch.bfloat16) ;  add_96 = None
        t_220 = _to_copy_633.t() ;  _to_copy_633 = None
        view_1101 = _to_copy_634.view(262144, 256) ;  _to_copy_634 = None
        mm_205 = torch.mm(view_1101,t_220) ;  view_1101 = t_220 = None
        view_1102 = mm_205.view(1, 512, 512, 256) ;  mm_205 = None
        _to_copy_635 = getitem_940.to(dtype = torch.bfloat16) ;  getitem_940 = None
        _to_copy_636 = getitem_933.to(dtype = torch.bfloat16) ;  getitem_933 = None
        t_221 = _to_copy_635.t() ;  _to_copy_635 = None
        view_1103 = _to_copy_636.view(262144, 256) ;  _to_copy_636 = None
        mm_206 = torch.mm(view_1103,t_221) ;  view_1103 = t_221 = None
        view_1104 = mm_206.view(1, 512, 512, 256) ;  mm_206 = None
        sigmoid_74 = torch.sigmoid(view_1104) ;  view_1104 = None
        mul_119 = torch.mul(view_1102,sigmoid_74) ;  view_1102 = sigmoid_74 = None
        add_97 = torch.add(add_91,mul_119) ;  mul_119 = None
        _to_copy_637 = add_91.to(dtype = torch.float32) 
        native_layer_norm_default_133 = (torch.nn.functional.layer_norm(_to_copy_637,[256],None,None,1e-05),) ;  _to_copy_637 = None
        getitem_959 = native_layer_norm_default_133[0]
        _to_copy_638 = arg284_1.to(dtype = torch.bfloat16) ;  arg284_1 = None
        _to_copy_639 = getitem_959.to(dtype = torch.bfloat16) 
        t_222 = _to_copy_638.t() ;  _to_copy_638 = None
        view_1105 = _to_copy_639.view(262144, 256) ;  _to_copy_639 = None
        mm_207 = torch.mm(view_1105,t_222) ;  view_1105 = t_222 = None
        view_1106 = mm_207.view(1, 512, 512, 8) ;  mm_207 = None
        view_1107 = view_1106.view(1, 512, 512, 2, 4) ;  view_1106 = None
        permute_661 = view_1107.permute(0, 3, 4, 1, 2) ;  view_1107 = None
        view_1108 = permute_661.view(1, 2, 4, 1, 512, 512) ;  permute_661 = None
        view_1109 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_80 = torch.bitwise_not(view_1109) ;  view_1109 = None
        masked_fill_80 = view_1108.masked_fill(bitwise_not_80,-10000) ;  view_1108 = bitwise_not_80 = None
        view_1110 = masked_fill_80.view(1, 2, 4, 512, 512) ;  masked_fill_80 = None
        permute_662 = view_1110.permute(1, 0, 2, 3, 4) ;  view_1110 = None
        view_1111 = permute_662.view(2, 4, 1, 512, 512) ;  permute_662 = None
        _to_copy_640 = arg285_1.to(dtype = torch.bfloat16) ;  arg285_1 = None
        _to_copy_641 = getitem_959.to(dtype = torch.bfloat16) 
        t_223 = _to_copy_640.t() ;  _to_copy_640 = None
        view_1112 = _to_copy_641.view(262144, 256) ;  _to_copy_641 = None
        mm_208 = torch.mm(view_1112,t_223) ;  view_1112 = t_223 = None
        view_1113 = mm_208.view(1, 512, 512, 1024) ;  mm_208 = None
        select_23 = torch.select(view_1111,0,0) 
        view_1114 = view_1113.view(1, 512, 512, 4, 4, 64) ;  view_1113 = None
        permute_663 = view_1114.permute(4, 0, 3, 1, 2, 5) ;  view_1114 = None
        view_1115 = permute_663.view(4, 4, 512, 512, 64) ;  permute_663 = None
        unbind_int_55 = torch.unbind(view_1115) ;  view_1115 = None
        getitem_962 = unbind_int_55[0]
        getitem_963 = unbind_int_55[1]
        getitem_964 = unbind_int_55[2]
        getitem_965 = unbind_int_55[3];  unbind_int_55 = None
        expand_52 = select_23.expand(4, 512, 512, 512) ;  select_23 = None
        _scaled_dot_product_efficient_attention_default_27 = (torch.nn.functional.scaled_dot_product_attention(getitem_962,getitem_963,getitem_964,expand_52,False),) ;  getitem_962 = getitem_963 = getitem_964 = expand_52 = None
        getitem_966 = _scaled_dot_product_efficient_attention_default_27[0]
        sigmoid_75 = torch.sigmoid(getitem_965) ;  getitem_965 = None
        mul_120 = torch.mul(getitem_966,sigmoid_75) ;  getitem_966 = sigmoid_75 = None
        view_1116 = mul_120.view(1, 4, 512, 512, 64) ;  mul_120 = None
        permute_664 = view_1116.permute(0, 2, 3, 1, 4) ;  view_1116 = None
        clone_121 = torch.clone(permute_664,memory_format = torch.contiguous_format) ;  permute_664 = None
        _unsafe_view_108 = clone_121.view(1, 512, 512, 256) ;  clone_121 = None
        transpose_23 = torch.transpose(getitem_959,1,2) ;  getitem_959 = None
        _to_copy_642 = arg286_1.to(dtype = torch.bfloat16) ;  arg286_1 = None
        _to_copy_643 = transpose_23.to(dtype = torch.bfloat16) ;  transpose_23 = None
        t_224 = _to_copy_642.t() ;  _to_copy_642 = None
        expand_53 = _to_copy_643.expand(1, 512, 512, 256) ;  _to_copy_643 = None
        view_1117 = expand_53.view(512, 512, 256) ;  expand_53 = None
        expand_54 = t_224.expand(1, 512, 256, 1024) ;  t_224 = None
        view_1118 = expand_54.view(512, 256, 1024) ;  expand_54 = None
        bmm_105 = torch.bmm(view_1117,view_1118) ;  view_1117 = view_1118 = None
        view_1119 = bmm_105.view(1, 512, 512, 1024) ;  bmm_105 = None
        select_24 = torch.select(view_1111,0,1) ;  view_1111 = None
        view_1120 = view_1119.view(1, 512, 512, 4, 4, 64) ;  view_1119 = None
        permute_665 = view_1120.permute(4, 0, 3, 1, 2, 5) ;  view_1120 = None
        view_1121 = permute_665.view(4, 4, 512, 512, 64) ;  permute_665 = None
        unbind_int_56 = torch.unbind(view_1121) ;  view_1121 = None
        getitem_970 = unbind_int_56[0]
        getitem_971 = unbind_int_56[1]
        getitem_972 = unbind_int_56[2]
        getitem_973 = unbind_int_56[3];  unbind_int_56 = None
        expand_55 = select_24.expand(4, 512, 512, 512) ;  select_24 = None
        _scaled_dot_product_efficient_attention_default_28 = (torch.nn.functional.scaled_dot_product_attention(getitem_970,getitem_971,getitem_972,expand_55,False),) ;  getitem_970 = getitem_971 = getitem_972 = expand_55 = None
        getitem_974 = _scaled_dot_product_efficient_attention_default_28[0]
        sigmoid_76 = torch.sigmoid(getitem_973) ;  getitem_973 = None
        mul_121 = torch.mul(getitem_974,sigmoid_76) ;  getitem_974 = sigmoid_76 = None
        view_1122 = mul_121.view(1, 4, 512, 512, 64) ;  mul_121 = None
        permute_666 = view_1122.permute(0, 2, 3, 1, 4) ;  view_1122 = None
        clone_122 = torch.clone(permute_666,memory_format = torch.contiguous_format) ;  permute_666 = None
        _unsafe_view_109 = clone_122.view(1, 512, 512, 256) ;  clone_122 = None
        cat_17 = torch.cat([_unsafe_view_108,_unsafe_view_109],dim = -1) ;  _unsafe_view_108 = _unsafe_view_109 = None
        slice_210 = arg283_1[0:] ;  arg283_1 = None
        unsqueeze_440 = torch.unsqueeze(slice_210,1) ;  slice_210 = None
        mul_122 = torch.mul(arg287_1,unsqueeze_440) ;  arg287_1 = unsqueeze_440 = None
        _to_copy_644 = mul_122.to(dtype = torch.bfloat16) ;  mul_122 = None
        t_225 = _to_copy_644.t() ;  _to_copy_644 = None
        view_1123 = cat_17.view(262144, 512) ;  cat_17 = None
        mm_209 = torch.mm(view_1123,t_225) ;  view_1123 = t_225 = None
        view_1124 = mm_209.view(1, 512, 512, 256) ;  mm_209 = None
        add_98 = torch.add(add_97,view_1124) ;  add_97 = view_1124 = None
        split_tensor_95 = torch.split(add_91,512,dim = -2) 
        getitem_978 = split_tensor_95[0];  split_tensor_95 = None
        _to_copy_645 = getitem_978.to(dtype = torch.float32) ;  getitem_978 = None
        native_layer_norm_default_134 = (torch.nn.functional.layer_norm(_to_copy_645,[256],arg274_1,arg275_1,1e-05),) ;  _to_copy_645 = arg274_1 = arg275_1 = None
        getitem_979 = native_layer_norm_default_134[0]
        _to_copy_646 = arg276_1.to(dtype = torch.bfloat16) ;  arg276_1 = None
        _to_copy_647 = getitem_979.to(dtype = torch.bfloat16) ;  getitem_979 = None
        t_226 = _to_copy_646.t() ;  _to_copy_646 = None
        view_1125 = _to_copy_647.view(262144, 256) ;  _to_copy_647 = None
        mm_210 = torch.mm(view_1125,t_226) ;  view_1125 = t_226 = None
        view_1126 = mm_210.view(1, 512, 512, 1024) ;  mm_210 = None
        split_tensor_96 = torch.split(view_1126,512,dim = -1) ;  view_1126 = None
        getitem_982 = split_tensor_96[0]
        getitem_983 = split_tensor_96[1];  split_tensor_96 = None
        silu_28 = torch.nn.functional.silu(getitem_982) ;  getitem_982 = None
        mul_123 = torch.mul(silu_28,getitem_983) ;  silu_28 = getitem_983 = None
        _to_copy_648 = arg277_1.to(dtype = torch.bfloat16) ;  arg277_1 = None
        t_227 = _to_copy_648.t() ;  _to_copy_648 = None
        view_1128 = mul_123.view(262144, 512) ;  mul_123 = None
        mm_211 = torch.mm(view_1128,t_227) ;  view_1128 = t_227 = None
        view_1129 = mm_211.view(1, 512, 512, 256) ;  mm_211 = None
        add_99 = torch.add(add_98,view_1129) ;  add_98 = view_1129 = None
        _to_copy_649 = add_95.to(dtype = torch.float32) 
        native_layer_norm_default_135 = (torch.nn.functional.layer_norm(_to_copy_649,[384],arg292_1,arg293_1,1e-05),) ;  _to_copy_649 = arg292_1 = arg293_1 = None
        getitem_984 = native_layer_norm_default_135[0]
        _to_copy_650 = add_91.to(dtype = torch.float32) ;  add_91 = None
        native_layer_norm_default_136 = (torch.nn.functional.layer_norm(_to_copy_650,[256],arg294_1,arg295_1,1e-05),) ;  _to_copy_650 = arg294_1 = arg295_1 = None
        getitem_987 = native_layer_norm_default_136[0]
        _to_copy_651 = arg296_1.to(dtype = torch.bfloat16) ;  arg296_1 = None
        _to_copy_652 = getitem_987.to(dtype = torch.bfloat16) ;  getitem_987 = None
        t_228 = _to_copy_651.t() ;  _to_copy_651 = None
        view_1130 = _to_copy_652.view(262144, 256) ;  _to_copy_652 = None
        mm_212 = torch.mm(view_1130,t_228) ;  view_1130 = t_228 = None
        view_1131 = mm_212.view(1, 512, 512, 16) ;  mm_212 = None
        permute_667 = view_1131.permute(0, 3, 1, 2) ;  view_1131 = None
        view_1132 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_81 = torch.bitwise_not(view_1132) ;  view_1132 = None
        masked_fill_81 = permute_667.masked_fill(bitwise_not_81,-10000) ;  permute_667 = bitwise_not_81 = None
        _to_copy_653 = getitem_984.to(dtype = torch.bfloat16) ;  getitem_984 = None
        _to_copy_654 = arg298_1.to(dtype = torch.bfloat16) ;  arg298_1 = None
        unsqueeze_441 = torch.unsqueeze(_to_copy_653,3) ;  _to_copy_653 = None
        unsqueeze_442 = torch.unsqueeze(unsqueeze_441,4) ;  unsqueeze_441 = None
        unsqueeze_443 = torch.unsqueeze(unsqueeze_442,5) ;  unsqueeze_442 = None
        permute_668 = unsqueeze_443.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_443 = None
        unsqueeze_444 = torch.unsqueeze(_to_copy_654,4) ;  _to_copy_654 = None
        unsqueeze_445 = torch.unsqueeze(unsqueeze_444,5) ;  unsqueeze_444 = None
        permute_669 = unsqueeze_445.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_445 = None
        permute_670 = permute_668.permute(3, 5, 0, 1, 2, 4) ;  permute_668 = None
        view_1133 = permute_670.view(1, 512, 384) ;  permute_670 = None
        permute_671 = permute_669.permute(5, 0, 1, 2, 4, 3) ;  permute_669 = None
        view_1134 = permute_671.view(1, 384, 1536) ;  permute_671 = None
        bmm_106 = torch.bmm(view_1133,view_1134) ;  view_1133 = view_1134 = None
        view_1135 = bmm_106.view(512, 1, 4, 1, 16, 24) ;  bmm_106 = None
        permute_672 = view_1135.permute(2, 3, 4, 0, 5, 1) ;  view_1135 = None
        view_1136 = permute_672.view(4, 1, 16, 512, 24) ;  permute_672 = None
        unbind_int_57 = torch.unbind(view_1136) ;  view_1136 = None
        getitem_990 = unbind_int_57[0]
        getitem_991 = unbind_int_57[1]
        getitem_992 = unbind_int_57[2]
        getitem_993 = unbind_int_57[3];  unbind_int_57 = None
        view_1137 = arg297_1.view(1, 16, 1, 24) ;  arg297_1 = None
        add_100 = torch.add(getitem_990,view_1137) ;  getitem_990 = view_1137 = None
        _to_copy_655 = add_100.to(dtype = torch.bfloat16) ;  add_100 = None
        expand_56 = masked_fill_81.expand(1, 16, 512, 512) ;  masked_fill_81 = None
        _scaled_dot_product_efficient_attention_default_29 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_655,getitem_991,getitem_992,expand_56,False),) ;  _to_copy_655 = getitem_991 = getitem_992 = expand_56 = None
        getitem_994 = _scaled_dot_product_efficient_attention_default_29[0]
        add_101 = torch.add(getitem_993,1) ;  getitem_993 = None
        sigmoid_77 = torch.sigmoid(add_101) ;  add_101 = None
        mul_124 = torch.mul(getitem_994,sigmoid_77) ;  getitem_994 = sigmoid_77 = None
        _to_copy_656 = arg299_1.to(dtype = torch.bfloat16) ;  arg299_1 = None
        unsqueeze_446 = torch.unsqueeze(mul_124,4) ;  mul_124 = None
        permute_673 = unsqueeze_446.permute(0, 2, 4, 3, 1) ;  unsqueeze_446 = None
        unsqueeze_447 = torch.unsqueeze(_to_copy_656,3) ;  _to_copy_656 = None
        unsqueeze_448 = torch.unsqueeze(unsqueeze_447,4) ;  unsqueeze_447 = None
        permute_674 = unsqueeze_448.permute(3, 4, 2, 1, 0) ;  unsqueeze_448 = None
        permute_675 = permute_673.permute(1, 3, 4, 0, 2) ;  permute_673 = None
        clone_123 = torch.clone(permute_675,memory_format = torch.contiguous_format) ;  permute_675 = None
        _unsafe_view_110 = clone_123.view(1, 512, 384) ;  clone_123 = None
        permute_676 = permute_674.permute(3, 4, 0, 2, 1) ;  permute_674 = None
        clone_124 = torch.clone(permute_676,memory_format = torch.contiguous_format) ;  permute_676 = None
        _unsafe_view_111 = clone_124.view(1, 384, 384) ;  clone_124 = None
        bmm_107 = torch.bmm(_unsafe_view_110,_unsafe_view_111) ;  _unsafe_view_110 = _unsafe_view_111 = None
        view_1138 = bmm_107.view(512, 1, 1, 1, 384) ;  bmm_107 = None
        permute_677 = view_1138.permute(3, 0, 4, 1, 2) ;  view_1138 = None
        view_1139 = permute_677.view(1, 512, 384) ;  permute_677 = None
        unsqueeze_449 = torch.unsqueeze(arg1406_1,-1) 
        mul_125 = torch.mul(view_1139,unsqueeze_449) ;  view_1139 = unsqueeze_449 = None
        add_102 = torch.add(add_95,mul_125) ;  mul_125 = None
        split_tensor_97 = torch.split(add_95,512,dim = -2) ;  add_95 = None
        getitem_998 = split_tensor_97[0];  split_tensor_97 = None
        _to_copy_657 = getitem_998.to(dtype = torch.float32) ;  getitem_998 = None
        native_layer_norm_default_137 = (torch.nn.functional.layer_norm(_to_copy_657,[384],arg288_1,arg289_1,1e-05),) ;  _to_copy_657 = arg288_1 = arg289_1 = None
        getitem_999 = native_layer_norm_default_137[0]
        _to_copy_658 = arg290_1.to(dtype = torch.bfloat16) ;  arg290_1 = None
        _to_copy_659 = getitem_999.to(dtype = torch.bfloat16) ;  getitem_999 = None
        t_229 = _to_copy_658.t() ;  _to_copy_658 = None
        view_1140 = _to_copy_659.view(512, 384) ;  _to_copy_659 = None
        mm_213 = torch.mm(view_1140,t_229) ;  view_1140 = t_229 = None
        view_1141 = mm_213.view(1, 512, 1536) ;  mm_213 = None
        split_tensor_98 = torch.split(view_1141,768,dim = -1) ;  view_1141 = None
        getitem_1002 = split_tensor_98[0]
        getitem_1003 = split_tensor_98[1];  split_tensor_98 = None
        silu_29 = torch.nn.functional.silu(getitem_1002) ;  getitem_1002 = None
        mul_126 = torch.mul(silu_29,getitem_1003) ;  silu_29 = getitem_1003 = None
        _to_copy_660 = arg291_1.to(dtype = torch.bfloat16) ;  arg291_1 = None
        t_230 = _to_copy_660.t() ;  _to_copy_660 = None
        view_1143 = mul_126.view(512, 768) ;  mul_126 = None
        mm_214 = torch.mm(view_1143,t_230) ;  view_1143 = t_230 = None
        view_1144 = mm_214.view(1, 512, 384) ;  mm_214 = None
        add_103 = torch.add(add_102,view_1144) ;  add_102 = view_1144 = None
        _to_copy_661 = add_99.to(dtype = torch.float32) 
        native_layer_norm_default_138 = (torch.nn.functional.layer_norm(_to_copy_661,[256],arg304_1,arg305_1,1e-05),) ;  _to_copy_661 = arg304_1 = arg305_1 = None
        getitem_1004 = native_layer_norm_default_138[0]
        split_with_sizes_default_24 = torch.split(arg307_1,[512,512]) ;  arg307_1 = None
        getitem_1007 = split_with_sizes_default_24[0]
        getitem_1008 = split_with_sizes_default_24[1];  split_with_sizes_default_24 = None
        split_with_sizes_default_25 = torch.split(arg308_1,[512,512,256]) ;  arg308_1 = None
        getitem_1009 = split_with_sizes_default_25[0]
        getitem_1010 = split_with_sizes_default_25[1]
        getitem_1011 = split_with_sizes_default_25[2];  split_with_sizes_default_25 = None
        _to_copy_662 = getitem_1007.to(dtype = torch.bfloat16) ;  getitem_1007 = None
        _to_copy_663 = getitem_1004.to(dtype = torch.bfloat16) 
        t_231 = _to_copy_662.t() ;  _to_copy_662 = None
        view_1145 = _to_copy_663.view(262144, 256) ;  _to_copy_663 = None
        mm_215 = torch.mm(view_1145,t_231) ;  view_1145 = t_231 = None
        view_1146 = mm_215.view(1, 512, 512, 512) ;  mm_215 = None
        _to_copy_664 = getitem_1009.to(dtype = torch.bfloat16) ;  getitem_1009 = None
        _to_copy_665 = getitem_1004.to(dtype = torch.bfloat16) 
        t_232 = _to_copy_664.t() ;  _to_copy_664 = None
        view_1147 = _to_copy_665.view(262144, 256) ;  _to_copy_665 = None
        mm_216 = torch.mm(view_1147,t_232) ;  view_1147 = t_232 = None
        view_1148 = mm_216.view(1, 512, 512, 512) ;  mm_216 = None
        sigmoid_78 = torch.sigmoid(view_1148) ;  view_1148 = None
        mul_127 = torch.mul(view_1146,sigmoid_78) ;  view_1146 = sigmoid_78 = None
        unsqueeze_450 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_82 = torch.bitwise_not(unsqueeze_450) ;  unsqueeze_450 = None
        masked_fill_82 = mul_127.masked_fill(bitwise_not_82,0) ;  mul_127 = bitwise_not_82 = None
        split_tensor_99 = torch.split(masked_fill_82,256,dim = -1) 
        getitem_1014 = split_tensor_99[0]
        unsqueeze_453 = torch.unsqueeze(getitem_1014,4) ;  getitem_1014 = None
        permute_682 = unsqueeze_453.permute(0, 1, 4, 3, 2) ;  unsqueeze_453 = None
        permute_683 = permute_682.permute(3, 1, 4, 0, 2) ;  permute_682 = None
        view_1151 = permute_683.view(256, 512, 512) ;  permute_683 = None
        split_tensor_100 = torch.split(masked_fill_82,256,dim = -1) ;  masked_fill_82 = None
        getitem_1017 = split_tensor_100[1];  split_tensor_100 = None
        unsqueeze_454 = torch.unsqueeze(getitem_1017,4) ;  getitem_1017 = None
        permute_684 = unsqueeze_454.permute(0, 4, 1, 3, 2) ;  unsqueeze_454 = None
        permute_685 = permute_684.permute(3, 4, 0, 2, 1) ;  permute_684 = None
        view_1152 = permute_685.view(256, 512, 512) ;  permute_685 = None
        bmm_108 = torch.bmm(view_1151,view_1152) ;  view_1151 = view_1152 = None
        view_1153 = bmm_108.view(256, 512, 1, 1, 512) ;  bmm_108 = None
        permute_686 = view_1153.permute(3, 1, 4, 0, 2) ;  view_1153 = None
        view_1154 = permute_686.view(1, 512, 512, 256) ;  permute_686 = None
        _to_copy_666 = getitem_1008.to(dtype = torch.bfloat16) ;  getitem_1008 = None
        _to_copy_667 = getitem_1004.to(dtype = torch.bfloat16) 
        t_233 = _to_copy_666.t() ;  _to_copy_666 = None
        view_1155 = _to_copy_667.view(262144, 256) ;  _to_copy_667 = None
        mm_217 = torch.mm(view_1155,t_233) ;  view_1155 = t_233 = None
        view_1156 = mm_217.view(1, 512, 512, 512) ;  mm_217 = None
        _to_copy_668 = getitem_1010.to(dtype = torch.bfloat16) ;  getitem_1010 = None
        _to_copy_669 = getitem_1004.to(dtype = torch.bfloat16) 
        t_234 = _to_copy_668.t() ;  _to_copy_668 = None
        view_1157 = _to_copy_669.view(262144, 256) ;  _to_copy_669 = None
        mm_218 = torch.mm(view_1157,t_234) ;  view_1157 = t_234 = None
        view_1158 = mm_218.view(1, 512, 512, 512) ;  mm_218 = None
        sigmoid_79 = torch.sigmoid(view_1158) ;  view_1158 = None
        mul_128 = torch.mul(view_1156,sigmoid_79) ;  view_1156 = sigmoid_79 = None
        view_1159 = mul_128.view(262144, 512) ;  mul_128 = None
        view_1160 = view_1159.view(1, 512, 512, 512) ;  view_1159 = None
        transpose_24 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_455 = torch.unsqueeze(transpose_24,3) ;  transpose_24 = None
        clone_125 = torch.clone(unsqueeze_455,memory_format = torch.contiguous_format) ;  unsqueeze_455 = None
        bitwise_not_83 = torch.bitwise_not(clone_125) ;  clone_125 = None
        masked_fill_83 = view_1160.masked_fill(bitwise_not_83,0) ;  view_1160 = bitwise_not_83 = None
        view_1161 = masked_fill_83.view(262144, 512) ;  masked_fill_83 = None
        view_1165 = view_1161.view(1, 512, 512, 512) 
        split_tensor_101 = torch.split(view_1165,256,dim = -1) ;  view_1165 = None
        getitem_1020 = split_tensor_101[0]
        unsqueeze_458 = torch.unsqueeze(getitem_1020,4) ;  getitem_1020 = None
        permute_691 = unsqueeze_458.permute(0, 2, 4, 3, 1) ;  unsqueeze_458 = None
        permute_692 = permute_691.permute(3, 1, 4, 0, 2) ;  permute_691 = None
        view_1166 = permute_692.view(256, 512, 512) ;  permute_692 = None
        view_1167 = view_1161.view(1, 512, 512, 512) ;  view_1161 = None
        split_tensor_102 = torch.split(view_1167,256,dim = -1) ;  view_1167 = None
        getitem_1023 = split_tensor_102[1];  split_tensor_102 = None
        unsqueeze_459 = torch.unsqueeze(getitem_1023,4) ;  getitem_1023 = None
        permute_693 = unsqueeze_459.permute(0, 4, 2, 3, 1) ;  unsqueeze_459 = None
        permute_694 = permute_693.permute(3, 4, 0, 2, 1) ;  permute_693 = None
        view_1168 = permute_694.view(256, 512, 512) ;  permute_694 = None
        bmm_109 = torch.bmm(view_1166,view_1168) ;  view_1166 = view_1168 = None
        view_1169 = bmm_109.view(256, 512, 1, 1, 512) ;  bmm_109 = None
        permute_695 = view_1169.permute(3, 1, 4, 0, 2) ;  view_1169 = None
        view_1170 = permute_695.view(1, 512, 512, 256) ;  permute_695 = None
        _to_copy_670 = view_1154.to(dtype = torch.float32) ;  view_1154 = None
        native_layer_norm_default_139 = (torch.nn.functional.layer_norm(_to_copy_670,[256],None,None,1e-05),) ;  _to_copy_670 = None
        getitem_1024 = native_layer_norm_default_139[0]
        _to_copy_671 = view_1170.to(dtype = torch.float32) ;  view_1170 = None
        native_layer_norm_default_140 = (torch.nn.functional.layer_norm(_to_copy_671,[256],None,None,1e-05),) ;  _to_copy_671 = None
        getitem_1027 = native_layer_norm_default_140[0]
        add_104 = torch.add(getitem_1024,getitem_1027) ;  getitem_1024 = getitem_1027 = None
        _to_copy_672 = arg306_1.to(dtype = torch.bfloat16) ;  arg306_1 = None
        _to_copy_673 = add_104.to(dtype = torch.bfloat16) ;  add_104 = None
        t_235 = _to_copy_672.t() ;  _to_copy_672 = None
        view_1171 = _to_copy_673.view(262144, 256) ;  _to_copy_673 = None
        mm_219 = torch.mm(view_1171,t_235) ;  view_1171 = t_235 = None
        view_1172 = mm_219.view(1, 512, 512, 256) ;  mm_219 = None
        _to_copy_674 = getitem_1011.to(dtype = torch.bfloat16) ;  getitem_1011 = None
        _to_copy_675 = getitem_1004.to(dtype = torch.bfloat16) ;  getitem_1004 = None
        t_236 = _to_copy_674.t() ;  _to_copy_674 = None
        view_1173 = _to_copy_675.view(262144, 256) ;  _to_copy_675 = None
        mm_220 = torch.mm(view_1173,t_236) ;  view_1173 = t_236 = None
        view_1174 = mm_220.view(1, 512, 512, 256) ;  mm_220 = None
        sigmoid_80 = torch.sigmoid(view_1174) ;  view_1174 = None
        mul_129 = torch.mul(view_1172,sigmoid_80) ;  view_1172 = sigmoid_80 = None
        add_105 = torch.add(add_99,mul_129) ;  mul_129 = None
        _to_copy_676 = add_99.to(dtype = torch.float32) 
        native_layer_norm_default_141 = (torch.nn.functional.layer_norm(_to_copy_676,[256],None,None,1e-05),) ;  _to_copy_676 = None
        getitem_1030 = native_layer_norm_default_141[0]
        _to_copy_677 = arg310_1.to(dtype = torch.bfloat16) ;  arg310_1 = None
        _to_copy_678 = getitem_1030.to(dtype = torch.bfloat16) 
        t_237 = _to_copy_677.t() ;  _to_copy_677 = None
        view_1175 = _to_copy_678.view(262144, 256) ;  _to_copy_678 = None
        mm_221 = torch.mm(view_1175,t_237) ;  view_1175 = t_237 = None
        view_1176 = mm_221.view(1, 512, 512, 8) ;  mm_221 = None
        view_1177 = view_1176.view(1, 512, 512, 2, 4) ;  view_1176 = None
        permute_696 = view_1177.permute(0, 3, 4, 1, 2) ;  view_1177 = None
        view_1178 = permute_696.view(1, 2, 4, 1, 512, 512) ;  permute_696 = None
        view_1179 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_84 = torch.bitwise_not(view_1179) ;  view_1179 = None
        masked_fill_84 = view_1178.masked_fill(bitwise_not_84,-10000) ;  view_1178 = bitwise_not_84 = None
        view_1180 = masked_fill_84.view(1, 2, 4, 512, 512) ;  masked_fill_84 = None
        permute_697 = view_1180.permute(1, 0, 2, 3, 4) ;  view_1180 = None
        view_1181 = permute_697.view(2, 4, 1, 512, 512) ;  permute_697 = None
        _to_copy_679 = arg311_1.to(dtype = torch.bfloat16) ;  arg311_1 = None
        _to_copy_680 = getitem_1030.to(dtype = torch.bfloat16) 
        t_238 = _to_copy_679.t() ;  _to_copy_679 = None
        view_1182 = _to_copy_680.view(262144, 256) ;  _to_copy_680 = None
        mm_222 = torch.mm(view_1182,t_238) ;  view_1182 = t_238 = None
        view_1183 = mm_222.view(1, 512, 512, 1024) ;  mm_222 = None
        select_25 = torch.select(view_1181,0,0) 
        view_1184 = view_1183.view(1, 512, 512, 4, 4, 64) ;  view_1183 = None
        permute_698 = view_1184.permute(4, 0, 3, 1, 2, 5) ;  view_1184 = None
        view_1185 = permute_698.view(4, 4, 512, 512, 64) ;  permute_698 = None
        unbind_int_58 = torch.unbind(view_1185) ;  view_1185 = None
        getitem_1033 = unbind_int_58[0]
        getitem_1034 = unbind_int_58[1]
        getitem_1035 = unbind_int_58[2]
        getitem_1036 = unbind_int_58[3];  unbind_int_58 = None
        expand_57 = select_25.expand(4, 512, 512, 512) ;  select_25 = None
        _scaled_dot_product_efficient_attention_default_30 = (torch.nn.functional.scaled_dot_product_attention(getitem_1033,getitem_1034,getitem_1035,expand_57,False),) ;  getitem_1033 = getitem_1034 = getitem_1035 = expand_57 = None
        getitem_1037 = _scaled_dot_product_efficient_attention_default_30[0]
        sigmoid_81 = torch.sigmoid(getitem_1036) ;  getitem_1036 = None
        mul_130 = torch.mul(getitem_1037,sigmoid_81) ;  getitem_1037 = sigmoid_81 = None
        view_1186 = mul_130.view(1, 4, 512, 512, 64) ;  mul_130 = None
        permute_699 = view_1186.permute(0, 2, 3, 1, 4) ;  view_1186 = None
        clone_126 = torch.clone(permute_699,memory_format = torch.contiguous_format) ;  permute_699 = None
        _unsafe_view_112 = clone_126.view(1, 512, 512, 256) ;  clone_126 = None
        transpose_25 = torch.transpose(getitem_1030,1,2) ;  getitem_1030 = None
        _to_copy_681 = arg312_1.to(dtype = torch.bfloat16) ;  arg312_1 = None
        _to_copy_682 = transpose_25.to(dtype = torch.bfloat16) ;  transpose_25 = None
        t_239 = _to_copy_681.t() ;  _to_copy_681 = None
        expand_58 = _to_copy_682.expand(1, 512, 512, 256) ;  _to_copy_682 = None
        view_1187 = expand_58.view(512, 512, 256) ;  expand_58 = None
        expand_59 = t_239.expand(1, 512, 256, 1024) ;  t_239 = None
        view_1188 = expand_59.view(512, 256, 1024) ;  expand_59 = None
        bmm_110 = torch.bmm(view_1187,view_1188) ;  view_1187 = view_1188 = None
        view_1189 = bmm_110.view(1, 512, 512, 1024) ;  bmm_110 = None
        select_26 = torch.select(view_1181,0,1) ;  view_1181 = None
        view_1190 = view_1189.view(1, 512, 512, 4, 4, 64) ;  view_1189 = None
        permute_700 = view_1190.permute(4, 0, 3, 1, 2, 5) ;  view_1190 = None
        view_1191 = permute_700.view(4, 4, 512, 512, 64) ;  permute_700 = None
        unbind_int_59 = torch.unbind(view_1191) ;  view_1191 = None
        getitem_1041 = unbind_int_59[0]
        getitem_1042 = unbind_int_59[1]
        getitem_1043 = unbind_int_59[2]
        getitem_1044 = unbind_int_59[3];  unbind_int_59 = None
        expand_60 = select_26.expand(4, 512, 512, 512) ;  select_26 = None
        _scaled_dot_product_efficient_attention_default_31 = (torch.nn.functional.scaled_dot_product_attention(getitem_1041,getitem_1042,getitem_1043,expand_60,False),) ;  getitem_1041 = getitem_1042 = getitem_1043 = expand_60 = None
        getitem_1045 = _scaled_dot_product_efficient_attention_default_31[0]
        sigmoid_82 = torch.sigmoid(getitem_1044) ;  getitem_1044 = None
        mul_131 = torch.mul(getitem_1045,sigmoid_82) ;  getitem_1045 = sigmoid_82 = None
        view_1192 = mul_131.view(1, 4, 512, 512, 64) ;  mul_131 = None
        permute_701 = view_1192.permute(0, 2, 3, 1, 4) ;  view_1192 = None
        clone_127 = torch.clone(permute_701,memory_format = torch.contiguous_format) ;  permute_701 = None
        _unsafe_view_113 = clone_127.view(1, 512, 512, 256) ;  clone_127 = None
        cat_18 = torch.cat([_unsafe_view_112,_unsafe_view_113],dim = -1) ;  _unsafe_view_112 = _unsafe_view_113 = None
        slice_211 = arg309_1[0:] ;  arg309_1 = None
        unsqueeze_460 = torch.unsqueeze(slice_211,1) ;  slice_211 = None
        mul_132 = torch.mul(arg313_1,unsqueeze_460) ;  arg313_1 = unsqueeze_460 = None
        _to_copy_683 = mul_132.to(dtype = torch.bfloat16) ;  mul_132 = None
        t_240 = _to_copy_683.t() ;  _to_copy_683 = None
        view_1193 = cat_18.view(262144, 512) ;  cat_18 = None
        mm_223 = torch.mm(view_1193,t_240) ;  view_1193 = t_240 = None
        view_1194 = mm_223.view(1, 512, 512, 256) ;  mm_223 = None
        add_106 = torch.add(add_105,view_1194) ;  add_105 = view_1194 = None
        split_tensor_103 = torch.split(add_99,512,dim = -2) 
        getitem_1049 = split_tensor_103[0];  split_tensor_103 = None
        _to_copy_684 = getitem_1049.to(dtype = torch.float32) ;  getitem_1049 = None
        native_layer_norm_default_142 = (torch.nn.functional.layer_norm(_to_copy_684,[256],arg300_1,arg301_1,1e-05),) ;  _to_copy_684 = arg300_1 = arg301_1 = None
        getitem_1050 = native_layer_norm_default_142[0]
        _to_copy_685 = arg302_1.to(dtype = torch.bfloat16) ;  arg302_1 = None
        _to_copy_686 = getitem_1050.to(dtype = torch.bfloat16) ;  getitem_1050 = None
        t_241 = _to_copy_685.t() ;  _to_copy_685 = None
        view_1195 = _to_copy_686.view(262144, 256) ;  _to_copy_686 = None
        mm_224 = torch.mm(view_1195,t_241) ;  view_1195 = t_241 = None
        view_1196 = mm_224.view(1, 512, 512, 1024) ;  mm_224 = None
        split_tensor_104 = torch.split(view_1196,512,dim = -1) ;  view_1196 = None
        getitem_1053 = split_tensor_104[0]
        getitem_1054 = split_tensor_104[1];  split_tensor_104 = None
        silu_30 = torch.nn.functional.silu(getitem_1053) ;  getitem_1053 = None
        mul_133 = torch.mul(silu_30,getitem_1054) ;  silu_30 = getitem_1054 = None
        _to_copy_687 = arg303_1.to(dtype = torch.bfloat16) ;  arg303_1 = None
        t_242 = _to_copy_687.t() ;  _to_copy_687 = None
        view_1198 = mul_133.view(262144, 512) ;  mul_133 = None
        mm_225 = torch.mm(view_1198,t_242) ;  view_1198 = t_242 = None
        view_1199 = mm_225.view(1, 512, 512, 256) ;  mm_225 = None
        add_107 = torch.add(add_106,view_1199) ;  add_106 = view_1199 = None
        _to_copy_688 = add_103.to(dtype = torch.float32) 
        native_layer_norm_default_143 = (torch.nn.functional.layer_norm(_to_copy_688,[384],arg318_1,arg319_1,1e-05),) ;  _to_copy_688 = arg318_1 = arg319_1 = None
        getitem_1055 = native_layer_norm_default_143[0]
        _to_copy_689 = add_99.to(dtype = torch.float32) ;  add_99 = None
        native_layer_norm_default_144 = (torch.nn.functional.layer_norm(_to_copy_689,[256],arg320_1,arg321_1,1e-05),) ;  _to_copy_689 = arg320_1 = arg321_1 = None
        getitem_1058 = native_layer_norm_default_144[0]
        _to_copy_690 = arg322_1.to(dtype = torch.bfloat16) ;  arg322_1 = None
        _to_copy_691 = getitem_1058.to(dtype = torch.bfloat16) ;  getitem_1058 = None
        t_243 = _to_copy_690.t() ;  _to_copy_690 = None
        view_1200 = _to_copy_691.view(262144, 256) ;  _to_copy_691 = None
        mm_226 = torch.mm(view_1200,t_243) ;  view_1200 = t_243 = None
        view_1201 = mm_226.view(1, 512, 512, 16) ;  mm_226 = None
        permute_702 = view_1201.permute(0, 3, 1, 2) ;  view_1201 = None
        view_1202 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_85 = torch.bitwise_not(view_1202) ;  view_1202 = None
        masked_fill_85 = permute_702.masked_fill(bitwise_not_85,-10000) ;  permute_702 = bitwise_not_85 = None
        _to_copy_692 = getitem_1055.to(dtype = torch.bfloat16) ;  getitem_1055 = None
        _to_copy_693 = arg324_1.to(dtype = torch.bfloat16) ;  arg324_1 = None
        unsqueeze_461 = torch.unsqueeze(_to_copy_692,3) ;  _to_copy_692 = None
        unsqueeze_462 = torch.unsqueeze(unsqueeze_461,4) ;  unsqueeze_461 = None
        unsqueeze_463 = torch.unsqueeze(unsqueeze_462,5) ;  unsqueeze_462 = None
        permute_703 = unsqueeze_463.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_463 = None
        unsqueeze_464 = torch.unsqueeze(_to_copy_693,4) ;  _to_copy_693 = None
        unsqueeze_465 = torch.unsqueeze(unsqueeze_464,5) ;  unsqueeze_464 = None
        permute_704 = unsqueeze_465.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_465 = None
        permute_705 = permute_703.permute(3, 5, 0, 1, 2, 4) ;  permute_703 = None
        view_1203 = permute_705.view(1, 512, 384) ;  permute_705 = None
        permute_706 = permute_704.permute(5, 0, 1, 2, 4, 3) ;  permute_704 = None
        view_1204 = permute_706.view(1, 384, 1536) ;  permute_706 = None
        bmm_111 = torch.bmm(view_1203,view_1204) ;  view_1203 = view_1204 = None
        view_1205 = bmm_111.view(512, 1, 4, 1, 16, 24) ;  bmm_111 = None
        permute_707 = view_1205.permute(2, 3, 4, 0, 5, 1) ;  view_1205 = None
        view_1206 = permute_707.view(4, 1, 16, 512, 24) ;  permute_707 = None
        unbind_int_60 = torch.unbind(view_1206) ;  view_1206 = None
        getitem_1061 = unbind_int_60[0]
        getitem_1062 = unbind_int_60[1]
        getitem_1063 = unbind_int_60[2]
        getitem_1064 = unbind_int_60[3];  unbind_int_60 = None
        view_1207 = arg323_1.view(1, 16, 1, 24) ;  arg323_1 = None
        add_108 = torch.add(getitem_1061,view_1207) ;  getitem_1061 = view_1207 = None
        _to_copy_694 = add_108.to(dtype = torch.bfloat16) ;  add_108 = None
        expand_61 = masked_fill_85.expand(1, 16, 512, 512) ;  masked_fill_85 = None
        _scaled_dot_product_efficient_attention_default_32 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_694,getitem_1062,getitem_1063,expand_61,False),) ;  _to_copy_694 = getitem_1062 = getitem_1063 = expand_61 = None
        getitem_1065 = _scaled_dot_product_efficient_attention_default_32[0]
        add_109 = torch.add(getitem_1064,1) ;  getitem_1064 = None
        sigmoid_83 = torch.sigmoid(add_109) ;  add_109 = None
        mul_134 = torch.mul(getitem_1065,sigmoid_83) ;  getitem_1065 = sigmoid_83 = None
        _to_copy_695 = arg325_1.to(dtype = torch.bfloat16) ;  arg325_1 = None
        unsqueeze_466 = torch.unsqueeze(mul_134,4) ;  mul_134 = None
        permute_708 = unsqueeze_466.permute(0, 2, 4, 3, 1) ;  unsqueeze_466 = None
        unsqueeze_467 = torch.unsqueeze(_to_copy_695,3) ;  _to_copy_695 = None
        unsqueeze_468 = torch.unsqueeze(unsqueeze_467,4) ;  unsqueeze_467 = None
        permute_709 = unsqueeze_468.permute(3, 4, 2, 1, 0) ;  unsqueeze_468 = None
        permute_710 = permute_708.permute(1, 3, 4, 0, 2) ;  permute_708 = None
        clone_128 = torch.clone(permute_710,memory_format = torch.contiguous_format) ;  permute_710 = None
        _unsafe_view_114 = clone_128.view(1, 512, 384) ;  clone_128 = None
        permute_711 = permute_709.permute(3, 4, 0, 2, 1) ;  permute_709 = None
        clone_129 = torch.clone(permute_711,memory_format = torch.contiguous_format) ;  permute_711 = None
        _unsafe_view_115 = clone_129.view(1, 384, 384) ;  clone_129 = None
        bmm_112 = torch.bmm(_unsafe_view_114,_unsafe_view_115) ;  _unsafe_view_114 = _unsafe_view_115 = None
        view_1208 = bmm_112.view(512, 1, 1, 1, 384) ;  bmm_112 = None
        permute_712 = view_1208.permute(3, 0, 4, 1, 2) ;  view_1208 = None
        view_1209 = permute_712.view(1, 512, 384) ;  permute_712 = None
        unsqueeze_469 = torch.unsqueeze(arg1406_1,-1) 
        mul_135 = torch.mul(view_1209,unsqueeze_469) ;  view_1209 = unsqueeze_469 = None
        add_110 = torch.add(add_103,mul_135) ;  mul_135 = None
        split_tensor_105 = torch.split(add_103,512,dim = -2) ;  add_103 = None
        getitem_1069 = split_tensor_105[0];  split_tensor_105 = None
        _to_copy_696 = getitem_1069.to(dtype = torch.float32) ;  getitem_1069 = None
        native_layer_norm_default_145 = (torch.nn.functional.layer_norm(_to_copy_696,[384],arg314_1,arg315_1,1e-05),) ;  _to_copy_696 = arg314_1 = arg315_1 = None
        getitem_1070 = native_layer_norm_default_145[0]
        _to_copy_697 = arg316_1.to(dtype = torch.bfloat16) ;  arg316_1 = None
        _to_copy_698 = getitem_1070.to(dtype = torch.bfloat16) ;  getitem_1070 = None
        t_244 = _to_copy_697.t() ;  _to_copy_697 = None
        view_1210 = _to_copy_698.view(512, 384) ;  _to_copy_698 = None
        mm_227 = torch.mm(view_1210,t_244) ;  view_1210 = t_244 = None
        view_1211 = mm_227.view(1, 512, 1536) ;  mm_227 = None
        split_tensor_106 = torch.split(view_1211,768,dim = -1) ;  view_1211 = None
        getitem_1073 = split_tensor_106[0]
        getitem_1074 = split_tensor_106[1];  split_tensor_106 = None
        silu_31 = torch.nn.functional.silu(getitem_1073) ;  getitem_1073 = None
        mul_136 = torch.mul(silu_31,getitem_1074) ;  silu_31 = getitem_1074 = None
        _to_copy_699 = arg317_1.to(dtype = torch.bfloat16) ;  arg317_1 = None
        t_245 = _to_copy_699.t() ;  _to_copy_699 = None
        view_1213 = mul_136.view(512, 768) ;  mul_136 = None
        mm_228 = torch.mm(view_1213,t_245) ;  view_1213 = t_245 = None
        view_1214 = mm_228.view(1, 512, 384) ;  mm_228 = None
        add_111 = torch.add(add_110,view_1214) ;  add_110 = view_1214 = None
        _to_copy_700 = add_107.to(dtype = torch.float32) 
        native_layer_norm_default_146 = (torch.nn.functional.layer_norm(_to_copy_700,[256],arg330_1,arg331_1,1e-05),) ;  _to_copy_700 = arg330_1 = arg331_1 = None
        getitem_1075 = native_layer_norm_default_146[0]
        split_with_sizes_default_26 = torch.split(arg333_1,[512,512]) ;  arg333_1 = None
        getitem_1078 = split_with_sizes_default_26[0]
        getitem_1079 = split_with_sizes_default_26[1];  split_with_sizes_default_26 = None
        split_with_sizes_default_27 = torch.split(arg334_1,[512,512,256]) ;  arg334_1 = None
        getitem_1080 = split_with_sizes_default_27[0]
        getitem_1081 = split_with_sizes_default_27[1]
        getitem_1082 = split_with_sizes_default_27[2];  split_with_sizes_default_27 = None
        _to_copy_701 = getitem_1078.to(dtype = torch.bfloat16) ;  getitem_1078 = None
        _to_copy_702 = getitem_1075.to(dtype = torch.bfloat16) 
        t_246 = _to_copy_701.t() ;  _to_copy_701 = None
        view_1215 = _to_copy_702.view(262144, 256) ;  _to_copy_702 = None
        mm_229 = torch.mm(view_1215,t_246) ;  view_1215 = t_246 = None
        view_1216 = mm_229.view(1, 512, 512, 512) ;  mm_229 = None
        _to_copy_703 = getitem_1080.to(dtype = torch.bfloat16) ;  getitem_1080 = None
        _to_copy_704 = getitem_1075.to(dtype = torch.bfloat16) 
        t_247 = _to_copy_703.t() ;  _to_copy_703 = None
        view_1217 = _to_copy_704.view(262144, 256) ;  _to_copy_704 = None
        mm_230 = torch.mm(view_1217,t_247) ;  view_1217 = t_247 = None
        view_1218 = mm_230.view(1, 512, 512, 512) ;  mm_230 = None
        sigmoid_84 = torch.sigmoid(view_1218) ;  view_1218 = None
        mul_137 = torch.mul(view_1216,sigmoid_84) ;  view_1216 = sigmoid_84 = None
        unsqueeze_470 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_86 = torch.bitwise_not(unsqueeze_470) ;  unsqueeze_470 = None
        masked_fill_86 = mul_137.masked_fill(bitwise_not_86,0) ;  mul_137 = bitwise_not_86 = None
        split_tensor_107 = torch.split(masked_fill_86,256,dim = -1) 
        getitem_1085 = split_tensor_107[0]
        unsqueeze_473 = torch.unsqueeze(getitem_1085,4) ;  getitem_1085 = None
        permute_717 = unsqueeze_473.permute(0, 1, 4, 3, 2) ;  unsqueeze_473 = None
        permute_718 = permute_717.permute(3, 1, 4, 0, 2) ;  permute_717 = None
        view_1221 = permute_718.view(256, 512, 512) ;  permute_718 = None
        split_tensor_108 = torch.split(masked_fill_86,256,dim = -1) ;  masked_fill_86 = None
        getitem_1088 = split_tensor_108[1];  split_tensor_108 = None
        unsqueeze_474 = torch.unsqueeze(getitem_1088,4) ;  getitem_1088 = None
        permute_719 = unsqueeze_474.permute(0, 4, 1, 3, 2) ;  unsqueeze_474 = None
        permute_720 = permute_719.permute(3, 4, 0, 2, 1) ;  permute_719 = None
        view_1222 = permute_720.view(256, 512, 512) ;  permute_720 = None
        bmm_113 = torch.bmm(view_1221,view_1222) ;  view_1221 = view_1222 = None
        view_1223 = bmm_113.view(256, 512, 1, 1, 512) ;  bmm_113 = None
        permute_721 = view_1223.permute(3, 1, 4, 0, 2) ;  view_1223 = None
        view_1224 = permute_721.view(1, 512, 512, 256) ;  permute_721 = None
        _to_copy_705 = getitem_1079.to(dtype = torch.bfloat16) ;  getitem_1079 = None
        _to_copy_706 = getitem_1075.to(dtype = torch.bfloat16) 
        t_248 = _to_copy_705.t() ;  _to_copy_705 = None
        view_1225 = _to_copy_706.view(262144, 256) ;  _to_copy_706 = None
        mm_231 = torch.mm(view_1225,t_248) ;  view_1225 = t_248 = None
        view_1226 = mm_231.view(1, 512, 512, 512) ;  mm_231 = None
        _to_copy_707 = getitem_1081.to(dtype = torch.bfloat16) ;  getitem_1081 = None
        _to_copy_708 = getitem_1075.to(dtype = torch.bfloat16) 
        t_249 = _to_copy_707.t() ;  _to_copy_707 = None
        view_1227 = _to_copy_708.view(262144, 256) ;  _to_copy_708 = None
        mm_232 = torch.mm(view_1227,t_249) ;  view_1227 = t_249 = None
        view_1228 = mm_232.view(1, 512, 512, 512) ;  mm_232 = None
        sigmoid_85 = torch.sigmoid(view_1228) ;  view_1228 = None
        mul_138 = torch.mul(view_1226,sigmoid_85) ;  view_1226 = sigmoid_85 = None
        view_1229 = mul_138.view(262144, 512) ;  mul_138 = None
        view_1230 = view_1229.view(1, 512, 512, 512) ;  view_1229 = None
        transpose_26 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_475 = torch.unsqueeze(transpose_26,3) ;  transpose_26 = None
        clone_130 = torch.clone(unsqueeze_475,memory_format = torch.contiguous_format) ;  unsqueeze_475 = None
        bitwise_not_87 = torch.bitwise_not(clone_130) ;  clone_130 = None
        masked_fill_87 = view_1230.masked_fill(bitwise_not_87,0) ;  view_1230 = bitwise_not_87 = None
        view_1231 = masked_fill_87.view(262144, 512) ;  masked_fill_87 = None
        view_1235 = view_1231.view(1, 512, 512, 512) 
        split_tensor_109 = torch.split(view_1235,256,dim = -1) ;  view_1235 = None
        getitem_1091 = split_tensor_109[0]
        unsqueeze_478 = torch.unsqueeze(getitem_1091,4) ;  getitem_1091 = None
        permute_726 = unsqueeze_478.permute(0, 2, 4, 3, 1) ;  unsqueeze_478 = None
        permute_727 = permute_726.permute(3, 1, 4, 0, 2) ;  permute_726 = None
        view_1236 = permute_727.view(256, 512, 512) ;  permute_727 = None
        view_1237 = view_1231.view(1, 512, 512, 512) ;  view_1231 = None
        split_tensor_110 = torch.split(view_1237,256,dim = -1) ;  view_1237 = None
        getitem_1094 = split_tensor_110[1];  split_tensor_110 = None
        unsqueeze_479 = torch.unsqueeze(getitem_1094,4) ;  getitem_1094 = None
        permute_728 = unsqueeze_479.permute(0, 4, 2, 3, 1) ;  unsqueeze_479 = None
        permute_729 = permute_728.permute(3, 4, 0, 2, 1) ;  permute_728 = None
        view_1238 = permute_729.view(256, 512, 512) ;  permute_729 = None
        bmm_114 = torch.bmm(view_1236,view_1238) ;  view_1236 = view_1238 = None
        view_1239 = bmm_114.view(256, 512, 1, 1, 512) ;  bmm_114 = None
        permute_730 = view_1239.permute(3, 1, 4, 0, 2) ;  view_1239 = None
        view_1240 = permute_730.view(1, 512, 512, 256) ;  permute_730 = None
        _to_copy_709 = view_1224.to(dtype = torch.float32) ;  view_1224 = None
        native_layer_norm_default_147 = (torch.nn.functional.layer_norm(_to_copy_709,[256],None,None,1e-05),) ;  _to_copy_709 = None
        getitem_1095 = native_layer_norm_default_147[0]
        _to_copy_710 = view_1240.to(dtype = torch.float32) ;  view_1240 = None
        native_layer_norm_default_148 = (torch.nn.functional.layer_norm(_to_copy_710,[256],None,None,1e-05),) ;  _to_copy_710 = None
        getitem_1098 = native_layer_norm_default_148[0]
        add_112 = torch.add(getitem_1095,getitem_1098) ;  getitem_1095 = getitem_1098 = None
        _to_copy_711 = arg332_1.to(dtype = torch.bfloat16) ;  arg332_1 = None
        _to_copy_712 = add_112.to(dtype = torch.bfloat16) ;  add_112 = None
        t_250 = _to_copy_711.t() ;  _to_copy_711 = None
        view_1241 = _to_copy_712.view(262144, 256) ;  _to_copy_712 = None
        mm_233 = torch.mm(view_1241,t_250) ;  view_1241 = t_250 = None
        view_1242 = mm_233.view(1, 512, 512, 256) ;  mm_233 = None
        _to_copy_713 = getitem_1082.to(dtype = torch.bfloat16) ;  getitem_1082 = None
        _to_copy_714 = getitem_1075.to(dtype = torch.bfloat16) ;  getitem_1075 = None
        t_251 = _to_copy_713.t() ;  _to_copy_713 = None
        view_1243 = _to_copy_714.view(262144, 256) ;  _to_copy_714 = None
        mm_234 = torch.mm(view_1243,t_251) ;  view_1243 = t_251 = None
        view_1244 = mm_234.view(1, 512, 512, 256) ;  mm_234 = None
        sigmoid_86 = torch.sigmoid(view_1244) ;  view_1244 = None
        mul_139 = torch.mul(view_1242,sigmoid_86) ;  view_1242 = sigmoid_86 = None
        add_113 = torch.add(add_107,mul_139) ;  mul_139 = None
        _to_copy_715 = add_107.to(dtype = torch.float32) 
        native_layer_norm_default_149 = (torch.nn.functional.layer_norm(_to_copy_715,[256],None,None,1e-05),) ;  _to_copy_715 = None
        getitem_1101 = native_layer_norm_default_149[0]
        _to_copy_716 = arg336_1.to(dtype = torch.bfloat16) ;  arg336_1 = None
        _to_copy_717 = getitem_1101.to(dtype = torch.bfloat16) 
        t_252 = _to_copy_716.t() ;  _to_copy_716 = None
        view_1245 = _to_copy_717.view(262144, 256) ;  _to_copy_717 = None
        mm_235 = torch.mm(view_1245,t_252) ;  view_1245 = t_252 = None
        view_1246 = mm_235.view(1, 512, 512, 8) ;  mm_235 = None
        view_1247 = view_1246.view(1, 512, 512, 2, 4) ;  view_1246 = None
        permute_731 = view_1247.permute(0, 3, 4, 1, 2) ;  view_1247 = None
        view_1248 = permute_731.view(1, 2, 4, 1, 512, 512) ;  permute_731 = None
        view_1249 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_88 = torch.bitwise_not(view_1249) ;  view_1249 = None
        masked_fill_88 = view_1248.masked_fill(bitwise_not_88,-10000) ;  view_1248 = bitwise_not_88 = None
        view_1250 = masked_fill_88.view(1, 2, 4, 512, 512) ;  masked_fill_88 = None
        permute_732 = view_1250.permute(1, 0, 2, 3, 4) ;  view_1250 = None
        view_1251 = permute_732.view(2, 4, 1, 512, 512) ;  permute_732 = None
        _to_copy_718 = arg337_1.to(dtype = torch.bfloat16) ;  arg337_1 = None
        _to_copy_719 = getitem_1101.to(dtype = torch.bfloat16) 
        t_253 = _to_copy_718.t() ;  _to_copy_718 = None
        view_1252 = _to_copy_719.view(262144, 256) ;  _to_copy_719 = None
        mm_236 = torch.mm(view_1252,t_253) ;  view_1252 = t_253 = None
        view_1253 = mm_236.view(1, 512, 512, 1024) ;  mm_236 = None
        select_27 = torch.select(view_1251,0,0) 
        view_1254 = view_1253.view(1, 512, 512, 4, 4, 64) ;  view_1253 = None
        permute_733 = view_1254.permute(4, 0, 3, 1, 2, 5) ;  view_1254 = None
        view_1255 = permute_733.view(4, 4, 512, 512, 64) ;  permute_733 = None
        unbind_int_61 = torch.unbind(view_1255) ;  view_1255 = None
        getitem_1104 = unbind_int_61[0]
        getitem_1105 = unbind_int_61[1]
        getitem_1106 = unbind_int_61[2]
        getitem_1107 = unbind_int_61[3];  unbind_int_61 = None
        expand_62 = select_27.expand(4, 512, 512, 512) ;  select_27 = None
        _scaled_dot_product_efficient_attention_default_33 = (torch.nn.functional.scaled_dot_product_attention(getitem_1104,getitem_1105,getitem_1106,expand_62,False),) ;  getitem_1104 = getitem_1105 = getitem_1106 = expand_62 = None
        getitem_1108 = _scaled_dot_product_efficient_attention_default_33[0]
        sigmoid_87 = torch.sigmoid(getitem_1107) ;  getitem_1107 = None
        mul_140 = torch.mul(getitem_1108,sigmoid_87) ;  getitem_1108 = sigmoid_87 = None
        view_1256 = mul_140.view(1, 4, 512, 512, 64) ;  mul_140 = None
        permute_734 = view_1256.permute(0, 2, 3, 1, 4) ;  view_1256 = None
        clone_131 = torch.clone(permute_734,memory_format = torch.contiguous_format) ;  permute_734 = None
        _unsafe_view_116 = clone_131.view(1, 512, 512, 256) ;  clone_131 = None
        transpose_27 = torch.transpose(getitem_1101,1,2) ;  getitem_1101 = None
        _to_copy_720 = arg338_1.to(dtype = torch.bfloat16) ;  arg338_1 = None
        _to_copy_721 = transpose_27.to(dtype = torch.bfloat16) ;  transpose_27 = None
        t_254 = _to_copy_720.t() ;  _to_copy_720 = None
        expand_63 = _to_copy_721.expand(1, 512, 512, 256) ;  _to_copy_721 = None
        view_1257 = expand_63.view(512, 512, 256) ;  expand_63 = None
        expand_64 = t_254.expand(1, 512, 256, 1024) ;  t_254 = None
        view_1258 = expand_64.view(512, 256, 1024) ;  expand_64 = None
        bmm_115 = torch.bmm(view_1257,view_1258) ;  view_1257 = view_1258 = None
        view_1259 = bmm_115.view(1, 512, 512, 1024) ;  bmm_115 = None
        select_28 = torch.select(view_1251,0,1) ;  view_1251 = None
        view_1260 = view_1259.view(1, 512, 512, 4, 4, 64) ;  view_1259 = None
        permute_735 = view_1260.permute(4, 0, 3, 1, 2, 5) ;  view_1260 = None
        view_1261 = permute_735.view(4, 4, 512, 512, 64) ;  permute_735 = None
        unbind_int_62 = torch.unbind(view_1261) ;  view_1261 = None
        getitem_1112 = unbind_int_62[0]
        getitem_1113 = unbind_int_62[1]
        getitem_1114 = unbind_int_62[2]
        getitem_1115 = unbind_int_62[3];  unbind_int_62 = None
        expand_65 = select_28.expand(4, 512, 512, 512) ;  select_28 = None
        _scaled_dot_product_efficient_attention_default_34 = (torch.nn.functional.scaled_dot_product_attention(getitem_1112,getitem_1113,getitem_1114,expand_65,False),) ;  getitem_1112 = getitem_1113 = getitem_1114 = expand_65 = None
        getitem_1116 = _scaled_dot_product_efficient_attention_default_34[0]
        sigmoid_88 = torch.sigmoid(getitem_1115) ;  getitem_1115 = None
        mul_141 = torch.mul(getitem_1116,sigmoid_88) ;  getitem_1116 = sigmoid_88 = None
        view_1262 = mul_141.view(1, 4, 512, 512, 64) ;  mul_141 = None
        permute_736 = view_1262.permute(0, 2, 3, 1, 4) ;  view_1262 = None
        clone_132 = torch.clone(permute_736,memory_format = torch.contiguous_format) ;  permute_736 = None
        _unsafe_view_117 = clone_132.view(1, 512, 512, 256) ;  clone_132 = None
        cat_19 = torch.cat([_unsafe_view_116,_unsafe_view_117],dim = -1) ;  _unsafe_view_116 = _unsafe_view_117 = None
        slice_212 = arg335_1[0:] ;  arg335_1 = None
        unsqueeze_480 = torch.unsqueeze(slice_212,1) ;  slice_212 = None
        mul_142 = torch.mul(arg339_1,unsqueeze_480) ;  arg339_1 = unsqueeze_480 = None
        _to_copy_722 = mul_142.to(dtype = torch.bfloat16) ;  mul_142 = None
        t_255 = _to_copy_722.t() ;  _to_copy_722 = None
        view_1263 = cat_19.view(262144, 512) ;  cat_19 = None
        mm_237 = torch.mm(view_1263,t_255) ;  view_1263 = t_255 = None
        view_1264 = mm_237.view(1, 512, 512, 256) ;  mm_237 = None
        add_114 = torch.add(add_113,view_1264) ;  add_113 = view_1264 = None
        split_tensor_111 = torch.split(add_107,512,dim = -2) 
        getitem_1120 = split_tensor_111[0];  split_tensor_111 = None
        _to_copy_723 = getitem_1120.to(dtype = torch.float32) ;  getitem_1120 = None
        native_layer_norm_default_150 = (torch.nn.functional.layer_norm(_to_copy_723,[256],arg326_1,arg327_1,1e-05),) ;  _to_copy_723 = arg326_1 = arg327_1 = None
        getitem_1121 = native_layer_norm_default_150[0]
        _to_copy_724 = arg328_1.to(dtype = torch.bfloat16) ;  arg328_1 = None
        _to_copy_725 = getitem_1121.to(dtype = torch.bfloat16) ;  getitem_1121 = None
        t_256 = _to_copy_724.t() ;  _to_copy_724 = None
        view_1265 = _to_copy_725.view(262144, 256) ;  _to_copy_725 = None
        mm_238 = torch.mm(view_1265,t_256) ;  view_1265 = t_256 = None
        view_1266 = mm_238.view(1, 512, 512, 1024) ;  mm_238 = None
        split_tensor_112 = torch.split(view_1266,512,dim = -1) ;  view_1266 = None
        getitem_1124 = split_tensor_112[0]
        getitem_1125 = split_tensor_112[1];  split_tensor_112 = None
        silu_32 = torch.nn.functional.silu(getitem_1124) ;  getitem_1124 = None
        mul_143 = torch.mul(silu_32,getitem_1125) ;  silu_32 = getitem_1125 = None
        _to_copy_726 = arg329_1.to(dtype = torch.bfloat16) ;  arg329_1 = None
        t_257 = _to_copy_726.t() ;  _to_copy_726 = None
        view_1268 = mul_143.view(262144, 512) ;  mul_143 = None
        mm_239 = torch.mm(view_1268,t_257) ;  view_1268 = t_257 = None
        view_1269 = mm_239.view(1, 512, 512, 256) ;  mm_239 = None
        add_115 = torch.add(add_114,view_1269) ;  add_114 = view_1269 = None
        _to_copy_727 = add_111.to(dtype = torch.float32) 
        native_layer_norm_default_151 = (torch.nn.functional.layer_norm(_to_copy_727,[384],arg344_1,arg345_1,1e-05),) ;  _to_copy_727 = arg344_1 = arg345_1 = None
        getitem_1126 = native_layer_norm_default_151[0]
        _to_copy_728 = add_107.to(dtype = torch.float32) ;  add_107 = None
        native_layer_norm_default_152 = (torch.nn.functional.layer_norm(_to_copy_728,[256],arg346_1,arg347_1,1e-05),) ;  _to_copy_728 = arg346_1 = arg347_1 = None
        getitem_1129 = native_layer_norm_default_152[0]
        _to_copy_729 = arg348_1.to(dtype = torch.bfloat16) ;  arg348_1 = None
        _to_copy_730 = getitem_1129.to(dtype = torch.bfloat16) ;  getitem_1129 = None
        t_258 = _to_copy_729.t() ;  _to_copy_729 = None
        view_1270 = _to_copy_730.view(262144, 256) ;  _to_copy_730 = None
        mm_240 = torch.mm(view_1270,t_258) ;  view_1270 = t_258 = None
        view_1271 = mm_240.view(1, 512, 512, 16) ;  mm_240 = None
        permute_737 = view_1271.permute(0, 3, 1, 2) ;  view_1271 = None
        view_1272 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_89 = torch.bitwise_not(view_1272) ;  view_1272 = None
        masked_fill_89 = permute_737.masked_fill(bitwise_not_89,-10000) ;  permute_737 = bitwise_not_89 = None
        _to_copy_731 = getitem_1126.to(dtype = torch.bfloat16) ;  getitem_1126 = None
        _to_copy_732 = arg350_1.to(dtype = torch.bfloat16) ;  arg350_1 = None
        unsqueeze_481 = torch.unsqueeze(_to_copy_731,3) ;  _to_copy_731 = None
        unsqueeze_482 = torch.unsqueeze(unsqueeze_481,4) ;  unsqueeze_481 = None
        unsqueeze_483 = torch.unsqueeze(unsqueeze_482,5) ;  unsqueeze_482 = None
        permute_738 = unsqueeze_483.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_483 = None
        unsqueeze_484 = torch.unsqueeze(_to_copy_732,4) ;  _to_copy_732 = None
        unsqueeze_485 = torch.unsqueeze(unsqueeze_484,5) ;  unsqueeze_484 = None
        permute_739 = unsqueeze_485.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_485 = None
        permute_740 = permute_738.permute(3, 5, 0, 1, 2, 4) ;  permute_738 = None
        view_1273 = permute_740.view(1, 512, 384) ;  permute_740 = None
        permute_741 = permute_739.permute(5, 0, 1, 2, 4, 3) ;  permute_739 = None
        view_1274 = permute_741.view(1, 384, 1536) ;  permute_741 = None
        bmm_116 = torch.bmm(view_1273,view_1274) ;  view_1273 = view_1274 = None
        view_1275 = bmm_116.view(512, 1, 4, 1, 16, 24) ;  bmm_116 = None
        permute_742 = view_1275.permute(2, 3, 4, 0, 5, 1) ;  view_1275 = None
        view_1276 = permute_742.view(4, 1, 16, 512, 24) ;  permute_742 = None
        unbind_int_63 = torch.unbind(view_1276) ;  view_1276 = None
        getitem_1132 = unbind_int_63[0]
        getitem_1133 = unbind_int_63[1]
        getitem_1134 = unbind_int_63[2]
        getitem_1135 = unbind_int_63[3];  unbind_int_63 = None
        view_1277 = arg349_1.view(1, 16, 1, 24) ;  arg349_1 = None
        add_116 = torch.add(getitem_1132,view_1277) ;  getitem_1132 = view_1277 = None
        _to_copy_733 = add_116.to(dtype = torch.bfloat16) ;  add_116 = None
        expand_66 = masked_fill_89.expand(1, 16, 512, 512) ;  masked_fill_89 = None
        _scaled_dot_product_efficient_attention_default_35 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_733,getitem_1133,getitem_1134,expand_66,False),) ;  _to_copy_733 = getitem_1133 = getitem_1134 = expand_66 = None
        getitem_1136 = _scaled_dot_product_efficient_attention_default_35[0]
        add_117 = torch.add(getitem_1135,1) ;  getitem_1135 = None
        sigmoid_89 = torch.sigmoid(add_117) ;  add_117 = None
        mul_144 = torch.mul(getitem_1136,sigmoid_89) ;  getitem_1136 = sigmoid_89 = None
        _to_copy_734 = arg351_1.to(dtype = torch.bfloat16) ;  arg351_1 = None
        unsqueeze_486 = torch.unsqueeze(mul_144,4) ;  mul_144 = None
        permute_743 = unsqueeze_486.permute(0, 2, 4, 3, 1) ;  unsqueeze_486 = None
        unsqueeze_487 = torch.unsqueeze(_to_copy_734,3) ;  _to_copy_734 = None
        unsqueeze_488 = torch.unsqueeze(unsqueeze_487,4) ;  unsqueeze_487 = None
        permute_744 = unsqueeze_488.permute(3, 4, 2, 1, 0) ;  unsqueeze_488 = None
        permute_745 = permute_743.permute(1, 3, 4, 0, 2) ;  permute_743 = None
        clone_133 = torch.clone(permute_745,memory_format = torch.contiguous_format) ;  permute_745 = None
        _unsafe_view_118 = clone_133.view(1, 512, 384) ;  clone_133 = None
        permute_746 = permute_744.permute(3, 4, 0, 2, 1) ;  permute_744 = None
        clone_134 = torch.clone(permute_746,memory_format = torch.contiguous_format) ;  permute_746 = None
        _unsafe_view_119 = clone_134.view(1, 384, 384) ;  clone_134 = None
        bmm_117 = torch.bmm(_unsafe_view_118,_unsafe_view_119) ;  _unsafe_view_118 = _unsafe_view_119 = None
        view_1278 = bmm_117.view(512, 1, 1, 1, 384) ;  bmm_117 = None
        permute_747 = view_1278.permute(3, 0, 4, 1, 2) ;  view_1278 = None
        view_1279 = permute_747.view(1, 512, 384) ;  permute_747 = None
        unsqueeze_489 = torch.unsqueeze(arg1406_1,-1) 
        mul_145 = torch.mul(view_1279,unsqueeze_489) ;  view_1279 = unsqueeze_489 = None
        add_118 = torch.add(add_111,mul_145) ;  mul_145 = None
        split_tensor_113 = torch.split(add_111,512,dim = -2) ;  add_111 = None
        getitem_1140 = split_tensor_113[0];  split_tensor_113 = None
        _to_copy_735 = getitem_1140.to(dtype = torch.float32) ;  getitem_1140 = None
        native_layer_norm_default_153 = (torch.nn.functional.layer_norm(_to_copy_735,[384],arg340_1,arg341_1,1e-05),) ;  _to_copy_735 = arg340_1 = arg341_1 = None
        getitem_1141 = native_layer_norm_default_153[0]
        _to_copy_736 = arg342_1.to(dtype = torch.bfloat16) ;  arg342_1 = None
        _to_copy_737 = getitem_1141.to(dtype = torch.bfloat16) ;  getitem_1141 = None
        t_259 = _to_copy_736.t() ;  _to_copy_736 = None
        view_1280 = _to_copy_737.view(512, 384) ;  _to_copy_737 = None
        mm_241 = torch.mm(view_1280,t_259) ;  view_1280 = t_259 = None
        view_1281 = mm_241.view(1, 512, 1536) ;  mm_241 = None
        split_tensor_114 = torch.split(view_1281,768,dim = -1) ;  view_1281 = None
        getitem_1144 = split_tensor_114[0]
        getitem_1145 = split_tensor_114[1];  split_tensor_114 = None
        silu_33 = torch.nn.functional.silu(getitem_1144) ;  getitem_1144 = None
        mul_146 = torch.mul(silu_33,getitem_1145) ;  silu_33 = getitem_1145 = None
        _to_copy_738 = arg343_1.to(dtype = torch.bfloat16) ;  arg343_1 = None
        t_260 = _to_copy_738.t() ;  _to_copy_738 = None
        view_1283 = mul_146.view(512, 768) ;  mul_146 = None
        mm_242 = torch.mm(view_1283,t_260) ;  view_1283 = t_260 = None
        view_1284 = mm_242.view(1, 512, 384) ;  mm_242 = None
        add_119 = torch.add(add_118,view_1284) ;  add_118 = view_1284 = None
        _to_copy_739 = add_115.to(dtype = torch.float32) 
        native_layer_norm_default_154 = (torch.nn.functional.layer_norm(_to_copy_739,[256],arg356_1,arg357_1,1e-05),) ;  _to_copy_739 = arg356_1 = arg357_1 = None
        getitem_1146 = native_layer_norm_default_154[0]
        split_with_sizes_default_28 = torch.split(arg359_1,[512,512]) ;  arg359_1 = None
        getitem_1149 = split_with_sizes_default_28[0]
        getitem_1150 = split_with_sizes_default_28[1];  split_with_sizes_default_28 = None
        split_with_sizes_default_29 = torch.split(arg360_1,[512,512,256]) ;  arg360_1 = None
        getitem_1151 = split_with_sizes_default_29[0]
        getitem_1152 = split_with_sizes_default_29[1]
        getitem_1153 = split_with_sizes_default_29[2];  split_with_sizes_default_29 = None
        _to_copy_740 = getitem_1149.to(dtype = torch.bfloat16) ;  getitem_1149 = None
        _to_copy_741 = getitem_1146.to(dtype = torch.bfloat16) 
        t_261 = _to_copy_740.t() ;  _to_copy_740 = None
        view_1285 = _to_copy_741.view(262144, 256) ;  _to_copy_741 = None
        mm_243 = torch.mm(view_1285,t_261) ;  view_1285 = t_261 = None
        view_1286 = mm_243.view(1, 512, 512, 512) ;  mm_243 = None
        _to_copy_742 = getitem_1151.to(dtype = torch.bfloat16) ;  getitem_1151 = None
        _to_copy_743 = getitem_1146.to(dtype = torch.bfloat16) 
        t_262 = _to_copy_742.t() ;  _to_copy_742 = None
        view_1287 = _to_copy_743.view(262144, 256) ;  _to_copy_743 = None
        mm_244 = torch.mm(view_1287,t_262) ;  view_1287 = t_262 = None
        view_1288 = mm_244.view(1, 512, 512, 512) ;  mm_244 = None
        sigmoid_90 = torch.sigmoid(view_1288) ;  view_1288 = None
        mul_147 = torch.mul(view_1286,sigmoid_90) ;  view_1286 = sigmoid_90 = None
        unsqueeze_490 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_90 = torch.bitwise_not(unsqueeze_490) ;  unsqueeze_490 = None
        masked_fill_90 = mul_147.masked_fill(bitwise_not_90,0) ;  mul_147 = bitwise_not_90 = None
        split_tensor_115 = torch.split(masked_fill_90,256,dim = -1) 
        getitem_1156 = split_tensor_115[0]
        unsqueeze_493 = torch.unsqueeze(getitem_1156,4) ;  getitem_1156 = None
        permute_752 = unsqueeze_493.permute(0, 1, 4, 3, 2) ;  unsqueeze_493 = None
        permute_753 = permute_752.permute(3, 1, 4, 0, 2) ;  permute_752 = None
        view_1291 = permute_753.view(256, 512, 512) ;  permute_753 = None
        split_tensor_116 = torch.split(masked_fill_90,256,dim = -1) ;  masked_fill_90 = None
        getitem_1159 = split_tensor_116[1];  split_tensor_116 = None
        unsqueeze_494 = torch.unsqueeze(getitem_1159,4) ;  getitem_1159 = None
        permute_754 = unsqueeze_494.permute(0, 4, 1, 3, 2) ;  unsqueeze_494 = None
        permute_755 = permute_754.permute(3, 4, 0, 2, 1) ;  permute_754 = None
        view_1292 = permute_755.view(256, 512, 512) ;  permute_755 = None
        bmm_118 = torch.bmm(view_1291,view_1292) ;  view_1291 = view_1292 = None
        view_1293 = bmm_118.view(256, 512, 1, 1, 512) ;  bmm_118 = None
        permute_756 = view_1293.permute(3, 1, 4, 0, 2) ;  view_1293 = None
        view_1294 = permute_756.view(1, 512, 512, 256) ;  permute_756 = None
        _to_copy_744 = getitem_1150.to(dtype = torch.bfloat16) ;  getitem_1150 = None
        _to_copy_745 = getitem_1146.to(dtype = torch.bfloat16) 
        t_263 = _to_copy_744.t() ;  _to_copy_744 = None
        view_1295 = _to_copy_745.view(262144, 256) ;  _to_copy_745 = None
        mm_245 = torch.mm(view_1295,t_263) ;  view_1295 = t_263 = None
        view_1296 = mm_245.view(1, 512, 512, 512) ;  mm_245 = None
        _to_copy_746 = getitem_1152.to(dtype = torch.bfloat16) ;  getitem_1152 = None
        _to_copy_747 = getitem_1146.to(dtype = torch.bfloat16) 
        t_264 = _to_copy_746.t() ;  _to_copy_746 = None
        view_1297 = _to_copy_747.view(262144, 256) ;  _to_copy_747 = None
        mm_246 = torch.mm(view_1297,t_264) ;  view_1297 = t_264 = None
        view_1298 = mm_246.view(1, 512, 512, 512) ;  mm_246 = None
        sigmoid_91 = torch.sigmoid(view_1298) ;  view_1298 = None
        mul_148 = torch.mul(view_1296,sigmoid_91) ;  view_1296 = sigmoid_91 = None
        view_1299 = mul_148.view(262144, 512) ;  mul_148 = None
        view_1300 = view_1299.view(1, 512, 512, 512) ;  view_1299 = None
        transpose_28 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_495 = torch.unsqueeze(transpose_28,3) ;  transpose_28 = None
        clone_135 = torch.clone(unsqueeze_495,memory_format = torch.contiguous_format) ;  unsqueeze_495 = None
        bitwise_not_91 = torch.bitwise_not(clone_135) ;  clone_135 = None
        masked_fill_91 = view_1300.masked_fill(bitwise_not_91,0) ;  view_1300 = bitwise_not_91 = None
        view_1301 = masked_fill_91.view(262144, 512) ;  masked_fill_91 = None
        view_1305 = view_1301.view(1, 512, 512, 512) 
        split_tensor_117 = torch.split(view_1305,256,dim = -1) ;  view_1305 = None
        getitem_1162 = split_tensor_117[0]
        unsqueeze_498 = torch.unsqueeze(getitem_1162,4) ;  getitem_1162 = None
        permute_761 = unsqueeze_498.permute(0, 2, 4, 3, 1) ;  unsqueeze_498 = None
        permute_762 = permute_761.permute(3, 1, 4, 0, 2) ;  permute_761 = None
        view_1306 = permute_762.view(256, 512, 512) ;  permute_762 = None
        view_1307 = view_1301.view(1, 512, 512, 512) ;  view_1301 = None
        split_tensor_118 = torch.split(view_1307,256,dim = -1) ;  view_1307 = None
        getitem_1165 = split_tensor_118[1];  split_tensor_118 = None
        unsqueeze_499 = torch.unsqueeze(getitem_1165,4) ;  getitem_1165 = None
        permute_763 = unsqueeze_499.permute(0, 4, 2, 3, 1) ;  unsqueeze_499 = None
        permute_764 = permute_763.permute(3, 4, 0, 2, 1) ;  permute_763 = None
        view_1308 = permute_764.view(256, 512, 512) ;  permute_764 = None
        bmm_119 = torch.bmm(view_1306,view_1308) ;  view_1306 = view_1308 = None
        view_1309 = bmm_119.view(256, 512, 1, 1, 512) ;  bmm_119 = None
        permute_765 = view_1309.permute(3, 1, 4, 0, 2) ;  view_1309 = None
        view_1310 = permute_765.view(1, 512, 512, 256) ;  permute_765 = None
        _to_copy_748 = view_1294.to(dtype = torch.float32) ;  view_1294 = None
        native_layer_norm_default_155 = (torch.nn.functional.layer_norm(_to_copy_748,[256],None,None,1e-05),) ;  _to_copy_748 = None
        getitem_1166 = native_layer_norm_default_155[0]
        _to_copy_749 = view_1310.to(dtype = torch.float32) ;  view_1310 = None
        native_layer_norm_default_156 = (torch.nn.functional.layer_norm(_to_copy_749,[256],None,None,1e-05),) ;  _to_copy_749 = None
        getitem_1169 = native_layer_norm_default_156[0]
        add_120 = torch.add(getitem_1166,getitem_1169) ;  getitem_1166 = getitem_1169 = None
        _to_copy_750 = arg358_1.to(dtype = torch.bfloat16) ;  arg358_1 = None
        _to_copy_751 = add_120.to(dtype = torch.bfloat16) ;  add_120 = None
        t_265 = _to_copy_750.t() ;  _to_copy_750 = None
        view_1311 = _to_copy_751.view(262144, 256) ;  _to_copy_751 = None
        mm_247 = torch.mm(view_1311,t_265) ;  view_1311 = t_265 = None
        view_1312 = mm_247.view(1, 512, 512, 256) ;  mm_247 = None
        _to_copy_752 = getitem_1153.to(dtype = torch.bfloat16) ;  getitem_1153 = None
        _to_copy_753 = getitem_1146.to(dtype = torch.bfloat16) ;  getitem_1146 = None
        t_266 = _to_copy_752.t() ;  _to_copy_752 = None
        view_1313 = _to_copy_753.view(262144, 256) ;  _to_copy_753 = None
        mm_248 = torch.mm(view_1313,t_266) ;  view_1313 = t_266 = None
        view_1314 = mm_248.view(1, 512, 512, 256) ;  mm_248 = None
        sigmoid_92 = torch.sigmoid(view_1314) ;  view_1314 = None
        mul_149 = torch.mul(view_1312,sigmoid_92) ;  view_1312 = sigmoid_92 = None
        add_121 = torch.add(add_115,mul_149) ;  mul_149 = None
        _to_copy_754 = add_115.to(dtype = torch.float32) 
        native_layer_norm_default_157 = (torch.nn.functional.layer_norm(_to_copy_754,[256],None,None,1e-05),) ;  _to_copy_754 = None
        getitem_1172 = native_layer_norm_default_157[0]
        _to_copy_755 = arg362_1.to(dtype = torch.bfloat16) ;  arg362_1 = None
        _to_copy_756 = getitem_1172.to(dtype = torch.bfloat16) 
        t_267 = _to_copy_755.t() ;  _to_copy_755 = None
        view_1315 = _to_copy_756.view(262144, 256) ;  _to_copy_756 = None
        mm_249 = torch.mm(view_1315,t_267) ;  view_1315 = t_267 = None
        view_1316 = mm_249.view(1, 512, 512, 8) ;  mm_249 = None
        view_1317 = view_1316.view(1, 512, 512, 2, 4) ;  view_1316 = None
        permute_766 = view_1317.permute(0, 3, 4, 1, 2) ;  view_1317 = None
        view_1318 = permute_766.view(1, 2, 4, 1, 512, 512) ;  permute_766 = None
        view_1319 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_92 = torch.bitwise_not(view_1319) ;  view_1319 = None
        masked_fill_92 = view_1318.masked_fill(bitwise_not_92,-10000) ;  view_1318 = bitwise_not_92 = None
        view_1320 = masked_fill_92.view(1, 2, 4, 512, 512) ;  masked_fill_92 = None
        permute_767 = view_1320.permute(1, 0, 2, 3, 4) ;  view_1320 = None
        view_1321 = permute_767.view(2, 4, 1, 512, 512) ;  permute_767 = None
        _to_copy_757 = arg363_1.to(dtype = torch.bfloat16) ;  arg363_1 = None
        _to_copy_758 = getitem_1172.to(dtype = torch.bfloat16) 
        t_268 = _to_copy_757.t() ;  _to_copy_757 = None
        view_1322 = _to_copy_758.view(262144, 256) ;  _to_copy_758 = None
        mm_250 = torch.mm(view_1322,t_268) ;  view_1322 = t_268 = None
        view_1323 = mm_250.view(1, 512, 512, 1024) ;  mm_250 = None
        select_29 = torch.select(view_1321,0,0) 
        view_1324 = view_1323.view(1, 512, 512, 4, 4, 64) ;  view_1323 = None
        permute_768 = view_1324.permute(4, 0, 3, 1, 2, 5) ;  view_1324 = None
        view_1325 = permute_768.view(4, 4, 512, 512, 64) ;  permute_768 = None
        unbind_int_64 = torch.unbind(view_1325) ;  view_1325 = None
        getitem_1175 = unbind_int_64[0]
        getitem_1176 = unbind_int_64[1]
        getitem_1177 = unbind_int_64[2]
        getitem_1178 = unbind_int_64[3];  unbind_int_64 = None
        expand_67 = select_29.expand(4, 512, 512, 512) ;  select_29 = None
        _scaled_dot_product_efficient_attention_default_36 = (torch.nn.functional.scaled_dot_product_attention(getitem_1175,getitem_1176,getitem_1177,expand_67,False),) ;  getitem_1175 = getitem_1176 = getitem_1177 = expand_67 = None
        getitem_1179 = _scaled_dot_product_efficient_attention_default_36[0]
        sigmoid_93 = torch.sigmoid(getitem_1178) ;  getitem_1178 = None
        mul_150 = torch.mul(getitem_1179,sigmoid_93) ;  getitem_1179 = sigmoid_93 = None
        view_1326 = mul_150.view(1, 4, 512, 512, 64) ;  mul_150 = None
        permute_769 = view_1326.permute(0, 2, 3, 1, 4) ;  view_1326 = None
        clone_136 = torch.clone(permute_769,memory_format = torch.contiguous_format) ;  permute_769 = None
        _unsafe_view_120 = clone_136.view(1, 512, 512, 256) ;  clone_136 = None
        transpose_29 = torch.transpose(getitem_1172,1,2) ;  getitem_1172 = None
        _to_copy_759 = arg364_1.to(dtype = torch.bfloat16) ;  arg364_1 = None
        _to_copy_760 = transpose_29.to(dtype = torch.bfloat16) ;  transpose_29 = None
        t_269 = _to_copy_759.t() ;  _to_copy_759 = None
        expand_68 = _to_copy_760.expand(1, 512, 512, 256) ;  _to_copy_760 = None
        view_1327 = expand_68.view(512, 512, 256) ;  expand_68 = None
        expand_69 = t_269.expand(1, 512, 256, 1024) ;  t_269 = None
        view_1328 = expand_69.view(512, 256, 1024) ;  expand_69 = None
        bmm_120 = torch.bmm(view_1327,view_1328) ;  view_1327 = view_1328 = None
        view_1329 = bmm_120.view(1, 512, 512, 1024) ;  bmm_120 = None
        select_30 = torch.select(view_1321,0,1) ;  view_1321 = None
        view_1330 = view_1329.view(1, 512, 512, 4, 4, 64) ;  view_1329 = None
        permute_770 = view_1330.permute(4, 0, 3, 1, 2, 5) ;  view_1330 = None
        view_1331 = permute_770.view(4, 4, 512, 512, 64) ;  permute_770 = None
        unbind_int_65 = torch.unbind(view_1331) ;  view_1331 = None
        getitem_1183 = unbind_int_65[0]
        getitem_1184 = unbind_int_65[1]
        getitem_1185 = unbind_int_65[2]
        getitem_1186 = unbind_int_65[3];  unbind_int_65 = None
        expand_70 = select_30.expand(4, 512, 512, 512) ;  select_30 = None
        _scaled_dot_product_efficient_attention_default_37 = (torch.nn.functional.scaled_dot_product_attention(getitem_1183,getitem_1184,getitem_1185,expand_70,False),) ;  getitem_1183 = getitem_1184 = getitem_1185 = expand_70 = None
        getitem_1187 = _scaled_dot_product_efficient_attention_default_37[0]
        sigmoid_94 = torch.sigmoid(getitem_1186) ;  getitem_1186 = None
        mul_151 = torch.mul(getitem_1187,sigmoid_94) ;  getitem_1187 = sigmoid_94 = None
        view_1332 = mul_151.view(1, 4, 512, 512, 64) ;  mul_151 = None
        permute_771 = view_1332.permute(0, 2, 3, 1, 4) ;  view_1332 = None
        clone_137 = torch.clone(permute_771,memory_format = torch.contiguous_format) ;  permute_771 = None
        _unsafe_view_121 = clone_137.view(1, 512, 512, 256) ;  clone_137 = None
        cat_20 = torch.cat([_unsafe_view_120,_unsafe_view_121],dim = -1) ;  _unsafe_view_120 = _unsafe_view_121 = None
        slice_213 = arg361_1[0:] ;  arg361_1 = None
        unsqueeze_500 = torch.unsqueeze(slice_213,1) ;  slice_213 = None
        mul_152 = torch.mul(arg365_1,unsqueeze_500) ;  arg365_1 = unsqueeze_500 = None
        _to_copy_761 = mul_152.to(dtype = torch.bfloat16) ;  mul_152 = None
        t_270 = _to_copy_761.t() ;  _to_copy_761 = None
        view_1333 = cat_20.view(262144, 512) ;  cat_20 = None
        mm_251 = torch.mm(view_1333,t_270) ;  view_1333 = t_270 = None
        view_1334 = mm_251.view(1, 512, 512, 256) ;  mm_251 = None
        add_122 = torch.add(add_121,view_1334) ;  add_121 = view_1334 = None
        split_tensor_119 = torch.split(add_115,512,dim = -2) 
        getitem_1191 = split_tensor_119[0];  split_tensor_119 = None
        _to_copy_762 = getitem_1191.to(dtype = torch.float32) ;  getitem_1191 = None
        native_layer_norm_default_158 = (torch.nn.functional.layer_norm(_to_copy_762,[256],arg352_1,arg353_1,1e-05),) ;  _to_copy_762 = arg352_1 = arg353_1 = None
        getitem_1192 = native_layer_norm_default_158[0]
        _to_copy_763 = arg354_1.to(dtype = torch.bfloat16) ;  arg354_1 = None
        _to_copy_764 = getitem_1192.to(dtype = torch.bfloat16) ;  getitem_1192 = None
        t_271 = _to_copy_763.t() ;  _to_copy_763 = None
        view_1335 = _to_copy_764.view(262144, 256) ;  _to_copy_764 = None
        mm_252 = torch.mm(view_1335,t_271) ;  view_1335 = t_271 = None
        view_1336 = mm_252.view(1, 512, 512, 1024) ;  mm_252 = None
        split_tensor_120 = torch.split(view_1336,512,dim = -1) ;  view_1336 = None
        getitem_1195 = split_tensor_120[0]
        getitem_1196 = split_tensor_120[1];  split_tensor_120 = None
        silu_34 = torch.nn.functional.silu(getitem_1195) ;  getitem_1195 = None
        mul_153 = torch.mul(silu_34,getitem_1196) ;  silu_34 = getitem_1196 = None
        _to_copy_765 = arg355_1.to(dtype = torch.bfloat16) ;  arg355_1 = None
        t_272 = _to_copy_765.t() ;  _to_copy_765 = None
        view_1338 = mul_153.view(262144, 512) ;  mul_153 = None
        mm_253 = torch.mm(view_1338,t_272) ;  view_1338 = t_272 = None
        view_1339 = mm_253.view(1, 512, 512, 256) ;  mm_253 = None
        add_123 = torch.add(add_122,view_1339) ;  add_122 = view_1339 = None
        _to_copy_766 = add_119.to(dtype = torch.float32) 
        native_layer_norm_default_159 = (torch.nn.functional.layer_norm(_to_copy_766,[384],arg370_1,arg371_1,1e-05),) ;  _to_copy_766 = arg370_1 = arg371_1 = None
        getitem_1197 = native_layer_norm_default_159[0]
        _to_copy_767 = add_115.to(dtype = torch.float32) ;  add_115 = None
        native_layer_norm_default_160 = (torch.nn.functional.layer_norm(_to_copy_767,[256],arg372_1,arg373_1,1e-05),) ;  _to_copy_767 = arg372_1 = arg373_1 = None
        getitem_1200 = native_layer_norm_default_160[0]
        _to_copy_768 = arg374_1.to(dtype = torch.bfloat16) ;  arg374_1 = None
        _to_copy_769 = getitem_1200.to(dtype = torch.bfloat16) ;  getitem_1200 = None
        t_273 = _to_copy_768.t() ;  _to_copy_768 = None
        view_1340 = _to_copy_769.view(262144, 256) ;  _to_copy_769 = None
        mm_254 = torch.mm(view_1340,t_273) ;  view_1340 = t_273 = None
        view_1341 = mm_254.view(1, 512, 512, 16) ;  mm_254 = None
        permute_772 = view_1341.permute(0, 3, 1, 2) ;  view_1341 = None
        view_1342 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_93 = torch.bitwise_not(view_1342) ;  view_1342 = None
        masked_fill_93 = permute_772.masked_fill(bitwise_not_93,-10000) ;  permute_772 = bitwise_not_93 = None
        _to_copy_770 = getitem_1197.to(dtype = torch.bfloat16) ;  getitem_1197 = None
        _to_copy_771 = arg376_1.to(dtype = torch.bfloat16) ;  arg376_1 = None
        unsqueeze_501 = torch.unsqueeze(_to_copy_770,3) ;  _to_copy_770 = None
        unsqueeze_502 = torch.unsqueeze(unsqueeze_501,4) ;  unsqueeze_501 = None
        unsqueeze_503 = torch.unsqueeze(unsqueeze_502,5) ;  unsqueeze_502 = None
        permute_773 = unsqueeze_503.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_503 = None
        unsqueeze_504 = torch.unsqueeze(_to_copy_771,4) ;  _to_copy_771 = None
        unsqueeze_505 = torch.unsqueeze(unsqueeze_504,5) ;  unsqueeze_504 = None
        permute_774 = unsqueeze_505.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_505 = None
        permute_775 = permute_773.permute(3, 5, 0, 1, 2, 4) ;  permute_773 = None
        view_1343 = permute_775.view(1, 512, 384) ;  permute_775 = None
        permute_776 = permute_774.permute(5, 0, 1, 2, 4, 3) ;  permute_774 = None
        view_1344 = permute_776.view(1, 384, 1536) ;  permute_776 = None
        bmm_121 = torch.bmm(view_1343,view_1344) ;  view_1343 = view_1344 = None
        view_1345 = bmm_121.view(512, 1, 4, 1, 16, 24) ;  bmm_121 = None
        permute_777 = view_1345.permute(2, 3, 4, 0, 5, 1) ;  view_1345 = None
        view_1346 = permute_777.view(4, 1, 16, 512, 24) ;  permute_777 = None
        unbind_int_66 = torch.unbind(view_1346) ;  view_1346 = None
        getitem_1203 = unbind_int_66[0]
        getitem_1204 = unbind_int_66[1]
        getitem_1205 = unbind_int_66[2]
        getitem_1206 = unbind_int_66[3];  unbind_int_66 = None
        view_1347 = arg375_1.view(1, 16, 1, 24) ;  arg375_1 = None
        add_124 = torch.add(getitem_1203,view_1347) ;  getitem_1203 = view_1347 = None
        _to_copy_772 = add_124.to(dtype = torch.bfloat16) ;  add_124 = None
        expand_71 = masked_fill_93.expand(1, 16, 512, 512) ;  masked_fill_93 = None
        _scaled_dot_product_efficient_attention_default_38 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_772,getitem_1204,getitem_1205,expand_71,False),) ;  _to_copy_772 = getitem_1204 = getitem_1205 = expand_71 = None
        getitem_1207 = _scaled_dot_product_efficient_attention_default_38[0]
        add_125 = torch.add(getitem_1206,1) ;  getitem_1206 = None
        sigmoid_95 = torch.sigmoid(add_125) ;  add_125 = None
        mul_154 = torch.mul(getitem_1207,sigmoid_95) ;  getitem_1207 = sigmoid_95 = None
        _to_copy_773 = arg377_1.to(dtype = torch.bfloat16) ;  arg377_1 = None
        unsqueeze_506 = torch.unsqueeze(mul_154,4) ;  mul_154 = None
        permute_778 = unsqueeze_506.permute(0, 2, 4, 3, 1) ;  unsqueeze_506 = None
        unsqueeze_507 = torch.unsqueeze(_to_copy_773,3) ;  _to_copy_773 = None
        unsqueeze_508 = torch.unsqueeze(unsqueeze_507,4) ;  unsqueeze_507 = None
        permute_779 = unsqueeze_508.permute(3, 4, 2, 1, 0) ;  unsqueeze_508 = None
        permute_780 = permute_778.permute(1, 3, 4, 0, 2) ;  permute_778 = None
        clone_138 = torch.clone(permute_780,memory_format = torch.contiguous_format) ;  permute_780 = None
        _unsafe_view_122 = clone_138.view(1, 512, 384) ;  clone_138 = None
        permute_781 = permute_779.permute(3, 4, 0, 2, 1) ;  permute_779 = None
        clone_139 = torch.clone(permute_781,memory_format = torch.contiguous_format) ;  permute_781 = None
        _unsafe_view_123 = clone_139.view(1, 384, 384) ;  clone_139 = None
        bmm_122 = torch.bmm(_unsafe_view_122,_unsafe_view_123) ;  _unsafe_view_122 = _unsafe_view_123 = None
        view_1348 = bmm_122.view(512, 1, 1, 1, 384) ;  bmm_122 = None
        permute_782 = view_1348.permute(3, 0, 4, 1, 2) ;  view_1348 = None
        view_1349 = permute_782.view(1, 512, 384) ;  permute_782 = None
        unsqueeze_509 = torch.unsqueeze(arg1406_1,-1) 
        mul_155 = torch.mul(view_1349,unsqueeze_509) ;  view_1349 = unsqueeze_509 = None
        add_126 = torch.add(add_119,mul_155) ;  mul_155 = None
        split_tensor_121 = torch.split(add_119,512,dim = -2) ;  add_119 = None
        getitem_1211 = split_tensor_121[0];  split_tensor_121 = None
        _to_copy_774 = getitem_1211.to(dtype = torch.float32) ;  getitem_1211 = None
        native_layer_norm_default_161 = (torch.nn.functional.layer_norm(_to_copy_774,[384],arg366_1,arg367_1,1e-05),) ;  _to_copy_774 = arg366_1 = arg367_1 = None
        getitem_1212 = native_layer_norm_default_161[0]
        _to_copy_775 = arg368_1.to(dtype = torch.bfloat16) ;  arg368_1 = None
        _to_copy_776 = getitem_1212.to(dtype = torch.bfloat16) ;  getitem_1212 = None
        t_274 = _to_copy_775.t() ;  _to_copy_775 = None
        view_1350 = _to_copy_776.view(512, 384) ;  _to_copy_776 = None
        mm_255 = torch.mm(view_1350,t_274) ;  view_1350 = t_274 = None
        view_1351 = mm_255.view(1, 512, 1536) ;  mm_255 = None
        split_tensor_122 = torch.split(view_1351,768,dim = -1) ;  view_1351 = None
        getitem_1215 = split_tensor_122[0]
        getitem_1216 = split_tensor_122[1];  split_tensor_122 = None
        silu_35 = torch.nn.functional.silu(getitem_1215) ;  getitem_1215 = None
        mul_156 = torch.mul(silu_35,getitem_1216) ;  silu_35 = getitem_1216 = None
        _to_copy_777 = arg369_1.to(dtype = torch.bfloat16) ;  arg369_1 = None
        t_275 = _to_copy_777.t() ;  _to_copy_777 = None
        view_1353 = mul_156.view(512, 768) ;  mul_156 = None
        mm_256 = torch.mm(view_1353,t_275) ;  view_1353 = t_275 = None
        view_1354 = mm_256.view(1, 512, 384) ;  mm_256 = None
        add_127 = torch.add(add_126,view_1354) ;  add_126 = view_1354 = None
        _to_copy_778 = add_123.to(dtype = torch.float32) 
        native_layer_norm_default_162 = (torch.nn.functional.layer_norm(_to_copy_778,[256],arg382_1,arg383_1,1e-05),) ;  _to_copy_778 = arg382_1 = arg383_1 = None
        getitem_1217 = native_layer_norm_default_162[0]
        split_with_sizes_default_30 = torch.split(arg385_1,[512,512]) ;  arg385_1 = None
        getitem_1220 = split_with_sizes_default_30[0]
        getitem_1221 = split_with_sizes_default_30[1];  split_with_sizes_default_30 = None
        split_with_sizes_default_31 = torch.split(arg386_1,[512,512,256]) ;  arg386_1 = None
        getitem_1222 = split_with_sizes_default_31[0]
        getitem_1223 = split_with_sizes_default_31[1]
        getitem_1224 = split_with_sizes_default_31[2];  split_with_sizes_default_31 = None
        _to_copy_779 = getitem_1220.to(dtype = torch.bfloat16) ;  getitem_1220 = None
        _to_copy_780 = getitem_1217.to(dtype = torch.bfloat16) 
        t_276 = _to_copy_779.t() ;  _to_copy_779 = None
        view_1355 = _to_copy_780.view(262144, 256) ;  _to_copy_780 = None
        mm_257 = torch.mm(view_1355,t_276) ;  view_1355 = t_276 = None
        view_1356 = mm_257.view(1, 512, 512, 512) ;  mm_257 = None
        _to_copy_781 = getitem_1222.to(dtype = torch.bfloat16) ;  getitem_1222 = None
        _to_copy_782 = getitem_1217.to(dtype = torch.bfloat16) 
        t_277 = _to_copy_781.t() ;  _to_copy_781 = None
        view_1357 = _to_copy_782.view(262144, 256) ;  _to_copy_782 = None
        mm_258 = torch.mm(view_1357,t_277) ;  view_1357 = t_277 = None
        view_1358 = mm_258.view(1, 512, 512, 512) ;  mm_258 = None
        sigmoid_96 = torch.sigmoid(view_1358) ;  view_1358 = None
        mul_157 = torch.mul(view_1356,sigmoid_96) ;  view_1356 = sigmoid_96 = None
        unsqueeze_510 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_94 = torch.bitwise_not(unsqueeze_510) ;  unsqueeze_510 = None
        masked_fill_94 = mul_157.masked_fill(bitwise_not_94,0) ;  mul_157 = bitwise_not_94 = None
        split_tensor_123 = torch.split(masked_fill_94,256,dim = -1) 
        getitem_1227 = split_tensor_123[0]
        unsqueeze_513 = torch.unsqueeze(getitem_1227,4) ;  getitem_1227 = None
        permute_787 = unsqueeze_513.permute(0, 1, 4, 3, 2) ;  unsqueeze_513 = None
        permute_788 = permute_787.permute(3, 1, 4, 0, 2) ;  permute_787 = None
        view_1361 = permute_788.view(256, 512, 512) ;  permute_788 = None
        split_tensor_124 = torch.split(masked_fill_94,256,dim = -1) ;  masked_fill_94 = None
        getitem_1230 = split_tensor_124[1];  split_tensor_124 = None
        unsqueeze_514 = torch.unsqueeze(getitem_1230,4) ;  getitem_1230 = None
        permute_789 = unsqueeze_514.permute(0, 4, 1, 3, 2) ;  unsqueeze_514 = None
        permute_790 = permute_789.permute(3, 4, 0, 2, 1) ;  permute_789 = None
        view_1362 = permute_790.view(256, 512, 512) ;  permute_790 = None
        bmm_123 = torch.bmm(view_1361,view_1362) ;  view_1361 = view_1362 = None
        view_1363 = bmm_123.view(256, 512, 1, 1, 512) ;  bmm_123 = None
        permute_791 = view_1363.permute(3, 1, 4, 0, 2) ;  view_1363 = None
        view_1364 = permute_791.view(1, 512, 512, 256) ;  permute_791 = None
        _to_copy_783 = getitem_1221.to(dtype = torch.bfloat16) ;  getitem_1221 = None
        _to_copy_784 = getitem_1217.to(dtype = torch.bfloat16) 
        t_278 = _to_copy_783.t() ;  _to_copy_783 = None
        view_1365 = _to_copy_784.view(262144, 256) ;  _to_copy_784 = None
        mm_259 = torch.mm(view_1365,t_278) ;  view_1365 = t_278 = None
        view_1366 = mm_259.view(1, 512, 512, 512) ;  mm_259 = None
        _to_copy_785 = getitem_1223.to(dtype = torch.bfloat16) ;  getitem_1223 = None
        _to_copy_786 = getitem_1217.to(dtype = torch.bfloat16) 
        t_279 = _to_copy_785.t() ;  _to_copy_785 = None
        view_1367 = _to_copy_786.view(262144, 256) ;  _to_copy_786 = None
        mm_260 = torch.mm(view_1367,t_279) ;  view_1367 = t_279 = None
        view_1368 = mm_260.view(1, 512, 512, 512) ;  mm_260 = None
        sigmoid_97 = torch.sigmoid(view_1368) ;  view_1368 = None
        mul_158 = torch.mul(view_1366,sigmoid_97) ;  view_1366 = sigmoid_97 = None
        view_1369 = mul_158.view(262144, 512) ;  mul_158 = None
        view_1370 = view_1369.view(1, 512, 512, 512) ;  view_1369 = None
        transpose_30 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_515 = torch.unsqueeze(transpose_30,3) ;  transpose_30 = None
        clone_140 = torch.clone(unsqueeze_515,memory_format = torch.contiguous_format) ;  unsqueeze_515 = None
        bitwise_not_95 = torch.bitwise_not(clone_140) ;  clone_140 = None
        masked_fill_95 = view_1370.masked_fill(bitwise_not_95,0) ;  view_1370 = bitwise_not_95 = None
        view_1371 = masked_fill_95.view(262144, 512) ;  masked_fill_95 = None
        view_1375 = view_1371.view(1, 512, 512, 512) 
        split_tensor_125 = torch.split(view_1375,256,dim = -1) ;  view_1375 = None
        getitem_1233 = split_tensor_125[0]
        unsqueeze_518 = torch.unsqueeze(getitem_1233,4) ;  getitem_1233 = None
        permute_796 = unsqueeze_518.permute(0, 2, 4, 3, 1) ;  unsqueeze_518 = None
        permute_797 = permute_796.permute(3, 1, 4, 0, 2) ;  permute_796 = None
        view_1376 = permute_797.view(256, 512, 512) ;  permute_797 = None
        view_1377 = view_1371.view(1, 512, 512, 512) ;  view_1371 = None
        split_tensor_126 = torch.split(view_1377,256,dim = -1) ;  view_1377 = None
        getitem_1236 = split_tensor_126[1];  split_tensor_126 = None
        unsqueeze_519 = torch.unsqueeze(getitem_1236,4) ;  getitem_1236 = None
        permute_798 = unsqueeze_519.permute(0, 4, 2, 3, 1) ;  unsqueeze_519 = None
        permute_799 = permute_798.permute(3, 4, 0, 2, 1) ;  permute_798 = None
        view_1378 = permute_799.view(256, 512, 512) ;  permute_799 = None
        bmm_124 = torch.bmm(view_1376,view_1378) ;  view_1376 = view_1378 = None
        view_1379 = bmm_124.view(256, 512, 1, 1, 512) ;  bmm_124 = None
        permute_800 = view_1379.permute(3, 1, 4, 0, 2) ;  view_1379 = None
        view_1380 = permute_800.view(1, 512, 512, 256) ;  permute_800 = None
        _to_copy_787 = view_1364.to(dtype = torch.float32) ;  view_1364 = None
        native_layer_norm_default_163 = (torch.nn.functional.layer_norm(_to_copy_787,[256],None,None,1e-05),) ;  _to_copy_787 = None
        getitem_1237 = native_layer_norm_default_163[0]
        _to_copy_788 = view_1380.to(dtype = torch.float32) ;  view_1380 = None
        native_layer_norm_default_164 = (torch.nn.functional.layer_norm(_to_copy_788,[256],None,None,1e-05),) ;  _to_copy_788 = None
        getitem_1240 = native_layer_norm_default_164[0]
        add_128 = torch.add(getitem_1237,getitem_1240) ;  getitem_1237 = getitem_1240 = None
        _to_copy_789 = arg384_1.to(dtype = torch.bfloat16) ;  arg384_1 = None
        _to_copy_790 = add_128.to(dtype = torch.bfloat16) ;  add_128 = None
        t_280 = _to_copy_789.t() ;  _to_copy_789 = None
        view_1381 = _to_copy_790.view(262144, 256) ;  _to_copy_790 = None
        mm_261 = torch.mm(view_1381,t_280) ;  view_1381 = t_280 = None
        view_1382 = mm_261.view(1, 512, 512, 256) ;  mm_261 = None
        _to_copy_791 = getitem_1224.to(dtype = torch.bfloat16) ;  getitem_1224 = None
        _to_copy_792 = getitem_1217.to(dtype = torch.bfloat16) ;  getitem_1217 = None
        t_281 = _to_copy_791.t() ;  _to_copy_791 = None
        view_1383 = _to_copy_792.view(262144, 256) ;  _to_copy_792 = None
        mm_262 = torch.mm(view_1383,t_281) ;  view_1383 = t_281 = None
        view_1384 = mm_262.view(1, 512, 512, 256) ;  mm_262 = None
        sigmoid_98 = torch.sigmoid(view_1384) ;  view_1384 = None
        mul_159 = torch.mul(view_1382,sigmoid_98) ;  view_1382 = sigmoid_98 = None
        add_129 = torch.add(add_123,mul_159) ;  mul_159 = None
        _to_copy_793 = add_123.to(dtype = torch.float32) 
        native_layer_norm_default_165 = (torch.nn.functional.layer_norm(_to_copy_793,[256],None,None,1e-05),) ;  _to_copy_793 = None
        getitem_1243 = native_layer_norm_default_165[0]
        _to_copy_794 = arg388_1.to(dtype = torch.bfloat16) ;  arg388_1 = None
        _to_copy_795 = getitem_1243.to(dtype = torch.bfloat16) 
        t_282 = _to_copy_794.t() ;  _to_copy_794 = None
        view_1385 = _to_copy_795.view(262144, 256) ;  _to_copy_795 = None
        mm_263 = torch.mm(view_1385,t_282) ;  view_1385 = t_282 = None
        view_1386 = mm_263.view(1, 512, 512, 8) ;  mm_263 = None
        view_1387 = view_1386.view(1, 512, 512, 2, 4) ;  view_1386 = None
        permute_801 = view_1387.permute(0, 3, 4, 1, 2) ;  view_1387 = None
        view_1388 = permute_801.view(1, 2, 4, 1, 512, 512) ;  permute_801 = None
        view_1389 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_96 = torch.bitwise_not(view_1389) ;  view_1389 = None
        masked_fill_96 = view_1388.masked_fill(bitwise_not_96,-10000) ;  view_1388 = bitwise_not_96 = None
        view_1390 = masked_fill_96.view(1, 2, 4, 512, 512) ;  masked_fill_96 = None
        permute_802 = view_1390.permute(1, 0, 2, 3, 4) ;  view_1390 = None
        view_1391 = permute_802.view(2, 4, 1, 512, 512) ;  permute_802 = None
        _to_copy_796 = arg389_1.to(dtype = torch.bfloat16) ;  arg389_1 = None
        _to_copy_797 = getitem_1243.to(dtype = torch.bfloat16) 
        t_283 = _to_copy_796.t() ;  _to_copy_796 = None
        view_1392 = _to_copy_797.view(262144, 256) ;  _to_copy_797 = None
        mm_264 = torch.mm(view_1392,t_283) ;  view_1392 = t_283 = None
        view_1393 = mm_264.view(1, 512, 512, 1024) ;  mm_264 = None
        select_31 = torch.select(view_1391,0,0) 
        view_1394 = view_1393.view(1, 512, 512, 4, 4, 64) ;  view_1393 = None
        permute_803 = view_1394.permute(4, 0, 3, 1, 2, 5) ;  view_1394 = None
        view_1395 = permute_803.view(4, 4, 512, 512, 64) ;  permute_803 = None
        unbind_int_67 = torch.unbind(view_1395) ;  view_1395 = None
        getitem_1246 = unbind_int_67[0]
        getitem_1247 = unbind_int_67[1]
        getitem_1248 = unbind_int_67[2]
        getitem_1249 = unbind_int_67[3];  unbind_int_67 = None
        expand_72 = select_31.expand(4, 512, 512, 512) ;  select_31 = None
        _scaled_dot_product_efficient_attention_default_39 = (torch.nn.functional.scaled_dot_product_attention(getitem_1246,getitem_1247,getitem_1248,expand_72,False),) ;  getitem_1246 = getitem_1247 = getitem_1248 = expand_72 = None
        getitem_1250 = _scaled_dot_product_efficient_attention_default_39[0]
        sigmoid_99 = torch.sigmoid(getitem_1249) ;  getitem_1249 = None
        mul_160 = torch.mul(getitem_1250,sigmoid_99) ;  getitem_1250 = sigmoid_99 = None
        view_1396 = mul_160.view(1, 4, 512, 512, 64) ;  mul_160 = None
        permute_804 = view_1396.permute(0, 2, 3, 1, 4) ;  view_1396 = None
        clone_141 = torch.clone(permute_804,memory_format = torch.contiguous_format) ;  permute_804 = None
        _unsafe_view_124 = clone_141.view(1, 512, 512, 256) ;  clone_141 = None
        transpose_31 = torch.transpose(getitem_1243,1,2) ;  getitem_1243 = None
        _to_copy_798 = arg390_1.to(dtype = torch.bfloat16) ;  arg390_1 = None
        _to_copy_799 = transpose_31.to(dtype = torch.bfloat16) ;  transpose_31 = None
        t_284 = _to_copy_798.t() ;  _to_copy_798 = None
        expand_73 = _to_copy_799.expand(1, 512, 512, 256) ;  _to_copy_799 = None
        view_1397 = expand_73.view(512, 512, 256) ;  expand_73 = None
        expand_74 = t_284.expand(1, 512, 256, 1024) ;  t_284 = None
        view_1398 = expand_74.view(512, 256, 1024) ;  expand_74 = None
        bmm_125 = torch.bmm(view_1397,view_1398) ;  view_1397 = view_1398 = None
        view_1399 = bmm_125.view(1, 512, 512, 1024) ;  bmm_125 = None
        select_32 = torch.select(view_1391,0,1) ;  view_1391 = None
        view_1400 = view_1399.view(1, 512, 512, 4, 4, 64) ;  view_1399 = None
        permute_805 = view_1400.permute(4, 0, 3, 1, 2, 5) ;  view_1400 = None
        view_1401 = permute_805.view(4, 4, 512, 512, 64) ;  permute_805 = None
        unbind_int_68 = torch.unbind(view_1401) ;  view_1401 = None
        getitem_1254 = unbind_int_68[0]
        getitem_1255 = unbind_int_68[1]
        getitem_1256 = unbind_int_68[2]
        getitem_1257 = unbind_int_68[3];  unbind_int_68 = None
        expand_75 = select_32.expand(4, 512, 512, 512) ;  select_32 = None
        _scaled_dot_product_efficient_attention_default_40 = (torch.nn.functional.scaled_dot_product_attention(getitem_1254,getitem_1255,getitem_1256,expand_75,False),) ;  getitem_1254 = getitem_1255 = getitem_1256 = expand_75 = None
        getitem_1258 = _scaled_dot_product_efficient_attention_default_40[0]
        sigmoid_100 = torch.sigmoid(getitem_1257) ;  getitem_1257 = None
        mul_161 = torch.mul(getitem_1258,sigmoid_100) ;  getitem_1258 = sigmoid_100 = None
        view_1402 = mul_161.view(1, 4, 512, 512, 64) ;  mul_161 = None
        permute_806 = view_1402.permute(0, 2, 3, 1, 4) ;  view_1402 = None
        clone_142 = torch.clone(permute_806,memory_format = torch.contiguous_format) ;  permute_806 = None
        _unsafe_view_125 = clone_142.view(1, 512, 512, 256) ;  clone_142 = None
        cat_21 = torch.cat([_unsafe_view_124,_unsafe_view_125],dim = -1) ;  _unsafe_view_124 = _unsafe_view_125 = None
        slice_214 = arg387_1[0:] ;  arg387_1 = None
        unsqueeze_520 = torch.unsqueeze(slice_214,1) ;  slice_214 = None
        mul_162 = torch.mul(arg391_1,unsqueeze_520) ;  arg391_1 = unsqueeze_520 = None
        _to_copy_800 = mul_162.to(dtype = torch.bfloat16) ;  mul_162 = None
        t_285 = _to_copy_800.t() ;  _to_copy_800 = None
        view_1403 = cat_21.view(262144, 512) ;  cat_21 = None
        mm_265 = torch.mm(view_1403,t_285) ;  view_1403 = t_285 = None
        view_1404 = mm_265.view(1, 512, 512, 256) ;  mm_265 = None
        add_130 = torch.add(add_129,view_1404) ;  add_129 = view_1404 = None
        split_tensor_127 = torch.split(add_123,512,dim = -2) 
        getitem_1262 = split_tensor_127[0];  split_tensor_127 = None
        _to_copy_801 = getitem_1262.to(dtype = torch.float32) ;  getitem_1262 = None
        native_layer_norm_default_166 = (torch.nn.functional.layer_norm(_to_copy_801,[256],arg378_1,arg379_1,1e-05),) ;  _to_copy_801 = arg378_1 = arg379_1 = None
        getitem_1263 = native_layer_norm_default_166[0]
        _to_copy_802 = arg380_1.to(dtype = torch.bfloat16) ;  arg380_1 = None
        _to_copy_803 = getitem_1263.to(dtype = torch.bfloat16) ;  getitem_1263 = None
        t_286 = _to_copy_802.t() ;  _to_copy_802 = None
        view_1405 = _to_copy_803.view(262144, 256) ;  _to_copy_803 = None
        mm_266 = torch.mm(view_1405,t_286) ;  view_1405 = t_286 = None
        view_1406 = mm_266.view(1, 512, 512, 1024) ;  mm_266 = None
        split_tensor_128 = torch.split(view_1406,512,dim = -1) ;  view_1406 = None
        getitem_1266 = split_tensor_128[0]
        getitem_1267 = split_tensor_128[1];  split_tensor_128 = None
        silu_36 = torch.nn.functional.silu(getitem_1266) ;  getitem_1266 = None
        mul_163 = torch.mul(silu_36,getitem_1267) ;  silu_36 = getitem_1267 = None
        _to_copy_804 = arg381_1.to(dtype = torch.bfloat16) ;  arg381_1 = None
        t_287 = _to_copy_804.t() ;  _to_copy_804 = None
        view_1408 = mul_163.view(262144, 512) ;  mul_163 = None
        mm_267 = torch.mm(view_1408,t_287) ;  view_1408 = t_287 = None
        view_1409 = mm_267.view(1, 512, 512, 256) ;  mm_267 = None
        add_131 = torch.add(add_130,view_1409) ;  add_130 = view_1409 = None
        _to_copy_805 = add_127.to(dtype = torch.float32) 
        native_layer_norm_default_167 = (torch.nn.functional.layer_norm(_to_copy_805,[384],arg396_1,arg397_1,1e-05),) ;  _to_copy_805 = arg396_1 = arg397_1 = None
        getitem_1268 = native_layer_norm_default_167[0]
        _to_copy_806 = add_123.to(dtype = torch.float32) ;  add_123 = None
        native_layer_norm_default_168 = (torch.nn.functional.layer_norm(_to_copy_806,[256],arg398_1,arg399_1,1e-05),) ;  _to_copy_806 = arg398_1 = arg399_1 = None
        getitem_1271 = native_layer_norm_default_168[0]
        _to_copy_807 = arg400_1.to(dtype = torch.bfloat16) ;  arg400_1 = None
        _to_copy_808 = getitem_1271.to(dtype = torch.bfloat16) ;  getitem_1271 = None
        t_288 = _to_copy_807.t() ;  _to_copy_807 = None
        view_1410 = _to_copy_808.view(262144, 256) ;  _to_copy_808 = None
        mm_268 = torch.mm(view_1410,t_288) ;  view_1410 = t_288 = None
        view_1411 = mm_268.view(1, 512, 512, 16) ;  mm_268 = None
        permute_807 = view_1411.permute(0, 3, 1, 2) ;  view_1411 = None
        view_1412 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_97 = torch.bitwise_not(view_1412) ;  view_1412 = None
        masked_fill_97 = permute_807.masked_fill(bitwise_not_97,-10000) ;  permute_807 = bitwise_not_97 = None
        _to_copy_809 = getitem_1268.to(dtype = torch.bfloat16) ;  getitem_1268 = None
        _to_copy_810 = arg402_1.to(dtype = torch.bfloat16) ;  arg402_1 = None
        unsqueeze_521 = torch.unsqueeze(_to_copy_809,3) ;  _to_copy_809 = None
        unsqueeze_522 = torch.unsqueeze(unsqueeze_521,4) ;  unsqueeze_521 = None
        unsqueeze_523 = torch.unsqueeze(unsqueeze_522,5) ;  unsqueeze_522 = None
        permute_808 = unsqueeze_523.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_523 = None
        unsqueeze_524 = torch.unsqueeze(_to_copy_810,4) ;  _to_copy_810 = None
        unsqueeze_525 = torch.unsqueeze(unsqueeze_524,5) ;  unsqueeze_524 = None
        permute_809 = unsqueeze_525.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_525 = None
        permute_810 = permute_808.permute(3, 5, 0, 1, 2, 4) ;  permute_808 = None
        view_1413 = permute_810.view(1, 512, 384) ;  permute_810 = None
        permute_811 = permute_809.permute(5, 0, 1, 2, 4, 3) ;  permute_809 = None
        view_1414 = permute_811.view(1, 384, 1536) ;  permute_811 = None
        bmm_126 = torch.bmm(view_1413,view_1414) ;  view_1413 = view_1414 = None
        view_1415 = bmm_126.view(512, 1, 4, 1, 16, 24) ;  bmm_126 = None
        permute_812 = view_1415.permute(2, 3, 4, 0, 5, 1) ;  view_1415 = None
        view_1416 = permute_812.view(4, 1, 16, 512, 24) ;  permute_812 = None
        unbind_int_69 = torch.unbind(view_1416) ;  view_1416 = None
        getitem_1274 = unbind_int_69[0]
        getitem_1275 = unbind_int_69[1]
        getitem_1276 = unbind_int_69[2]
        getitem_1277 = unbind_int_69[3];  unbind_int_69 = None
        view_1417 = arg401_1.view(1, 16, 1, 24) ;  arg401_1 = None
        add_132 = torch.add(getitem_1274,view_1417) ;  getitem_1274 = view_1417 = None
        _to_copy_811 = add_132.to(dtype = torch.bfloat16) ;  add_132 = None
        expand_76 = masked_fill_97.expand(1, 16, 512, 512) ;  masked_fill_97 = None
        _scaled_dot_product_efficient_attention_default_41 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_811,getitem_1275,getitem_1276,expand_76,False),) ;  _to_copy_811 = getitem_1275 = getitem_1276 = expand_76 = None
        getitem_1278 = _scaled_dot_product_efficient_attention_default_41[0]
        add_133 = torch.add(getitem_1277,1) ;  getitem_1277 = None
        sigmoid_101 = torch.sigmoid(add_133) ;  add_133 = None
        mul_164 = torch.mul(getitem_1278,sigmoid_101) ;  getitem_1278 = sigmoid_101 = None
        _to_copy_812 = arg403_1.to(dtype = torch.bfloat16) ;  arg403_1 = None
        unsqueeze_526 = torch.unsqueeze(mul_164,4) ;  mul_164 = None
        permute_813 = unsqueeze_526.permute(0, 2, 4, 3, 1) ;  unsqueeze_526 = None
        unsqueeze_527 = torch.unsqueeze(_to_copy_812,3) ;  _to_copy_812 = None
        unsqueeze_528 = torch.unsqueeze(unsqueeze_527,4) ;  unsqueeze_527 = None
        permute_814 = unsqueeze_528.permute(3, 4, 2, 1, 0) ;  unsqueeze_528 = None
        permute_815 = permute_813.permute(1, 3, 4, 0, 2) ;  permute_813 = None
        clone_143 = torch.clone(permute_815,memory_format = torch.contiguous_format) ;  permute_815 = None
        _unsafe_view_126 = clone_143.view(1, 512, 384) ;  clone_143 = None
        permute_816 = permute_814.permute(3, 4, 0, 2, 1) ;  permute_814 = None
        clone_144 = torch.clone(permute_816,memory_format = torch.contiguous_format) ;  permute_816 = None
        _unsafe_view_127 = clone_144.view(1, 384, 384) ;  clone_144 = None
        bmm_127 = torch.bmm(_unsafe_view_126,_unsafe_view_127) ;  _unsafe_view_126 = _unsafe_view_127 = None
        view_1418 = bmm_127.view(512, 1, 1, 1, 384) ;  bmm_127 = None
        permute_817 = view_1418.permute(3, 0, 4, 1, 2) ;  view_1418 = None
        view_1419 = permute_817.view(1, 512, 384) ;  permute_817 = None
        unsqueeze_529 = torch.unsqueeze(arg1406_1,-1) 
        mul_165 = torch.mul(view_1419,unsqueeze_529) ;  view_1419 = unsqueeze_529 = None
        add_134 = torch.add(add_127,mul_165) ;  mul_165 = None
        split_tensor_129 = torch.split(add_127,512,dim = -2) ;  add_127 = None
        getitem_1282 = split_tensor_129[0];  split_tensor_129 = None
        _to_copy_813 = getitem_1282.to(dtype = torch.float32) ;  getitem_1282 = None
        native_layer_norm_default_169 = (torch.nn.functional.layer_norm(_to_copy_813,[384],arg392_1,arg393_1,1e-05),) ;  _to_copy_813 = arg392_1 = arg393_1 = None
        getitem_1283 = native_layer_norm_default_169[0]
        _to_copy_814 = arg394_1.to(dtype = torch.bfloat16) ;  arg394_1 = None
        _to_copy_815 = getitem_1283.to(dtype = torch.bfloat16) ;  getitem_1283 = None
        t_289 = _to_copy_814.t() ;  _to_copy_814 = None
        view_1420 = _to_copy_815.view(512, 384) ;  _to_copy_815 = None
        mm_269 = torch.mm(view_1420,t_289) ;  view_1420 = t_289 = None
        view_1421 = mm_269.view(1, 512, 1536) ;  mm_269 = None
        split_tensor_130 = torch.split(view_1421,768,dim = -1) ;  view_1421 = None
        getitem_1286 = split_tensor_130[0]
        getitem_1287 = split_tensor_130[1];  split_tensor_130 = None
        silu_37 = torch.nn.functional.silu(getitem_1286) ;  getitem_1286 = None
        mul_166 = torch.mul(silu_37,getitem_1287) ;  silu_37 = getitem_1287 = None
        _to_copy_816 = arg395_1.to(dtype = torch.bfloat16) ;  arg395_1 = None
        t_290 = _to_copy_816.t() ;  _to_copy_816 = None
        view_1423 = mul_166.view(512, 768) ;  mul_166 = None
        mm_270 = torch.mm(view_1423,t_290) ;  view_1423 = t_290 = None
        view_1424 = mm_270.view(1, 512, 384) ;  mm_270 = None
        add_135 = torch.add(add_134,view_1424) ;  add_134 = view_1424 = None
        _to_copy_817 = add_131.to(dtype = torch.float32) 
        native_layer_norm_default_170 = (torch.nn.functional.layer_norm(_to_copy_817,[256],arg408_1,arg409_1,1e-05),) ;  _to_copy_817 = arg408_1 = arg409_1 = None
        getitem_1288 = native_layer_norm_default_170[0]
        split_with_sizes_default_32 = torch.split(arg411_1,[512,512]) ;  arg411_1 = None
        getitem_1291 = split_with_sizes_default_32[0]
        getitem_1292 = split_with_sizes_default_32[1];  split_with_sizes_default_32 = None
        split_with_sizes_default_33 = torch.split(arg412_1,[512,512,256]) ;  arg412_1 = None
        getitem_1293 = split_with_sizes_default_33[0]
        getitem_1294 = split_with_sizes_default_33[1]
        getitem_1295 = split_with_sizes_default_33[2];  split_with_sizes_default_33 = None
        _to_copy_818 = getitem_1291.to(dtype = torch.bfloat16) ;  getitem_1291 = None
        _to_copy_819 = getitem_1288.to(dtype = torch.bfloat16) 
        t_291 = _to_copy_818.t() ;  _to_copy_818 = None
        view_1425 = _to_copy_819.view(262144, 256) ;  _to_copy_819 = None
        mm_271 = torch.mm(view_1425,t_291) ;  view_1425 = t_291 = None
        view_1426 = mm_271.view(1, 512, 512, 512) ;  mm_271 = None
        _to_copy_820 = getitem_1293.to(dtype = torch.bfloat16) ;  getitem_1293 = None
        _to_copy_821 = getitem_1288.to(dtype = torch.bfloat16) 
        t_292 = _to_copy_820.t() ;  _to_copy_820 = None
        view_1427 = _to_copy_821.view(262144, 256) ;  _to_copy_821 = None
        mm_272 = torch.mm(view_1427,t_292) ;  view_1427 = t_292 = None
        view_1428 = mm_272.view(1, 512, 512, 512) ;  mm_272 = None
        sigmoid_102 = torch.sigmoid(view_1428) ;  view_1428 = None
        mul_167 = torch.mul(view_1426,sigmoid_102) ;  view_1426 = sigmoid_102 = None
        unsqueeze_530 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_98 = torch.bitwise_not(unsqueeze_530) ;  unsqueeze_530 = None
        masked_fill_98 = mul_167.masked_fill(bitwise_not_98,0) ;  mul_167 = bitwise_not_98 = None
        split_tensor_131 = torch.split(masked_fill_98,256,dim = -1) 
        getitem_1298 = split_tensor_131[0]
        unsqueeze_533 = torch.unsqueeze(getitem_1298,4) ;  getitem_1298 = None
        permute_822 = unsqueeze_533.permute(0, 1, 4, 3, 2) ;  unsqueeze_533 = None
        permute_823 = permute_822.permute(3, 1, 4, 0, 2) ;  permute_822 = None
        view_1431 = permute_823.view(256, 512, 512) ;  permute_823 = None
        split_tensor_132 = torch.split(masked_fill_98,256,dim = -1) ;  masked_fill_98 = None
        getitem_1301 = split_tensor_132[1];  split_tensor_132 = None
        unsqueeze_534 = torch.unsqueeze(getitem_1301,4) ;  getitem_1301 = None
        permute_824 = unsqueeze_534.permute(0, 4, 1, 3, 2) ;  unsqueeze_534 = None
        permute_825 = permute_824.permute(3, 4, 0, 2, 1) ;  permute_824 = None
        view_1432 = permute_825.view(256, 512, 512) ;  permute_825 = None
        bmm_128 = torch.bmm(view_1431,view_1432) ;  view_1431 = view_1432 = None
        view_1433 = bmm_128.view(256, 512, 1, 1, 512) ;  bmm_128 = None
        permute_826 = view_1433.permute(3, 1, 4, 0, 2) ;  view_1433 = None
        view_1434 = permute_826.view(1, 512, 512, 256) ;  permute_826 = None
        _to_copy_822 = getitem_1292.to(dtype = torch.bfloat16) ;  getitem_1292 = None
        _to_copy_823 = getitem_1288.to(dtype = torch.bfloat16) 
        t_293 = _to_copy_822.t() ;  _to_copy_822 = None
        view_1435 = _to_copy_823.view(262144, 256) ;  _to_copy_823 = None
        mm_273 = torch.mm(view_1435,t_293) ;  view_1435 = t_293 = None
        view_1436 = mm_273.view(1, 512, 512, 512) ;  mm_273 = None
        _to_copy_824 = getitem_1294.to(dtype = torch.bfloat16) ;  getitem_1294 = None
        _to_copy_825 = getitem_1288.to(dtype = torch.bfloat16) 
        t_294 = _to_copy_824.t() ;  _to_copy_824 = None
        view_1437 = _to_copy_825.view(262144, 256) ;  _to_copy_825 = None
        mm_274 = torch.mm(view_1437,t_294) ;  view_1437 = t_294 = None
        view_1438 = mm_274.view(1, 512, 512, 512) ;  mm_274 = None
        sigmoid_103 = torch.sigmoid(view_1438) ;  view_1438 = None
        mul_168 = torch.mul(view_1436,sigmoid_103) ;  view_1436 = sigmoid_103 = None
        view_1439 = mul_168.view(262144, 512) ;  mul_168 = None
        view_1440 = view_1439.view(1, 512, 512, 512) ;  view_1439 = None
        transpose_32 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_535 = torch.unsqueeze(transpose_32,3) ;  transpose_32 = None
        clone_145 = torch.clone(unsqueeze_535,memory_format = torch.contiguous_format) ;  unsqueeze_535 = None
        bitwise_not_99 = torch.bitwise_not(clone_145) ;  clone_145 = None
        masked_fill_99 = view_1440.masked_fill(bitwise_not_99,0) ;  view_1440 = bitwise_not_99 = None
        view_1441 = masked_fill_99.view(262144, 512) ;  masked_fill_99 = None
        view_1445 = view_1441.view(1, 512, 512, 512) 
        split_tensor_133 = torch.split(view_1445,256,dim = -1) ;  view_1445 = None
        getitem_1304 = split_tensor_133[0]
        unsqueeze_538 = torch.unsqueeze(getitem_1304,4) ;  getitem_1304 = None
        permute_831 = unsqueeze_538.permute(0, 2, 4, 3, 1) ;  unsqueeze_538 = None
        permute_832 = permute_831.permute(3, 1, 4, 0, 2) ;  permute_831 = None
        view_1446 = permute_832.view(256, 512, 512) ;  permute_832 = None
        view_1447 = view_1441.view(1, 512, 512, 512) ;  view_1441 = None
        split_tensor_134 = torch.split(view_1447,256,dim = -1) ;  view_1447 = None
        getitem_1307 = split_tensor_134[1];  split_tensor_134 = None
        unsqueeze_539 = torch.unsqueeze(getitem_1307,4) ;  getitem_1307 = None
        permute_833 = unsqueeze_539.permute(0, 4, 2, 3, 1) ;  unsqueeze_539 = None
        permute_834 = permute_833.permute(3, 4, 0, 2, 1) ;  permute_833 = None
        view_1448 = permute_834.view(256, 512, 512) ;  permute_834 = None
        bmm_129 = torch.bmm(view_1446,view_1448) ;  view_1446 = view_1448 = None
        view_1449 = bmm_129.view(256, 512, 1, 1, 512) ;  bmm_129 = None
        permute_835 = view_1449.permute(3, 1, 4, 0, 2) ;  view_1449 = None
        view_1450 = permute_835.view(1, 512, 512, 256) ;  permute_835 = None
        _to_copy_826 = view_1434.to(dtype = torch.float32) ;  view_1434 = None
        native_layer_norm_default_171 = (torch.nn.functional.layer_norm(_to_copy_826,[256],None,None,1e-05),) ;  _to_copy_826 = None
        getitem_1308 = native_layer_norm_default_171[0]
        _to_copy_827 = view_1450.to(dtype = torch.float32) ;  view_1450 = None
        native_layer_norm_default_172 = (torch.nn.functional.layer_norm(_to_copy_827,[256],None,None,1e-05),) ;  _to_copy_827 = None
        getitem_1311 = native_layer_norm_default_172[0]
        add_136 = torch.add(getitem_1308,getitem_1311) ;  getitem_1308 = getitem_1311 = None
        _to_copy_828 = arg410_1.to(dtype = torch.bfloat16) ;  arg410_1 = None
        _to_copy_829 = add_136.to(dtype = torch.bfloat16) ;  add_136 = None
        t_295 = _to_copy_828.t() ;  _to_copy_828 = None
        view_1451 = _to_copy_829.view(262144, 256) ;  _to_copy_829 = None
        mm_275 = torch.mm(view_1451,t_295) ;  view_1451 = t_295 = None
        view_1452 = mm_275.view(1, 512, 512, 256) ;  mm_275 = None
        _to_copy_830 = getitem_1295.to(dtype = torch.bfloat16) ;  getitem_1295 = None
        _to_copy_831 = getitem_1288.to(dtype = torch.bfloat16) ;  getitem_1288 = None
        t_296 = _to_copy_830.t() ;  _to_copy_830 = None
        view_1453 = _to_copy_831.view(262144, 256) ;  _to_copy_831 = None
        mm_276 = torch.mm(view_1453,t_296) ;  view_1453 = t_296 = None
        view_1454 = mm_276.view(1, 512, 512, 256) ;  mm_276 = None
        sigmoid_104 = torch.sigmoid(view_1454) ;  view_1454 = None
        mul_169 = torch.mul(view_1452,sigmoid_104) ;  view_1452 = sigmoid_104 = None
        add_137 = torch.add(add_131,mul_169) ;  mul_169 = None
        _to_copy_832 = add_131.to(dtype = torch.float32) 
        native_layer_norm_default_173 = (torch.nn.functional.layer_norm(_to_copy_832,[256],None,None,1e-05),) ;  _to_copy_832 = None
        getitem_1314 = native_layer_norm_default_173[0]
        _to_copy_833 = arg414_1.to(dtype = torch.bfloat16) ;  arg414_1 = None
        _to_copy_834 = getitem_1314.to(dtype = torch.bfloat16) 
        t_297 = _to_copy_833.t() ;  _to_copy_833 = None
        view_1455 = _to_copy_834.view(262144, 256) ;  _to_copy_834 = None
        mm_277 = torch.mm(view_1455,t_297) ;  view_1455 = t_297 = None
        view_1456 = mm_277.view(1, 512, 512, 8) ;  mm_277 = None
        view_1457 = view_1456.view(1, 512, 512, 2, 4) ;  view_1456 = None
        permute_836 = view_1457.permute(0, 3, 4, 1, 2) ;  view_1457 = None
        view_1458 = permute_836.view(1, 2, 4, 1, 512, 512) ;  permute_836 = None
        view_1459 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_100 = torch.bitwise_not(view_1459) ;  view_1459 = None
        masked_fill_100 = view_1458.masked_fill(bitwise_not_100,-10000) ;  view_1458 = bitwise_not_100 = None
        view_1460 = masked_fill_100.view(1, 2, 4, 512, 512) ;  masked_fill_100 = None
        permute_837 = view_1460.permute(1, 0, 2, 3, 4) ;  view_1460 = None
        view_1461 = permute_837.view(2, 4, 1, 512, 512) ;  permute_837 = None
        _to_copy_835 = arg415_1.to(dtype = torch.bfloat16) ;  arg415_1 = None
        _to_copy_836 = getitem_1314.to(dtype = torch.bfloat16) 
        t_298 = _to_copy_835.t() ;  _to_copy_835 = None
        view_1462 = _to_copy_836.view(262144, 256) ;  _to_copy_836 = None
        mm_278 = torch.mm(view_1462,t_298) ;  view_1462 = t_298 = None
        view_1463 = mm_278.view(1, 512, 512, 1024) ;  mm_278 = None
        select_33 = torch.select(view_1461,0,0) 
        view_1464 = view_1463.view(1, 512, 512, 4, 4, 64) ;  view_1463 = None
        permute_838 = view_1464.permute(4, 0, 3, 1, 2, 5) ;  view_1464 = None
        view_1465 = permute_838.view(4, 4, 512, 512, 64) ;  permute_838 = None
        unbind_int_70 = torch.unbind(view_1465) ;  view_1465 = None
        getitem_1317 = unbind_int_70[0]
        getitem_1318 = unbind_int_70[1]
        getitem_1319 = unbind_int_70[2]
        getitem_1320 = unbind_int_70[3];  unbind_int_70 = None
        expand_77 = select_33.expand(4, 512, 512, 512) ;  select_33 = None
        _scaled_dot_product_efficient_attention_default_42 = (torch.nn.functional.scaled_dot_product_attention(getitem_1317,getitem_1318,getitem_1319,expand_77,False),) ;  getitem_1317 = getitem_1318 = getitem_1319 = expand_77 = None
        getitem_1321 = _scaled_dot_product_efficient_attention_default_42[0]
        sigmoid_105 = torch.sigmoid(getitem_1320) ;  getitem_1320 = None
        mul_170 = torch.mul(getitem_1321,sigmoid_105) ;  getitem_1321 = sigmoid_105 = None
        view_1466 = mul_170.view(1, 4, 512, 512, 64) ;  mul_170 = None
        permute_839 = view_1466.permute(0, 2, 3, 1, 4) ;  view_1466 = None
        clone_146 = torch.clone(permute_839,memory_format = torch.contiguous_format) ;  permute_839 = None
        _unsafe_view_128 = clone_146.view(1, 512, 512, 256) ;  clone_146 = None
        transpose_33 = torch.transpose(getitem_1314,1,2) ;  getitem_1314 = None
        _to_copy_837 = arg416_1.to(dtype = torch.bfloat16) ;  arg416_1 = None
        _to_copy_838 = transpose_33.to(dtype = torch.bfloat16) ;  transpose_33 = None
        t_299 = _to_copy_837.t() ;  _to_copy_837 = None
        expand_78 = _to_copy_838.expand(1, 512, 512, 256) ;  _to_copy_838 = None
        view_1467 = expand_78.view(512, 512, 256) ;  expand_78 = None
        expand_79 = t_299.expand(1, 512, 256, 1024) ;  t_299 = None
        view_1468 = expand_79.view(512, 256, 1024) ;  expand_79 = None
        bmm_130 = torch.bmm(view_1467,view_1468) ;  view_1467 = view_1468 = None
        view_1469 = bmm_130.view(1, 512, 512, 1024) ;  bmm_130 = None
        select_34 = torch.select(view_1461,0,1) ;  view_1461 = None
        view_1470 = view_1469.view(1, 512, 512, 4, 4, 64) ;  view_1469 = None
        permute_840 = view_1470.permute(4, 0, 3, 1, 2, 5) ;  view_1470 = None
        view_1471 = permute_840.view(4, 4, 512, 512, 64) ;  permute_840 = None
        unbind_int_71 = torch.unbind(view_1471) ;  view_1471 = None
        getitem_1325 = unbind_int_71[0]
        getitem_1326 = unbind_int_71[1]
        getitem_1327 = unbind_int_71[2]
        getitem_1328 = unbind_int_71[3];  unbind_int_71 = None
        expand_80 = select_34.expand(4, 512, 512, 512) ;  select_34 = None
        _scaled_dot_product_efficient_attention_default_43 = (torch.nn.functional.scaled_dot_product_attention(getitem_1325,getitem_1326,getitem_1327,expand_80,False),) ;  getitem_1325 = getitem_1326 = getitem_1327 = expand_80 = None
        getitem_1329 = _scaled_dot_product_efficient_attention_default_43[0]
        sigmoid_106 = torch.sigmoid(getitem_1328) ;  getitem_1328 = None
        mul_171 = torch.mul(getitem_1329,sigmoid_106) ;  getitem_1329 = sigmoid_106 = None
        view_1472 = mul_171.view(1, 4, 512, 512, 64) ;  mul_171 = None
        permute_841 = view_1472.permute(0, 2, 3, 1, 4) ;  view_1472 = None
        clone_147 = torch.clone(permute_841,memory_format = torch.contiguous_format) ;  permute_841 = None
        _unsafe_view_129 = clone_147.view(1, 512, 512, 256) ;  clone_147 = None
        cat_22 = torch.cat([_unsafe_view_128,_unsafe_view_129],dim = -1) ;  _unsafe_view_128 = _unsafe_view_129 = None
        slice_215 = arg413_1[0:] ;  arg413_1 = None
        unsqueeze_540 = torch.unsqueeze(slice_215,1) ;  slice_215 = None
        mul_172 = torch.mul(arg417_1,unsqueeze_540) ;  arg417_1 = unsqueeze_540 = None
        _to_copy_839 = mul_172.to(dtype = torch.bfloat16) ;  mul_172 = None
        t_300 = _to_copy_839.t() ;  _to_copy_839 = None
        view_1473 = cat_22.view(262144, 512) ;  cat_22 = None
        mm_279 = torch.mm(view_1473,t_300) ;  view_1473 = t_300 = None
        view_1474 = mm_279.view(1, 512, 512, 256) ;  mm_279 = None
        add_138 = torch.add(add_137,view_1474) ;  add_137 = view_1474 = None
        split_tensor_135 = torch.split(add_131,512,dim = -2) 
        getitem_1333 = split_tensor_135[0];  split_tensor_135 = None
        _to_copy_840 = getitem_1333.to(dtype = torch.float32) ;  getitem_1333 = None
        native_layer_norm_default_174 = (torch.nn.functional.layer_norm(_to_copy_840,[256],arg404_1,arg405_1,1e-05),) ;  _to_copy_840 = arg404_1 = arg405_1 = None
        getitem_1334 = native_layer_norm_default_174[0]
        _to_copy_841 = arg406_1.to(dtype = torch.bfloat16) ;  arg406_1 = None
        _to_copy_842 = getitem_1334.to(dtype = torch.bfloat16) ;  getitem_1334 = None
        t_301 = _to_copy_841.t() ;  _to_copy_841 = None
        view_1475 = _to_copy_842.view(262144, 256) ;  _to_copy_842 = None
        mm_280 = torch.mm(view_1475,t_301) ;  view_1475 = t_301 = None
        view_1476 = mm_280.view(1, 512, 512, 1024) ;  mm_280 = None
        split_tensor_136 = torch.split(view_1476,512,dim = -1) ;  view_1476 = None
        getitem_1337 = split_tensor_136[0]
        getitem_1338 = split_tensor_136[1];  split_tensor_136 = None
        silu_38 = torch.nn.functional.silu(getitem_1337) ;  getitem_1337 = None
        mul_173 = torch.mul(silu_38,getitem_1338) ;  silu_38 = getitem_1338 = None
        _to_copy_843 = arg407_1.to(dtype = torch.bfloat16) ;  arg407_1 = None
        t_302 = _to_copy_843.t() ;  _to_copy_843 = None
        view_1478 = mul_173.view(262144, 512) ;  mul_173 = None
        mm_281 = torch.mm(view_1478,t_302) ;  view_1478 = t_302 = None
        view_1479 = mm_281.view(1, 512, 512, 256) ;  mm_281 = None
        add_139 = torch.add(add_138,view_1479) ;  add_138 = view_1479 = None
        _to_copy_844 = add_135.to(dtype = torch.float32) 
        native_layer_norm_default_175 = (torch.nn.functional.layer_norm(_to_copy_844,[384],arg422_1,arg423_1,1e-05),) ;  _to_copy_844 = arg422_1 = arg423_1 = None
        getitem_1339 = native_layer_norm_default_175[0]
        _to_copy_845 = add_131.to(dtype = torch.float32) ;  add_131 = None
        native_layer_norm_default_176 = (torch.nn.functional.layer_norm(_to_copy_845,[256],arg424_1,arg425_1,1e-05),) ;  _to_copy_845 = arg424_1 = arg425_1 = None
        getitem_1342 = native_layer_norm_default_176[0]
        _to_copy_846 = arg426_1.to(dtype = torch.bfloat16) ;  arg426_1 = None
        _to_copy_847 = getitem_1342.to(dtype = torch.bfloat16) ;  getitem_1342 = None
        t_303 = _to_copy_846.t() ;  _to_copy_846 = None
        view_1480 = _to_copy_847.view(262144, 256) ;  _to_copy_847 = None
        mm_282 = torch.mm(view_1480,t_303) ;  view_1480 = t_303 = None
        view_1481 = mm_282.view(1, 512, 512, 16) ;  mm_282 = None
        permute_842 = view_1481.permute(0, 3, 1, 2) ;  view_1481 = None
        view_1482 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_101 = torch.bitwise_not(view_1482) ;  view_1482 = None
        masked_fill_101 = permute_842.masked_fill(bitwise_not_101,-10000) ;  permute_842 = bitwise_not_101 = None
        _to_copy_848 = getitem_1339.to(dtype = torch.bfloat16) ;  getitem_1339 = None
        _to_copy_849 = arg428_1.to(dtype = torch.bfloat16) ;  arg428_1 = None
        unsqueeze_541 = torch.unsqueeze(_to_copy_848,3) ;  _to_copy_848 = None
        unsqueeze_542 = torch.unsqueeze(unsqueeze_541,4) ;  unsqueeze_541 = None
        unsqueeze_543 = torch.unsqueeze(unsqueeze_542,5) ;  unsqueeze_542 = None
        permute_843 = unsqueeze_543.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_543 = None
        unsqueeze_544 = torch.unsqueeze(_to_copy_849,4) ;  _to_copy_849 = None
        unsqueeze_545 = torch.unsqueeze(unsqueeze_544,5) ;  unsqueeze_544 = None
        permute_844 = unsqueeze_545.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_545 = None
        permute_845 = permute_843.permute(3, 5, 0, 1, 2, 4) ;  permute_843 = None
        view_1483 = permute_845.view(1, 512, 384) ;  permute_845 = None
        permute_846 = permute_844.permute(5, 0, 1, 2, 4, 3) ;  permute_844 = None
        view_1484 = permute_846.view(1, 384, 1536) ;  permute_846 = None
        bmm_131 = torch.bmm(view_1483,view_1484) ;  view_1483 = view_1484 = None
        view_1485 = bmm_131.view(512, 1, 4, 1, 16, 24) ;  bmm_131 = None
        permute_847 = view_1485.permute(2, 3, 4, 0, 5, 1) ;  view_1485 = None
        view_1486 = permute_847.view(4, 1, 16, 512, 24) ;  permute_847 = None
        unbind_int_72 = torch.unbind(view_1486) ;  view_1486 = None
        getitem_1345 = unbind_int_72[0]
        getitem_1346 = unbind_int_72[1]
        getitem_1347 = unbind_int_72[2]
        getitem_1348 = unbind_int_72[3];  unbind_int_72 = None
        view_1487 = arg427_1.view(1, 16, 1, 24) ;  arg427_1 = None
        add_140 = torch.add(getitem_1345,view_1487) ;  getitem_1345 = view_1487 = None
        _to_copy_850 = add_140.to(dtype = torch.bfloat16) ;  add_140 = None
        expand_81 = masked_fill_101.expand(1, 16, 512, 512) ;  masked_fill_101 = None
        _scaled_dot_product_efficient_attention_default_44 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_850,getitem_1346,getitem_1347,expand_81,False),) ;  _to_copy_850 = getitem_1346 = getitem_1347 = expand_81 = None
        getitem_1349 = _scaled_dot_product_efficient_attention_default_44[0]
        add_141 = torch.add(getitem_1348,1) ;  getitem_1348 = None
        sigmoid_107 = torch.sigmoid(add_141) ;  add_141 = None
        mul_174 = torch.mul(getitem_1349,sigmoid_107) ;  getitem_1349 = sigmoid_107 = None
        _to_copy_851 = arg429_1.to(dtype = torch.bfloat16) ;  arg429_1 = None
        unsqueeze_546 = torch.unsqueeze(mul_174,4) ;  mul_174 = None
        permute_848 = unsqueeze_546.permute(0, 2, 4, 3, 1) ;  unsqueeze_546 = None
        unsqueeze_547 = torch.unsqueeze(_to_copy_851,3) ;  _to_copy_851 = None
        unsqueeze_548 = torch.unsqueeze(unsqueeze_547,4) ;  unsqueeze_547 = None
        permute_849 = unsqueeze_548.permute(3, 4, 2, 1, 0) ;  unsqueeze_548 = None
        permute_850 = permute_848.permute(1, 3, 4, 0, 2) ;  permute_848 = None
        clone_148 = torch.clone(permute_850,memory_format = torch.contiguous_format) ;  permute_850 = None
        _unsafe_view_130 = clone_148.view(1, 512, 384) ;  clone_148 = None
        permute_851 = permute_849.permute(3, 4, 0, 2, 1) ;  permute_849 = None
        clone_149 = torch.clone(permute_851,memory_format = torch.contiguous_format) ;  permute_851 = None
        _unsafe_view_131 = clone_149.view(1, 384, 384) ;  clone_149 = None
        bmm_132 = torch.bmm(_unsafe_view_130,_unsafe_view_131) ;  _unsafe_view_130 = _unsafe_view_131 = None
        view_1488 = bmm_132.view(512, 1, 1, 1, 384) ;  bmm_132 = None
        permute_852 = view_1488.permute(3, 0, 4, 1, 2) ;  view_1488 = None
        view_1489 = permute_852.view(1, 512, 384) ;  permute_852 = None
        unsqueeze_549 = torch.unsqueeze(arg1406_1,-1) 
        mul_175 = torch.mul(view_1489,unsqueeze_549) ;  view_1489 = unsqueeze_549 = None
        add_142 = torch.add(add_135,mul_175) ;  mul_175 = None
        split_tensor_137 = torch.split(add_135,512,dim = -2) ;  add_135 = None
        getitem_1353 = split_tensor_137[0];  split_tensor_137 = None
        _to_copy_852 = getitem_1353.to(dtype = torch.float32) ;  getitem_1353 = None
        native_layer_norm_default_177 = (torch.nn.functional.layer_norm(_to_copy_852,[384],arg418_1,arg419_1,1e-05),) ;  _to_copy_852 = arg418_1 = arg419_1 = None
        getitem_1354 = native_layer_norm_default_177[0]
        _to_copy_853 = arg420_1.to(dtype = torch.bfloat16) ;  arg420_1 = None
        _to_copy_854 = getitem_1354.to(dtype = torch.bfloat16) ;  getitem_1354 = None
        t_304 = _to_copy_853.t() ;  _to_copy_853 = None
        view_1490 = _to_copy_854.view(512, 384) ;  _to_copy_854 = None
        mm_283 = torch.mm(view_1490,t_304) ;  view_1490 = t_304 = None
        view_1491 = mm_283.view(1, 512, 1536) ;  mm_283 = None
        split_tensor_138 = torch.split(view_1491,768,dim = -1) ;  view_1491 = None
        getitem_1357 = split_tensor_138[0]
        getitem_1358 = split_tensor_138[1];  split_tensor_138 = None
        silu_39 = torch.nn.functional.silu(getitem_1357) ;  getitem_1357 = None
        mul_176 = torch.mul(silu_39,getitem_1358) ;  silu_39 = getitem_1358 = None
        _to_copy_855 = arg421_1.to(dtype = torch.bfloat16) ;  arg421_1 = None
        t_305 = _to_copy_855.t() ;  _to_copy_855 = None
        view_1493 = mul_176.view(512, 768) ;  mul_176 = None
        mm_284 = torch.mm(view_1493,t_305) ;  view_1493 = t_305 = None
        view_1494 = mm_284.view(1, 512, 384) ;  mm_284 = None
        add_143 = torch.add(add_142,view_1494) ;  add_142 = view_1494 = None
        _to_copy_856 = add_139.to(dtype = torch.float32) 
        native_layer_norm_default_178 = (torch.nn.functional.layer_norm(_to_copy_856,[256],arg434_1,arg435_1,1e-05),) ;  _to_copy_856 = arg434_1 = arg435_1 = None
        getitem_1359 = native_layer_norm_default_178[0]
        split_with_sizes_default_34 = torch.split(arg437_1,[512,512]) ;  arg437_1 = None
        getitem_1362 = split_with_sizes_default_34[0]
        getitem_1363 = split_with_sizes_default_34[1];  split_with_sizes_default_34 = None
        split_with_sizes_default_35 = torch.split(arg438_1,[512,512,256]) ;  arg438_1 = None
        getitem_1364 = split_with_sizes_default_35[0]
        getitem_1365 = split_with_sizes_default_35[1]
        getitem_1366 = split_with_sizes_default_35[2];  split_with_sizes_default_35 = None
        _to_copy_857 = getitem_1362.to(dtype = torch.bfloat16) ;  getitem_1362 = None
        _to_copy_858 = getitem_1359.to(dtype = torch.bfloat16) 
        t_306 = _to_copy_857.t() ;  _to_copy_857 = None
        view_1495 = _to_copy_858.view(262144, 256) ;  _to_copy_858 = None
        mm_285 = torch.mm(view_1495,t_306) ;  view_1495 = t_306 = None
        view_1496 = mm_285.view(1, 512, 512, 512) ;  mm_285 = None
        _to_copy_859 = getitem_1364.to(dtype = torch.bfloat16) ;  getitem_1364 = None
        _to_copy_860 = getitem_1359.to(dtype = torch.bfloat16) 
        t_307 = _to_copy_859.t() ;  _to_copy_859 = None
        view_1497 = _to_copy_860.view(262144, 256) ;  _to_copy_860 = None
        mm_286 = torch.mm(view_1497,t_307) ;  view_1497 = t_307 = None
        view_1498 = mm_286.view(1, 512, 512, 512) ;  mm_286 = None
        sigmoid_108 = torch.sigmoid(view_1498) ;  view_1498 = None
        mul_177 = torch.mul(view_1496,sigmoid_108) ;  view_1496 = sigmoid_108 = None
        unsqueeze_550 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_102 = torch.bitwise_not(unsqueeze_550) ;  unsqueeze_550 = None
        masked_fill_102 = mul_177.masked_fill(bitwise_not_102,0) ;  mul_177 = bitwise_not_102 = None
        split_tensor_139 = torch.split(masked_fill_102,256,dim = -1) 
        getitem_1369 = split_tensor_139[0]
        unsqueeze_553 = torch.unsqueeze(getitem_1369,4) ;  getitem_1369 = None
        permute_857 = unsqueeze_553.permute(0, 1, 4, 3, 2) ;  unsqueeze_553 = None
        permute_858 = permute_857.permute(3, 1, 4, 0, 2) ;  permute_857 = None
        view_1501 = permute_858.view(256, 512, 512) ;  permute_858 = None
        split_tensor_140 = torch.split(masked_fill_102,256,dim = -1) ;  masked_fill_102 = None
        getitem_1372 = split_tensor_140[1];  split_tensor_140 = None
        unsqueeze_554 = torch.unsqueeze(getitem_1372,4) ;  getitem_1372 = None
        permute_859 = unsqueeze_554.permute(0, 4, 1, 3, 2) ;  unsqueeze_554 = None
        permute_860 = permute_859.permute(3, 4, 0, 2, 1) ;  permute_859 = None
        view_1502 = permute_860.view(256, 512, 512) ;  permute_860 = None
        bmm_133 = torch.bmm(view_1501,view_1502) ;  view_1501 = view_1502 = None
        view_1503 = bmm_133.view(256, 512, 1, 1, 512) ;  bmm_133 = None
        permute_861 = view_1503.permute(3, 1, 4, 0, 2) ;  view_1503 = None
        view_1504 = permute_861.view(1, 512, 512, 256) ;  permute_861 = None
        _to_copy_861 = getitem_1363.to(dtype = torch.bfloat16) ;  getitem_1363 = None
        _to_copy_862 = getitem_1359.to(dtype = torch.bfloat16) 
        t_308 = _to_copy_861.t() ;  _to_copy_861 = None
        view_1505 = _to_copy_862.view(262144, 256) ;  _to_copy_862 = None
        mm_287 = torch.mm(view_1505,t_308) ;  view_1505 = t_308 = None
        view_1506 = mm_287.view(1, 512, 512, 512) ;  mm_287 = None
        _to_copy_863 = getitem_1365.to(dtype = torch.bfloat16) ;  getitem_1365 = None
        _to_copy_864 = getitem_1359.to(dtype = torch.bfloat16) 
        t_309 = _to_copy_863.t() ;  _to_copy_863 = None
        view_1507 = _to_copy_864.view(262144, 256) ;  _to_copy_864 = None
        mm_288 = torch.mm(view_1507,t_309) ;  view_1507 = t_309 = None
        view_1508 = mm_288.view(1, 512, 512, 512) ;  mm_288 = None
        sigmoid_109 = torch.sigmoid(view_1508) ;  view_1508 = None
        mul_178 = torch.mul(view_1506,sigmoid_109) ;  view_1506 = sigmoid_109 = None
        view_1509 = mul_178.view(262144, 512) ;  mul_178 = None
        view_1510 = view_1509.view(1, 512, 512, 512) ;  view_1509 = None
        transpose_34 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_555 = torch.unsqueeze(transpose_34,3) ;  transpose_34 = None
        clone_150 = torch.clone(unsqueeze_555,memory_format = torch.contiguous_format) ;  unsqueeze_555 = None
        bitwise_not_103 = torch.bitwise_not(clone_150) ;  clone_150 = None
        masked_fill_103 = view_1510.masked_fill(bitwise_not_103,0) ;  view_1510 = bitwise_not_103 = None
        view_1511 = masked_fill_103.view(262144, 512) ;  masked_fill_103 = None
        view_1515 = view_1511.view(1, 512, 512, 512) 
        split_tensor_141 = torch.split(view_1515,256,dim = -1) ;  view_1515 = None
        getitem_1375 = split_tensor_141[0]
        unsqueeze_558 = torch.unsqueeze(getitem_1375,4) ;  getitem_1375 = None
        permute_866 = unsqueeze_558.permute(0, 2, 4, 3, 1) ;  unsqueeze_558 = None
        permute_867 = permute_866.permute(3, 1, 4, 0, 2) ;  permute_866 = None
        view_1516 = permute_867.view(256, 512, 512) ;  permute_867 = None
        view_1517 = view_1511.view(1, 512, 512, 512) ;  view_1511 = None
        split_tensor_142 = torch.split(view_1517,256,dim = -1) ;  view_1517 = None
        getitem_1378 = split_tensor_142[1];  split_tensor_142 = None
        unsqueeze_559 = torch.unsqueeze(getitem_1378,4) ;  getitem_1378 = None
        permute_868 = unsqueeze_559.permute(0, 4, 2, 3, 1) ;  unsqueeze_559 = None
        permute_869 = permute_868.permute(3, 4, 0, 2, 1) ;  permute_868 = None
        view_1518 = permute_869.view(256, 512, 512) ;  permute_869 = None
        bmm_134 = torch.bmm(view_1516,view_1518) ;  view_1516 = view_1518 = None
        view_1519 = bmm_134.view(256, 512, 1, 1, 512) ;  bmm_134 = None
        permute_870 = view_1519.permute(3, 1, 4, 0, 2) ;  view_1519 = None
        view_1520 = permute_870.view(1, 512, 512, 256) ;  permute_870 = None
        _to_copy_865 = view_1504.to(dtype = torch.float32) ;  view_1504 = None
        native_layer_norm_default_179 = (torch.nn.functional.layer_norm(_to_copy_865,[256],None,None,1e-05),) ;  _to_copy_865 = None
        getitem_1379 = native_layer_norm_default_179[0]
        _to_copy_866 = view_1520.to(dtype = torch.float32) ;  view_1520 = None
        native_layer_norm_default_180 = (torch.nn.functional.layer_norm(_to_copy_866,[256],None,None,1e-05),) ;  _to_copy_866 = None
        getitem_1382 = native_layer_norm_default_180[0]
        add_144 = torch.add(getitem_1379,getitem_1382) ;  getitem_1379 = getitem_1382 = None
        _to_copy_867 = arg436_1.to(dtype = torch.bfloat16) ;  arg436_1 = None
        _to_copy_868 = add_144.to(dtype = torch.bfloat16) ;  add_144 = None
        t_310 = _to_copy_867.t() ;  _to_copy_867 = None
        view_1521 = _to_copy_868.view(262144, 256) ;  _to_copy_868 = None
        mm_289 = torch.mm(view_1521,t_310) ;  view_1521 = t_310 = None
        view_1522 = mm_289.view(1, 512, 512, 256) ;  mm_289 = None
        _to_copy_869 = getitem_1366.to(dtype = torch.bfloat16) ;  getitem_1366 = None
        _to_copy_870 = getitem_1359.to(dtype = torch.bfloat16) ;  getitem_1359 = None
        t_311 = _to_copy_869.t() ;  _to_copy_869 = None
        view_1523 = _to_copy_870.view(262144, 256) ;  _to_copy_870 = None
        mm_290 = torch.mm(view_1523,t_311) ;  view_1523 = t_311 = None
        view_1524 = mm_290.view(1, 512, 512, 256) ;  mm_290 = None
        sigmoid_110 = torch.sigmoid(view_1524) ;  view_1524 = None
        mul_179 = torch.mul(view_1522,sigmoid_110) ;  view_1522 = sigmoid_110 = None
        add_145 = torch.add(add_139,mul_179) ;  mul_179 = None
        _to_copy_871 = add_139.to(dtype = torch.float32) 
        native_layer_norm_default_181 = (torch.nn.functional.layer_norm(_to_copy_871,[256],None,None,1e-05),) ;  _to_copy_871 = None
        getitem_1385 = native_layer_norm_default_181[0]
        _to_copy_872 = arg440_1.to(dtype = torch.bfloat16) ;  arg440_1 = None
        _to_copy_873 = getitem_1385.to(dtype = torch.bfloat16) 
        t_312 = _to_copy_872.t() ;  _to_copy_872 = None
        view_1525 = _to_copy_873.view(262144, 256) ;  _to_copy_873 = None
        mm_291 = torch.mm(view_1525,t_312) ;  view_1525 = t_312 = None
        view_1526 = mm_291.view(1, 512, 512, 8) ;  mm_291 = None
        view_1527 = view_1526.view(1, 512, 512, 2, 4) ;  view_1526 = None
        permute_871 = view_1527.permute(0, 3, 4, 1, 2) ;  view_1527 = None
        view_1528 = permute_871.view(1, 2, 4, 1, 512, 512) ;  permute_871 = None
        view_1529 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_104 = torch.bitwise_not(view_1529) ;  view_1529 = None
        masked_fill_104 = view_1528.masked_fill(bitwise_not_104,-10000) ;  view_1528 = bitwise_not_104 = None
        view_1530 = masked_fill_104.view(1, 2, 4, 512, 512) ;  masked_fill_104 = None
        permute_872 = view_1530.permute(1, 0, 2, 3, 4) ;  view_1530 = None
        view_1531 = permute_872.view(2, 4, 1, 512, 512) ;  permute_872 = None
        _to_copy_874 = arg441_1.to(dtype = torch.bfloat16) ;  arg441_1 = None
        _to_copy_875 = getitem_1385.to(dtype = torch.bfloat16) 
        t_313 = _to_copy_874.t() ;  _to_copy_874 = None
        view_1532 = _to_copy_875.view(262144, 256) ;  _to_copy_875 = None
        mm_292 = torch.mm(view_1532,t_313) ;  view_1532 = t_313 = None
        view_1533 = mm_292.view(1, 512, 512, 1024) ;  mm_292 = None
        select_35 = torch.select(view_1531,0,0) 
        view_1534 = view_1533.view(1, 512, 512, 4, 4, 64) ;  view_1533 = None
        permute_873 = view_1534.permute(4, 0, 3, 1, 2, 5) ;  view_1534 = None
        view_1535 = permute_873.view(4, 4, 512, 512, 64) ;  permute_873 = None
        unbind_int_73 = torch.unbind(view_1535) ;  view_1535 = None
        getitem_1388 = unbind_int_73[0]
        getitem_1389 = unbind_int_73[1]
        getitem_1390 = unbind_int_73[2]
        getitem_1391 = unbind_int_73[3];  unbind_int_73 = None
        expand_82 = select_35.expand(4, 512, 512, 512) ;  select_35 = None
        _scaled_dot_product_efficient_attention_default_45 = (torch.nn.functional.scaled_dot_product_attention(getitem_1388,getitem_1389,getitem_1390,expand_82,False),) ;  getitem_1388 = getitem_1389 = getitem_1390 = expand_82 = None
        getitem_1392 = _scaled_dot_product_efficient_attention_default_45[0]
        sigmoid_111 = torch.sigmoid(getitem_1391) ;  getitem_1391 = None
        mul_180 = torch.mul(getitem_1392,sigmoid_111) ;  getitem_1392 = sigmoid_111 = None
        view_1536 = mul_180.view(1, 4, 512, 512, 64) ;  mul_180 = None
        permute_874 = view_1536.permute(0, 2, 3, 1, 4) ;  view_1536 = None
        clone_151 = torch.clone(permute_874,memory_format = torch.contiguous_format) ;  permute_874 = None
        _unsafe_view_132 = clone_151.view(1, 512, 512, 256) ;  clone_151 = None
        transpose_35 = torch.transpose(getitem_1385,1,2) ;  getitem_1385 = None
        _to_copy_876 = arg442_1.to(dtype = torch.bfloat16) ;  arg442_1 = None
        _to_copy_877 = transpose_35.to(dtype = torch.bfloat16) ;  transpose_35 = None
        t_314 = _to_copy_876.t() ;  _to_copy_876 = None
        expand_83 = _to_copy_877.expand(1, 512, 512, 256) ;  _to_copy_877 = None
        view_1537 = expand_83.view(512, 512, 256) ;  expand_83 = None
        expand_84 = t_314.expand(1, 512, 256, 1024) ;  t_314 = None
        view_1538 = expand_84.view(512, 256, 1024) ;  expand_84 = None
        bmm_135 = torch.bmm(view_1537,view_1538) ;  view_1537 = view_1538 = None
        view_1539 = bmm_135.view(1, 512, 512, 1024) ;  bmm_135 = None
        select_36 = torch.select(view_1531,0,1) ;  view_1531 = None
        view_1540 = view_1539.view(1, 512, 512, 4, 4, 64) ;  view_1539 = None
        permute_875 = view_1540.permute(4, 0, 3, 1, 2, 5) ;  view_1540 = None
        view_1541 = permute_875.view(4, 4, 512, 512, 64) ;  permute_875 = None
        unbind_int_74 = torch.unbind(view_1541) ;  view_1541 = None
        getitem_1396 = unbind_int_74[0]
        getitem_1397 = unbind_int_74[1]
        getitem_1398 = unbind_int_74[2]
        getitem_1399 = unbind_int_74[3];  unbind_int_74 = None
        expand_85 = select_36.expand(4, 512, 512, 512) ;  select_36 = None
        _scaled_dot_product_efficient_attention_default_46 = (torch.nn.functional.scaled_dot_product_attention(getitem_1396,getitem_1397,getitem_1398,expand_85,False),) ;  getitem_1396 = getitem_1397 = getitem_1398 = expand_85 = None
        getitem_1400 = _scaled_dot_product_efficient_attention_default_46[0]
        sigmoid_112 = torch.sigmoid(getitem_1399) ;  getitem_1399 = None
        mul_181 = torch.mul(getitem_1400,sigmoid_112) ;  getitem_1400 = sigmoid_112 = None
        view_1542 = mul_181.view(1, 4, 512, 512, 64) ;  mul_181 = None
        permute_876 = view_1542.permute(0, 2, 3, 1, 4) ;  view_1542 = None
        clone_152 = torch.clone(permute_876,memory_format = torch.contiguous_format) ;  permute_876 = None
        _unsafe_view_133 = clone_152.view(1, 512, 512, 256) ;  clone_152 = None
        cat_23 = torch.cat([_unsafe_view_132,_unsafe_view_133],dim = -1) ;  _unsafe_view_132 = _unsafe_view_133 = None
        slice_216 = arg439_1[0:] ;  arg439_1 = None
        unsqueeze_560 = torch.unsqueeze(slice_216,1) ;  slice_216 = None
        mul_182 = torch.mul(arg443_1,unsqueeze_560) ;  arg443_1 = unsqueeze_560 = None
        _to_copy_878 = mul_182.to(dtype = torch.bfloat16) ;  mul_182 = None
        t_315 = _to_copy_878.t() ;  _to_copy_878 = None
        view_1543 = cat_23.view(262144, 512) ;  cat_23 = None
        mm_293 = torch.mm(view_1543,t_315) ;  view_1543 = t_315 = None
        view_1544 = mm_293.view(1, 512, 512, 256) ;  mm_293 = None
        add_146 = torch.add(add_145,view_1544) ;  add_145 = view_1544 = None
        split_tensor_143 = torch.split(add_139,512,dim = -2) 
        getitem_1404 = split_tensor_143[0];  split_tensor_143 = None
        _to_copy_879 = getitem_1404.to(dtype = torch.float32) ;  getitem_1404 = None
        native_layer_norm_default_182 = (torch.nn.functional.layer_norm(_to_copy_879,[256],arg430_1,arg431_1,1e-05),) ;  _to_copy_879 = arg430_1 = arg431_1 = None
        getitem_1405 = native_layer_norm_default_182[0]
        _to_copy_880 = arg432_1.to(dtype = torch.bfloat16) ;  arg432_1 = None
        _to_copy_881 = getitem_1405.to(dtype = torch.bfloat16) ;  getitem_1405 = None
        t_316 = _to_copy_880.t() ;  _to_copy_880 = None
        view_1545 = _to_copy_881.view(262144, 256) ;  _to_copy_881 = None
        mm_294 = torch.mm(view_1545,t_316) ;  view_1545 = t_316 = None
        view_1546 = mm_294.view(1, 512, 512, 1024) ;  mm_294 = None
        split_tensor_144 = torch.split(view_1546,512,dim = -1) ;  view_1546 = None
        getitem_1408 = split_tensor_144[0]
        getitem_1409 = split_tensor_144[1];  split_tensor_144 = None
        silu_40 = torch.nn.functional.silu(getitem_1408) ;  getitem_1408 = None
        mul_183 = torch.mul(silu_40,getitem_1409) ;  silu_40 = getitem_1409 = None
        _to_copy_882 = arg433_1.to(dtype = torch.bfloat16) ;  arg433_1 = None
        t_317 = _to_copy_882.t() ;  _to_copy_882 = None
        view_1548 = mul_183.view(262144, 512) ;  mul_183 = None
        mm_295 = torch.mm(view_1548,t_317) ;  view_1548 = t_317 = None
        view_1549 = mm_295.view(1, 512, 512, 256) ;  mm_295 = None
        add_147 = torch.add(add_146,view_1549) ;  add_146 = view_1549 = None
        _to_copy_883 = add_143.to(dtype = torch.float32) 
        native_layer_norm_default_183 = (torch.nn.functional.layer_norm(_to_copy_883,[384],arg448_1,arg449_1,1e-05),) ;  _to_copy_883 = arg448_1 = arg449_1 = None
        getitem_1410 = native_layer_norm_default_183[0]
        _to_copy_884 = add_139.to(dtype = torch.float32) ;  add_139 = None
        native_layer_norm_default_184 = (torch.nn.functional.layer_norm(_to_copy_884,[256],arg450_1,arg451_1,1e-05),) ;  _to_copy_884 = arg450_1 = arg451_1 = None
        getitem_1413 = native_layer_norm_default_184[0]
        _to_copy_885 = arg452_1.to(dtype = torch.bfloat16) ;  arg452_1 = None
        _to_copy_886 = getitem_1413.to(dtype = torch.bfloat16) ;  getitem_1413 = None
        t_318 = _to_copy_885.t() ;  _to_copy_885 = None
        view_1550 = _to_copy_886.view(262144, 256) ;  _to_copy_886 = None
        mm_296 = torch.mm(view_1550,t_318) ;  view_1550 = t_318 = None
        view_1551 = mm_296.view(1, 512, 512, 16) ;  mm_296 = None
        permute_877 = view_1551.permute(0, 3, 1, 2) ;  view_1551 = None
        view_1552 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_105 = torch.bitwise_not(view_1552) ;  view_1552 = None
        masked_fill_105 = permute_877.masked_fill(bitwise_not_105,-10000) ;  permute_877 = bitwise_not_105 = None
        _to_copy_887 = getitem_1410.to(dtype = torch.bfloat16) ;  getitem_1410 = None
        _to_copy_888 = arg454_1.to(dtype = torch.bfloat16) ;  arg454_1 = None
        unsqueeze_561 = torch.unsqueeze(_to_copy_887,3) ;  _to_copy_887 = None
        unsqueeze_562 = torch.unsqueeze(unsqueeze_561,4) ;  unsqueeze_561 = None
        unsqueeze_563 = torch.unsqueeze(unsqueeze_562,5) ;  unsqueeze_562 = None
        permute_878 = unsqueeze_563.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_563 = None
        unsqueeze_564 = torch.unsqueeze(_to_copy_888,4) ;  _to_copy_888 = None
        unsqueeze_565 = torch.unsqueeze(unsqueeze_564,5) ;  unsqueeze_564 = None
        permute_879 = unsqueeze_565.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_565 = None
        permute_880 = permute_878.permute(3, 5, 0, 1, 2, 4) ;  permute_878 = None
        view_1553 = permute_880.view(1, 512, 384) ;  permute_880 = None
        permute_881 = permute_879.permute(5, 0, 1, 2, 4, 3) ;  permute_879 = None
        view_1554 = permute_881.view(1, 384, 1536) ;  permute_881 = None
        bmm_136 = torch.bmm(view_1553,view_1554) ;  view_1553 = view_1554 = None
        view_1555 = bmm_136.view(512, 1, 4, 1, 16, 24) ;  bmm_136 = None
        permute_882 = view_1555.permute(2, 3, 4, 0, 5, 1) ;  view_1555 = None
        view_1556 = permute_882.view(4, 1, 16, 512, 24) ;  permute_882 = None
        unbind_int_75 = torch.unbind(view_1556) ;  view_1556 = None
        getitem_1416 = unbind_int_75[0]
        getitem_1417 = unbind_int_75[1]
        getitem_1418 = unbind_int_75[2]
        getitem_1419 = unbind_int_75[3];  unbind_int_75 = None
        view_1557 = arg453_1.view(1, 16, 1, 24) ;  arg453_1 = None
        add_148 = torch.add(getitem_1416,view_1557) ;  getitem_1416 = view_1557 = None
        _to_copy_889 = add_148.to(dtype = torch.bfloat16) ;  add_148 = None
        expand_86 = masked_fill_105.expand(1, 16, 512, 512) ;  masked_fill_105 = None
        _scaled_dot_product_efficient_attention_default_47 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_889,getitem_1417,getitem_1418,expand_86,False),) ;  _to_copy_889 = getitem_1417 = getitem_1418 = expand_86 = None
        getitem_1420 = _scaled_dot_product_efficient_attention_default_47[0]
        add_149 = torch.add(getitem_1419,1) ;  getitem_1419 = None
        sigmoid_113 = torch.sigmoid(add_149) ;  add_149 = None
        mul_184 = torch.mul(getitem_1420,sigmoid_113) ;  getitem_1420 = sigmoid_113 = None
        _to_copy_890 = arg455_1.to(dtype = torch.bfloat16) ;  arg455_1 = None
        unsqueeze_566 = torch.unsqueeze(mul_184,4) ;  mul_184 = None
        permute_883 = unsqueeze_566.permute(0, 2, 4, 3, 1) ;  unsqueeze_566 = None
        unsqueeze_567 = torch.unsqueeze(_to_copy_890,3) ;  _to_copy_890 = None
        unsqueeze_568 = torch.unsqueeze(unsqueeze_567,4) ;  unsqueeze_567 = None
        permute_884 = unsqueeze_568.permute(3, 4, 2, 1, 0) ;  unsqueeze_568 = None
        permute_885 = permute_883.permute(1, 3, 4, 0, 2) ;  permute_883 = None
        clone_153 = torch.clone(permute_885,memory_format = torch.contiguous_format) ;  permute_885 = None
        _unsafe_view_134 = clone_153.view(1, 512, 384) ;  clone_153 = None
        permute_886 = permute_884.permute(3, 4, 0, 2, 1) ;  permute_884 = None
        clone_154 = torch.clone(permute_886,memory_format = torch.contiguous_format) ;  permute_886 = None
        _unsafe_view_135 = clone_154.view(1, 384, 384) ;  clone_154 = None
        bmm_137 = torch.bmm(_unsafe_view_134,_unsafe_view_135) ;  _unsafe_view_134 = _unsafe_view_135 = None
        view_1558 = bmm_137.view(512, 1, 1, 1, 384) ;  bmm_137 = None
        permute_887 = view_1558.permute(3, 0, 4, 1, 2) ;  view_1558 = None
        view_1559 = permute_887.view(1, 512, 384) ;  permute_887 = None
        unsqueeze_569 = torch.unsqueeze(arg1406_1,-1) 
        mul_185 = torch.mul(view_1559,unsqueeze_569) ;  view_1559 = unsqueeze_569 = None
        add_150 = torch.add(add_143,mul_185) ;  mul_185 = None
        split_tensor_145 = torch.split(add_143,512,dim = -2) ;  add_143 = None
        getitem_1424 = split_tensor_145[0];  split_tensor_145 = None
        _to_copy_891 = getitem_1424.to(dtype = torch.float32) ;  getitem_1424 = None
        native_layer_norm_default_185 = (torch.nn.functional.layer_norm(_to_copy_891,[384],arg444_1,arg445_1,1e-05),) ;  _to_copy_891 = arg444_1 = arg445_1 = None
        getitem_1425 = native_layer_norm_default_185[0]
        _to_copy_892 = arg446_1.to(dtype = torch.bfloat16) ;  arg446_1 = None
        _to_copy_893 = getitem_1425.to(dtype = torch.bfloat16) ;  getitem_1425 = None
        t_319 = _to_copy_892.t() ;  _to_copy_892 = None
        view_1560 = _to_copy_893.view(512, 384) ;  _to_copy_893 = None
        mm_297 = torch.mm(view_1560,t_319) ;  view_1560 = t_319 = None
        view_1561 = mm_297.view(1, 512, 1536) ;  mm_297 = None
        split_tensor_146 = torch.split(view_1561,768,dim = -1) ;  view_1561 = None
        getitem_1428 = split_tensor_146[0]
        getitem_1429 = split_tensor_146[1];  split_tensor_146 = None
        silu_41 = torch.nn.functional.silu(getitem_1428) ;  getitem_1428 = None
        mul_186 = torch.mul(silu_41,getitem_1429) ;  silu_41 = getitem_1429 = None
        _to_copy_894 = arg447_1.to(dtype = torch.bfloat16) ;  arg447_1 = None
        t_320 = _to_copy_894.t() ;  _to_copy_894 = None
        view_1563 = mul_186.view(512, 768) ;  mul_186 = None
        mm_298 = torch.mm(view_1563,t_320) ;  view_1563 = t_320 = None
        view_1564 = mm_298.view(1, 512, 384) ;  mm_298 = None
        add_151 = torch.add(add_150,view_1564) ;  add_150 = view_1564 = None
        _to_copy_895 = add_147.to(dtype = torch.float32) 
        native_layer_norm_default_186 = (torch.nn.functional.layer_norm(_to_copy_895,[256],arg460_1,arg461_1,1e-05),) ;  _to_copy_895 = arg460_1 = arg461_1 = None
        getitem_1430 = native_layer_norm_default_186[0]
        split_with_sizes_default_36 = torch.split(arg463_1,[512,512]) ;  arg463_1 = None
        getitem_1433 = split_with_sizes_default_36[0]
        getitem_1434 = split_with_sizes_default_36[1];  split_with_sizes_default_36 = None
        split_with_sizes_default_37 = torch.split(arg464_1,[512,512,256]) ;  arg464_1 = None
        getitem_1435 = split_with_sizes_default_37[0]
        getitem_1436 = split_with_sizes_default_37[1]
        getitem_1437 = split_with_sizes_default_37[2];  split_with_sizes_default_37 = None
        _to_copy_896 = getitem_1433.to(dtype = torch.bfloat16) ;  getitem_1433 = None
        _to_copy_897 = getitem_1430.to(dtype = torch.bfloat16) 
        t_321 = _to_copy_896.t() ;  _to_copy_896 = None
        view_1565 = _to_copy_897.view(262144, 256) ;  _to_copy_897 = None
        mm_299 = torch.mm(view_1565,t_321) ;  view_1565 = t_321 = None
        view_1566 = mm_299.view(1, 512, 512, 512) ;  mm_299 = None
        _to_copy_898 = getitem_1435.to(dtype = torch.bfloat16) ;  getitem_1435 = None
        _to_copy_899 = getitem_1430.to(dtype = torch.bfloat16) 
        t_322 = _to_copy_898.t() ;  _to_copy_898 = None
        view_1567 = _to_copy_899.view(262144, 256) ;  _to_copy_899 = None
        mm_300 = torch.mm(view_1567,t_322) ;  view_1567 = t_322 = None
        view_1568 = mm_300.view(1, 512, 512, 512) ;  mm_300 = None
        sigmoid_114 = torch.sigmoid(view_1568) ;  view_1568 = None
        mul_187 = torch.mul(view_1566,sigmoid_114) ;  view_1566 = sigmoid_114 = None
        unsqueeze_570 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_106 = torch.bitwise_not(unsqueeze_570) ;  unsqueeze_570 = None
        masked_fill_106 = mul_187.masked_fill(bitwise_not_106,0) ;  mul_187 = bitwise_not_106 = None
        split_tensor_147 = torch.split(masked_fill_106,256,dim = -1) 
        getitem_1440 = split_tensor_147[0]
        unsqueeze_573 = torch.unsqueeze(getitem_1440,4) ;  getitem_1440 = None
        permute_892 = unsqueeze_573.permute(0, 1, 4, 3, 2) ;  unsqueeze_573 = None
        permute_893 = permute_892.permute(3, 1, 4, 0, 2) ;  permute_892 = None
        view_1571 = permute_893.view(256, 512, 512) ;  permute_893 = None
        split_tensor_148 = torch.split(masked_fill_106,256,dim = -1) ;  masked_fill_106 = None
        getitem_1443 = split_tensor_148[1];  split_tensor_148 = None
        unsqueeze_574 = torch.unsqueeze(getitem_1443,4) ;  getitem_1443 = None
        permute_894 = unsqueeze_574.permute(0, 4, 1, 3, 2) ;  unsqueeze_574 = None
        permute_895 = permute_894.permute(3, 4, 0, 2, 1) ;  permute_894 = None
        view_1572 = permute_895.view(256, 512, 512) ;  permute_895 = None
        bmm_138 = torch.bmm(view_1571,view_1572) ;  view_1571 = view_1572 = None
        view_1573 = bmm_138.view(256, 512, 1, 1, 512) ;  bmm_138 = None
        permute_896 = view_1573.permute(3, 1, 4, 0, 2) ;  view_1573 = None
        view_1574 = permute_896.view(1, 512, 512, 256) ;  permute_896 = None
        _to_copy_900 = getitem_1434.to(dtype = torch.bfloat16) ;  getitem_1434 = None
        _to_copy_901 = getitem_1430.to(dtype = torch.bfloat16) 
        t_323 = _to_copy_900.t() ;  _to_copy_900 = None
        view_1575 = _to_copy_901.view(262144, 256) ;  _to_copy_901 = None
        mm_301 = torch.mm(view_1575,t_323) ;  view_1575 = t_323 = None
        view_1576 = mm_301.view(1, 512, 512, 512) ;  mm_301 = None
        _to_copy_902 = getitem_1436.to(dtype = torch.bfloat16) ;  getitem_1436 = None
        _to_copy_903 = getitem_1430.to(dtype = torch.bfloat16) 
        t_324 = _to_copy_902.t() ;  _to_copy_902 = None
        view_1577 = _to_copy_903.view(262144, 256) ;  _to_copy_903 = None
        mm_302 = torch.mm(view_1577,t_324) ;  view_1577 = t_324 = None
        view_1578 = mm_302.view(1, 512, 512, 512) ;  mm_302 = None
        sigmoid_115 = torch.sigmoid(view_1578) ;  view_1578 = None
        mul_188 = torch.mul(view_1576,sigmoid_115) ;  view_1576 = sigmoid_115 = None
        view_1579 = mul_188.view(262144, 512) ;  mul_188 = None
        view_1580 = view_1579.view(1, 512, 512, 512) ;  view_1579 = None
        transpose_36 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_575 = torch.unsqueeze(transpose_36,3) ;  transpose_36 = None
        clone_155 = torch.clone(unsqueeze_575,memory_format = torch.contiguous_format) ;  unsqueeze_575 = None
        bitwise_not_107 = torch.bitwise_not(clone_155) ;  clone_155 = None
        masked_fill_107 = view_1580.masked_fill(bitwise_not_107,0) ;  view_1580 = bitwise_not_107 = None
        view_1581 = masked_fill_107.view(262144, 512) ;  masked_fill_107 = None
        view_1585 = view_1581.view(1, 512, 512, 512) 
        split_tensor_149 = torch.split(view_1585,256,dim = -1) ;  view_1585 = None
        getitem_1446 = split_tensor_149[0]
        unsqueeze_578 = torch.unsqueeze(getitem_1446,4) ;  getitem_1446 = None
        permute_901 = unsqueeze_578.permute(0, 2, 4, 3, 1) ;  unsqueeze_578 = None
        permute_902 = permute_901.permute(3, 1, 4, 0, 2) ;  permute_901 = None
        view_1586 = permute_902.view(256, 512, 512) ;  permute_902 = None
        view_1587 = view_1581.view(1, 512, 512, 512) ;  view_1581 = None
        split_tensor_150 = torch.split(view_1587,256,dim = -1) ;  view_1587 = None
        getitem_1449 = split_tensor_150[1];  split_tensor_150 = None
        unsqueeze_579 = torch.unsqueeze(getitem_1449,4) ;  getitem_1449 = None
        permute_903 = unsqueeze_579.permute(0, 4, 2, 3, 1) ;  unsqueeze_579 = None
        permute_904 = permute_903.permute(3, 4, 0, 2, 1) ;  permute_903 = None
        view_1588 = permute_904.view(256, 512, 512) ;  permute_904 = None
        bmm_139 = torch.bmm(view_1586,view_1588) ;  view_1586 = view_1588 = None
        view_1589 = bmm_139.view(256, 512, 1, 1, 512) ;  bmm_139 = None
        permute_905 = view_1589.permute(3, 1, 4, 0, 2) ;  view_1589 = None
        view_1590 = permute_905.view(1, 512, 512, 256) ;  permute_905 = None
        _to_copy_904 = view_1574.to(dtype = torch.float32) ;  view_1574 = None
        native_layer_norm_default_187 = (torch.nn.functional.layer_norm(_to_copy_904,[256],None,None,1e-05),) ;  _to_copy_904 = None
        getitem_1450 = native_layer_norm_default_187[0]
        _to_copy_905 = view_1590.to(dtype = torch.float32) ;  view_1590 = None
        native_layer_norm_default_188 = (torch.nn.functional.layer_norm(_to_copy_905,[256],None,None,1e-05),) ;  _to_copy_905 = None
        getitem_1453 = native_layer_norm_default_188[0]
        add_152 = torch.add(getitem_1450,getitem_1453) ;  getitem_1450 = getitem_1453 = None
        _to_copy_906 = arg462_1.to(dtype = torch.bfloat16) ;  arg462_1 = None
        _to_copy_907 = add_152.to(dtype = torch.bfloat16) ;  add_152 = None
        t_325 = _to_copy_906.t() ;  _to_copy_906 = None
        view_1591 = _to_copy_907.view(262144, 256) ;  _to_copy_907 = None
        mm_303 = torch.mm(view_1591,t_325) ;  view_1591 = t_325 = None
        view_1592 = mm_303.view(1, 512, 512, 256) ;  mm_303 = None
        _to_copy_908 = getitem_1437.to(dtype = torch.bfloat16) ;  getitem_1437 = None
        _to_copy_909 = getitem_1430.to(dtype = torch.bfloat16) ;  getitem_1430 = None
        t_326 = _to_copy_908.t() ;  _to_copy_908 = None
        view_1593 = _to_copy_909.view(262144, 256) ;  _to_copy_909 = None
        mm_304 = torch.mm(view_1593,t_326) ;  view_1593 = t_326 = None
        view_1594 = mm_304.view(1, 512, 512, 256) ;  mm_304 = None
        sigmoid_116 = torch.sigmoid(view_1594) ;  view_1594 = None
        mul_189 = torch.mul(view_1592,sigmoid_116) ;  view_1592 = sigmoid_116 = None
        add_153 = torch.add(add_147,mul_189) ;  mul_189 = None
        _to_copy_910 = add_147.to(dtype = torch.float32) 
        native_layer_norm_default_189 = (torch.nn.functional.layer_norm(_to_copy_910,[256],None,None,1e-05),) ;  _to_copy_910 = None
        getitem_1456 = native_layer_norm_default_189[0]
        _to_copy_911 = arg466_1.to(dtype = torch.bfloat16) ;  arg466_1 = None
        _to_copy_912 = getitem_1456.to(dtype = torch.bfloat16) 
        t_327 = _to_copy_911.t() ;  _to_copy_911 = None
        view_1595 = _to_copy_912.view(262144, 256) ;  _to_copy_912 = None
        mm_305 = torch.mm(view_1595,t_327) ;  view_1595 = t_327 = None
        view_1596 = mm_305.view(1, 512, 512, 8) ;  mm_305 = None
        view_1597 = view_1596.view(1, 512, 512, 2, 4) ;  view_1596 = None
        permute_906 = view_1597.permute(0, 3, 4, 1, 2) ;  view_1597 = None
        view_1598 = permute_906.view(1, 2, 4, 1, 512, 512) ;  permute_906 = None
        view_1599 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_108 = torch.bitwise_not(view_1599) ;  view_1599 = None
        masked_fill_108 = view_1598.masked_fill(bitwise_not_108,-10000) ;  view_1598 = bitwise_not_108 = None
        view_1600 = masked_fill_108.view(1, 2, 4, 512, 512) ;  masked_fill_108 = None
        permute_907 = view_1600.permute(1, 0, 2, 3, 4) ;  view_1600 = None
        view_1601 = permute_907.view(2, 4, 1, 512, 512) ;  permute_907 = None
        _to_copy_913 = arg467_1.to(dtype = torch.bfloat16) ;  arg467_1 = None
        _to_copy_914 = getitem_1456.to(dtype = torch.bfloat16) 
        t_328 = _to_copy_913.t() ;  _to_copy_913 = None
        view_1602 = _to_copy_914.view(262144, 256) ;  _to_copy_914 = None
        mm_306 = torch.mm(view_1602,t_328) ;  view_1602 = t_328 = None
        view_1603 = mm_306.view(1, 512, 512, 1024) ;  mm_306 = None
        select_37 = torch.select(view_1601,0,0) 
        view_1604 = view_1603.view(1, 512, 512, 4, 4, 64) ;  view_1603 = None
        permute_908 = view_1604.permute(4, 0, 3, 1, 2, 5) ;  view_1604 = None
        view_1605 = permute_908.view(4, 4, 512, 512, 64) ;  permute_908 = None
        unbind_int_76 = torch.unbind(view_1605) ;  view_1605 = None
        getitem_1459 = unbind_int_76[0]
        getitem_1460 = unbind_int_76[1]
        getitem_1461 = unbind_int_76[2]
        getitem_1462 = unbind_int_76[3];  unbind_int_76 = None
        expand_87 = select_37.expand(4, 512, 512, 512) ;  select_37 = None
        _scaled_dot_product_efficient_attention_default_48 = (torch.nn.functional.scaled_dot_product_attention(getitem_1459,getitem_1460,getitem_1461,expand_87,False),) ;  getitem_1459 = getitem_1460 = getitem_1461 = expand_87 = None
        getitem_1463 = _scaled_dot_product_efficient_attention_default_48[0]
        sigmoid_117 = torch.sigmoid(getitem_1462) ;  getitem_1462 = None
        mul_190 = torch.mul(getitem_1463,sigmoid_117) ;  getitem_1463 = sigmoid_117 = None
        view_1606 = mul_190.view(1, 4, 512, 512, 64) ;  mul_190 = None
        permute_909 = view_1606.permute(0, 2, 3, 1, 4) ;  view_1606 = None
        clone_156 = torch.clone(permute_909,memory_format = torch.contiguous_format) ;  permute_909 = None
        _unsafe_view_136 = clone_156.view(1, 512, 512, 256) ;  clone_156 = None
        transpose_37 = torch.transpose(getitem_1456,1,2) ;  getitem_1456 = None
        _to_copy_915 = arg468_1.to(dtype = torch.bfloat16) ;  arg468_1 = None
        _to_copy_916 = transpose_37.to(dtype = torch.bfloat16) ;  transpose_37 = None
        t_329 = _to_copy_915.t() ;  _to_copy_915 = None
        expand_88 = _to_copy_916.expand(1, 512, 512, 256) ;  _to_copy_916 = None
        view_1607 = expand_88.view(512, 512, 256) ;  expand_88 = None
        expand_89 = t_329.expand(1, 512, 256, 1024) ;  t_329 = None
        view_1608 = expand_89.view(512, 256, 1024) ;  expand_89 = None
        bmm_140 = torch.bmm(view_1607,view_1608) ;  view_1607 = view_1608 = None
        view_1609 = bmm_140.view(1, 512, 512, 1024) ;  bmm_140 = None
        select_38 = torch.select(view_1601,0,1) ;  view_1601 = None
        view_1610 = view_1609.view(1, 512, 512, 4, 4, 64) ;  view_1609 = None
        permute_910 = view_1610.permute(4, 0, 3, 1, 2, 5) ;  view_1610 = None
        view_1611 = permute_910.view(4, 4, 512, 512, 64) ;  permute_910 = None
        unbind_int_77 = torch.unbind(view_1611) ;  view_1611 = None
        getitem_1467 = unbind_int_77[0]
        getitem_1468 = unbind_int_77[1]
        getitem_1469 = unbind_int_77[2]
        getitem_1470 = unbind_int_77[3];  unbind_int_77 = None
        expand_90 = select_38.expand(4, 512, 512, 512) ;  select_38 = None
        _scaled_dot_product_efficient_attention_default_49 = (torch.nn.functional.scaled_dot_product_attention(getitem_1467,getitem_1468,getitem_1469,expand_90,False),) ;  getitem_1467 = getitem_1468 = getitem_1469 = expand_90 = None
        getitem_1471 = _scaled_dot_product_efficient_attention_default_49[0]
        sigmoid_118 = torch.sigmoid(getitem_1470) ;  getitem_1470 = None
        mul_191 = torch.mul(getitem_1471,sigmoid_118) ;  getitem_1471 = sigmoid_118 = None
        view_1612 = mul_191.view(1, 4, 512, 512, 64) ;  mul_191 = None
        permute_911 = view_1612.permute(0, 2, 3, 1, 4) ;  view_1612 = None
        clone_157 = torch.clone(permute_911,memory_format = torch.contiguous_format) ;  permute_911 = None
        _unsafe_view_137 = clone_157.view(1, 512, 512, 256) ;  clone_157 = None
        cat_24 = torch.cat([_unsafe_view_136,_unsafe_view_137],dim = -1) ;  _unsafe_view_136 = _unsafe_view_137 = None
        slice_217 = arg465_1[0:] ;  arg465_1 = None
        unsqueeze_580 = torch.unsqueeze(slice_217,1) ;  slice_217 = None
        mul_192 = torch.mul(arg469_1,unsqueeze_580) ;  arg469_1 = unsqueeze_580 = None
        _to_copy_917 = mul_192.to(dtype = torch.bfloat16) ;  mul_192 = None
        t_330 = _to_copy_917.t() ;  _to_copy_917 = None
        view_1613 = cat_24.view(262144, 512) ;  cat_24 = None
        mm_307 = torch.mm(view_1613,t_330) ;  view_1613 = t_330 = None
        view_1614 = mm_307.view(1, 512, 512, 256) ;  mm_307 = None
        add_154 = torch.add(add_153,view_1614) ;  add_153 = view_1614 = None
        split_tensor_151 = torch.split(add_147,512,dim = -2) 
        getitem_1475 = split_tensor_151[0];  split_tensor_151 = None
        _to_copy_918 = getitem_1475.to(dtype = torch.float32) ;  getitem_1475 = None
        native_layer_norm_default_190 = (torch.nn.functional.layer_norm(_to_copy_918,[256],arg456_1,arg457_1,1e-05),) ;  _to_copy_918 = arg456_1 = arg457_1 = None
        getitem_1476 = native_layer_norm_default_190[0]
        _to_copy_919 = arg458_1.to(dtype = torch.bfloat16) ;  arg458_1 = None
        _to_copy_920 = getitem_1476.to(dtype = torch.bfloat16) ;  getitem_1476 = None
        t_331 = _to_copy_919.t() ;  _to_copy_919 = None
        view_1615 = _to_copy_920.view(262144, 256) ;  _to_copy_920 = None
        mm_308 = torch.mm(view_1615,t_331) ;  view_1615 = t_331 = None
        view_1616 = mm_308.view(1, 512, 512, 1024) ;  mm_308 = None
        split_tensor_152 = torch.split(view_1616,512,dim = -1) ;  view_1616 = None
        getitem_1479 = split_tensor_152[0]
        getitem_1480 = split_tensor_152[1];  split_tensor_152 = None
        silu_42 = torch.nn.functional.silu(getitem_1479) ;  getitem_1479 = None
        mul_193 = torch.mul(silu_42,getitem_1480) ;  silu_42 = getitem_1480 = None
        _to_copy_921 = arg459_1.to(dtype = torch.bfloat16) ;  arg459_1 = None
        t_332 = _to_copy_921.t() ;  _to_copy_921 = None
        view_1618 = mul_193.view(262144, 512) ;  mul_193 = None
        mm_309 = torch.mm(view_1618,t_332) ;  view_1618 = t_332 = None
        view_1619 = mm_309.view(1, 512, 512, 256) ;  mm_309 = None
        add_155 = torch.add(add_154,view_1619) ;  add_154 = view_1619 = None
        _to_copy_922 = add_151.to(dtype = torch.float32) 
        native_layer_norm_default_191 = (torch.nn.functional.layer_norm(_to_copy_922,[384],arg474_1,arg475_1,1e-05),) ;  _to_copy_922 = arg474_1 = arg475_1 = None
        getitem_1481 = native_layer_norm_default_191[0]
        _to_copy_923 = add_147.to(dtype = torch.float32) ;  add_147 = None
        native_layer_norm_default_192 = (torch.nn.functional.layer_norm(_to_copy_923,[256],arg476_1,arg477_1,1e-05),) ;  _to_copy_923 = arg476_1 = arg477_1 = None
        getitem_1484 = native_layer_norm_default_192[0]
        _to_copy_924 = arg478_1.to(dtype = torch.bfloat16) ;  arg478_1 = None
        _to_copy_925 = getitem_1484.to(dtype = torch.bfloat16) ;  getitem_1484 = None
        t_333 = _to_copy_924.t() ;  _to_copy_924 = None
        view_1620 = _to_copy_925.view(262144, 256) ;  _to_copy_925 = None
        mm_310 = torch.mm(view_1620,t_333) ;  view_1620 = t_333 = None
        view_1621 = mm_310.view(1, 512, 512, 16) ;  mm_310 = None
        permute_912 = view_1621.permute(0, 3, 1, 2) ;  view_1621 = None
        view_1622 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_109 = torch.bitwise_not(view_1622) ;  view_1622 = None
        masked_fill_109 = permute_912.masked_fill(bitwise_not_109,-10000) ;  permute_912 = bitwise_not_109 = None
        _to_copy_926 = getitem_1481.to(dtype = torch.bfloat16) ;  getitem_1481 = None
        _to_copy_927 = arg480_1.to(dtype = torch.bfloat16) ;  arg480_1 = None
        unsqueeze_581 = torch.unsqueeze(_to_copy_926,3) ;  _to_copy_926 = None
        unsqueeze_582 = torch.unsqueeze(unsqueeze_581,4) ;  unsqueeze_581 = None
        unsqueeze_583 = torch.unsqueeze(unsqueeze_582,5) ;  unsqueeze_582 = None
        permute_913 = unsqueeze_583.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_583 = None
        unsqueeze_584 = torch.unsqueeze(_to_copy_927,4) ;  _to_copy_927 = None
        unsqueeze_585 = torch.unsqueeze(unsqueeze_584,5) ;  unsqueeze_584 = None
        permute_914 = unsqueeze_585.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_585 = None
        permute_915 = permute_913.permute(3, 5, 0, 1, 2, 4) ;  permute_913 = None
        view_1623 = permute_915.view(1, 512, 384) ;  permute_915 = None
        permute_916 = permute_914.permute(5, 0, 1, 2, 4, 3) ;  permute_914 = None
        view_1624 = permute_916.view(1, 384, 1536) ;  permute_916 = None
        bmm_141 = torch.bmm(view_1623,view_1624) ;  view_1623 = view_1624 = None
        view_1625 = bmm_141.view(512, 1, 4, 1, 16, 24) ;  bmm_141 = None
        permute_917 = view_1625.permute(2, 3, 4, 0, 5, 1) ;  view_1625 = None
        view_1626 = permute_917.view(4, 1, 16, 512, 24) ;  permute_917 = None
        unbind_int_78 = torch.unbind(view_1626) ;  view_1626 = None
        getitem_1487 = unbind_int_78[0]
        getitem_1488 = unbind_int_78[1]
        getitem_1489 = unbind_int_78[2]
        getitem_1490 = unbind_int_78[3];  unbind_int_78 = None
        view_1627 = arg479_1.view(1, 16, 1, 24) ;  arg479_1 = None
        add_156 = torch.add(getitem_1487,view_1627) ;  getitem_1487 = view_1627 = None
        _to_copy_928 = add_156.to(dtype = torch.bfloat16) ;  add_156 = None
        expand_91 = masked_fill_109.expand(1, 16, 512, 512) ;  masked_fill_109 = None
        _scaled_dot_product_efficient_attention_default_50 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_928,getitem_1488,getitem_1489,expand_91,False),) ;  _to_copy_928 = getitem_1488 = getitem_1489 = expand_91 = None
        getitem_1491 = _scaled_dot_product_efficient_attention_default_50[0]
        add_157 = torch.add(getitem_1490,1) ;  getitem_1490 = None
        sigmoid_119 = torch.sigmoid(add_157) ;  add_157 = None
        mul_194 = torch.mul(getitem_1491,sigmoid_119) ;  getitem_1491 = sigmoid_119 = None
        _to_copy_929 = arg481_1.to(dtype = torch.bfloat16) ;  arg481_1 = None
        unsqueeze_586 = torch.unsqueeze(mul_194,4) ;  mul_194 = None
        permute_918 = unsqueeze_586.permute(0, 2, 4, 3, 1) ;  unsqueeze_586 = None
        unsqueeze_587 = torch.unsqueeze(_to_copy_929,3) ;  _to_copy_929 = None
        unsqueeze_588 = torch.unsqueeze(unsqueeze_587,4) ;  unsqueeze_587 = None
        permute_919 = unsqueeze_588.permute(3, 4, 2, 1, 0) ;  unsqueeze_588 = None
        permute_920 = permute_918.permute(1, 3, 4, 0, 2) ;  permute_918 = None
        clone_158 = torch.clone(permute_920,memory_format = torch.contiguous_format) ;  permute_920 = None
        _unsafe_view_138 = clone_158.view(1, 512, 384) ;  clone_158 = None
        permute_921 = permute_919.permute(3, 4, 0, 2, 1) ;  permute_919 = None
        clone_159 = torch.clone(permute_921,memory_format = torch.contiguous_format) ;  permute_921 = None
        _unsafe_view_139 = clone_159.view(1, 384, 384) ;  clone_159 = None
        bmm_142 = torch.bmm(_unsafe_view_138,_unsafe_view_139) ;  _unsafe_view_138 = _unsafe_view_139 = None
        view_1628 = bmm_142.view(512, 1, 1, 1, 384) ;  bmm_142 = None
        permute_922 = view_1628.permute(3, 0, 4, 1, 2) ;  view_1628 = None
        view_1629 = permute_922.view(1, 512, 384) ;  permute_922 = None
        unsqueeze_589 = torch.unsqueeze(arg1406_1,-1) 
        mul_195 = torch.mul(view_1629,unsqueeze_589) ;  view_1629 = unsqueeze_589 = None
        add_158 = torch.add(add_151,mul_195) ;  mul_195 = None
        split_tensor_153 = torch.split(add_151,512,dim = -2) ;  add_151 = None
        getitem_1495 = split_tensor_153[0];  split_tensor_153 = None
        _to_copy_930 = getitem_1495.to(dtype = torch.float32) ;  getitem_1495 = None
        native_layer_norm_default_193 = (torch.nn.functional.layer_norm(_to_copy_930,[384],arg470_1,arg471_1,1e-05),) ;  _to_copy_930 = arg470_1 = arg471_1 = None
        getitem_1496 = native_layer_norm_default_193[0]
        _to_copy_931 = arg472_1.to(dtype = torch.bfloat16) ;  arg472_1 = None
        _to_copy_932 = getitem_1496.to(dtype = torch.bfloat16) ;  getitem_1496 = None
        t_334 = _to_copy_931.t() ;  _to_copy_931 = None
        view_1630 = _to_copy_932.view(512, 384) ;  _to_copy_932 = None
        mm_311 = torch.mm(view_1630,t_334) ;  view_1630 = t_334 = None
        view_1631 = mm_311.view(1, 512, 1536) ;  mm_311 = None
        split_tensor_154 = torch.split(view_1631,768,dim = -1) ;  view_1631 = None
        getitem_1499 = split_tensor_154[0]
        getitem_1500 = split_tensor_154[1];  split_tensor_154 = None
        silu_43 = torch.nn.functional.silu(getitem_1499) ;  getitem_1499 = None
        mul_196 = torch.mul(silu_43,getitem_1500) ;  silu_43 = getitem_1500 = None
        _to_copy_933 = arg473_1.to(dtype = torch.bfloat16) ;  arg473_1 = None
        t_335 = _to_copy_933.t() ;  _to_copy_933 = None
        view_1633 = mul_196.view(512, 768) ;  mul_196 = None
        mm_312 = torch.mm(view_1633,t_335) ;  view_1633 = t_335 = None
        view_1634 = mm_312.view(1, 512, 384) ;  mm_312 = None
        add_159 = torch.add(add_158,view_1634) ;  add_158 = view_1634 = None
        _to_copy_934 = add_155.to(dtype = torch.float32) 
        native_layer_norm_default_194 = (torch.nn.functional.layer_norm(_to_copy_934,[256],arg486_1,arg487_1,1e-05),) ;  _to_copy_934 = arg486_1 = arg487_1 = None
        getitem_1501 = native_layer_norm_default_194[0]
        split_with_sizes_default_38 = torch.split(arg489_1,[512,512]) ;  arg489_1 = None
        getitem_1504 = split_with_sizes_default_38[0]
        getitem_1505 = split_with_sizes_default_38[1];  split_with_sizes_default_38 = None
        split_with_sizes_default_39 = torch.split(arg490_1,[512,512,256]) ;  arg490_1 = None
        getitem_1506 = split_with_sizes_default_39[0]
        getitem_1507 = split_with_sizes_default_39[1]
        getitem_1508 = split_with_sizes_default_39[2];  split_with_sizes_default_39 = None
        _to_copy_935 = getitem_1504.to(dtype = torch.bfloat16) ;  getitem_1504 = None
        _to_copy_936 = getitem_1501.to(dtype = torch.bfloat16) 
        t_336 = _to_copy_935.t() ;  _to_copy_935 = None
        view_1635 = _to_copy_936.view(262144, 256) ;  _to_copy_936 = None
        mm_313 = torch.mm(view_1635,t_336) ;  view_1635 = t_336 = None
        view_1636 = mm_313.view(1, 512, 512, 512) ;  mm_313 = None
        _to_copy_937 = getitem_1506.to(dtype = torch.bfloat16) ;  getitem_1506 = None
        _to_copy_938 = getitem_1501.to(dtype = torch.bfloat16) 
        t_337 = _to_copy_937.t() ;  _to_copy_937 = None
        view_1637 = _to_copy_938.view(262144, 256) ;  _to_copy_938 = None
        mm_314 = torch.mm(view_1637,t_337) ;  view_1637 = t_337 = None
        view_1638 = mm_314.view(1, 512, 512, 512) ;  mm_314 = None
        sigmoid_120 = torch.sigmoid(view_1638) ;  view_1638 = None
        mul_197 = torch.mul(view_1636,sigmoid_120) ;  view_1636 = sigmoid_120 = None
        unsqueeze_590 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_110 = torch.bitwise_not(unsqueeze_590) ;  unsqueeze_590 = None
        masked_fill_110 = mul_197.masked_fill(bitwise_not_110,0) ;  mul_197 = bitwise_not_110 = None
        split_tensor_155 = torch.split(masked_fill_110,256,dim = -1) 
        getitem_1511 = split_tensor_155[0]
        unsqueeze_593 = torch.unsqueeze(getitem_1511,4) ;  getitem_1511 = None
        permute_927 = unsqueeze_593.permute(0, 1, 4, 3, 2) ;  unsqueeze_593 = None
        permute_928 = permute_927.permute(3, 1, 4, 0, 2) ;  permute_927 = None
        view_1641 = permute_928.view(256, 512, 512) ;  permute_928 = None
        split_tensor_156 = torch.split(masked_fill_110,256,dim = -1) ;  masked_fill_110 = None
        getitem_1514 = split_tensor_156[1];  split_tensor_156 = None
        unsqueeze_594 = torch.unsqueeze(getitem_1514,4) ;  getitem_1514 = None
        permute_929 = unsqueeze_594.permute(0, 4, 1, 3, 2) ;  unsqueeze_594 = None
        permute_930 = permute_929.permute(3, 4, 0, 2, 1) ;  permute_929 = None
        view_1642 = permute_930.view(256, 512, 512) ;  permute_930 = None
        bmm_143 = torch.bmm(view_1641,view_1642) ;  view_1641 = view_1642 = None
        view_1643 = bmm_143.view(256, 512, 1, 1, 512) ;  bmm_143 = None
        permute_931 = view_1643.permute(3, 1, 4, 0, 2) ;  view_1643 = None
        view_1644 = permute_931.view(1, 512, 512, 256) ;  permute_931 = None
        _to_copy_939 = getitem_1505.to(dtype = torch.bfloat16) ;  getitem_1505 = None
        _to_copy_940 = getitem_1501.to(dtype = torch.bfloat16) 
        t_338 = _to_copy_939.t() ;  _to_copy_939 = None
        view_1645 = _to_copy_940.view(262144, 256) ;  _to_copy_940 = None
        mm_315 = torch.mm(view_1645,t_338) ;  view_1645 = t_338 = None
        view_1646 = mm_315.view(1, 512, 512, 512) ;  mm_315 = None
        _to_copy_941 = getitem_1507.to(dtype = torch.bfloat16) ;  getitem_1507 = None
        _to_copy_942 = getitem_1501.to(dtype = torch.bfloat16) 
        t_339 = _to_copy_941.t() ;  _to_copy_941 = None
        view_1647 = _to_copy_942.view(262144, 256) ;  _to_copy_942 = None
        mm_316 = torch.mm(view_1647,t_339) ;  view_1647 = t_339 = None
        view_1648 = mm_316.view(1, 512, 512, 512) ;  mm_316 = None
        sigmoid_121 = torch.sigmoid(view_1648) ;  view_1648 = None
        mul_198 = torch.mul(view_1646,sigmoid_121) ;  view_1646 = sigmoid_121 = None
        view_1649 = mul_198.view(262144, 512) ;  mul_198 = None
        view_1650 = view_1649.view(1, 512, 512, 512) ;  view_1649 = None
        transpose_38 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_595 = torch.unsqueeze(transpose_38,3) ;  transpose_38 = None
        clone_160 = torch.clone(unsqueeze_595,memory_format = torch.contiguous_format) ;  unsqueeze_595 = None
        bitwise_not_111 = torch.bitwise_not(clone_160) ;  clone_160 = None
        masked_fill_111 = view_1650.masked_fill(bitwise_not_111,0) ;  view_1650 = bitwise_not_111 = None
        view_1651 = masked_fill_111.view(262144, 512) ;  masked_fill_111 = None
        view_1655 = view_1651.view(1, 512, 512, 512) 
        split_tensor_157 = torch.split(view_1655,256,dim = -1) ;  view_1655 = None
        getitem_1517 = split_tensor_157[0]
        unsqueeze_598 = torch.unsqueeze(getitem_1517,4) ;  getitem_1517 = None
        permute_936 = unsqueeze_598.permute(0, 2, 4, 3, 1) ;  unsqueeze_598 = None
        permute_937 = permute_936.permute(3, 1, 4, 0, 2) ;  permute_936 = None
        view_1656 = permute_937.view(256, 512, 512) ;  permute_937 = None
        view_1657 = view_1651.view(1, 512, 512, 512) ;  view_1651 = None
        split_tensor_158 = torch.split(view_1657,256,dim = -1) ;  view_1657 = None
        getitem_1520 = split_tensor_158[1];  split_tensor_158 = None
        unsqueeze_599 = torch.unsqueeze(getitem_1520,4) ;  getitem_1520 = None
        permute_938 = unsqueeze_599.permute(0, 4, 2, 3, 1) ;  unsqueeze_599 = None
        permute_939 = permute_938.permute(3, 4, 0, 2, 1) ;  permute_938 = None
        view_1658 = permute_939.view(256, 512, 512) ;  permute_939 = None
        bmm_144 = torch.bmm(view_1656,view_1658) ;  view_1656 = view_1658 = None
        view_1659 = bmm_144.view(256, 512, 1, 1, 512) ;  bmm_144 = None
        permute_940 = view_1659.permute(3, 1, 4, 0, 2) ;  view_1659 = None
        view_1660 = permute_940.view(1, 512, 512, 256) ;  permute_940 = None
        _to_copy_943 = view_1644.to(dtype = torch.float32) ;  view_1644 = None
        native_layer_norm_default_195 = (torch.nn.functional.layer_norm(_to_copy_943,[256],None,None,1e-05),) ;  _to_copy_943 = None
        getitem_1521 = native_layer_norm_default_195[0]
        _to_copy_944 = view_1660.to(dtype = torch.float32) ;  view_1660 = None
        native_layer_norm_default_196 = (torch.nn.functional.layer_norm(_to_copy_944,[256],None,None,1e-05),) ;  _to_copy_944 = None
        getitem_1524 = native_layer_norm_default_196[0]
        add_160 = torch.add(getitem_1521,getitem_1524) ;  getitem_1521 = getitem_1524 = None
        _to_copy_945 = arg488_1.to(dtype = torch.bfloat16) ;  arg488_1 = None
        _to_copy_946 = add_160.to(dtype = torch.bfloat16) ;  add_160 = None
        t_340 = _to_copy_945.t() ;  _to_copy_945 = None
        view_1661 = _to_copy_946.view(262144, 256) ;  _to_copy_946 = None
        mm_317 = torch.mm(view_1661,t_340) ;  view_1661 = t_340 = None
        view_1662 = mm_317.view(1, 512, 512, 256) ;  mm_317 = None
        _to_copy_947 = getitem_1508.to(dtype = torch.bfloat16) ;  getitem_1508 = None
        _to_copy_948 = getitem_1501.to(dtype = torch.bfloat16) ;  getitem_1501 = None
        t_341 = _to_copy_947.t() ;  _to_copy_947 = None
        view_1663 = _to_copy_948.view(262144, 256) ;  _to_copy_948 = None
        mm_318 = torch.mm(view_1663,t_341) ;  view_1663 = t_341 = None
        view_1664 = mm_318.view(1, 512, 512, 256) ;  mm_318 = None
        sigmoid_122 = torch.sigmoid(view_1664) ;  view_1664 = None
        mul_199 = torch.mul(view_1662,sigmoid_122) ;  view_1662 = sigmoid_122 = None
        add_161 = torch.add(add_155,mul_199) ;  mul_199 = None
        _to_copy_949 = add_155.to(dtype = torch.float32) 
        native_layer_norm_default_197 = (torch.nn.functional.layer_norm(_to_copy_949,[256],None,None,1e-05),) ;  _to_copy_949 = None
        getitem_1527 = native_layer_norm_default_197[0]
        _to_copy_950 = arg492_1.to(dtype = torch.bfloat16) ;  arg492_1 = None
        _to_copy_951 = getitem_1527.to(dtype = torch.bfloat16) 
        t_342 = _to_copy_950.t() ;  _to_copy_950 = None
        view_1665 = _to_copy_951.view(262144, 256) ;  _to_copy_951 = None
        mm_319 = torch.mm(view_1665,t_342) ;  view_1665 = t_342 = None
        view_1666 = mm_319.view(1, 512, 512, 8) ;  mm_319 = None
        view_1667 = view_1666.view(1, 512, 512, 2, 4) ;  view_1666 = None
        permute_941 = view_1667.permute(0, 3, 4, 1, 2) ;  view_1667 = None
        view_1668 = permute_941.view(1, 2, 4, 1, 512, 512) ;  permute_941 = None
        view_1669 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_112 = torch.bitwise_not(view_1669) ;  view_1669 = None
        masked_fill_112 = view_1668.masked_fill(bitwise_not_112,-10000) ;  view_1668 = bitwise_not_112 = None
        view_1670 = masked_fill_112.view(1, 2, 4, 512, 512) ;  masked_fill_112 = None
        permute_942 = view_1670.permute(1, 0, 2, 3, 4) ;  view_1670 = None
        view_1671 = permute_942.view(2, 4, 1, 512, 512) ;  permute_942 = None
        _to_copy_952 = arg493_1.to(dtype = torch.bfloat16) ;  arg493_1 = None
        _to_copy_953 = getitem_1527.to(dtype = torch.bfloat16) 
        t_343 = _to_copy_952.t() ;  _to_copy_952 = None
        view_1672 = _to_copy_953.view(262144, 256) ;  _to_copy_953 = None
        mm_320 = torch.mm(view_1672,t_343) ;  view_1672 = t_343 = None
        view_1673 = mm_320.view(1, 512, 512, 1024) ;  mm_320 = None
        select_39 = torch.select(view_1671,0,0) 
        view_1674 = view_1673.view(1, 512, 512, 4, 4, 64) ;  view_1673 = None
        permute_943 = view_1674.permute(4, 0, 3, 1, 2, 5) ;  view_1674 = None
        view_1675 = permute_943.view(4, 4, 512, 512, 64) ;  permute_943 = None
        unbind_int_79 = torch.unbind(view_1675) ;  view_1675 = None
        getitem_1530 = unbind_int_79[0]
        getitem_1531 = unbind_int_79[1]
        getitem_1532 = unbind_int_79[2]
        getitem_1533 = unbind_int_79[3];  unbind_int_79 = None
        expand_92 = select_39.expand(4, 512, 512, 512) ;  select_39 = None
        _scaled_dot_product_efficient_attention_default_51 = (torch.nn.functional.scaled_dot_product_attention(getitem_1530,getitem_1531,getitem_1532,expand_92,False),) ;  getitem_1530 = getitem_1531 = getitem_1532 = expand_92 = None
        getitem_1534 = _scaled_dot_product_efficient_attention_default_51[0]
        sigmoid_123 = torch.sigmoid(getitem_1533) ;  getitem_1533 = None
        mul_200 = torch.mul(getitem_1534,sigmoid_123) ;  getitem_1534 = sigmoid_123 = None
        view_1676 = mul_200.view(1, 4, 512, 512, 64) ;  mul_200 = None
        permute_944 = view_1676.permute(0, 2, 3, 1, 4) ;  view_1676 = None
        clone_161 = torch.clone(permute_944,memory_format = torch.contiguous_format) ;  permute_944 = None
        _unsafe_view_140 = clone_161.view(1, 512, 512, 256) ;  clone_161 = None
        transpose_39 = torch.transpose(getitem_1527,1,2) ;  getitem_1527 = None
        _to_copy_954 = arg494_1.to(dtype = torch.bfloat16) ;  arg494_1 = None
        _to_copy_955 = transpose_39.to(dtype = torch.bfloat16) ;  transpose_39 = None
        t_344 = _to_copy_954.t() ;  _to_copy_954 = None
        expand_93 = _to_copy_955.expand(1, 512, 512, 256) ;  _to_copy_955 = None
        view_1677 = expand_93.view(512, 512, 256) ;  expand_93 = None
        expand_94 = t_344.expand(1, 512, 256, 1024) ;  t_344 = None
        view_1678 = expand_94.view(512, 256, 1024) ;  expand_94 = None
        bmm_145 = torch.bmm(view_1677,view_1678) ;  view_1677 = view_1678 = None
        view_1679 = bmm_145.view(1, 512, 512, 1024) ;  bmm_145 = None
        select_40 = torch.select(view_1671,0,1) ;  view_1671 = None
        view_1680 = view_1679.view(1, 512, 512, 4, 4, 64) ;  view_1679 = None
        permute_945 = view_1680.permute(4, 0, 3, 1, 2, 5) ;  view_1680 = None
        view_1681 = permute_945.view(4, 4, 512, 512, 64) ;  permute_945 = None
        unbind_int_80 = torch.unbind(view_1681) ;  view_1681 = None
        getitem_1538 = unbind_int_80[0]
        getitem_1539 = unbind_int_80[1]
        getitem_1540 = unbind_int_80[2]
        getitem_1541 = unbind_int_80[3];  unbind_int_80 = None
        expand_95 = select_40.expand(4, 512, 512, 512) ;  select_40 = None
        _scaled_dot_product_efficient_attention_default_52 = (torch.nn.functional.scaled_dot_product_attention(getitem_1538,getitem_1539,getitem_1540,expand_95,False),) ;  getitem_1538 = getitem_1539 = getitem_1540 = expand_95 = None
        getitem_1542 = _scaled_dot_product_efficient_attention_default_52[0]
        sigmoid_124 = torch.sigmoid(getitem_1541) ;  getitem_1541 = None
        mul_201 = torch.mul(getitem_1542,sigmoid_124) ;  getitem_1542 = sigmoid_124 = None
        view_1682 = mul_201.view(1, 4, 512, 512, 64) ;  mul_201 = None
        permute_946 = view_1682.permute(0, 2, 3, 1, 4) ;  view_1682 = None
        clone_162 = torch.clone(permute_946,memory_format = torch.contiguous_format) ;  permute_946 = None
        _unsafe_view_141 = clone_162.view(1, 512, 512, 256) ;  clone_162 = None
        cat_25 = torch.cat([_unsafe_view_140,_unsafe_view_141],dim = -1) ;  _unsafe_view_140 = _unsafe_view_141 = None
        slice_218 = arg491_1[0:] ;  arg491_1 = None
        unsqueeze_600 = torch.unsqueeze(slice_218,1) ;  slice_218 = None
        mul_202 = torch.mul(arg495_1,unsqueeze_600) ;  arg495_1 = unsqueeze_600 = None
        _to_copy_956 = mul_202.to(dtype = torch.bfloat16) ;  mul_202 = None
        t_345 = _to_copy_956.t() ;  _to_copy_956 = None
        view_1683 = cat_25.view(262144, 512) ;  cat_25 = None
        mm_321 = torch.mm(view_1683,t_345) ;  view_1683 = t_345 = None
        view_1684 = mm_321.view(1, 512, 512, 256) ;  mm_321 = None
        add_162 = torch.add(add_161,view_1684) ;  add_161 = view_1684 = None
        split_tensor_159 = torch.split(add_155,512,dim = -2) 
        getitem_1546 = split_tensor_159[0];  split_tensor_159 = None
        _to_copy_957 = getitem_1546.to(dtype = torch.float32) ;  getitem_1546 = None
        native_layer_norm_default_198 = (torch.nn.functional.layer_norm(_to_copy_957,[256],arg482_1,arg483_1,1e-05),) ;  _to_copy_957 = arg482_1 = arg483_1 = None
        getitem_1547 = native_layer_norm_default_198[0]
        _to_copy_958 = arg484_1.to(dtype = torch.bfloat16) ;  arg484_1 = None
        _to_copy_959 = getitem_1547.to(dtype = torch.bfloat16) ;  getitem_1547 = None
        t_346 = _to_copy_958.t() ;  _to_copy_958 = None
        view_1685 = _to_copy_959.view(262144, 256) ;  _to_copy_959 = None
        mm_322 = torch.mm(view_1685,t_346) ;  view_1685 = t_346 = None
        view_1686 = mm_322.view(1, 512, 512, 1024) ;  mm_322 = None
        split_tensor_160 = torch.split(view_1686,512,dim = -1) ;  view_1686 = None
        getitem_1550 = split_tensor_160[0]
        getitem_1551 = split_tensor_160[1];  split_tensor_160 = None
        silu_44 = torch.nn.functional.silu(getitem_1550) ;  getitem_1550 = None
        mul_203 = torch.mul(silu_44,getitem_1551) ;  silu_44 = getitem_1551 = None
        _to_copy_960 = arg485_1.to(dtype = torch.bfloat16) ;  arg485_1 = None
        t_347 = _to_copy_960.t() ;  _to_copy_960 = None
        view_1688 = mul_203.view(262144, 512) ;  mul_203 = None
        mm_323 = torch.mm(view_1688,t_347) ;  view_1688 = t_347 = None
        view_1689 = mm_323.view(1, 512, 512, 256) ;  mm_323 = None
        add_163 = torch.add(add_162,view_1689) ;  add_162 = view_1689 = None
        _to_copy_961 = add_159.to(dtype = torch.float32) 
        native_layer_norm_default_199 = (torch.nn.functional.layer_norm(_to_copy_961,[384],arg500_1,arg501_1,1e-05),) ;  _to_copy_961 = arg500_1 = arg501_1 = None
        getitem_1552 = native_layer_norm_default_199[0]
        _to_copy_962 = add_155.to(dtype = torch.float32) ;  add_155 = None
        native_layer_norm_default_200 = (torch.nn.functional.layer_norm(_to_copy_962,[256],arg502_1,arg503_1,1e-05),) ;  _to_copy_962 = arg502_1 = arg503_1 = None
        getitem_1555 = native_layer_norm_default_200[0]
        _to_copy_963 = arg504_1.to(dtype = torch.bfloat16) ;  arg504_1 = None
        _to_copy_964 = getitem_1555.to(dtype = torch.bfloat16) ;  getitem_1555 = None
        t_348 = _to_copy_963.t() ;  _to_copy_963 = None
        view_1690 = _to_copy_964.view(262144, 256) ;  _to_copy_964 = None
        mm_324 = torch.mm(view_1690,t_348) ;  view_1690 = t_348 = None
        view_1691 = mm_324.view(1, 512, 512, 16) ;  mm_324 = None
        permute_947 = view_1691.permute(0, 3, 1, 2) ;  view_1691 = None
        view_1692 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_113 = torch.bitwise_not(view_1692) ;  view_1692 = None
        masked_fill_113 = permute_947.masked_fill(bitwise_not_113,-10000) ;  permute_947 = bitwise_not_113 = None
        _to_copy_965 = getitem_1552.to(dtype = torch.bfloat16) ;  getitem_1552 = None
        _to_copy_966 = arg506_1.to(dtype = torch.bfloat16) ;  arg506_1 = None
        unsqueeze_601 = torch.unsqueeze(_to_copy_965,3) ;  _to_copy_965 = None
        unsqueeze_602 = torch.unsqueeze(unsqueeze_601,4) ;  unsqueeze_601 = None
        unsqueeze_603 = torch.unsqueeze(unsqueeze_602,5) ;  unsqueeze_602 = None
        permute_948 = unsqueeze_603.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_603 = None
        unsqueeze_604 = torch.unsqueeze(_to_copy_966,4) ;  _to_copy_966 = None
        unsqueeze_605 = torch.unsqueeze(unsqueeze_604,5) ;  unsqueeze_604 = None
        permute_949 = unsqueeze_605.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_605 = None
        permute_950 = permute_948.permute(3, 5, 0, 1, 2, 4) ;  permute_948 = None
        view_1693 = permute_950.view(1, 512, 384) ;  permute_950 = None
        permute_951 = permute_949.permute(5, 0, 1, 2, 4, 3) ;  permute_949 = None
        view_1694 = permute_951.view(1, 384, 1536) ;  permute_951 = None
        bmm_146 = torch.bmm(view_1693,view_1694) ;  view_1693 = view_1694 = None
        view_1695 = bmm_146.view(512, 1, 4, 1, 16, 24) ;  bmm_146 = None
        permute_952 = view_1695.permute(2, 3, 4, 0, 5, 1) ;  view_1695 = None
        view_1696 = permute_952.view(4, 1, 16, 512, 24) ;  permute_952 = None
        unbind_int_81 = torch.unbind(view_1696) ;  view_1696 = None
        getitem_1558 = unbind_int_81[0]
        getitem_1559 = unbind_int_81[1]
        getitem_1560 = unbind_int_81[2]
        getitem_1561 = unbind_int_81[3];  unbind_int_81 = None
        view_1697 = arg505_1.view(1, 16, 1, 24) ;  arg505_1 = None
        add_164 = torch.add(getitem_1558,view_1697) ;  getitem_1558 = view_1697 = None
        _to_copy_967 = add_164.to(dtype = torch.bfloat16) ;  add_164 = None
        expand_96 = masked_fill_113.expand(1, 16, 512, 512) ;  masked_fill_113 = None
        _scaled_dot_product_efficient_attention_default_53 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_967,getitem_1559,getitem_1560,expand_96,False),) ;  _to_copy_967 = getitem_1559 = getitem_1560 = expand_96 = None
        getitem_1562 = _scaled_dot_product_efficient_attention_default_53[0]
        add_165 = torch.add(getitem_1561,1) ;  getitem_1561 = None
        sigmoid_125 = torch.sigmoid(add_165) ;  add_165 = None
        mul_204 = torch.mul(getitem_1562,sigmoid_125) ;  getitem_1562 = sigmoid_125 = None
        _to_copy_968 = arg507_1.to(dtype = torch.bfloat16) ;  arg507_1 = None
        unsqueeze_606 = torch.unsqueeze(mul_204,4) ;  mul_204 = None
        permute_953 = unsqueeze_606.permute(0, 2, 4, 3, 1) ;  unsqueeze_606 = None
        unsqueeze_607 = torch.unsqueeze(_to_copy_968,3) ;  _to_copy_968 = None
        unsqueeze_608 = torch.unsqueeze(unsqueeze_607,4) ;  unsqueeze_607 = None
        permute_954 = unsqueeze_608.permute(3, 4, 2, 1, 0) ;  unsqueeze_608 = None
        permute_955 = permute_953.permute(1, 3, 4, 0, 2) ;  permute_953 = None
        clone_163 = torch.clone(permute_955,memory_format = torch.contiguous_format) ;  permute_955 = None
        _unsafe_view_142 = clone_163.view(1, 512, 384) ;  clone_163 = None
        permute_956 = permute_954.permute(3, 4, 0, 2, 1) ;  permute_954 = None
        clone_164 = torch.clone(permute_956,memory_format = torch.contiguous_format) ;  permute_956 = None
        _unsafe_view_143 = clone_164.view(1, 384, 384) ;  clone_164 = None
        bmm_147 = torch.bmm(_unsafe_view_142,_unsafe_view_143) ;  _unsafe_view_142 = _unsafe_view_143 = None
        view_1698 = bmm_147.view(512, 1, 1, 1, 384) ;  bmm_147 = None
        permute_957 = view_1698.permute(3, 0, 4, 1, 2) ;  view_1698 = None
        view_1699 = permute_957.view(1, 512, 384) ;  permute_957 = None
        unsqueeze_609 = torch.unsqueeze(arg1406_1,-1) 
        mul_205 = torch.mul(view_1699,unsqueeze_609) ;  view_1699 = unsqueeze_609 = None
        add_166 = torch.add(add_159,mul_205) ;  mul_205 = None
        split_tensor_161 = torch.split(add_159,512,dim = -2) ;  add_159 = None
        getitem_1566 = split_tensor_161[0];  split_tensor_161 = None
        _to_copy_969 = getitem_1566.to(dtype = torch.float32) ;  getitem_1566 = None
        native_layer_norm_default_201 = (torch.nn.functional.layer_norm(_to_copy_969,[384],arg496_1,arg497_1,1e-05),) ;  _to_copy_969 = arg496_1 = arg497_1 = None
        getitem_1567 = native_layer_norm_default_201[0]
        _to_copy_970 = arg498_1.to(dtype = torch.bfloat16) ;  arg498_1 = None
        _to_copy_971 = getitem_1567.to(dtype = torch.bfloat16) ;  getitem_1567 = None
        t_349 = _to_copy_970.t() ;  _to_copy_970 = None
        view_1700 = _to_copy_971.view(512, 384) ;  _to_copy_971 = None
        mm_325 = torch.mm(view_1700,t_349) ;  view_1700 = t_349 = None
        view_1701 = mm_325.view(1, 512, 1536) ;  mm_325 = None
        split_tensor_162 = torch.split(view_1701,768,dim = -1) ;  view_1701 = None
        getitem_1570 = split_tensor_162[0]
        getitem_1571 = split_tensor_162[1];  split_tensor_162 = None
        silu_45 = torch.nn.functional.silu(getitem_1570) ;  getitem_1570 = None
        mul_206 = torch.mul(silu_45,getitem_1571) ;  silu_45 = getitem_1571 = None
        _to_copy_972 = arg499_1.to(dtype = torch.bfloat16) ;  arg499_1 = None
        t_350 = _to_copy_972.t() ;  _to_copy_972 = None
        view_1703 = mul_206.view(512, 768) ;  mul_206 = None
        mm_326 = torch.mm(view_1703,t_350) ;  view_1703 = t_350 = None
        view_1704 = mm_326.view(1, 512, 384) ;  mm_326 = None
        add_167 = torch.add(add_166,view_1704) ;  add_166 = view_1704 = None
        _to_copy_973 = add_163.to(dtype = torch.float32) 
        native_layer_norm_default_202 = (torch.nn.functional.layer_norm(_to_copy_973,[256],arg512_1,arg513_1,1e-05),) ;  _to_copy_973 = arg512_1 = arg513_1 = None
        getitem_1572 = native_layer_norm_default_202[0]
        split_with_sizes_default_40 = torch.split(arg515_1,[512,512]) ;  arg515_1 = None
        getitem_1575 = split_with_sizes_default_40[0]
        getitem_1576 = split_with_sizes_default_40[1];  split_with_sizes_default_40 = None
        split_with_sizes_default_41 = torch.split(arg516_1,[512,512,256]) ;  arg516_1 = None
        getitem_1577 = split_with_sizes_default_41[0]
        getitem_1578 = split_with_sizes_default_41[1]
        getitem_1579 = split_with_sizes_default_41[2];  split_with_sizes_default_41 = None
        _to_copy_974 = getitem_1575.to(dtype = torch.bfloat16) ;  getitem_1575 = None
        _to_copy_975 = getitem_1572.to(dtype = torch.bfloat16) 
        t_351 = _to_copy_974.t() ;  _to_copy_974 = None
        view_1705 = _to_copy_975.view(262144, 256) ;  _to_copy_975 = None
        mm_327 = torch.mm(view_1705,t_351) ;  view_1705 = t_351 = None
        view_1706 = mm_327.view(1, 512, 512, 512) ;  mm_327 = None
        _to_copy_976 = getitem_1577.to(dtype = torch.bfloat16) ;  getitem_1577 = None
        _to_copy_977 = getitem_1572.to(dtype = torch.bfloat16) 
        t_352 = _to_copy_976.t() ;  _to_copy_976 = None
        view_1707 = _to_copy_977.view(262144, 256) ;  _to_copy_977 = None
        mm_328 = torch.mm(view_1707,t_352) ;  view_1707 = t_352 = None
        view_1708 = mm_328.view(1, 512, 512, 512) ;  mm_328 = None
        sigmoid_126 = torch.sigmoid(view_1708) ;  view_1708 = None
        mul_207 = torch.mul(view_1706,sigmoid_126) ;  view_1706 = sigmoid_126 = None
        unsqueeze_610 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_114 = torch.bitwise_not(unsqueeze_610) ;  unsqueeze_610 = None
        masked_fill_114 = mul_207.masked_fill(bitwise_not_114,0) ;  mul_207 = bitwise_not_114 = None
        split_tensor_163 = torch.split(masked_fill_114,256,dim = -1) 
        getitem_1582 = split_tensor_163[0]
        unsqueeze_613 = torch.unsqueeze(getitem_1582,4) ;  getitem_1582 = None
        permute_962 = unsqueeze_613.permute(0, 1, 4, 3, 2) ;  unsqueeze_613 = None
        permute_963 = permute_962.permute(3, 1, 4, 0, 2) ;  permute_962 = None
        view_1711 = permute_963.view(256, 512, 512) ;  permute_963 = None
        split_tensor_164 = torch.split(masked_fill_114,256,dim = -1) ;  masked_fill_114 = None
        getitem_1585 = split_tensor_164[1];  split_tensor_164 = None
        unsqueeze_614 = torch.unsqueeze(getitem_1585,4) ;  getitem_1585 = None
        permute_964 = unsqueeze_614.permute(0, 4, 1, 3, 2) ;  unsqueeze_614 = None
        permute_965 = permute_964.permute(3, 4, 0, 2, 1) ;  permute_964 = None
        view_1712 = permute_965.view(256, 512, 512) ;  permute_965 = None
        bmm_148 = torch.bmm(view_1711,view_1712) ;  view_1711 = view_1712 = None
        view_1713 = bmm_148.view(256, 512, 1, 1, 512) ;  bmm_148 = None
        permute_966 = view_1713.permute(3, 1, 4, 0, 2) ;  view_1713 = None
        view_1714 = permute_966.view(1, 512, 512, 256) ;  permute_966 = None
        _to_copy_978 = getitem_1576.to(dtype = torch.bfloat16) ;  getitem_1576 = None
        _to_copy_979 = getitem_1572.to(dtype = torch.bfloat16) 
        t_353 = _to_copy_978.t() ;  _to_copy_978 = None
        view_1715 = _to_copy_979.view(262144, 256) ;  _to_copy_979 = None
        mm_329 = torch.mm(view_1715,t_353) ;  view_1715 = t_353 = None
        view_1716 = mm_329.view(1, 512, 512, 512) ;  mm_329 = None
        _to_copy_980 = getitem_1578.to(dtype = torch.bfloat16) ;  getitem_1578 = None
        _to_copy_981 = getitem_1572.to(dtype = torch.bfloat16) 
        t_354 = _to_copy_980.t() ;  _to_copy_980 = None
        view_1717 = _to_copy_981.view(262144, 256) ;  _to_copy_981 = None
        mm_330 = torch.mm(view_1717,t_354) ;  view_1717 = t_354 = None
        view_1718 = mm_330.view(1, 512, 512, 512) ;  mm_330 = None
        sigmoid_127 = torch.sigmoid(view_1718) ;  view_1718 = None
        mul_208 = torch.mul(view_1716,sigmoid_127) ;  view_1716 = sigmoid_127 = None
        view_1719 = mul_208.view(262144, 512) ;  mul_208 = None
        view_1720 = view_1719.view(1, 512, 512, 512) ;  view_1719 = None
        transpose_40 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_615 = torch.unsqueeze(transpose_40,3) ;  transpose_40 = None
        clone_165 = torch.clone(unsqueeze_615,memory_format = torch.contiguous_format) ;  unsqueeze_615 = None
        bitwise_not_115 = torch.bitwise_not(clone_165) ;  clone_165 = None
        masked_fill_115 = view_1720.masked_fill(bitwise_not_115,0) ;  view_1720 = bitwise_not_115 = None
        view_1721 = masked_fill_115.view(262144, 512) ;  masked_fill_115 = None
        view_1725 = view_1721.view(1, 512, 512, 512) 
        split_tensor_165 = torch.split(view_1725,256,dim = -1) ;  view_1725 = None
        getitem_1588 = split_tensor_165[0]
        unsqueeze_618 = torch.unsqueeze(getitem_1588,4) ;  getitem_1588 = None
        permute_971 = unsqueeze_618.permute(0, 2, 4, 3, 1) ;  unsqueeze_618 = None
        permute_972 = permute_971.permute(3, 1, 4, 0, 2) ;  permute_971 = None
        view_1726 = permute_972.view(256, 512, 512) ;  permute_972 = None
        view_1727 = view_1721.view(1, 512, 512, 512) ;  view_1721 = None
        split_tensor_166 = torch.split(view_1727,256,dim = -1) ;  view_1727 = None
        getitem_1591 = split_tensor_166[1];  split_tensor_166 = None
        unsqueeze_619 = torch.unsqueeze(getitem_1591,4) ;  getitem_1591 = None
        permute_973 = unsqueeze_619.permute(0, 4, 2, 3, 1) ;  unsqueeze_619 = None
        permute_974 = permute_973.permute(3, 4, 0, 2, 1) ;  permute_973 = None
        view_1728 = permute_974.view(256, 512, 512) ;  permute_974 = None
        bmm_149 = torch.bmm(view_1726,view_1728) ;  view_1726 = view_1728 = None
        view_1729 = bmm_149.view(256, 512, 1, 1, 512) ;  bmm_149 = None
        permute_975 = view_1729.permute(3, 1, 4, 0, 2) ;  view_1729 = None
        view_1730 = permute_975.view(1, 512, 512, 256) ;  permute_975 = None
        _to_copy_982 = view_1714.to(dtype = torch.float32) ;  view_1714 = None
        native_layer_norm_default_203 = (torch.nn.functional.layer_norm(_to_copy_982,[256],None,None,1e-05),) ;  _to_copy_982 = None
        getitem_1592 = native_layer_norm_default_203[0]
        _to_copy_983 = view_1730.to(dtype = torch.float32) ;  view_1730 = None
        native_layer_norm_default_204 = (torch.nn.functional.layer_norm(_to_copy_983,[256],None,None,1e-05),) ;  _to_copy_983 = None
        getitem_1595 = native_layer_norm_default_204[0]
        add_168 = torch.add(getitem_1592,getitem_1595) ;  getitem_1592 = getitem_1595 = None
        _to_copy_984 = arg514_1.to(dtype = torch.bfloat16) ;  arg514_1 = None
        _to_copy_985 = add_168.to(dtype = torch.bfloat16) ;  add_168 = None
        t_355 = _to_copy_984.t() ;  _to_copy_984 = None
        view_1731 = _to_copy_985.view(262144, 256) ;  _to_copy_985 = None
        mm_331 = torch.mm(view_1731,t_355) ;  view_1731 = t_355 = None
        view_1732 = mm_331.view(1, 512, 512, 256) ;  mm_331 = None
        _to_copy_986 = getitem_1579.to(dtype = torch.bfloat16) ;  getitem_1579 = None
        _to_copy_987 = getitem_1572.to(dtype = torch.bfloat16) ;  getitem_1572 = None
        t_356 = _to_copy_986.t() ;  _to_copy_986 = None
        view_1733 = _to_copy_987.view(262144, 256) ;  _to_copy_987 = None
        mm_332 = torch.mm(view_1733,t_356) ;  view_1733 = t_356 = None
        view_1734 = mm_332.view(1, 512, 512, 256) ;  mm_332 = None
        sigmoid_128 = torch.sigmoid(view_1734) ;  view_1734 = None
        mul_209 = torch.mul(view_1732,sigmoid_128) ;  view_1732 = sigmoid_128 = None
        add_169 = torch.add(add_163,mul_209) ;  mul_209 = None
        _to_copy_988 = add_163.to(dtype = torch.float32) 
        native_layer_norm_default_205 = (torch.nn.functional.layer_norm(_to_copy_988,[256],None,None,1e-05),) ;  _to_copy_988 = None
        getitem_1598 = native_layer_norm_default_205[0]
        _to_copy_989 = arg518_1.to(dtype = torch.bfloat16) ;  arg518_1 = None
        _to_copy_990 = getitem_1598.to(dtype = torch.bfloat16) 
        t_357 = _to_copy_989.t() ;  _to_copy_989 = None
        view_1735 = _to_copy_990.view(262144, 256) ;  _to_copy_990 = None
        mm_333 = torch.mm(view_1735,t_357) ;  view_1735 = t_357 = None
        view_1736 = mm_333.view(1, 512, 512, 8) ;  mm_333 = None
        view_1737 = view_1736.view(1, 512, 512, 2, 4) ;  view_1736 = None
        permute_976 = view_1737.permute(0, 3, 4, 1, 2) ;  view_1737 = None
        view_1738 = permute_976.view(1, 2, 4, 1, 512, 512) ;  permute_976 = None
        view_1739 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_116 = torch.bitwise_not(view_1739) ;  view_1739 = None
        masked_fill_116 = view_1738.masked_fill(bitwise_not_116,-10000) ;  view_1738 = bitwise_not_116 = None
        view_1740 = masked_fill_116.view(1, 2, 4, 512, 512) ;  masked_fill_116 = None
        permute_977 = view_1740.permute(1, 0, 2, 3, 4) ;  view_1740 = None
        view_1741 = permute_977.view(2, 4, 1, 512, 512) ;  permute_977 = None
        _to_copy_991 = arg519_1.to(dtype = torch.bfloat16) ;  arg519_1 = None
        _to_copy_992 = getitem_1598.to(dtype = torch.bfloat16) 
        t_358 = _to_copy_991.t() ;  _to_copy_991 = None
        view_1742 = _to_copy_992.view(262144, 256) ;  _to_copy_992 = None
        mm_334 = torch.mm(view_1742,t_358) ;  view_1742 = t_358 = None
        view_1743 = mm_334.view(1, 512, 512, 1024) ;  mm_334 = None
        select_41 = torch.select(view_1741,0,0) 
        view_1744 = view_1743.view(1, 512, 512, 4, 4, 64) ;  view_1743 = None
        permute_978 = view_1744.permute(4, 0, 3, 1, 2, 5) ;  view_1744 = None
        view_1745 = permute_978.view(4, 4, 512, 512, 64) ;  permute_978 = None
        unbind_int_82 = torch.unbind(view_1745) ;  view_1745 = None
        getitem_1601 = unbind_int_82[0]
        getitem_1602 = unbind_int_82[1]
        getitem_1603 = unbind_int_82[2]
        getitem_1604 = unbind_int_82[3];  unbind_int_82 = None
        expand_97 = select_41.expand(4, 512, 512, 512) ;  select_41 = None
        _scaled_dot_product_efficient_attention_default_54 = (torch.nn.functional.scaled_dot_product_attention(getitem_1601,getitem_1602,getitem_1603,expand_97,False),) ;  getitem_1601 = getitem_1602 = getitem_1603 = expand_97 = None
        getitem_1605 = _scaled_dot_product_efficient_attention_default_54[0]
        sigmoid_129 = torch.sigmoid(getitem_1604) ;  getitem_1604 = None
        mul_210 = torch.mul(getitem_1605,sigmoid_129) ;  getitem_1605 = sigmoid_129 = None
        view_1746 = mul_210.view(1, 4, 512, 512, 64) ;  mul_210 = None
        permute_979 = view_1746.permute(0, 2, 3, 1, 4) ;  view_1746 = None
        clone_166 = torch.clone(permute_979,memory_format = torch.contiguous_format) ;  permute_979 = None
        _unsafe_view_144 = clone_166.view(1, 512, 512, 256) ;  clone_166 = None
        transpose_41 = torch.transpose(getitem_1598,1,2) ;  getitem_1598 = None
        _to_copy_993 = arg520_1.to(dtype = torch.bfloat16) ;  arg520_1 = None
        _to_copy_994 = transpose_41.to(dtype = torch.bfloat16) ;  transpose_41 = None
        t_359 = _to_copy_993.t() ;  _to_copy_993 = None
        expand_98 = _to_copy_994.expand(1, 512, 512, 256) ;  _to_copy_994 = None
        view_1747 = expand_98.view(512, 512, 256) ;  expand_98 = None
        expand_99 = t_359.expand(1, 512, 256, 1024) ;  t_359 = None
        view_1748 = expand_99.view(512, 256, 1024) ;  expand_99 = None
        bmm_150 = torch.bmm(view_1747,view_1748) ;  view_1747 = view_1748 = None
        view_1749 = bmm_150.view(1, 512, 512, 1024) ;  bmm_150 = None
        select_42 = torch.select(view_1741,0,1) ;  view_1741 = None
        view_1750 = view_1749.view(1, 512, 512, 4, 4, 64) ;  view_1749 = None
        permute_980 = view_1750.permute(4, 0, 3, 1, 2, 5) ;  view_1750 = None
        view_1751 = permute_980.view(4, 4, 512, 512, 64) ;  permute_980 = None
        unbind_int_83 = torch.unbind(view_1751) ;  view_1751 = None
        getitem_1609 = unbind_int_83[0]
        getitem_1610 = unbind_int_83[1]
        getitem_1611 = unbind_int_83[2]
        getitem_1612 = unbind_int_83[3];  unbind_int_83 = None
        expand_100 = select_42.expand(4, 512, 512, 512) ;  select_42 = None
        _scaled_dot_product_efficient_attention_default_55 = (torch.nn.functional.scaled_dot_product_attention(getitem_1609,getitem_1610,getitem_1611,expand_100,False),) ;  getitem_1609 = getitem_1610 = getitem_1611 = expand_100 = None
        getitem_1613 = _scaled_dot_product_efficient_attention_default_55[0]
        sigmoid_130 = torch.sigmoid(getitem_1612) ;  getitem_1612 = None
        mul_211 = torch.mul(getitem_1613,sigmoid_130) ;  getitem_1613 = sigmoid_130 = None
        view_1752 = mul_211.view(1, 4, 512, 512, 64) ;  mul_211 = None
        permute_981 = view_1752.permute(0, 2, 3, 1, 4) ;  view_1752 = None
        clone_167 = torch.clone(permute_981,memory_format = torch.contiguous_format) ;  permute_981 = None
        _unsafe_view_145 = clone_167.view(1, 512, 512, 256) ;  clone_167 = None
        cat_26 = torch.cat([_unsafe_view_144,_unsafe_view_145],dim = -1) ;  _unsafe_view_144 = _unsafe_view_145 = None
        slice_219 = arg517_1[0:] ;  arg517_1 = None
        unsqueeze_620 = torch.unsqueeze(slice_219,1) ;  slice_219 = None
        mul_212 = torch.mul(arg521_1,unsqueeze_620) ;  arg521_1 = unsqueeze_620 = None
        _to_copy_995 = mul_212.to(dtype = torch.bfloat16) ;  mul_212 = None
        t_360 = _to_copy_995.t() ;  _to_copy_995 = None
        view_1753 = cat_26.view(262144, 512) ;  cat_26 = None
        mm_335 = torch.mm(view_1753,t_360) ;  view_1753 = t_360 = None
        view_1754 = mm_335.view(1, 512, 512, 256) ;  mm_335 = None
        add_170 = torch.add(add_169,view_1754) ;  add_169 = view_1754 = None
        split_tensor_167 = torch.split(add_163,512,dim = -2) 
        getitem_1617 = split_tensor_167[0];  split_tensor_167 = None
        _to_copy_996 = getitem_1617.to(dtype = torch.float32) ;  getitem_1617 = None
        native_layer_norm_default_206 = (torch.nn.functional.layer_norm(_to_copy_996,[256],arg508_1,arg509_1,1e-05),) ;  _to_copy_996 = arg508_1 = arg509_1 = None
        getitem_1618 = native_layer_norm_default_206[0]
        _to_copy_997 = arg510_1.to(dtype = torch.bfloat16) ;  arg510_1 = None
        _to_copy_998 = getitem_1618.to(dtype = torch.bfloat16) ;  getitem_1618 = None
        t_361 = _to_copy_997.t() ;  _to_copy_997 = None
        view_1755 = _to_copy_998.view(262144, 256) ;  _to_copy_998 = None
        mm_336 = torch.mm(view_1755,t_361) ;  view_1755 = t_361 = None
        view_1756 = mm_336.view(1, 512, 512, 1024) ;  mm_336 = None
        split_tensor_168 = torch.split(view_1756,512,dim = -1) ;  view_1756 = None
        getitem_1621 = split_tensor_168[0]
        getitem_1622 = split_tensor_168[1];  split_tensor_168 = None
        silu_46 = torch.nn.functional.silu(getitem_1621) ;  getitem_1621 = None
        mul_213 = torch.mul(silu_46,getitem_1622) ;  silu_46 = getitem_1622 = None
        _to_copy_999 = arg511_1.to(dtype = torch.bfloat16) ;  arg511_1 = None
        t_362 = _to_copy_999.t() ;  _to_copy_999 = None
        view_1758 = mul_213.view(262144, 512) ;  mul_213 = None
        mm_337 = torch.mm(view_1758,t_362) ;  view_1758 = t_362 = None
        view_1759 = mm_337.view(1, 512, 512, 256) ;  mm_337 = None
        add_171 = torch.add(add_170,view_1759) ;  add_170 = view_1759 = None
        _to_copy_1000 = add_167.to(dtype = torch.float32) 
        native_layer_norm_default_207 = (torch.nn.functional.layer_norm(_to_copy_1000,[384],arg526_1,arg527_1,1e-05),) ;  _to_copy_1000 = arg526_1 = arg527_1 = None
        getitem_1623 = native_layer_norm_default_207[0]
        _to_copy_1001 = add_163.to(dtype = torch.float32) ;  add_163 = None
        native_layer_norm_default_208 = (torch.nn.functional.layer_norm(_to_copy_1001,[256],arg528_1,arg529_1,1e-05),) ;  _to_copy_1001 = arg528_1 = arg529_1 = None
        getitem_1626 = native_layer_norm_default_208[0]
        _to_copy_1002 = arg530_1.to(dtype = torch.bfloat16) ;  arg530_1 = None
        _to_copy_1003 = getitem_1626.to(dtype = torch.bfloat16) ;  getitem_1626 = None
        t_363 = _to_copy_1002.t() ;  _to_copy_1002 = None
        view_1760 = _to_copy_1003.view(262144, 256) ;  _to_copy_1003 = None
        mm_338 = torch.mm(view_1760,t_363) ;  view_1760 = t_363 = None
        view_1761 = mm_338.view(1, 512, 512, 16) ;  mm_338 = None
        permute_982 = view_1761.permute(0, 3, 1, 2) ;  view_1761 = None
        view_1762 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_117 = torch.bitwise_not(view_1762) ;  view_1762 = None
        masked_fill_117 = permute_982.masked_fill(bitwise_not_117,-10000) ;  permute_982 = bitwise_not_117 = None
        _to_copy_1004 = getitem_1623.to(dtype = torch.bfloat16) ;  getitem_1623 = None
        _to_copy_1005 = arg532_1.to(dtype = torch.bfloat16) ;  arg532_1 = None
        unsqueeze_621 = torch.unsqueeze(_to_copy_1004,3) ;  _to_copy_1004 = None
        unsqueeze_622 = torch.unsqueeze(unsqueeze_621,4) ;  unsqueeze_621 = None
        unsqueeze_623 = torch.unsqueeze(unsqueeze_622,5) ;  unsqueeze_622 = None
        permute_983 = unsqueeze_623.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_623 = None
        unsqueeze_624 = torch.unsqueeze(_to_copy_1005,4) ;  _to_copy_1005 = None
        unsqueeze_625 = torch.unsqueeze(unsqueeze_624,5) ;  unsqueeze_624 = None
        permute_984 = unsqueeze_625.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_625 = None
        permute_985 = permute_983.permute(3, 5, 0, 1, 2, 4) ;  permute_983 = None
        view_1763 = permute_985.view(1, 512, 384) ;  permute_985 = None
        permute_986 = permute_984.permute(5, 0, 1, 2, 4, 3) ;  permute_984 = None
        view_1764 = permute_986.view(1, 384, 1536) ;  permute_986 = None
        bmm_151 = torch.bmm(view_1763,view_1764) ;  view_1763 = view_1764 = None
        view_1765 = bmm_151.view(512, 1, 4, 1, 16, 24) ;  bmm_151 = None
        permute_987 = view_1765.permute(2, 3, 4, 0, 5, 1) ;  view_1765 = None
        view_1766 = permute_987.view(4, 1, 16, 512, 24) ;  permute_987 = None
        unbind_int_84 = torch.unbind(view_1766) ;  view_1766 = None
        getitem_1629 = unbind_int_84[0]
        getitem_1630 = unbind_int_84[1]
        getitem_1631 = unbind_int_84[2]
        getitem_1632 = unbind_int_84[3];  unbind_int_84 = None
        view_1767 = arg531_1.view(1, 16, 1, 24) ;  arg531_1 = None
        add_172 = torch.add(getitem_1629,view_1767) ;  getitem_1629 = view_1767 = None
        _to_copy_1006 = add_172.to(dtype = torch.bfloat16) ;  add_172 = None
        expand_101 = masked_fill_117.expand(1, 16, 512, 512) ;  masked_fill_117 = None
        _scaled_dot_product_efficient_attention_default_56 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1006,getitem_1630,getitem_1631,expand_101,False),) ;  _to_copy_1006 = getitem_1630 = getitem_1631 = expand_101 = None
        getitem_1633 = _scaled_dot_product_efficient_attention_default_56[0]
        add_173 = torch.add(getitem_1632,1) ;  getitem_1632 = None
        sigmoid_131 = torch.sigmoid(add_173) ;  add_173 = None
        mul_214 = torch.mul(getitem_1633,sigmoid_131) ;  getitem_1633 = sigmoid_131 = None
        _to_copy_1007 = arg533_1.to(dtype = torch.bfloat16) ;  arg533_1 = None
        unsqueeze_626 = torch.unsqueeze(mul_214,4) ;  mul_214 = None
        permute_988 = unsqueeze_626.permute(0, 2, 4, 3, 1) ;  unsqueeze_626 = None
        unsqueeze_627 = torch.unsqueeze(_to_copy_1007,3) ;  _to_copy_1007 = None
        unsqueeze_628 = torch.unsqueeze(unsqueeze_627,4) ;  unsqueeze_627 = None
        permute_989 = unsqueeze_628.permute(3, 4, 2, 1, 0) ;  unsqueeze_628 = None
        permute_990 = permute_988.permute(1, 3, 4, 0, 2) ;  permute_988 = None
        clone_168 = torch.clone(permute_990,memory_format = torch.contiguous_format) ;  permute_990 = None
        _unsafe_view_146 = clone_168.view(1, 512, 384) ;  clone_168 = None
        permute_991 = permute_989.permute(3, 4, 0, 2, 1) ;  permute_989 = None
        clone_169 = torch.clone(permute_991,memory_format = torch.contiguous_format) ;  permute_991 = None
        _unsafe_view_147 = clone_169.view(1, 384, 384) ;  clone_169 = None
        bmm_152 = torch.bmm(_unsafe_view_146,_unsafe_view_147) ;  _unsafe_view_146 = _unsafe_view_147 = None
        view_1768 = bmm_152.view(512, 1, 1, 1, 384) ;  bmm_152 = None
        permute_992 = view_1768.permute(3, 0, 4, 1, 2) ;  view_1768 = None
        view_1769 = permute_992.view(1, 512, 384) ;  permute_992 = None
        unsqueeze_629 = torch.unsqueeze(arg1406_1,-1) 
        mul_215 = torch.mul(view_1769,unsqueeze_629) ;  view_1769 = unsqueeze_629 = None
        add_174 = torch.add(add_167,mul_215) ;  mul_215 = None
        split_tensor_169 = torch.split(add_167,512,dim = -2) ;  add_167 = None
        getitem_1637 = split_tensor_169[0];  split_tensor_169 = None
        _to_copy_1008 = getitem_1637.to(dtype = torch.float32) ;  getitem_1637 = None
        native_layer_norm_default_209 = (torch.nn.functional.layer_norm(_to_copy_1008,[384],arg522_1,arg523_1,1e-05),) ;  _to_copy_1008 = arg522_1 = arg523_1 = None
        getitem_1638 = native_layer_norm_default_209[0]
        _to_copy_1009 = arg524_1.to(dtype = torch.bfloat16) ;  arg524_1 = None
        _to_copy_1010 = getitem_1638.to(dtype = torch.bfloat16) ;  getitem_1638 = None
        t_364 = _to_copy_1009.t() ;  _to_copy_1009 = None
        view_1770 = _to_copy_1010.view(512, 384) ;  _to_copy_1010 = None
        mm_339 = torch.mm(view_1770,t_364) ;  view_1770 = t_364 = None
        view_1771 = mm_339.view(1, 512, 1536) ;  mm_339 = None
        split_tensor_170 = torch.split(view_1771,768,dim = -1) ;  view_1771 = None
        getitem_1641 = split_tensor_170[0]
        getitem_1642 = split_tensor_170[1];  split_tensor_170 = None
        silu_47 = torch.nn.functional.silu(getitem_1641) ;  getitem_1641 = None
        mul_216 = torch.mul(silu_47,getitem_1642) ;  silu_47 = getitem_1642 = None
        _to_copy_1011 = arg525_1.to(dtype = torch.bfloat16) ;  arg525_1 = None
        t_365 = _to_copy_1011.t() ;  _to_copy_1011 = None
        view_1773 = mul_216.view(512, 768) ;  mul_216 = None
        mm_340 = torch.mm(view_1773,t_365) ;  view_1773 = t_365 = None
        view_1774 = mm_340.view(1, 512, 384) ;  mm_340 = None
        add_175 = torch.add(add_174,view_1774) ;  add_174 = view_1774 = None
        _to_copy_1012 = add_171.to(dtype = torch.float32) 
        native_layer_norm_default_210 = (torch.nn.functional.layer_norm(_to_copy_1012,[256],arg538_1,arg539_1,1e-05),) ;  _to_copy_1012 = arg538_1 = arg539_1 = None
        getitem_1643 = native_layer_norm_default_210[0]
        split_with_sizes_default_42 = torch.split(arg541_1,[512,512]) ;  arg541_1 = None
        getitem_1646 = split_with_sizes_default_42[0]
        getitem_1647 = split_with_sizes_default_42[1];  split_with_sizes_default_42 = None
        split_with_sizes_default_43 = torch.split(arg542_1,[512,512,256]) ;  arg542_1 = None
        getitem_1648 = split_with_sizes_default_43[0]
        getitem_1649 = split_with_sizes_default_43[1]
        getitem_1650 = split_with_sizes_default_43[2];  split_with_sizes_default_43 = None
        _to_copy_1013 = getitem_1646.to(dtype = torch.bfloat16) ;  getitem_1646 = None
        _to_copy_1014 = getitem_1643.to(dtype = torch.bfloat16) 
        t_366 = _to_copy_1013.t() ;  _to_copy_1013 = None
        view_1775 = _to_copy_1014.view(262144, 256) ;  _to_copy_1014 = None
        mm_341 = torch.mm(view_1775,t_366) ;  view_1775 = t_366 = None
        view_1776 = mm_341.view(1, 512, 512, 512) ;  mm_341 = None
        _to_copy_1015 = getitem_1648.to(dtype = torch.bfloat16) ;  getitem_1648 = None
        _to_copy_1016 = getitem_1643.to(dtype = torch.bfloat16) 
        t_367 = _to_copy_1015.t() ;  _to_copy_1015 = None
        view_1777 = _to_copy_1016.view(262144, 256) ;  _to_copy_1016 = None
        mm_342 = torch.mm(view_1777,t_367) ;  view_1777 = t_367 = None
        view_1778 = mm_342.view(1, 512, 512, 512) ;  mm_342 = None
        sigmoid_132 = torch.sigmoid(view_1778) ;  view_1778 = None
        mul_217 = torch.mul(view_1776,sigmoid_132) ;  view_1776 = sigmoid_132 = None
        unsqueeze_630 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_118 = torch.bitwise_not(unsqueeze_630) ;  unsqueeze_630 = None
        masked_fill_118 = mul_217.masked_fill(bitwise_not_118,0) ;  mul_217 = bitwise_not_118 = None
        split_tensor_171 = torch.split(masked_fill_118,256,dim = -1) 
        getitem_1653 = split_tensor_171[0]
        unsqueeze_633 = torch.unsqueeze(getitem_1653,4) ;  getitem_1653 = None
        permute_997 = unsqueeze_633.permute(0, 1, 4, 3, 2) ;  unsqueeze_633 = None
        permute_998 = permute_997.permute(3, 1, 4, 0, 2) ;  permute_997 = None
        view_1781 = permute_998.view(256, 512, 512) ;  permute_998 = None
        split_tensor_172 = torch.split(masked_fill_118,256,dim = -1) ;  masked_fill_118 = None
        getitem_1656 = split_tensor_172[1];  split_tensor_172 = None
        unsqueeze_634 = torch.unsqueeze(getitem_1656,4) ;  getitem_1656 = None
        permute_999 = unsqueeze_634.permute(0, 4, 1, 3, 2) ;  unsqueeze_634 = None
        permute_1000 = permute_999.permute(3, 4, 0, 2, 1) ;  permute_999 = None
        view_1782 = permute_1000.view(256, 512, 512) ;  permute_1000 = None
        bmm_153 = torch.bmm(view_1781,view_1782) ;  view_1781 = view_1782 = None
        view_1783 = bmm_153.view(256, 512, 1, 1, 512) ;  bmm_153 = None
        permute_1001 = view_1783.permute(3, 1, 4, 0, 2) ;  view_1783 = None
        view_1784 = permute_1001.view(1, 512, 512, 256) ;  permute_1001 = None
        _to_copy_1017 = getitem_1647.to(dtype = torch.bfloat16) ;  getitem_1647 = None
        _to_copy_1018 = getitem_1643.to(dtype = torch.bfloat16) 
        t_368 = _to_copy_1017.t() ;  _to_copy_1017 = None
        view_1785 = _to_copy_1018.view(262144, 256) ;  _to_copy_1018 = None
        mm_343 = torch.mm(view_1785,t_368) ;  view_1785 = t_368 = None
        view_1786 = mm_343.view(1, 512, 512, 512) ;  mm_343 = None
        _to_copy_1019 = getitem_1649.to(dtype = torch.bfloat16) ;  getitem_1649 = None
        _to_copy_1020 = getitem_1643.to(dtype = torch.bfloat16) 
        t_369 = _to_copy_1019.t() ;  _to_copy_1019 = None
        view_1787 = _to_copy_1020.view(262144, 256) ;  _to_copy_1020 = None
        mm_344 = torch.mm(view_1787,t_369) ;  view_1787 = t_369 = None
        view_1788 = mm_344.view(1, 512, 512, 512) ;  mm_344 = None
        sigmoid_133 = torch.sigmoid(view_1788) ;  view_1788 = None
        mul_218 = torch.mul(view_1786,sigmoid_133) ;  view_1786 = sigmoid_133 = None
        view_1789 = mul_218.view(262144, 512) ;  mul_218 = None
        view_1790 = view_1789.view(1, 512, 512, 512) ;  view_1789 = None
        transpose_42 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_635 = torch.unsqueeze(transpose_42,3) ;  transpose_42 = None
        clone_170 = torch.clone(unsqueeze_635,memory_format = torch.contiguous_format) ;  unsqueeze_635 = None
        bitwise_not_119 = torch.bitwise_not(clone_170) ;  clone_170 = None
        masked_fill_119 = view_1790.masked_fill(bitwise_not_119,0) ;  view_1790 = bitwise_not_119 = None
        view_1791 = masked_fill_119.view(262144, 512) ;  masked_fill_119 = None
        view_1795 = view_1791.view(1, 512, 512, 512) 
        split_tensor_173 = torch.split(view_1795,256,dim = -1) ;  view_1795 = None
        getitem_1659 = split_tensor_173[0]
        unsqueeze_638 = torch.unsqueeze(getitem_1659,4) ;  getitem_1659 = None
        permute_1006 = unsqueeze_638.permute(0, 2, 4, 3, 1) ;  unsqueeze_638 = None
        permute_1007 = permute_1006.permute(3, 1, 4, 0, 2) ;  permute_1006 = None
        view_1796 = permute_1007.view(256, 512, 512) ;  permute_1007 = None
        view_1797 = view_1791.view(1, 512, 512, 512) ;  view_1791 = None
        split_tensor_174 = torch.split(view_1797,256,dim = -1) ;  view_1797 = None
        getitem_1662 = split_tensor_174[1];  split_tensor_174 = None
        unsqueeze_639 = torch.unsqueeze(getitem_1662,4) ;  getitem_1662 = None
        permute_1008 = unsqueeze_639.permute(0, 4, 2, 3, 1) ;  unsqueeze_639 = None
        permute_1009 = permute_1008.permute(3, 4, 0, 2, 1) ;  permute_1008 = None
        view_1798 = permute_1009.view(256, 512, 512) ;  permute_1009 = None
        bmm_154 = torch.bmm(view_1796,view_1798) ;  view_1796 = view_1798 = None
        view_1799 = bmm_154.view(256, 512, 1, 1, 512) ;  bmm_154 = None
        permute_1010 = view_1799.permute(3, 1, 4, 0, 2) ;  view_1799 = None
        view_1800 = permute_1010.view(1, 512, 512, 256) ;  permute_1010 = None
        _to_copy_1021 = view_1784.to(dtype = torch.float32) ;  view_1784 = None
        native_layer_norm_default_211 = (torch.nn.functional.layer_norm(_to_copy_1021,[256],None,None,1e-05),) ;  _to_copy_1021 = None
        getitem_1663 = native_layer_norm_default_211[0]
        _to_copy_1022 = view_1800.to(dtype = torch.float32) ;  view_1800 = None
        native_layer_norm_default_212 = (torch.nn.functional.layer_norm(_to_copy_1022,[256],None,None,1e-05),) ;  _to_copy_1022 = None
        getitem_1666 = native_layer_norm_default_212[0]
        add_176 = torch.add(getitem_1663,getitem_1666) ;  getitem_1663 = getitem_1666 = None
        _to_copy_1023 = arg540_1.to(dtype = torch.bfloat16) ;  arg540_1 = None
        _to_copy_1024 = add_176.to(dtype = torch.bfloat16) ;  add_176 = None
        t_370 = _to_copy_1023.t() ;  _to_copy_1023 = None
        view_1801 = _to_copy_1024.view(262144, 256) ;  _to_copy_1024 = None
        mm_345 = torch.mm(view_1801,t_370) ;  view_1801 = t_370 = None
        view_1802 = mm_345.view(1, 512, 512, 256) ;  mm_345 = None
        _to_copy_1025 = getitem_1650.to(dtype = torch.bfloat16) ;  getitem_1650 = None
        _to_copy_1026 = getitem_1643.to(dtype = torch.bfloat16) ;  getitem_1643 = None
        t_371 = _to_copy_1025.t() ;  _to_copy_1025 = None
        view_1803 = _to_copy_1026.view(262144, 256) ;  _to_copy_1026 = None
        mm_346 = torch.mm(view_1803,t_371) ;  view_1803 = t_371 = None
        view_1804 = mm_346.view(1, 512, 512, 256) ;  mm_346 = None
        sigmoid_134 = torch.sigmoid(view_1804) ;  view_1804 = None
        mul_219 = torch.mul(view_1802,sigmoid_134) ;  view_1802 = sigmoid_134 = None
        add_177 = torch.add(add_171,mul_219) ;  mul_219 = None
        _to_copy_1027 = add_171.to(dtype = torch.float32) 
        native_layer_norm_default_213 = (torch.nn.functional.layer_norm(_to_copy_1027,[256],None,None,1e-05),) ;  _to_copy_1027 = None
        getitem_1669 = native_layer_norm_default_213[0]
        _to_copy_1028 = arg544_1.to(dtype = torch.bfloat16) ;  arg544_1 = None
        _to_copy_1029 = getitem_1669.to(dtype = torch.bfloat16) 
        t_372 = _to_copy_1028.t() ;  _to_copy_1028 = None
        view_1805 = _to_copy_1029.view(262144, 256) ;  _to_copy_1029 = None
        mm_347 = torch.mm(view_1805,t_372) ;  view_1805 = t_372 = None
        view_1806 = mm_347.view(1, 512, 512, 8) ;  mm_347 = None
        view_1807 = view_1806.view(1, 512, 512, 2, 4) ;  view_1806 = None
        permute_1011 = view_1807.permute(0, 3, 4, 1, 2) ;  view_1807 = None
        view_1808 = permute_1011.view(1, 2, 4, 1, 512, 512) ;  permute_1011 = None
        view_1809 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_120 = torch.bitwise_not(view_1809) ;  view_1809 = None
        masked_fill_120 = view_1808.masked_fill(bitwise_not_120,-10000) ;  view_1808 = bitwise_not_120 = None
        view_1810 = masked_fill_120.view(1, 2, 4, 512, 512) ;  masked_fill_120 = None
        permute_1012 = view_1810.permute(1, 0, 2, 3, 4) ;  view_1810 = None
        view_1811 = permute_1012.view(2, 4, 1, 512, 512) ;  permute_1012 = None
        _to_copy_1030 = arg545_1.to(dtype = torch.bfloat16) ;  arg545_1 = None
        _to_copy_1031 = getitem_1669.to(dtype = torch.bfloat16) 
        t_373 = _to_copy_1030.t() ;  _to_copy_1030 = None
        view_1812 = _to_copy_1031.view(262144, 256) ;  _to_copy_1031 = None
        mm_348 = torch.mm(view_1812,t_373) ;  view_1812 = t_373 = None
        view_1813 = mm_348.view(1, 512, 512, 1024) ;  mm_348 = None
        select_43 = torch.select(view_1811,0,0) 
        view_1814 = view_1813.view(1, 512, 512, 4, 4, 64) ;  view_1813 = None
        permute_1013 = view_1814.permute(4, 0, 3, 1, 2, 5) ;  view_1814 = None
        view_1815 = permute_1013.view(4, 4, 512, 512, 64) ;  permute_1013 = None
        unbind_int_85 = torch.unbind(view_1815) ;  view_1815 = None
        getitem_1672 = unbind_int_85[0]
        getitem_1673 = unbind_int_85[1]
        getitem_1674 = unbind_int_85[2]
        getitem_1675 = unbind_int_85[3];  unbind_int_85 = None
        expand_102 = select_43.expand(4, 512, 512, 512) ;  select_43 = None
        _scaled_dot_product_efficient_attention_default_57 = (torch.nn.functional.scaled_dot_product_attention(getitem_1672,getitem_1673,getitem_1674,expand_102,False),) ;  getitem_1672 = getitem_1673 = getitem_1674 = expand_102 = None
        getitem_1676 = _scaled_dot_product_efficient_attention_default_57[0]
        sigmoid_135 = torch.sigmoid(getitem_1675) ;  getitem_1675 = None
        mul_220 = torch.mul(getitem_1676,sigmoid_135) ;  getitem_1676 = sigmoid_135 = None
        view_1816 = mul_220.view(1, 4, 512, 512, 64) ;  mul_220 = None
        permute_1014 = view_1816.permute(0, 2, 3, 1, 4) ;  view_1816 = None
        clone_171 = torch.clone(permute_1014,memory_format = torch.contiguous_format) ;  permute_1014 = None
        _unsafe_view_148 = clone_171.view(1, 512, 512, 256) ;  clone_171 = None
        transpose_43 = torch.transpose(getitem_1669,1,2) ;  getitem_1669 = None
        _to_copy_1032 = arg546_1.to(dtype = torch.bfloat16) ;  arg546_1 = None
        _to_copy_1033 = transpose_43.to(dtype = torch.bfloat16) ;  transpose_43 = None
        t_374 = _to_copy_1032.t() ;  _to_copy_1032 = None
        expand_103 = _to_copy_1033.expand(1, 512, 512, 256) ;  _to_copy_1033 = None
        view_1817 = expand_103.view(512, 512, 256) ;  expand_103 = None
        expand_104 = t_374.expand(1, 512, 256, 1024) ;  t_374 = None
        view_1818 = expand_104.view(512, 256, 1024) ;  expand_104 = None
        bmm_155 = torch.bmm(view_1817,view_1818) ;  view_1817 = view_1818 = None
        view_1819 = bmm_155.view(1, 512, 512, 1024) ;  bmm_155 = None
        select_44 = torch.select(view_1811,0,1) ;  view_1811 = None
        view_1820 = view_1819.view(1, 512, 512, 4, 4, 64) ;  view_1819 = None
        permute_1015 = view_1820.permute(4, 0, 3, 1, 2, 5) ;  view_1820 = None
        view_1821 = permute_1015.view(4, 4, 512, 512, 64) ;  permute_1015 = None
        unbind_int_86 = torch.unbind(view_1821) ;  view_1821 = None
        getitem_1680 = unbind_int_86[0]
        getitem_1681 = unbind_int_86[1]
        getitem_1682 = unbind_int_86[2]
        getitem_1683 = unbind_int_86[3];  unbind_int_86 = None
        expand_105 = select_44.expand(4, 512, 512, 512) ;  select_44 = None
        _scaled_dot_product_efficient_attention_default_58 = (torch.nn.functional.scaled_dot_product_attention(getitem_1680,getitem_1681,getitem_1682,expand_105,False),) ;  getitem_1680 = getitem_1681 = getitem_1682 = expand_105 = None
        getitem_1684 = _scaled_dot_product_efficient_attention_default_58[0]
        sigmoid_136 = torch.sigmoid(getitem_1683) ;  getitem_1683 = None
        mul_221 = torch.mul(getitem_1684,sigmoid_136) ;  getitem_1684 = sigmoid_136 = None
        view_1822 = mul_221.view(1, 4, 512, 512, 64) ;  mul_221 = None
        permute_1016 = view_1822.permute(0, 2, 3, 1, 4) ;  view_1822 = None
        clone_172 = torch.clone(permute_1016,memory_format = torch.contiguous_format) ;  permute_1016 = None
        _unsafe_view_149 = clone_172.view(1, 512, 512, 256) ;  clone_172 = None
        cat_27 = torch.cat([_unsafe_view_148,_unsafe_view_149],dim = -1) ;  _unsafe_view_148 = _unsafe_view_149 = None
        slice_220 = arg543_1[0:] ;  arg543_1 = None
        unsqueeze_640 = torch.unsqueeze(slice_220,1) ;  slice_220 = None
        mul_222 = torch.mul(arg547_1,unsqueeze_640) ;  arg547_1 = unsqueeze_640 = None
        _to_copy_1034 = mul_222.to(dtype = torch.bfloat16) ;  mul_222 = None
        t_375 = _to_copy_1034.t() ;  _to_copy_1034 = None
        view_1823 = cat_27.view(262144, 512) ;  cat_27 = None
        mm_349 = torch.mm(view_1823,t_375) ;  view_1823 = t_375 = None
        view_1824 = mm_349.view(1, 512, 512, 256) ;  mm_349 = None
        add_178 = torch.add(add_177,view_1824) ;  add_177 = view_1824 = None
        split_tensor_175 = torch.split(add_171,512,dim = -2) 
        getitem_1688 = split_tensor_175[0];  split_tensor_175 = None
        _to_copy_1035 = getitem_1688.to(dtype = torch.float32) ;  getitem_1688 = None
        native_layer_norm_default_214 = (torch.nn.functional.layer_norm(_to_copy_1035,[256],arg534_1,arg535_1,1e-05),) ;  _to_copy_1035 = arg534_1 = arg535_1 = None
        getitem_1689 = native_layer_norm_default_214[0]
        _to_copy_1036 = arg536_1.to(dtype = torch.bfloat16) ;  arg536_1 = None
        _to_copy_1037 = getitem_1689.to(dtype = torch.bfloat16) ;  getitem_1689 = None
        t_376 = _to_copy_1036.t() ;  _to_copy_1036 = None
        view_1825 = _to_copy_1037.view(262144, 256) ;  _to_copy_1037 = None
        mm_350 = torch.mm(view_1825,t_376) ;  view_1825 = t_376 = None
        view_1826 = mm_350.view(1, 512, 512, 1024) ;  mm_350 = None
        split_tensor_176 = torch.split(view_1826,512,dim = -1) ;  view_1826 = None
        getitem_1692 = split_tensor_176[0]
        getitem_1693 = split_tensor_176[1];  split_tensor_176 = None
        silu_48 = torch.nn.functional.silu(getitem_1692) ;  getitem_1692 = None
        mul_223 = torch.mul(silu_48,getitem_1693) ;  silu_48 = getitem_1693 = None
        _to_copy_1038 = arg537_1.to(dtype = torch.bfloat16) ;  arg537_1 = None
        t_377 = _to_copy_1038.t() ;  _to_copy_1038 = None
        view_1828 = mul_223.view(262144, 512) ;  mul_223 = None
        mm_351 = torch.mm(view_1828,t_377) ;  view_1828 = t_377 = None
        view_1829 = mm_351.view(1, 512, 512, 256) ;  mm_351 = None
        add_179 = torch.add(add_178,view_1829) ;  add_178 = view_1829 = None
        _to_copy_1039 = add_175.to(dtype = torch.float32) 
        native_layer_norm_default_215 = (torch.nn.functional.layer_norm(_to_copy_1039,[384],arg552_1,arg553_1,1e-05),) ;  _to_copy_1039 = arg552_1 = arg553_1 = None
        getitem_1694 = native_layer_norm_default_215[0]
        _to_copy_1040 = add_171.to(dtype = torch.float32) ;  add_171 = None
        native_layer_norm_default_216 = (torch.nn.functional.layer_norm(_to_copy_1040,[256],arg554_1,arg555_1,1e-05),) ;  _to_copy_1040 = arg554_1 = arg555_1 = None
        getitem_1697 = native_layer_norm_default_216[0]
        _to_copy_1041 = arg556_1.to(dtype = torch.bfloat16) ;  arg556_1 = None
        _to_copy_1042 = getitem_1697.to(dtype = torch.bfloat16) ;  getitem_1697 = None
        t_378 = _to_copy_1041.t() ;  _to_copy_1041 = None
        view_1830 = _to_copy_1042.view(262144, 256) ;  _to_copy_1042 = None
        mm_352 = torch.mm(view_1830,t_378) ;  view_1830 = t_378 = None
        view_1831 = mm_352.view(1, 512, 512, 16) ;  mm_352 = None
        permute_1017 = view_1831.permute(0, 3, 1, 2) ;  view_1831 = None
        view_1832 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_121 = torch.bitwise_not(view_1832) ;  view_1832 = None
        masked_fill_121 = permute_1017.masked_fill(bitwise_not_121,-10000) ;  permute_1017 = bitwise_not_121 = None
        _to_copy_1043 = getitem_1694.to(dtype = torch.bfloat16) ;  getitem_1694 = None
        _to_copy_1044 = arg558_1.to(dtype = torch.bfloat16) ;  arg558_1 = None
        unsqueeze_641 = torch.unsqueeze(_to_copy_1043,3) ;  _to_copy_1043 = None
        unsqueeze_642 = torch.unsqueeze(unsqueeze_641,4) ;  unsqueeze_641 = None
        unsqueeze_643 = torch.unsqueeze(unsqueeze_642,5) ;  unsqueeze_642 = None
        permute_1018 = unsqueeze_643.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_643 = None
        unsqueeze_644 = torch.unsqueeze(_to_copy_1044,4) ;  _to_copy_1044 = None
        unsqueeze_645 = torch.unsqueeze(unsqueeze_644,5) ;  unsqueeze_644 = None
        permute_1019 = unsqueeze_645.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_645 = None
        permute_1020 = permute_1018.permute(3, 5, 0, 1, 2, 4) ;  permute_1018 = None
        view_1833 = permute_1020.view(1, 512, 384) ;  permute_1020 = None
        permute_1021 = permute_1019.permute(5, 0, 1, 2, 4, 3) ;  permute_1019 = None
        view_1834 = permute_1021.view(1, 384, 1536) ;  permute_1021 = None
        bmm_156 = torch.bmm(view_1833,view_1834) ;  view_1833 = view_1834 = None
        view_1835 = bmm_156.view(512, 1, 4, 1, 16, 24) ;  bmm_156 = None
        permute_1022 = view_1835.permute(2, 3, 4, 0, 5, 1) ;  view_1835 = None
        view_1836 = permute_1022.view(4, 1, 16, 512, 24) ;  permute_1022 = None
        unbind_int_87 = torch.unbind(view_1836) ;  view_1836 = None
        getitem_1700 = unbind_int_87[0]
        getitem_1701 = unbind_int_87[1]
        getitem_1702 = unbind_int_87[2]
        getitem_1703 = unbind_int_87[3];  unbind_int_87 = None
        view_1837 = arg557_1.view(1, 16, 1, 24) ;  arg557_1 = None
        add_180 = torch.add(getitem_1700,view_1837) ;  getitem_1700 = view_1837 = None
        _to_copy_1045 = add_180.to(dtype = torch.bfloat16) ;  add_180 = None
        expand_106 = masked_fill_121.expand(1, 16, 512, 512) ;  masked_fill_121 = None
        _scaled_dot_product_efficient_attention_default_59 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1045,getitem_1701,getitem_1702,expand_106,False),) ;  _to_copy_1045 = getitem_1701 = getitem_1702 = expand_106 = None
        getitem_1704 = _scaled_dot_product_efficient_attention_default_59[0]
        add_181 = torch.add(getitem_1703,1) ;  getitem_1703 = None
        sigmoid_137 = torch.sigmoid(add_181) ;  add_181 = None
        mul_224 = torch.mul(getitem_1704,sigmoid_137) ;  getitem_1704 = sigmoid_137 = None
        _to_copy_1046 = arg559_1.to(dtype = torch.bfloat16) ;  arg559_1 = None
        unsqueeze_646 = torch.unsqueeze(mul_224,4) ;  mul_224 = None
        permute_1023 = unsqueeze_646.permute(0, 2, 4, 3, 1) ;  unsqueeze_646 = None
        unsqueeze_647 = torch.unsqueeze(_to_copy_1046,3) ;  _to_copy_1046 = None
        unsqueeze_648 = torch.unsqueeze(unsqueeze_647,4) ;  unsqueeze_647 = None
        permute_1024 = unsqueeze_648.permute(3, 4, 2, 1, 0) ;  unsqueeze_648 = None
        permute_1025 = permute_1023.permute(1, 3, 4, 0, 2) ;  permute_1023 = None
        clone_173 = torch.clone(permute_1025,memory_format = torch.contiguous_format) ;  permute_1025 = None
        _unsafe_view_150 = clone_173.view(1, 512, 384) ;  clone_173 = None
        permute_1026 = permute_1024.permute(3, 4, 0, 2, 1) ;  permute_1024 = None
        clone_174 = torch.clone(permute_1026,memory_format = torch.contiguous_format) ;  permute_1026 = None
        _unsafe_view_151 = clone_174.view(1, 384, 384) ;  clone_174 = None
        bmm_157 = torch.bmm(_unsafe_view_150,_unsafe_view_151) ;  _unsafe_view_150 = _unsafe_view_151 = None
        view_1838 = bmm_157.view(512, 1, 1, 1, 384) ;  bmm_157 = None
        permute_1027 = view_1838.permute(3, 0, 4, 1, 2) ;  view_1838 = None
        view_1839 = permute_1027.view(1, 512, 384) ;  permute_1027 = None
        unsqueeze_649 = torch.unsqueeze(arg1406_1,-1) 
        mul_225 = torch.mul(view_1839,unsqueeze_649) ;  view_1839 = unsqueeze_649 = None
        add_182 = torch.add(add_175,mul_225) ;  mul_225 = None
        split_tensor_177 = torch.split(add_175,512,dim = -2) ;  add_175 = None
        getitem_1708 = split_tensor_177[0];  split_tensor_177 = None
        _to_copy_1047 = getitem_1708.to(dtype = torch.float32) ;  getitem_1708 = None
        native_layer_norm_default_217 = (torch.nn.functional.layer_norm(_to_copy_1047,[384],arg548_1,arg549_1,1e-05),) ;  _to_copy_1047 = arg548_1 = arg549_1 = None
        getitem_1709 = native_layer_norm_default_217[0]
        _to_copy_1048 = arg550_1.to(dtype = torch.bfloat16) ;  arg550_1 = None
        _to_copy_1049 = getitem_1709.to(dtype = torch.bfloat16) ;  getitem_1709 = None
        t_379 = _to_copy_1048.t() ;  _to_copy_1048 = None
        view_1840 = _to_copy_1049.view(512, 384) ;  _to_copy_1049 = None
        mm_353 = torch.mm(view_1840,t_379) ;  view_1840 = t_379 = None
        view_1841 = mm_353.view(1, 512, 1536) ;  mm_353 = None
        split_tensor_178 = torch.split(view_1841,768,dim = -1) ;  view_1841 = None
        getitem_1712 = split_tensor_178[0]
        getitem_1713 = split_tensor_178[1];  split_tensor_178 = None
        silu_49 = torch.nn.functional.silu(getitem_1712) ;  getitem_1712 = None
        mul_226 = torch.mul(silu_49,getitem_1713) ;  silu_49 = getitem_1713 = None
        _to_copy_1050 = arg551_1.to(dtype = torch.bfloat16) ;  arg551_1 = None
        t_380 = _to_copy_1050.t() ;  _to_copy_1050 = None
        view_1843 = mul_226.view(512, 768) ;  mul_226 = None
        mm_354 = torch.mm(view_1843,t_380) ;  view_1843 = t_380 = None
        view_1844 = mm_354.view(1, 512, 384) ;  mm_354 = None
        add_183 = torch.add(add_182,view_1844) ;  add_182 = view_1844 = None
        _to_copy_1051 = add_179.to(dtype = torch.float32) 
        native_layer_norm_default_218 = (torch.nn.functional.layer_norm(_to_copy_1051,[256],arg564_1,arg565_1,1e-05),) ;  _to_copy_1051 = arg564_1 = arg565_1 = None
        getitem_1714 = native_layer_norm_default_218[0]
        split_with_sizes_default_44 = torch.split(arg567_1,[512,512]) ;  arg567_1 = None
        getitem_1717 = split_with_sizes_default_44[0]
        getitem_1718 = split_with_sizes_default_44[1];  split_with_sizes_default_44 = None
        split_with_sizes_default_45 = torch.split(arg568_1,[512,512,256]) ;  arg568_1 = None
        getitem_1719 = split_with_sizes_default_45[0]
        getitem_1720 = split_with_sizes_default_45[1]
        getitem_1721 = split_with_sizes_default_45[2];  split_with_sizes_default_45 = None
        _to_copy_1052 = getitem_1717.to(dtype = torch.bfloat16) ;  getitem_1717 = None
        _to_copy_1053 = getitem_1714.to(dtype = torch.bfloat16) 
        t_381 = _to_copy_1052.t() ;  _to_copy_1052 = None
        view_1845 = _to_copy_1053.view(262144, 256) ;  _to_copy_1053 = None
        mm_355 = torch.mm(view_1845,t_381) ;  view_1845 = t_381 = None
        view_1846 = mm_355.view(1, 512, 512, 512) ;  mm_355 = None
        _to_copy_1054 = getitem_1719.to(dtype = torch.bfloat16) ;  getitem_1719 = None
        _to_copy_1055 = getitem_1714.to(dtype = torch.bfloat16) 
        t_382 = _to_copy_1054.t() ;  _to_copy_1054 = None
        view_1847 = _to_copy_1055.view(262144, 256) ;  _to_copy_1055 = None
        mm_356 = torch.mm(view_1847,t_382) ;  view_1847 = t_382 = None
        view_1848 = mm_356.view(1, 512, 512, 512) ;  mm_356 = None
        sigmoid_138 = torch.sigmoid(view_1848) ;  view_1848 = None
        mul_227 = torch.mul(view_1846,sigmoid_138) ;  view_1846 = sigmoid_138 = None
        unsqueeze_650 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_122 = torch.bitwise_not(unsqueeze_650) ;  unsqueeze_650 = None
        masked_fill_122 = mul_227.masked_fill(bitwise_not_122,0) ;  mul_227 = bitwise_not_122 = None
        split_tensor_179 = torch.split(masked_fill_122,256,dim = -1) 
        getitem_1724 = split_tensor_179[0]
        unsqueeze_653 = torch.unsqueeze(getitem_1724,4) ;  getitem_1724 = None
        permute_1032 = unsqueeze_653.permute(0, 1, 4, 3, 2) ;  unsqueeze_653 = None
        permute_1033 = permute_1032.permute(3, 1, 4, 0, 2) ;  permute_1032 = None
        view_1851 = permute_1033.view(256, 512, 512) ;  permute_1033 = None
        split_tensor_180 = torch.split(masked_fill_122,256,dim = -1) ;  masked_fill_122 = None
        getitem_1727 = split_tensor_180[1];  split_tensor_180 = None
        unsqueeze_654 = torch.unsqueeze(getitem_1727,4) ;  getitem_1727 = None
        permute_1034 = unsqueeze_654.permute(0, 4, 1, 3, 2) ;  unsqueeze_654 = None
        permute_1035 = permute_1034.permute(3, 4, 0, 2, 1) ;  permute_1034 = None
        view_1852 = permute_1035.view(256, 512, 512) ;  permute_1035 = None
        bmm_158 = torch.bmm(view_1851,view_1852) ;  view_1851 = view_1852 = None
        view_1853 = bmm_158.view(256, 512, 1, 1, 512) ;  bmm_158 = None
        permute_1036 = view_1853.permute(3, 1, 4, 0, 2) ;  view_1853 = None
        view_1854 = permute_1036.view(1, 512, 512, 256) ;  permute_1036 = None
        _to_copy_1056 = getitem_1718.to(dtype = torch.bfloat16) ;  getitem_1718 = None
        _to_copy_1057 = getitem_1714.to(dtype = torch.bfloat16) 
        t_383 = _to_copy_1056.t() ;  _to_copy_1056 = None
        view_1855 = _to_copy_1057.view(262144, 256) ;  _to_copy_1057 = None
        mm_357 = torch.mm(view_1855,t_383) ;  view_1855 = t_383 = None
        view_1856 = mm_357.view(1, 512, 512, 512) ;  mm_357 = None
        _to_copy_1058 = getitem_1720.to(dtype = torch.bfloat16) ;  getitem_1720 = None
        _to_copy_1059 = getitem_1714.to(dtype = torch.bfloat16) 
        t_384 = _to_copy_1058.t() ;  _to_copy_1058 = None
        view_1857 = _to_copy_1059.view(262144, 256) ;  _to_copy_1059 = None
        mm_358 = torch.mm(view_1857,t_384) ;  view_1857 = t_384 = None
        view_1858 = mm_358.view(1, 512, 512, 512) ;  mm_358 = None
        sigmoid_139 = torch.sigmoid(view_1858) ;  view_1858 = None
        mul_228 = torch.mul(view_1856,sigmoid_139) ;  view_1856 = sigmoid_139 = None
        view_1859 = mul_228.view(262144, 512) ;  mul_228 = None
        view_1860 = view_1859.view(1, 512, 512, 512) ;  view_1859 = None
        transpose_44 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_655 = torch.unsqueeze(transpose_44,3) ;  transpose_44 = None
        clone_175 = torch.clone(unsqueeze_655,memory_format = torch.contiguous_format) ;  unsqueeze_655 = None
        bitwise_not_123 = torch.bitwise_not(clone_175) ;  clone_175 = None
        masked_fill_123 = view_1860.masked_fill(bitwise_not_123,0) ;  view_1860 = bitwise_not_123 = None
        view_1861 = masked_fill_123.view(262144, 512) ;  masked_fill_123 = None
        view_1865 = view_1861.view(1, 512, 512, 512) 
        split_tensor_181 = torch.split(view_1865,256,dim = -1) ;  view_1865 = None
        getitem_1730 = split_tensor_181[0]
        unsqueeze_658 = torch.unsqueeze(getitem_1730,4) ;  getitem_1730 = None
        permute_1041 = unsqueeze_658.permute(0, 2, 4, 3, 1) ;  unsqueeze_658 = None
        permute_1042 = permute_1041.permute(3, 1, 4, 0, 2) ;  permute_1041 = None
        view_1866 = permute_1042.view(256, 512, 512) ;  permute_1042 = None
        view_1867 = view_1861.view(1, 512, 512, 512) ;  view_1861 = None
        split_tensor_182 = torch.split(view_1867,256,dim = -1) ;  view_1867 = None
        getitem_1733 = split_tensor_182[1];  split_tensor_182 = None
        unsqueeze_659 = torch.unsqueeze(getitem_1733,4) ;  getitem_1733 = None
        permute_1043 = unsqueeze_659.permute(0, 4, 2, 3, 1) ;  unsqueeze_659 = None
        permute_1044 = permute_1043.permute(3, 4, 0, 2, 1) ;  permute_1043 = None
        view_1868 = permute_1044.view(256, 512, 512) ;  permute_1044 = None
        bmm_159 = torch.bmm(view_1866,view_1868) ;  view_1866 = view_1868 = None
        view_1869 = bmm_159.view(256, 512, 1, 1, 512) ;  bmm_159 = None
        permute_1045 = view_1869.permute(3, 1, 4, 0, 2) ;  view_1869 = None
        view_1870 = permute_1045.view(1, 512, 512, 256) ;  permute_1045 = None
        _to_copy_1060 = view_1854.to(dtype = torch.float32) ;  view_1854 = None
        native_layer_norm_default_219 = (torch.nn.functional.layer_norm(_to_copy_1060,[256],None,None,1e-05),) ;  _to_copy_1060 = None
        getitem_1734 = native_layer_norm_default_219[0]
        _to_copy_1061 = view_1870.to(dtype = torch.float32) ;  view_1870 = None
        native_layer_norm_default_220 = (torch.nn.functional.layer_norm(_to_copy_1061,[256],None,None,1e-05),) ;  _to_copy_1061 = None
        getitem_1737 = native_layer_norm_default_220[0]
        add_184 = torch.add(getitem_1734,getitem_1737) ;  getitem_1734 = getitem_1737 = None
        _to_copy_1062 = arg566_1.to(dtype = torch.bfloat16) ;  arg566_1 = None
        _to_copy_1063 = add_184.to(dtype = torch.bfloat16) ;  add_184 = None
        t_385 = _to_copy_1062.t() ;  _to_copy_1062 = None
        view_1871 = _to_copy_1063.view(262144, 256) ;  _to_copy_1063 = None
        mm_359 = torch.mm(view_1871,t_385) ;  view_1871 = t_385 = None
        view_1872 = mm_359.view(1, 512, 512, 256) ;  mm_359 = None
        _to_copy_1064 = getitem_1721.to(dtype = torch.bfloat16) ;  getitem_1721 = None
        _to_copy_1065 = getitem_1714.to(dtype = torch.bfloat16) ;  getitem_1714 = None
        t_386 = _to_copy_1064.t() ;  _to_copy_1064 = None
        view_1873 = _to_copy_1065.view(262144, 256) ;  _to_copy_1065 = None
        mm_360 = torch.mm(view_1873,t_386) ;  view_1873 = t_386 = None
        view_1874 = mm_360.view(1, 512, 512, 256) ;  mm_360 = None
        sigmoid_140 = torch.sigmoid(view_1874) ;  view_1874 = None
        mul_229 = torch.mul(view_1872,sigmoid_140) ;  view_1872 = sigmoid_140 = None
        add_185 = torch.add(add_179,mul_229) ;  mul_229 = None
        _to_copy_1066 = add_179.to(dtype = torch.float32) 
        native_layer_norm_default_221 = (torch.nn.functional.layer_norm(_to_copy_1066,[256],None,None,1e-05),) ;  _to_copy_1066 = None
        getitem_1740 = native_layer_norm_default_221[0]
        _to_copy_1067 = arg570_1.to(dtype = torch.bfloat16) ;  arg570_1 = None
        _to_copy_1068 = getitem_1740.to(dtype = torch.bfloat16) 
        t_387 = _to_copy_1067.t() ;  _to_copy_1067 = None
        view_1875 = _to_copy_1068.view(262144, 256) ;  _to_copy_1068 = None
        mm_361 = torch.mm(view_1875,t_387) ;  view_1875 = t_387 = None
        view_1876 = mm_361.view(1, 512, 512, 8) ;  mm_361 = None
        view_1877 = view_1876.view(1, 512, 512, 2, 4) ;  view_1876 = None
        permute_1046 = view_1877.permute(0, 3, 4, 1, 2) ;  view_1877 = None
        view_1878 = permute_1046.view(1, 2, 4, 1, 512, 512) ;  permute_1046 = None
        view_1879 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_124 = torch.bitwise_not(view_1879) ;  view_1879 = None
        masked_fill_124 = view_1878.masked_fill(bitwise_not_124,-10000) ;  view_1878 = bitwise_not_124 = None
        view_1880 = masked_fill_124.view(1, 2, 4, 512, 512) ;  masked_fill_124 = None
        permute_1047 = view_1880.permute(1, 0, 2, 3, 4) ;  view_1880 = None
        view_1881 = permute_1047.view(2, 4, 1, 512, 512) ;  permute_1047 = None
        _to_copy_1069 = arg571_1.to(dtype = torch.bfloat16) ;  arg571_1 = None
        _to_copy_1070 = getitem_1740.to(dtype = torch.bfloat16) 
        t_388 = _to_copy_1069.t() ;  _to_copy_1069 = None
        view_1882 = _to_copy_1070.view(262144, 256) ;  _to_copy_1070 = None
        mm_362 = torch.mm(view_1882,t_388) ;  view_1882 = t_388 = None
        view_1883 = mm_362.view(1, 512, 512, 1024) ;  mm_362 = None
        select_45 = torch.select(view_1881,0,0) 
        view_1884 = view_1883.view(1, 512, 512, 4, 4, 64) ;  view_1883 = None
        permute_1048 = view_1884.permute(4, 0, 3, 1, 2, 5) ;  view_1884 = None
        view_1885 = permute_1048.view(4, 4, 512, 512, 64) ;  permute_1048 = None
        unbind_int_88 = torch.unbind(view_1885) ;  view_1885 = None
        getitem_1743 = unbind_int_88[0]
        getitem_1744 = unbind_int_88[1]
        getitem_1745 = unbind_int_88[2]
        getitem_1746 = unbind_int_88[3];  unbind_int_88 = None
        expand_107 = select_45.expand(4, 512, 512, 512) ;  select_45 = None
        _scaled_dot_product_efficient_attention_default_60 = (torch.nn.functional.scaled_dot_product_attention(getitem_1743,getitem_1744,getitem_1745,expand_107,False),) ;  getitem_1743 = getitem_1744 = getitem_1745 = expand_107 = None
        getitem_1747 = _scaled_dot_product_efficient_attention_default_60[0]
        sigmoid_141 = torch.sigmoid(getitem_1746) ;  getitem_1746 = None
        mul_230 = torch.mul(getitem_1747,sigmoid_141) ;  getitem_1747 = sigmoid_141 = None
        view_1886 = mul_230.view(1, 4, 512, 512, 64) ;  mul_230 = None
        permute_1049 = view_1886.permute(0, 2, 3, 1, 4) ;  view_1886 = None
        clone_176 = torch.clone(permute_1049,memory_format = torch.contiguous_format) ;  permute_1049 = None
        _unsafe_view_152 = clone_176.view(1, 512, 512, 256) ;  clone_176 = None
        transpose_45 = torch.transpose(getitem_1740,1,2) ;  getitem_1740 = None
        _to_copy_1071 = arg572_1.to(dtype = torch.bfloat16) ;  arg572_1 = None
        _to_copy_1072 = transpose_45.to(dtype = torch.bfloat16) ;  transpose_45 = None
        t_389 = _to_copy_1071.t() ;  _to_copy_1071 = None
        expand_108 = _to_copy_1072.expand(1, 512, 512, 256) ;  _to_copy_1072 = None
        view_1887 = expand_108.view(512, 512, 256) ;  expand_108 = None
        expand_109 = t_389.expand(1, 512, 256, 1024) ;  t_389 = None
        view_1888 = expand_109.view(512, 256, 1024) ;  expand_109 = None
        bmm_160 = torch.bmm(view_1887,view_1888) ;  view_1887 = view_1888 = None
        view_1889 = bmm_160.view(1, 512, 512, 1024) ;  bmm_160 = None
        select_46 = torch.select(view_1881,0,1) ;  view_1881 = None
        view_1890 = view_1889.view(1, 512, 512, 4, 4, 64) ;  view_1889 = None
        permute_1050 = view_1890.permute(4, 0, 3, 1, 2, 5) ;  view_1890 = None
        view_1891 = permute_1050.view(4, 4, 512, 512, 64) ;  permute_1050 = None
        unbind_int_89 = torch.unbind(view_1891) ;  view_1891 = None
        getitem_1751 = unbind_int_89[0]
        getitem_1752 = unbind_int_89[1]
        getitem_1753 = unbind_int_89[2]
        getitem_1754 = unbind_int_89[3];  unbind_int_89 = None
        expand_110 = select_46.expand(4, 512, 512, 512) ;  select_46 = None
        _scaled_dot_product_efficient_attention_default_61 = (torch.nn.functional.scaled_dot_product_attention(getitem_1751,getitem_1752,getitem_1753,expand_110,False),) ;  getitem_1751 = getitem_1752 = getitem_1753 = expand_110 = None
        getitem_1755 = _scaled_dot_product_efficient_attention_default_61[0]
        sigmoid_142 = torch.sigmoid(getitem_1754) ;  getitem_1754 = None
        mul_231 = torch.mul(getitem_1755,sigmoid_142) ;  getitem_1755 = sigmoid_142 = None
        view_1892 = mul_231.view(1, 4, 512, 512, 64) ;  mul_231 = None
        permute_1051 = view_1892.permute(0, 2, 3, 1, 4) ;  view_1892 = None
        clone_177 = torch.clone(permute_1051,memory_format = torch.contiguous_format) ;  permute_1051 = None
        _unsafe_view_153 = clone_177.view(1, 512, 512, 256) ;  clone_177 = None
        cat_28 = torch.cat([_unsafe_view_152,_unsafe_view_153],dim = -1) ;  _unsafe_view_152 = _unsafe_view_153 = None
        slice_221 = arg569_1[0:] ;  arg569_1 = None
        unsqueeze_660 = torch.unsqueeze(slice_221,1) ;  slice_221 = None
        mul_232 = torch.mul(arg573_1,unsqueeze_660) ;  arg573_1 = unsqueeze_660 = None
        _to_copy_1073 = mul_232.to(dtype = torch.bfloat16) ;  mul_232 = None
        t_390 = _to_copy_1073.t() ;  _to_copy_1073 = None
        view_1893 = cat_28.view(262144, 512) ;  cat_28 = None
        mm_363 = torch.mm(view_1893,t_390) ;  view_1893 = t_390 = None
        view_1894 = mm_363.view(1, 512, 512, 256) ;  mm_363 = None
        add_186 = torch.add(add_185,view_1894) ;  add_185 = view_1894 = None
        split_tensor_183 = torch.split(add_179,512,dim = -2) 
        getitem_1759 = split_tensor_183[0];  split_tensor_183 = None
        _to_copy_1074 = getitem_1759.to(dtype = torch.float32) ;  getitem_1759 = None
        native_layer_norm_default_222 = (torch.nn.functional.layer_norm(_to_copy_1074,[256],arg560_1,arg561_1,1e-05),) ;  _to_copy_1074 = arg560_1 = arg561_1 = None
        getitem_1760 = native_layer_norm_default_222[0]
        _to_copy_1075 = arg562_1.to(dtype = torch.bfloat16) ;  arg562_1 = None
        _to_copy_1076 = getitem_1760.to(dtype = torch.bfloat16) ;  getitem_1760 = None
        t_391 = _to_copy_1075.t() ;  _to_copy_1075 = None
        view_1895 = _to_copy_1076.view(262144, 256) ;  _to_copy_1076 = None
        mm_364 = torch.mm(view_1895,t_391) ;  view_1895 = t_391 = None
        view_1896 = mm_364.view(1, 512, 512, 1024) ;  mm_364 = None
        split_tensor_184 = torch.split(view_1896,512,dim = -1) ;  view_1896 = None
        getitem_1763 = split_tensor_184[0]
        getitem_1764 = split_tensor_184[1];  split_tensor_184 = None
        silu_50 = torch.nn.functional.silu(getitem_1763) ;  getitem_1763 = None
        mul_233 = torch.mul(silu_50,getitem_1764) ;  silu_50 = getitem_1764 = None
        _to_copy_1077 = arg563_1.to(dtype = torch.bfloat16) ;  arg563_1 = None
        t_392 = _to_copy_1077.t() ;  _to_copy_1077 = None
        view_1898 = mul_233.view(262144, 512) ;  mul_233 = None
        mm_365 = torch.mm(view_1898,t_392) ;  view_1898 = t_392 = None
        view_1899 = mm_365.view(1, 512, 512, 256) ;  mm_365 = None
        add_187 = torch.add(add_186,view_1899) ;  add_186 = view_1899 = None
        _to_copy_1078 = add_183.to(dtype = torch.float32) 
        native_layer_norm_default_223 = (torch.nn.functional.layer_norm(_to_copy_1078,[384],arg578_1,arg579_1,1e-05),) ;  _to_copy_1078 = arg578_1 = arg579_1 = None
        getitem_1765 = native_layer_norm_default_223[0]
        _to_copy_1079 = add_179.to(dtype = torch.float32) ;  add_179 = None
        native_layer_norm_default_224 = (torch.nn.functional.layer_norm(_to_copy_1079,[256],arg580_1,arg581_1,1e-05),) ;  _to_copy_1079 = arg580_1 = arg581_1 = None
        getitem_1768 = native_layer_norm_default_224[0]
        _to_copy_1080 = arg582_1.to(dtype = torch.bfloat16) ;  arg582_1 = None
        _to_copy_1081 = getitem_1768.to(dtype = torch.bfloat16) ;  getitem_1768 = None
        t_393 = _to_copy_1080.t() ;  _to_copy_1080 = None
        view_1900 = _to_copy_1081.view(262144, 256) ;  _to_copy_1081 = None
        mm_366 = torch.mm(view_1900,t_393) ;  view_1900 = t_393 = None
        view_1901 = mm_366.view(1, 512, 512, 16) ;  mm_366 = None
        permute_1052 = view_1901.permute(0, 3, 1, 2) ;  view_1901 = None
        view_1902 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_125 = torch.bitwise_not(view_1902) ;  view_1902 = None
        masked_fill_125 = permute_1052.masked_fill(bitwise_not_125,-10000) ;  permute_1052 = bitwise_not_125 = None
        _to_copy_1082 = getitem_1765.to(dtype = torch.bfloat16) ;  getitem_1765 = None
        _to_copy_1083 = arg584_1.to(dtype = torch.bfloat16) ;  arg584_1 = None
        unsqueeze_661 = torch.unsqueeze(_to_copy_1082,3) ;  _to_copy_1082 = None
        unsqueeze_662 = torch.unsqueeze(unsqueeze_661,4) ;  unsqueeze_661 = None
        unsqueeze_663 = torch.unsqueeze(unsqueeze_662,5) ;  unsqueeze_662 = None
        permute_1053 = unsqueeze_663.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_663 = None
        unsqueeze_664 = torch.unsqueeze(_to_copy_1083,4) ;  _to_copy_1083 = None
        unsqueeze_665 = torch.unsqueeze(unsqueeze_664,5) ;  unsqueeze_664 = None
        permute_1054 = unsqueeze_665.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_665 = None
        permute_1055 = permute_1053.permute(3, 5, 0, 1, 2, 4) ;  permute_1053 = None
        view_1903 = permute_1055.view(1, 512, 384) ;  permute_1055 = None
        permute_1056 = permute_1054.permute(5, 0, 1, 2, 4, 3) ;  permute_1054 = None
        view_1904 = permute_1056.view(1, 384, 1536) ;  permute_1056 = None
        bmm_161 = torch.bmm(view_1903,view_1904) ;  view_1903 = view_1904 = None
        view_1905 = bmm_161.view(512, 1, 4, 1, 16, 24) ;  bmm_161 = None
        permute_1057 = view_1905.permute(2, 3, 4, 0, 5, 1) ;  view_1905 = None
        view_1906 = permute_1057.view(4, 1, 16, 512, 24) ;  permute_1057 = None
        unbind_int_90 = torch.unbind(view_1906) ;  view_1906 = None
        getitem_1771 = unbind_int_90[0]
        getitem_1772 = unbind_int_90[1]
        getitem_1773 = unbind_int_90[2]
        getitem_1774 = unbind_int_90[3];  unbind_int_90 = None
        view_1907 = arg583_1.view(1, 16, 1, 24) ;  arg583_1 = None
        add_188 = torch.add(getitem_1771,view_1907) ;  getitem_1771 = view_1907 = None
        _to_copy_1084 = add_188.to(dtype = torch.bfloat16) ;  add_188 = None
        expand_111 = masked_fill_125.expand(1, 16, 512, 512) ;  masked_fill_125 = None
        _scaled_dot_product_efficient_attention_default_62 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1084,getitem_1772,getitem_1773,expand_111,False),) ;  _to_copy_1084 = getitem_1772 = getitem_1773 = expand_111 = None
        getitem_1775 = _scaled_dot_product_efficient_attention_default_62[0]
        add_189 = torch.add(getitem_1774,1) ;  getitem_1774 = None
        sigmoid_143 = torch.sigmoid(add_189) ;  add_189 = None
        mul_234 = torch.mul(getitem_1775,sigmoid_143) ;  getitem_1775 = sigmoid_143 = None
        _to_copy_1085 = arg585_1.to(dtype = torch.bfloat16) ;  arg585_1 = None
        unsqueeze_666 = torch.unsqueeze(mul_234,4) ;  mul_234 = None
        permute_1058 = unsqueeze_666.permute(0, 2, 4, 3, 1) ;  unsqueeze_666 = None
        unsqueeze_667 = torch.unsqueeze(_to_copy_1085,3) ;  _to_copy_1085 = None
        unsqueeze_668 = torch.unsqueeze(unsqueeze_667,4) ;  unsqueeze_667 = None
        permute_1059 = unsqueeze_668.permute(3, 4, 2, 1, 0) ;  unsqueeze_668 = None
        permute_1060 = permute_1058.permute(1, 3, 4, 0, 2) ;  permute_1058 = None
        clone_178 = torch.clone(permute_1060,memory_format = torch.contiguous_format) ;  permute_1060 = None
        _unsafe_view_154 = clone_178.view(1, 512, 384) ;  clone_178 = None
        permute_1061 = permute_1059.permute(3, 4, 0, 2, 1) ;  permute_1059 = None
        clone_179 = torch.clone(permute_1061,memory_format = torch.contiguous_format) ;  permute_1061 = None
        _unsafe_view_155 = clone_179.view(1, 384, 384) ;  clone_179 = None
        bmm_162 = torch.bmm(_unsafe_view_154,_unsafe_view_155) ;  _unsafe_view_154 = _unsafe_view_155 = None
        view_1908 = bmm_162.view(512, 1, 1, 1, 384) ;  bmm_162 = None
        permute_1062 = view_1908.permute(3, 0, 4, 1, 2) ;  view_1908 = None
        view_1909 = permute_1062.view(1, 512, 384) ;  permute_1062 = None
        unsqueeze_669 = torch.unsqueeze(arg1406_1,-1) 
        mul_235 = torch.mul(view_1909,unsqueeze_669) ;  view_1909 = unsqueeze_669 = None
        add_190 = torch.add(add_183,mul_235) ;  mul_235 = None
        split_tensor_185 = torch.split(add_183,512,dim = -2) ;  add_183 = None
        getitem_1779 = split_tensor_185[0];  split_tensor_185 = None
        _to_copy_1086 = getitem_1779.to(dtype = torch.float32) ;  getitem_1779 = None
        native_layer_norm_default_225 = (torch.nn.functional.layer_norm(_to_copy_1086,[384],arg574_1,arg575_1,1e-05),) ;  _to_copy_1086 = arg574_1 = arg575_1 = None
        getitem_1780 = native_layer_norm_default_225[0]
        _to_copy_1087 = arg576_1.to(dtype = torch.bfloat16) ;  arg576_1 = None
        _to_copy_1088 = getitem_1780.to(dtype = torch.bfloat16) ;  getitem_1780 = None
        t_394 = _to_copy_1087.t() ;  _to_copy_1087 = None
        view_1910 = _to_copy_1088.view(512, 384) ;  _to_copy_1088 = None
        mm_367 = torch.mm(view_1910,t_394) ;  view_1910 = t_394 = None
        view_1911 = mm_367.view(1, 512, 1536) ;  mm_367 = None
        split_tensor_186 = torch.split(view_1911,768,dim = -1) ;  view_1911 = None
        getitem_1783 = split_tensor_186[0]
        getitem_1784 = split_tensor_186[1];  split_tensor_186 = None
        silu_51 = torch.nn.functional.silu(getitem_1783) ;  getitem_1783 = None
        mul_236 = torch.mul(silu_51,getitem_1784) ;  silu_51 = getitem_1784 = None
        _to_copy_1089 = arg577_1.to(dtype = torch.bfloat16) ;  arg577_1 = None
        t_395 = _to_copy_1089.t() ;  _to_copy_1089 = None
        view_1913 = mul_236.view(512, 768) ;  mul_236 = None
        mm_368 = torch.mm(view_1913,t_395) ;  view_1913 = t_395 = None
        view_1914 = mm_368.view(1, 512, 384) ;  mm_368 = None
        add_191 = torch.add(add_190,view_1914) ;  add_190 = view_1914 = None
        _to_copy_1090 = add_187.to(dtype = torch.float32) 
        native_layer_norm_default_226 = (torch.nn.functional.layer_norm(_to_copy_1090,[256],arg590_1,arg591_1,1e-05),) ;  _to_copy_1090 = arg590_1 = arg591_1 = None
        getitem_1785 = native_layer_norm_default_226[0]
        split_with_sizes_default_46 = torch.split(arg593_1,[512,512]) ;  arg593_1 = None
        getitem_1788 = split_with_sizes_default_46[0]
        getitem_1789 = split_with_sizes_default_46[1];  split_with_sizes_default_46 = None
        split_with_sizes_default_47 = torch.split(arg594_1,[512,512,256]) ;  arg594_1 = None
        getitem_1790 = split_with_sizes_default_47[0]
        getitem_1791 = split_with_sizes_default_47[1]
        getitem_1792 = split_with_sizes_default_47[2];  split_with_sizes_default_47 = None
        _to_copy_1091 = getitem_1788.to(dtype = torch.bfloat16) ;  getitem_1788 = None
        _to_copy_1092 = getitem_1785.to(dtype = torch.bfloat16) 
        t_396 = _to_copy_1091.t() ;  _to_copy_1091 = None
        view_1915 = _to_copy_1092.view(262144, 256) ;  _to_copy_1092 = None
        mm_369 = torch.mm(view_1915,t_396) ;  view_1915 = t_396 = None
        view_1916 = mm_369.view(1, 512, 512, 512) ;  mm_369 = None
        _to_copy_1093 = getitem_1790.to(dtype = torch.bfloat16) ;  getitem_1790 = None
        _to_copy_1094 = getitem_1785.to(dtype = torch.bfloat16) 
        t_397 = _to_copy_1093.t() ;  _to_copy_1093 = None
        view_1917 = _to_copy_1094.view(262144, 256) ;  _to_copy_1094 = None
        mm_370 = torch.mm(view_1917,t_397) ;  view_1917 = t_397 = None
        view_1918 = mm_370.view(1, 512, 512, 512) ;  mm_370 = None
        sigmoid_144 = torch.sigmoid(view_1918) ;  view_1918 = None
        mul_237 = torch.mul(view_1916,sigmoid_144) ;  view_1916 = sigmoid_144 = None
        unsqueeze_670 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_126 = torch.bitwise_not(unsqueeze_670) ;  unsqueeze_670 = None
        masked_fill_126 = mul_237.masked_fill(bitwise_not_126,0) ;  mul_237 = bitwise_not_126 = None
        split_tensor_187 = torch.split(masked_fill_126,256,dim = -1) 
        getitem_1795 = split_tensor_187[0]
        unsqueeze_673 = torch.unsqueeze(getitem_1795,4) ;  getitem_1795 = None
        permute_1067 = unsqueeze_673.permute(0, 1, 4, 3, 2) ;  unsqueeze_673 = None
        permute_1068 = permute_1067.permute(3, 1, 4, 0, 2) ;  permute_1067 = None
        view_1921 = permute_1068.view(256, 512, 512) ;  permute_1068 = None
        split_tensor_188 = torch.split(masked_fill_126,256,dim = -1) ;  masked_fill_126 = None
        getitem_1798 = split_tensor_188[1];  split_tensor_188 = None
        unsqueeze_674 = torch.unsqueeze(getitem_1798,4) ;  getitem_1798 = None
        permute_1069 = unsqueeze_674.permute(0, 4, 1, 3, 2) ;  unsqueeze_674 = None
        permute_1070 = permute_1069.permute(3, 4, 0, 2, 1) ;  permute_1069 = None
        view_1922 = permute_1070.view(256, 512, 512) ;  permute_1070 = None
        bmm_163 = torch.bmm(view_1921,view_1922) ;  view_1921 = view_1922 = None
        view_1923 = bmm_163.view(256, 512, 1, 1, 512) ;  bmm_163 = None
        permute_1071 = view_1923.permute(3, 1, 4, 0, 2) ;  view_1923 = None
        view_1924 = permute_1071.view(1, 512, 512, 256) ;  permute_1071 = None
        _to_copy_1095 = getitem_1789.to(dtype = torch.bfloat16) ;  getitem_1789 = None
        _to_copy_1096 = getitem_1785.to(dtype = torch.bfloat16) 
        t_398 = _to_copy_1095.t() ;  _to_copy_1095 = None
        view_1925 = _to_copy_1096.view(262144, 256) ;  _to_copy_1096 = None
        mm_371 = torch.mm(view_1925,t_398) ;  view_1925 = t_398 = None
        view_1926 = mm_371.view(1, 512, 512, 512) ;  mm_371 = None
        _to_copy_1097 = getitem_1791.to(dtype = torch.bfloat16) ;  getitem_1791 = None
        _to_copy_1098 = getitem_1785.to(dtype = torch.bfloat16) 
        t_399 = _to_copy_1097.t() ;  _to_copy_1097 = None
        view_1927 = _to_copy_1098.view(262144, 256) ;  _to_copy_1098 = None
        mm_372 = torch.mm(view_1927,t_399) ;  view_1927 = t_399 = None
        view_1928 = mm_372.view(1, 512, 512, 512) ;  mm_372 = None
        sigmoid_145 = torch.sigmoid(view_1928) ;  view_1928 = None
        mul_238 = torch.mul(view_1926,sigmoid_145) ;  view_1926 = sigmoid_145 = None
        view_1929 = mul_238.view(262144, 512) ;  mul_238 = None
        view_1930 = view_1929.view(1, 512, 512, 512) ;  view_1929 = None
        transpose_46 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_675 = torch.unsqueeze(transpose_46,3) ;  transpose_46 = None
        clone_180 = torch.clone(unsqueeze_675,memory_format = torch.contiguous_format) ;  unsqueeze_675 = None
        bitwise_not_127 = torch.bitwise_not(clone_180) ;  clone_180 = None
        masked_fill_127 = view_1930.masked_fill(bitwise_not_127,0) ;  view_1930 = bitwise_not_127 = None
        view_1931 = masked_fill_127.view(262144, 512) ;  masked_fill_127 = None
        view_1935 = view_1931.view(1, 512, 512, 512) 
        split_tensor_189 = torch.split(view_1935,256,dim = -1) ;  view_1935 = None
        getitem_1801 = split_tensor_189[0]
        unsqueeze_678 = torch.unsqueeze(getitem_1801,4) ;  getitem_1801 = None
        permute_1076 = unsqueeze_678.permute(0, 2, 4, 3, 1) ;  unsqueeze_678 = None
        permute_1077 = permute_1076.permute(3, 1, 4, 0, 2) ;  permute_1076 = None
        view_1936 = permute_1077.view(256, 512, 512) ;  permute_1077 = None
        view_1937 = view_1931.view(1, 512, 512, 512) ;  view_1931 = None
        split_tensor_190 = torch.split(view_1937,256,dim = -1) ;  view_1937 = None
        getitem_1804 = split_tensor_190[1];  split_tensor_190 = None
        unsqueeze_679 = torch.unsqueeze(getitem_1804,4) ;  getitem_1804 = None
        permute_1078 = unsqueeze_679.permute(0, 4, 2, 3, 1) ;  unsqueeze_679 = None
        permute_1079 = permute_1078.permute(3, 4, 0, 2, 1) ;  permute_1078 = None
        view_1938 = permute_1079.view(256, 512, 512) ;  permute_1079 = None
        bmm_164 = torch.bmm(view_1936,view_1938) ;  view_1936 = view_1938 = None
        view_1939 = bmm_164.view(256, 512, 1, 1, 512) ;  bmm_164 = None
        permute_1080 = view_1939.permute(3, 1, 4, 0, 2) ;  view_1939 = None
        view_1940 = permute_1080.view(1, 512, 512, 256) ;  permute_1080 = None
        _to_copy_1099 = view_1924.to(dtype = torch.float32) ;  view_1924 = None
        native_layer_norm_default_227 = (torch.nn.functional.layer_norm(_to_copy_1099,[256],None,None,1e-05),) ;  _to_copy_1099 = None
        getitem_1805 = native_layer_norm_default_227[0]
        _to_copy_1100 = view_1940.to(dtype = torch.float32) ;  view_1940 = None
        native_layer_norm_default_228 = (torch.nn.functional.layer_norm(_to_copy_1100,[256],None,None,1e-05),) ;  _to_copy_1100 = None
        getitem_1808 = native_layer_norm_default_228[0]
        add_192 = torch.add(getitem_1805,getitem_1808) ;  getitem_1805 = getitem_1808 = None
        _to_copy_1101 = arg592_1.to(dtype = torch.bfloat16) ;  arg592_1 = None
        _to_copy_1102 = add_192.to(dtype = torch.bfloat16) ;  add_192 = None
        t_400 = _to_copy_1101.t() ;  _to_copy_1101 = None
        view_1941 = _to_copy_1102.view(262144, 256) ;  _to_copy_1102 = None
        mm_373 = torch.mm(view_1941,t_400) ;  view_1941 = t_400 = None
        view_1942 = mm_373.view(1, 512, 512, 256) ;  mm_373 = None
        _to_copy_1103 = getitem_1792.to(dtype = torch.bfloat16) ;  getitem_1792 = None
        _to_copy_1104 = getitem_1785.to(dtype = torch.bfloat16) ;  getitem_1785 = None
        t_401 = _to_copy_1103.t() ;  _to_copy_1103 = None
        view_1943 = _to_copy_1104.view(262144, 256) ;  _to_copy_1104 = None
        mm_374 = torch.mm(view_1943,t_401) ;  view_1943 = t_401 = None
        view_1944 = mm_374.view(1, 512, 512, 256) ;  mm_374 = None
        sigmoid_146 = torch.sigmoid(view_1944) ;  view_1944 = None
        mul_239 = torch.mul(view_1942,sigmoid_146) ;  view_1942 = sigmoid_146 = None
        add_193 = torch.add(add_187,mul_239) ;  mul_239 = None
        _to_copy_1105 = add_187.to(dtype = torch.float32) 
        native_layer_norm_default_229 = (torch.nn.functional.layer_norm(_to_copy_1105,[256],None,None,1e-05),) ;  _to_copy_1105 = None
        getitem_1811 = native_layer_norm_default_229[0]
        _to_copy_1106 = arg596_1.to(dtype = torch.bfloat16) ;  arg596_1 = None
        _to_copy_1107 = getitem_1811.to(dtype = torch.bfloat16) 
        t_402 = _to_copy_1106.t() ;  _to_copy_1106 = None
        view_1945 = _to_copy_1107.view(262144, 256) ;  _to_copy_1107 = None
        mm_375 = torch.mm(view_1945,t_402) ;  view_1945 = t_402 = None
        view_1946 = mm_375.view(1, 512, 512, 8) ;  mm_375 = None
        view_1947 = view_1946.view(1, 512, 512, 2, 4) ;  view_1946 = None
        permute_1081 = view_1947.permute(0, 3, 4, 1, 2) ;  view_1947 = None
        view_1948 = permute_1081.view(1, 2, 4, 1, 512, 512) ;  permute_1081 = None
        view_1949 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_128 = torch.bitwise_not(view_1949) ;  view_1949 = None
        masked_fill_128 = view_1948.masked_fill(bitwise_not_128,-10000) ;  view_1948 = bitwise_not_128 = None
        view_1950 = masked_fill_128.view(1, 2, 4, 512, 512) ;  masked_fill_128 = None
        permute_1082 = view_1950.permute(1, 0, 2, 3, 4) ;  view_1950 = None
        view_1951 = permute_1082.view(2, 4, 1, 512, 512) ;  permute_1082 = None
        _to_copy_1108 = arg597_1.to(dtype = torch.bfloat16) ;  arg597_1 = None
        _to_copy_1109 = getitem_1811.to(dtype = torch.bfloat16) 
        t_403 = _to_copy_1108.t() ;  _to_copy_1108 = None
        view_1952 = _to_copy_1109.view(262144, 256) ;  _to_copy_1109 = None
        mm_376 = torch.mm(view_1952,t_403) ;  view_1952 = t_403 = None
        view_1953 = mm_376.view(1, 512, 512, 1024) ;  mm_376 = None
        select_47 = torch.select(view_1951,0,0) 
        view_1954 = view_1953.view(1, 512, 512, 4, 4, 64) ;  view_1953 = None
        permute_1083 = view_1954.permute(4, 0, 3, 1, 2, 5) ;  view_1954 = None
        view_1955 = permute_1083.view(4, 4, 512, 512, 64) ;  permute_1083 = None
        unbind_int_91 = torch.unbind(view_1955) ;  view_1955 = None
        getitem_1814 = unbind_int_91[0]
        getitem_1815 = unbind_int_91[1]
        getitem_1816 = unbind_int_91[2]
        getitem_1817 = unbind_int_91[3];  unbind_int_91 = None
        expand_112 = select_47.expand(4, 512, 512, 512) ;  select_47 = None
        _scaled_dot_product_efficient_attention_default_63 = (torch.nn.functional.scaled_dot_product_attention(getitem_1814,getitem_1815,getitem_1816,expand_112,False),) ;  getitem_1814 = getitem_1815 = getitem_1816 = expand_112 = None
        getitem_1818 = _scaled_dot_product_efficient_attention_default_63[0]
        sigmoid_147 = torch.sigmoid(getitem_1817) ;  getitem_1817 = None
        mul_240 = torch.mul(getitem_1818,sigmoid_147) ;  getitem_1818 = sigmoid_147 = None
        view_1956 = mul_240.view(1, 4, 512, 512, 64) ;  mul_240 = None
        permute_1084 = view_1956.permute(0, 2, 3, 1, 4) ;  view_1956 = None
        clone_181 = torch.clone(permute_1084,memory_format = torch.contiguous_format) ;  permute_1084 = None
        _unsafe_view_156 = clone_181.view(1, 512, 512, 256) ;  clone_181 = None
        transpose_47 = torch.transpose(getitem_1811,1,2) ;  getitem_1811 = None
        _to_copy_1110 = arg598_1.to(dtype = torch.bfloat16) ;  arg598_1 = None
        _to_copy_1111 = transpose_47.to(dtype = torch.bfloat16) ;  transpose_47 = None
        t_404 = _to_copy_1110.t() ;  _to_copy_1110 = None
        expand_113 = _to_copy_1111.expand(1, 512, 512, 256) ;  _to_copy_1111 = None
        view_1957 = expand_113.view(512, 512, 256) ;  expand_113 = None
        expand_114 = t_404.expand(1, 512, 256, 1024) ;  t_404 = None
        view_1958 = expand_114.view(512, 256, 1024) ;  expand_114 = None
        bmm_165 = torch.bmm(view_1957,view_1958) ;  view_1957 = view_1958 = None
        view_1959 = bmm_165.view(1, 512, 512, 1024) ;  bmm_165 = None
        select_48 = torch.select(view_1951,0,1) ;  view_1951 = None
        view_1960 = view_1959.view(1, 512, 512, 4, 4, 64) ;  view_1959 = None
        permute_1085 = view_1960.permute(4, 0, 3, 1, 2, 5) ;  view_1960 = None
        view_1961 = permute_1085.view(4, 4, 512, 512, 64) ;  permute_1085 = None
        unbind_int_92 = torch.unbind(view_1961) ;  view_1961 = None
        getitem_1822 = unbind_int_92[0]
        getitem_1823 = unbind_int_92[1]
        getitem_1824 = unbind_int_92[2]
        getitem_1825 = unbind_int_92[3];  unbind_int_92 = None
        expand_115 = select_48.expand(4, 512, 512, 512) ;  select_48 = None
        _scaled_dot_product_efficient_attention_default_64 = (torch.nn.functional.scaled_dot_product_attention(getitem_1822,getitem_1823,getitem_1824,expand_115,False),) ;  getitem_1822 = getitem_1823 = getitem_1824 = expand_115 = None
        getitem_1826 = _scaled_dot_product_efficient_attention_default_64[0]
        sigmoid_148 = torch.sigmoid(getitem_1825) ;  getitem_1825 = None
        mul_241 = torch.mul(getitem_1826,sigmoid_148) ;  getitem_1826 = sigmoid_148 = None
        view_1962 = mul_241.view(1, 4, 512, 512, 64) ;  mul_241 = None
        permute_1086 = view_1962.permute(0, 2, 3, 1, 4) ;  view_1962 = None
        clone_182 = torch.clone(permute_1086,memory_format = torch.contiguous_format) ;  permute_1086 = None
        _unsafe_view_157 = clone_182.view(1, 512, 512, 256) ;  clone_182 = None
        cat_29 = torch.cat([_unsafe_view_156,_unsafe_view_157],dim = -1) ;  _unsafe_view_156 = _unsafe_view_157 = None
        slice_222 = arg595_1[0:] ;  arg595_1 = None
        unsqueeze_680 = torch.unsqueeze(slice_222,1) ;  slice_222 = None
        mul_242 = torch.mul(arg599_1,unsqueeze_680) ;  arg599_1 = unsqueeze_680 = None
        _to_copy_1112 = mul_242.to(dtype = torch.bfloat16) ;  mul_242 = None
        t_405 = _to_copy_1112.t() ;  _to_copy_1112 = None
        view_1963 = cat_29.view(262144, 512) ;  cat_29 = None
        mm_377 = torch.mm(view_1963,t_405) ;  view_1963 = t_405 = None
        view_1964 = mm_377.view(1, 512, 512, 256) ;  mm_377 = None
        add_194 = torch.add(add_193,view_1964) ;  add_193 = view_1964 = None
        split_tensor_191 = torch.split(add_187,512,dim = -2) 
        getitem_1830 = split_tensor_191[0];  split_tensor_191 = None
        _to_copy_1113 = getitem_1830.to(dtype = torch.float32) ;  getitem_1830 = None
        native_layer_norm_default_230 = (torch.nn.functional.layer_norm(_to_copy_1113,[256],arg586_1,arg587_1,1e-05),) ;  _to_copy_1113 = arg586_1 = arg587_1 = None
        getitem_1831 = native_layer_norm_default_230[0]
        _to_copy_1114 = arg588_1.to(dtype = torch.bfloat16) ;  arg588_1 = None
        _to_copy_1115 = getitem_1831.to(dtype = torch.bfloat16) ;  getitem_1831 = None
        t_406 = _to_copy_1114.t() ;  _to_copy_1114 = None
        view_1965 = _to_copy_1115.view(262144, 256) ;  _to_copy_1115 = None
        mm_378 = torch.mm(view_1965,t_406) ;  view_1965 = t_406 = None
        view_1966 = mm_378.view(1, 512, 512, 1024) ;  mm_378 = None
        split_tensor_192 = torch.split(view_1966,512,dim = -1) ;  view_1966 = None
        getitem_1834 = split_tensor_192[0]
        getitem_1835 = split_tensor_192[1];  split_tensor_192 = None
        silu_52 = torch.nn.functional.silu(getitem_1834) ;  getitem_1834 = None
        mul_243 = torch.mul(silu_52,getitem_1835) ;  silu_52 = getitem_1835 = None
        _to_copy_1116 = arg589_1.to(dtype = torch.bfloat16) ;  arg589_1 = None
        t_407 = _to_copy_1116.t() ;  _to_copy_1116 = None
        view_1968 = mul_243.view(262144, 512) ;  mul_243 = None
        mm_379 = torch.mm(view_1968,t_407) ;  view_1968 = t_407 = None
        view_1969 = mm_379.view(1, 512, 512, 256) ;  mm_379 = None
        add_195 = torch.add(add_194,view_1969) ;  add_194 = view_1969 = None
        _to_copy_1117 = add_191.to(dtype = torch.float32) 
        native_layer_norm_default_231 = (torch.nn.functional.layer_norm(_to_copy_1117,[384],arg604_1,arg605_1,1e-05),) ;  _to_copy_1117 = arg604_1 = arg605_1 = None
        getitem_1836 = native_layer_norm_default_231[0]
        _to_copy_1118 = add_187.to(dtype = torch.float32) ;  add_187 = None
        native_layer_norm_default_232 = (torch.nn.functional.layer_norm(_to_copy_1118,[256],arg606_1,arg607_1,1e-05),) ;  _to_copy_1118 = arg606_1 = arg607_1 = None
        getitem_1839 = native_layer_norm_default_232[0]
        _to_copy_1119 = arg608_1.to(dtype = torch.bfloat16) ;  arg608_1 = None
        _to_copy_1120 = getitem_1839.to(dtype = torch.bfloat16) ;  getitem_1839 = None
        t_408 = _to_copy_1119.t() ;  _to_copy_1119 = None
        view_1970 = _to_copy_1120.view(262144, 256) ;  _to_copy_1120 = None
        mm_380 = torch.mm(view_1970,t_408) ;  view_1970 = t_408 = None
        view_1971 = mm_380.view(1, 512, 512, 16) ;  mm_380 = None
        permute_1087 = view_1971.permute(0, 3, 1, 2) ;  view_1971 = None
        view_1972 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_129 = torch.bitwise_not(view_1972) ;  view_1972 = None
        masked_fill_129 = permute_1087.masked_fill(bitwise_not_129,-10000) ;  permute_1087 = bitwise_not_129 = None
        _to_copy_1121 = getitem_1836.to(dtype = torch.bfloat16) ;  getitem_1836 = None
        _to_copy_1122 = arg610_1.to(dtype = torch.bfloat16) ;  arg610_1 = None
        unsqueeze_681 = torch.unsqueeze(_to_copy_1121,3) ;  _to_copy_1121 = None
        unsqueeze_682 = torch.unsqueeze(unsqueeze_681,4) ;  unsqueeze_681 = None
        unsqueeze_683 = torch.unsqueeze(unsqueeze_682,5) ;  unsqueeze_682 = None
        permute_1088 = unsqueeze_683.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_683 = None
        unsqueeze_684 = torch.unsqueeze(_to_copy_1122,4) ;  _to_copy_1122 = None
        unsqueeze_685 = torch.unsqueeze(unsqueeze_684,5) ;  unsqueeze_684 = None
        permute_1089 = unsqueeze_685.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_685 = None
        permute_1090 = permute_1088.permute(3, 5, 0, 1, 2, 4) ;  permute_1088 = None
        view_1973 = permute_1090.view(1, 512, 384) ;  permute_1090 = None
        permute_1091 = permute_1089.permute(5, 0, 1, 2, 4, 3) ;  permute_1089 = None
        view_1974 = permute_1091.view(1, 384, 1536) ;  permute_1091 = None
        bmm_166 = torch.bmm(view_1973,view_1974) ;  view_1973 = view_1974 = None
        view_1975 = bmm_166.view(512, 1, 4, 1, 16, 24) ;  bmm_166 = None
        permute_1092 = view_1975.permute(2, 3, 4, 0, 5, 1) ;  view_1975 = None
        view_1976 = permute_1092.view(4, 1, 16, 512, 24) ;  permute_1092 = None
        unbind_int_93 = torch.unbind(view_1976) ;  view_1976 = None
        getitem_1842 = unbind_int_93[0]
        getitem_1843 = unbind_int_93[1]
        getitem_1844 = unbind_int_93[2]
        getitem_1845 = unbind_int_93[3];  unbind_int_93 = None
        view_1977 = arg609_1.view(1, 16, 1, 24) ;  arg609_1 = None
        add_196 = torch.add(getitem_1842,view_1977) ;  getitem_1842 = view_1977 = None
        _to_copy_1123 = add_196.to(dtype = torch.bfloat16) ;  add_196 = None
        expand_116 = masked_fill_129.expand(1, 16, 512, 512) ;  masked_fill_129 = None
        _scaled_dot_product_efficient_attention_default_65 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1123,getitem_1843,getitem_1844,expand_116,False),) ;  _to_copy_1123 = getitem_1843 = getitem_1844 = expand_116 = None
        getitem_1846 = _scaled_dot_product_efficient_attention_default_65[0]
        add_197 = torch.add(getitem_1845,1) ;  getitem_1845 = None
        sigmoid_149 = torch.sigmoid(add_197) ;  add_197 = None
        mul_244 = torch.mul(getitem_1846,sigmoid_149) ;  getitem_1846 = sigmoid_149 = None
        _to_copy_1124 = arg611_1.to(dtype = torch.bfloat16) ;  arg611_1 = None
        unsqueeze_686 = torch.unsqueeze(mul_244,4) ;  mul_244 = None
        permute_1093 = unsqueeze_686.permute(0, 2, 4, 3, 1) ;  unsqueeze_686 = None
        unsqueeze_687 = torch.unsqueeze(_to_copy_1124,3) ;  _to_copy_1124 = None
        unsqueeze_688 = torch.unsqueeze(unsqueeze_687,4) ;  unsqueeze_687 = None
        permute_1094 = unsqueeze_688.permute(3, 4, 2, 1, 0) ;  unsqueeze_688 = None
        permute_1095 = permute_1093.permute(1, 3, 4, 0, 2) ;  permute_1093 = None
        clone_183 = torch.clone(permute_1095,memory_format = torch.contiguous_format) ;  permute_1095 = None
        _unsafe_view_158 = clone_183.view(1, 512, 384) ;  clone_183 = None
        permute_1096 = permute_1094.permute(3, 4, 0, 2, 1) ;  permute_1094 = None
        clone_184 = torch.clone(permute_1096,memory_format = torch.contiguous_format) ;  permute_1096 = None
        _unsafe_view_159 = clone_184.view(1, 384, 384) ;  clone_184 = None
        bmm_167 = torch.bmm(_unsafe_view_158,_unsafe_view_159) ;  _unsafe_view_158 = _unsafe_view_159 = None
        view_1978 = bmm_167.view(512, 1, 1, 1, 384) ;  bmm_167 = None
        permute_1097 = view_1978.permute(3, 0, 4, 1, 2) ;  view_1978 = None
        view_1979 = permute_1097.view(1, 512, 384) ;  permute_1097 = None
        unsqueeze_689 = torch.unsqueeze(arg1406_1,-1) 
        mul_245 = torch.mul(view_1979,unsqueeze_689) ;  view_1979 = unsqueeze_689 = None
        add_198 = torch.add(add_191,mul_245) ;  mul_245 = None
        split_tensor_193 = torch.split(add_191,512,dim = -2) ;  add_191 = None
        getitem_1850 = split_tensor_193[0];  split_tensor_193 = None
        _to_copy_1125 = getitem_1850.to(dtype = torch.float32) ;  getitem_1850 = None
        native_layer_norm_default_233 = (torch.nn.functional.layer_norm(_to_copy_1125,[384],arg600_1,arg601_1,1e-05),) ;  _to_copy_1125 = arg600_1 = arg601_1 = None
        getitem_1851 = native_layer_norm_default_233[0]
        _to_copy_1126 = arg602_1.to(dtype = torch.bfloat16) ;  arg602_1 = None
        _to_copy_1127 = getitem_1851.to(dtype = torch.bfloat16) ;  getitem_1851 = None
        t_409 = _to_copy_1126.t() ;  _to_copy_1126 = None
        view_1980 = _to_copy_1127.view(512, 384) ;  _to_copy_1127 = None
        mm_381 = torch.mm(view_1980,t_409) ;  view_1980 = t_409 = None
        view_1981 = mm_381.view(1, 512, 1536) ;  mm_381 = None
        split_tensor_194 = torch.split(view_1981,768,dim = -1) ;  view_1981 = None
        getitem_1854 = split_tensor_194[0]
        getitem_1855 = split_tensor_194[1];  split_tensor_194 = None
        silu_53 = torch.nn.functional.silu(getitem_1854) ;  getitem_1854 = None
        mul_246 = torch.mul(silu_53,getitem_1855) ;  silu_53 = getitem_1855 = None
        _to_copy_1128 = arg603_1.to(dtype = torch.bfloat16) ;  arg603_1 = None
        t_410 = _to_copy_1128.t() ;  _to_copy_1128 = None
        view_1983 = mul_246.view(512, 768) ;  mul_246 = None
        mm_382 = torch.mm(view_1983,t_410) ;  view_1983 = t_410 = None
        view_1984 = mm_382.view(1, 512, 384) ;  mm_382 = None
        add_199 = torch.add(add_198,view_1984) ;  add_198 = view_1984 = None
        _to_copy_1129 = add_195.to(dtype = torch.float32) 
        native_layer_norm_default_234 = (torch.nn.functional.layer_norm(_to_copy_1129,[256],arg616_1,arg617_1,1e-05),) ;  _to_copy_1129 = arg616_1 = arg617_1 = None
        getitem_1856 = native_layer_norm_default_234[0]
        split_with_sizes_default_48 = torch.split(arg619_1,[512,512]) ;  arg619_1 = None
        getitem_1859 = split_with_sizes_default_48[0]
        getitem_1860 = split_with_sizes_default_48[1];  split_with_sizes_default_48 = None
        split_with_sizes_default_49 = torch.split(arg620_1,[512,512,256]) ;  arg620_1 = None
        getitem_1861 = split_with_sizes_default_49[0]
        getitem_1862 = split_with_sizes_default_49[1]
        getitem_1863 = split_with_sizes_default_49[2];  split_with_sizes_default_49 = None
        _to_copy_1130 = getitem_1859.to(dtype = torch.bfloat16) ;  getitem_1859 = None
        _to_copy_1131 = getitem_1856.to(dtype = torch.bfloat16) 
        t_411 = _to_copy_1130.t() ;  _to_copy_1130 = None
        view_1985 = _to_copy_1131.view(262144, 256) ;  _to_copy_1131 = None
        mm_383 = torch.mm(view_1985,t_411) ;  view_1985 = t_411 = None
        view_1986 = mm_383.view(1, 512, 512, 512) ;  mm_383 = None
        _to_copy_1132 = getitem_1861.to(dtype = torch.bfloat16) ;  getitem_1861 = None
        _to_copy_1133 = getitem_1856.to(dtype = torch.bfloat16) 
        t_412 = _to_copy_1132.t() ;  _to_copy_1132 = None
        view_1987 = _to_copy_1133.view(262144, 256) ;  _to_copy_1133 = None
        mm_384 = torch.mm(view_1987,t_412) ;  view_1987 = t_412 = None
        view_1988 = mm_384.view(1, 512, 512, 512) ;  mm_384 = None
        sigmoid_150 = torch.sigmoid(view_1988) ;  view_1988 = None
        mul_247 = torch.mul(view_1986,sigmoid_150) ;  view_1986 = sigmoid_150 = None
        unsqueeze_690 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_130 = torch.bitwise_not(unsqueeze_690) ;  unsqueeze_690 = None
        masked_fill_130 = mul_247.masked_fill(bitwise_not_130,0) ;  mul_247 = bitwise_not_130 = None
        split_tensor_195 = torch.split(masked_fill_130,256,dim = -1) 
        getitem_1866 = split_tensor_195[0]
        unsqueeze_693 = torch.unsqueeze(getitem_1866,4) ;  getitem_1866 = None
        permute_1102 = unsqueeze_693.permute(0, 1, 4, 3, 2) ;  unsqueeze_693 = None
        permute_1103 = permute_1102.permute(3, 1, 4, 0, 2) ;  permute_1102 = None
        view_1991 = permute_1103.view(256, 512, 512) ;  permute_1103 = None
        split_tensor_196 = torch.split(masked_fill_130,256,dim = -1) ;  masked_fill_130 = None
        getitem_1869 = split_tensor_196[1];  split_tensor_196 = None
        unsqueeze_694 = torch.unsqueeze(getitem_1869,4) ;  getitem_1869 = None
        permute_1104 = unsqueeze_694.permute(0, 4, 1, 3, 2) ;  unsqueeze_694 = None
        permute_1105 = permute_1104.permute(3, 4, 0, 2, 1) ;  permute_1104 = None
        view_1992 = permute_1105.view(256, 512, 512) ;  permute_1105 = None
        bmm_168 = torch.bmm(view_1991,view_1992) ;  view_1991 = view_1992 = None
        view_1993 = bmm_168.view(256, 512, 1, 1, 512) ;  bmm_168 = None
        permute_1106 = view_1993.permute(3, 1, 4, 0, 2) ;  view_1993 = None
        view_1994 = permute_1106.view(1, 512, 512, 256) ;  permute_1106 = None
        _to_copy_1134 = getitem_1860.to(dtype = torch.bfloat16) ;  getitem_1860 = None
        _to_copy_1135 = getitem_1856.to(dtype = torch.bfloat16) 
        t_413 = _to_copy_1134.t() ;  _to_copy_1134 = None
        view_1995 = _to_copy_1135.view(262144, 256) ;  _to_copy_1135 = None
        mm_385 = torch.mm(view_1995,t_413) ;  view_1995 = t_413 = None
        view_1996 = mm_385.view(1, 512, 512, 512) ;  mm_385 = None
        _to_copy_1136 = getitem_1862.to(dtype = torch.bfloat16) ;  getitem_1862 = None
        _to_copy_1137 = getitem_1856.to(dtype = torch.bfloat16) 
        t_414 = _to_copy_1136.t() ;  _to_copy_1136 = None
        view_1997 = _to_copy_1137.view(262144, 256) ;  _to_copy_1137 = None
        mm_386 = torch.mm(view_1997,t_414) ;  view_1997 = t_414 = None
        view_1998 = mm_386.view(1, 512, 512, 512) ;  mm_386 = None
        sigmoid_151 = torch.sigmoid(view_1998) ;  view_1998 = None
        mul_248 = torch.mul(view_1996,sigmoid_151) ;  view_1996 = sigmoid_151 = None
        view_1999 = mul_248.view(262144, 512) ;  mul_248 = None
        view_2000 = view_1999.view(1, 512, 512, 512) ;  view_1999 = None
        transpose_48 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_695 = torch.unsqueeze(transpose_48,3) ;  transpose_48 = None
        clone_185 = torch.clone(unsqueeze_695,memory_format = torch.contiguous_format) ;  unsqueeze_695 = None
        bitwise_not_131 = torch.bitwise_not(clone_185) ;  clone_185 = None
        masked_fill_131 = view_2000.masked_fill(bitwise_not_131,0) ;  view_2000 = bitwise_not_131 = None
        view_2001 = masked_fill_131.view(262144, 512) ;  masked_fill_131 = None
        view_2005 = view_2001.view(1, 512, 512, 512) 
        split_tensor_197 = torch.split(view_2005,256,dim = -1) ;  view_2005 = None
        getitem_1872 = split_tensor_197[0]
        unsqueeze_698 = torch.unsqueeze(getitem_1872,4) ;  getitem_1872 = None
        permute_1111 = unsqueeze_698.permute(0, 2, 4, 3, 1) ;  unsqueeze_698 = None
        permute_1112 = permute_1111.permute(3, 1, 4, 0, 2) ;  permute_1111 = None
        view_2006 = permute_1112.view(256, 512, 512) ;  permute_1112 = None
        view_2007 = view_2001.view(1, 512, 512, 512) ;  view_2001 = None
        split_tensor_198 = torch.split(view_2007,256,dim = -1) ;  view_2007 = None
        getitem_1875 = split_tensor_198[1];  split_tensor_198 = None
        unsqueeze_699 = torch.unsqueeze(getitem_1875,4) ;  getitem_1875 = None
        permute_1113 = unsqueeze_699.permute(0, 4, 2, 3, 1) ;  unsqueeze_699 = None
        permute_1114 = permute_1113.permute(3, 4, 0, 2, 1) ;  permute_1113 = None
        view_2008 = permute_1114.view(256, 512, 512) ;  permute_1114 = None
        bmm_169 = torch.bmm(view_2006,view_2008) ;  view_2006 = view_2008 = None
        view_2009 = bmm_169.view(256, 512, 1, 1, 512) ;  bmm_169 = None
        permute_1115 = view_2009.permute(3, 1, 4, 0, 2) ;  view_2009 = None
        view_2010 = permute_1115.view(1, 512, 512, 256) ;  permute_1115 = None
        _to_copy_1138 = view_1994.to(dtype = torch.float32) ;  view_1994 = None
        native_layer_norm_default_235 = (torch.nn.functional.layer_norm(_to_copy_1138,[256],None,None,1e-05),) ;  _to_copy_1138 = None
        getitem_1876 = native_layer_norm_default_235[0]
        _to_copy_1139 = view_2010.to(dtype = torch.float32) ;  view_2010 = None
        native_layer_norm_default_236 = (torch.nn.functional.layer_norm(_to_copy_1139,[256],None,None,1e-05),) ;  _to_copy_1139 = None
        getitem_1879 = native_layer_norm_default_236[0]
        add_200 = torch.add(getitem_1876,getitem_1879) ;  getitem_1876 = getitem_1879 = None
        _to_copy_1140 = arg618_1.to(dtype = torch.bfloat16) ;  arg618_1 = None
        _to_copy_1141 = add_200.to(dtype = torch.bfloat16) ;  add_200 = None
        t_415 = _to_copy_1140.t() ;  _to_copy_1140 = None
        view_2011 = _to_copy_1141.view(262144, 256) ;  _to_copy_1141 = None
        mm_387 = torch.mm(view_2011,t_415) ;  view_2011 = t_415 = None
        view_2012 = mm_387.view(1, 512, 512, 256) ;  mm_387 = None
        _to_copy_1142 = getitem_1863.to(dtype = torch.bfloat16) ;  getitem_1863 = None
        _to_copy_1143 = getitem_1856.to(dtype = torch.bfloat16) ;  getitem_1856 = None
        t_416 = _to_copy_1142.t() ;  _to_copy_1142 = None
        view_2013 = _to_copy_1143.view(262144, 256) ;  _to_copy_1143 = None
        mm_388 = torch.mm(view_2013,t_416) ;  view_2013 = t_416 = None
        view_2014 = mm_388.view(1, 512, 512, 256) ;  mm_388 = None
        sigmoid_152 = torch.sigmoid(view_2014) ;  view_2014 = None
        mul_249 = torch.mul(view_2012,sigmoid_152) ;  view_2012 = sigmoid_152 = None
        add_201 = torch.add(add_195,mul_249) ;  mul_249 = None
        _to_copy_1144 = add_195.to(dtype = torch.float32) 
        native_layer_norm_default_237 = (torch.nn.functional.layer_norm(_to_copy_1144,[256],None,None,1e-05),) ;  _to_copy_1144 = None
        getitem_1882 = native_layer_norm_default_237[0]
        _to_copy_1145 = arg622_1.to(dtype = torch.bfloat16) ;  arg622_1 = None
        _to_copy_1146 = getitem_1882.to(dtype = torch.bfloat16) 
        t_417 = _to_copy_1145.t() ;  _to_copy_1145 = None
        view_2015 = _to_copy_1146.view(262144, 256) ;  _to_copy_1146 = None
        mm_389 = torch.mm(view_2015,t_417) ;  view_2015 = t_417 = None
        view_2016 = mm_389.view(1, 512, 512, 8) ;  mm_389 = None
        view_2017 = view_2016.view(1, 512, 512, 2, 4) ;  view_2016 = None
        permute_1116 = view_2017.permute(0, 3, 4, 1, 2) ;  view_2017 = None
        view_2018 = permute_1116.view(1, 2, 4, 1, 512, 512) ;  permute_1116 = None
        view_2019 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_132 = torch.bitwise_not(view_2019) ;  view_2019 = None
        masked_fill_132 = view_2018.masked_fill(bitwise_not_132,-10000) ;  view_2018 = bitwise_not_132 = None
        view_2020 = masked_fill_132.view(1, 2, 4, 512, 512) ;  masked_fill_132 = None
        permute_1117 = view_2020.permute(1, 0, 2, 3, 4) ;  view_2020 = None
        view_2021 = permute_1117.view(2, 4, 1, 512, 512) ;  permute_1117 = None
        _to_copy_1147 = arg623_1.to(dtype = torch.bfloat16) ;  arg623_1 = None
        _to_copy_1148 = getitem_1882.to(dtype = torch.bfloat16) 
        t_418 = _to_copy_1147.t() ;  _to_copy_1147 = None
        view_2022 = _to_copy_1148.view(262144, 256) ;  _to_copy_1148 = None
        mm_390 = torch.mm(view_2022,t_418) ;  view_2022 = t_418 = None
        view_2023 = mm_390.view(1, 512, 512, 1024) ;  mm_390 = None
        select_49 = torch.select(view_2021,0,0) 
        view_2024 = view_2023.view(1, 512, 512, 4, 4, 64) ;  view_2023 = None
        permute_1118 = view_2024.permute(4, 0, 3, 1, 2, 5) ;  view_2024 = None
        view_2025 = permute_1118.view(4, 4, 512, 512, 64) ;  permute_1118 = None
        unbind_int_94 = torch.unbind(view_2025) ;  view_2025 = None
        getitem_1885 = unbind_int_94[0]
        getitem_1886 = unbind_int_94[1]
        getitem_1887 = unbind_int_94[2]
        getitem_1888 = unbind_int_94[3];  unbind_int_94 = None
        expand_117 = select_49.expand(4, 512, 512, 512) ;  select_49 = None
        _scaled_dot_product_efficient_attention_default_66 = (torch.nn.functional.scaled_dot_product_attention(getitem_1885,getitem_1886,getitem_1887,expand_117,False),) ;  getitem_1885 = getitem_1886 = getitem_1887 = expand_117 = None
        getitem_1889 = _scaled_dot_product_efficient_attention_default_66[0]
        sigmoid_153 = torch.sigmoid(getitem_1888) ;  getitem_1888 = None
        mul_250 = torch.mul(getitem_1889,sigmoid_153) ;  getitem_1889 = sigmoid_153 = None
        view_2026 = mul_250.view(1, 4, 512, 512, 64) ;  mul_250 = None
        permute_1119 = view_2026.permute(0, 2, 3, 1, 4) ;  view_2026 = None
        clone_186 = torch.clone(permute_1119,memory_format = torch.contiguous_format) ;  permute_1119 = None
        _unsafe_view_160 = clone_186.view(1, 512, 512, 256) ;  clone_186 = None
        transpose_49 = torch.transpose(getitem_1882,1,2) ;  getitem_1882 = None
        _to_copy_1149 = arg624_1.to(dtype = torch.bfloat16) ;  arg624_1 = None
        _to_copy_1150 = transpose_49.to(dtype = torch.bfloat16) ;  transpose_49 = None
        t_419 = _to_copy_1149.t() ;  _to_copy_1149 = None
        expand_118 = _to_copy_1150.expand(1, 512, 512, 256) ;  _to_copy_1150 = None
        view_2027 = expand_118.view(512, 512, 256) ;  expand_118 = None
        expand_119 = t_419.expand(1, 512, 256, 1024) ;  t_419 = None
        view_2028 = expand_119.view(512, 256, 1024) ;  expand_119 = None
        bmm_170 = torch.bmm(view_2027,view_2028) ;  view_2027 = view_2028 = None
        view_2029 = bmm_170.view(1, 512, 512, 1024) ;  bmm_170 = None
        select_50 = torch.select(view_2021,0,1) ;  view_2021 = None
        view_2030 = view_2029.view(1, 512, 512, 4, 4, 64) ;  view_2029 = None
        permute_1120 = view_2030.permute(4, 0, 3, 1, 2, 5) ;  view_2030 = None
        view_2031 = permute_1120.view(4, 4, 512, 512, 64) ;  permute_1120 = None
        unbind_int_95 = torch.unbind(view_2031) ;  view_2031 = None
        getitem_1893 = unbind_int_95[0]
        getitem_1894 = unbind_int_95[1]
        getitem_1895 = unbind_int_95[2]
        getitem_1896 = unbind_int_95[3];  unbind_int_95 = None
        expand_120 = select_50.expand(4, 512, 512, 512) ;  select_50 = None
        _scaled_dot_product_efficient_attention_default_67 = (torch.nn.functional.scaled_dot_product_attention(getitem_1893,getitem_1894,getitem_1895,expand_120,False),) ;  getitem_1893 = getitem_1894 = getitem_1895 = expand_120 = None
        getitem_1897 = _scaled_dot_product_efficient_attention_default_67[0]
        sigmoid_154 = torch.sigmoid(getitem_1896) ;  getitem_1896 = None
        mul_251 = torch.mul(getitem_1897,sigmoid_154) ;  getitem_1897 = sigmoid_154 = None
        view_2032 = mul_251.view(1, 4, 512, 512, 64) ;  mul_251 = None
        permute_1121 = view_2032.permute(0, 2, 3, 1, 4) ;  view_2032 = None
        clone_187 = torch.clone(permute_1121,memory_format = torch.contiguous_format) ;  permute_1121 = None
        _unsafe_view_161 = clone_187.view(1, 512, 512, 256) ;  clone_187 = None
        cat_30 = torch.cat([_unsafe_view_160,_unsafe_view_161],dim = -1) ;  _unsafe_view_160 = _unsafe_view_161 = None
        slice_223 = arg621_1[0:] ;  arg621_1 = None
        unsqueeze_700 = torch.unsqueeze(slice_223,1) ;  slice_223 = None
        mul_252 = torch.mul(arg625_1,unsqueeze_700) ;  arg625_1 = unsqueeze_700 = None
        _to_copy_1151 = mul_252.to(dtype = torch.bfloat16) ;  mul_252 = None
        t_420 = _to_copy_1151.t() ;  _to_copy_1151 = None
        view_2033 = cat_30.view(262144, 512) ;  cat_30 = None
        mm_391 = torch.mm(view_2033,t_420) ;  view_2033 = t_420 = None
        view_2034 = mm_391.view(1, 512, 512, 256) ;  mm_391 = None
        add_202 = torch.add(add_201,view_2034) ;  add_201 = view_2034 = None
        split_tensor_199 = torch.split(add_195,512,dim = -2) 
        getitem_1901 = split_tensor_199[0];  split_tensor_199 = None
        _to_copy_1152 = getitem_1901.to(dtype = torch.float32) ;  getitem_1901 = None
        native_layer_norm_default_238 = (torch.nn.functional.layer_norm(_to_copy_1152,[256],arg612_1,arg613_1,1e-05),) ;  _to_copy_1152 = arg612_1 = arg613_1 = None
        getitem_1902 = native_layer_norm_default_238[0]
        _to_copy_1153 = arg614_1.to(dtype = torch.bfloat16) ;  arg614_1 = None
        _to_copy_1154 = getitem_1902.to(dtype = torch.bfloat16) ;  getitem_1902 = None
        t_421 = _to_copy_1153.t() ;  _to_copy_1153 = None
        view_2035 = _to_copy_1154.view(262144, 256) ;  _to_copy_1154 = None
        mm_392 = torch.mm(view_2035,t_421) ;  view_2035 = t_421 = None
        view_2036 = mm_392.view(1, 512, 512, 1024) ;  mm_392 = None
        split_tensor_200 = torch.split(view_2036,512,dim = -1) ;  view_2036 = None
        getitem_1905 = split_tensor_200[0]
        getitem_1906 = split_tensor_200[1];  split_tensor_200 = None
        silu_54 = torch.nn.functional.silu(getitem_1905) ;  getitem_1905 = None
        mul_253 = torch.mul(silu_54,getitem_1906) ;  silu_54 = getitem_1906 = None
        _to_copy_1155 = arg615_1.to(dtype = torch.bfloat16) ;  arg615_1 = None
        t_422 = _to_copy_1155.t() ;  _to_copy_1155 = None
        view_2038 = mul_253.view(262144, 512) ;  mul_253 = None
        mm_393 = torch.mm(view_2038,t_422) ;  view_2038 = t_422 = None
        view_2039 = mm_393.view(1, 512, 512, 256) ;  mm_393 = None
        add_203 = torch.add(add_202,view_2039) ;  add_202 = view_2039 = None
        _to_copy_1156 = add_199.to(dtype = torch.float32) 
        native_layer_norm_default_239 = (torch.nn.functional.layer_norm(_to_copy_1156,[384],arg630_1,arg631_1,1e-05),) ;  _to_copy_1156 = arg630_1 = arg631_1 = None
        getitem_1907 = native_layer_norm_default_239[0]
        _to_copy_1157 = add_195.to(dtype = torch.float32) ;  add_195 = None
        native_layer_norm_default_240 = (torch.nn.functional.layer_norm(_to_copy_1157,[256],arg632_1,arg633_1,1e-05),) ;  _to_copy_1157 = arg632_1 = arg633_1 = None
        getitem_1910 = native_layer_norm_default_240[0]
        _to_copy_1158 = arg634_1.to(dtype = torch.bfloat16) ;  arg634_1 = None
        _to_copy_1159 = getitem_1910.to(dtype = torch.bfloat16) ;  getitem_1910 = None
        t_423 = _to_copy_1158.t() ;  _to_copy_1158 = None
        view_2040 = _to_copy_1159.view(262144, 256) ;  _to_copy_1159 = None
        mm_394 = torch.mm(view_2040,t_423) ;  view_2040 = t_423 = None
        view_2041 = mm_394.view(1, 512, 512, 16) ;  mm_394 = None
        permute_1122 = view_2041.permute(0, 3, 1, 2) ;  view_2041 = None
        view_2042 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_133 = torch.bitwise_not(view_2042) ;  view_2042 = None
        masked_fill_133 = permute_1122.masked_fill(bitwise_not_133,-10000) ;  permute_1122 = bitwise_not_133 = None
        _to_copy_1160 = getitem_1907.to(dtype = torch.bfloat16) ;  getitem_1907 = None
        _to_copy_1161 = arg636_1.to(dtype = torch.bfloat16) ;  arg636_1 = None
        unsqueeze_701 = torch.unsqueeze(_to_copy_1160,3) ;  _to_copy_1160 = None
        unsqueeze_702 = torch.unsqueeze(unsqueeze_701,4) ;  unsqueeze_701 = None
        unsqueeze_703 = torch.unsqueeze(unsqueeze_702,5) ;  unsqueeze_702 = None
        permute_1123 = unsqueeze_703.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_703 = None
        unsqueeze_704 = torch.unsqueeze(_to_copy_1161,4) ;  _to_copy_1161 = None
        unsqueeze_705 = torch.unsqueeze(unsqueeze_704,5) ;  unsqueeze_704 = None
        permute_1124 = unsqueeze_705.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_705 = None
        permute_1125 = permute_1123.permute(3, 5, 0, 1, 2, 4) ;  permute_1123 = None
        view_2043 = permute_1125.view(1, 512, 384) ;  permute_1125 = None
        permute_1126 = permute_1124.permute(5, 0, 1, 2, 4, 3) ;  permute_1124 = None
        view_2044 = permute_1126.view(1, 384, 1536) ;  permute_1126 = None
        bmm_171 = torch.bmm(view_2043,view_2044) ;  view_2043 = view_2044 = None
        view_2045 = bmm_171.view(512, 1, 4, 1, 16, 24) ;  bmm_171 = None
        permute_1127 = view_2045.permute(2, 3, 4, 0, 5, 1) ;  view_2045 = None
        view_2046 = permute_1127.view(4, 1, 16, 512, 24) ;  permute_1127 = None
        unbind_int_96 = torch.unbind(view_2046) ;  view_2046 = None
        getitem_1913 = unbind_int_96[0]
        getitem_1914 = unbind_int_96[1]
        getitem_1915 = unbind_int_96[2]
        getitem_1916 = unbind_int_96[3];  unbind_int_96 = None
        view_2047 = arg635_1.view(1, 16, 1, 24) ;  arg635_1 = None
        add_204 = torch.add(getitem_1913,view_2047) ;  getitem_1913 = view_2047 = None
        _to_copy_1162 = add_204.to(dtype = torch.bfloat16) ;  add_204 = None
        expand_121 = masked_fill_133.expand(1, 16, 512, 512) ;  masked_fill_133 = None
        _scaled_dot_product_efficient_attention_default_68 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1162,getitem_1914,getitem_1915,expand_121,False),) ;  _to_copy_1162 = getitem_1914 = getitem_1915 = expand_121 = None
        getitem_1917 = _scaled_dot_product_efficient_attention_default_68[0]
        add_205 = torch.add(getitem_1916,1) ;  getitem_1916 = None
        sigmoid_155 = torch.sigmoid(add_205) ;  add_205 = None
        mul_254 = torch.mul(getitem_1917,sigmoid_155) ;  getitem_1917 = sigmoid_155 = None
        _to_copy_1163 = arg637_1.to(dtype = torch.bfloat16) ;  arg637_1 = None
        unsqueeze_706 = torch.unsqueeze(mul_254,4) ;  mul_254 = None
        permute_1128 = unsqueeze_706.permute(0, 2, 4, 3, 1) ;  unsqueeze_706 = None
        unsqueeze_707 = torch.unsqueeze(_to_copy_1163,3) ;  _to_copy_1163 = None
        unsqueeze_708 = torch.unsqueeze(unsqueeze_707,4) ;  unsqueeze_707 = None
        permute_1129 = unsqueeze_708.permute(3, 4, 2, 1, 0) ;  unsqueeze_708 = None
        permute_1130 = permute_1128.permute(1, 3, 4, 0, 2) ;  permute_1128 = None
        clone_188 = torch.clone(permute_1130,memory_format = torch.contiguous_format) ;  permute_1130 = None
        _unsafe_view_162 = clone_188.view(1, 512, 384) ;  clone_188 = None
        permute_1131 = permute_1129.permute(3, 4, 0, 2, 1) ;  permute_1129 = None
        clone_189 = torch.clone(permute_1131,memory_format = torch.contiguous_format) ;  permute_1131 = None
        _unsafe_view_163 = clone_189.view(1, 384, 384) ;  clone_189 = None
        bmm_172 = torch.bmm(_unsafe_view_162,_unsafe_view_163) ;  _unsafe_view_162 = _unsafe_view_163 = None
        view_2048 = bmm_172.view(512, 1, 1, 1, 384) ;  bmm_172 = None
        permute_1132 = view_2048.permute(3, 0, 4, 1, 2) ;  view_2048 = None
        view_2049 = permute_1132.view(1, 512, 384) ;  permute_1132 = None
        unsqueeze_709 = torch.unsqueeze(arg1406_1,-1) 
        mul_255 = torch.mul(view_2049,unsqueeze_709) ;  view_2049 = unsqueeze_709 = None
        add_206 = torch.add(add_199,mul_255) ;  mul_255 = None
        split_tensor_201 = torch.split(add_199,512,dim = -2) ;  add_199 = None
        getitem_1921 = split_tensor_201[0];  split_tensor_201 = None
        _to_copy_1164 = getitem_1921.to(dtype = torch.float32) ;  getitem_1921 = None
        native_layer_norm_default_241 = (torch.nn.functional.layer_norm(_to_copy_1164,[384],arg626_1,arg627_1,1e-05),) ;  _to_copy_1164 = arg626_1 = arg627_1 = None
        getitem_1922 = native_layer_norm_default_241[0]
        _to_copy_1165 = arg628_1.to(dtype = torch.bfloat16) ;  arg628_1 = None
        _to_copy_1166 = getitem_1922.to(dtype = torch.bfloat16) ;  getitem_1922 = None
        t_424 = _to_copy_1165.t() ;  _to_copy_1165 = None
        view_2050 = _to_copy_1166.view(512, 384) ;  _to_copy_1166 = None
        mm_395 = torch.mm(view_2050,t_424) ;  view_2050 = t_424 = None
        view_2051 = mm_395.view(1, 512, 1536) ;  mm_395 = None
        split_tensor_202 = torch.split(view_2051,768,dim = -1) ;  view_2051 = None
        getitem_1925 = split_tensor_202[0]
        getitem_1926 = split_tensor_202[1];  split_tensor_202 = None
        silu_55 = torch.nn.functional.silu(getitem_1925) ;  getitem_1925 = None
        mul_256 = torch.mul(silu_55,getitem_1926) ;  silu_55 = getitem_1926 = None
        _to_copy_1167 = arg629_1.to(dtype = torch.bfloat16) ;  arg629_1 = None
        t_425 = _to_copy_1167.t() ;  _to_copy_1167 = None
        view_2053 = mul_256.view(512, 768) ;  mul_256 = None
        mm_396 = torch.mm(view_2053,t_425) ;  view_2053 = t_425 = None
        view_2054 = mm_396.view(1, 512, 384) ;  mm_396 = None
        add_207 = torch.add(add_206,view_2054) ;  add_206 = view_2054 = None
        _to_copy_1168 = add_203.to(dtype = torch.float32) 
        native_layer_norm_default_242 = (torch.nn.functional.layer_norm(_to_copy_1168,[256],arg642_1,arg643_1,1e-05),) ;  _to_copy_1168 = arg642_1 = arg643_1 = None
        getitem_1927 = native_layer_norm_default_242[0]
        split_with_sizes_default_50 = torch.split(arg645_1,[512,512]) ;  arg645_1 = None
        getitem_1930 = split_with_sizes_default_50[0]
        getitem_1931 = split_with_sizes_default_50[1];  split_with_sizes_default_50 = None
        split_with_sizes_default_51 = torch.split(arg646_1,[512,512,256]) ;  arg646_1 = None
        getitem_1932 = split_with_sizes_default_51[0]
        getitem_1933 = split_with_sizes_default_51[1]
        getitem_1934 = split_with_sizes_default_51[2];  split_with_sizes_default_51 = None
        _to_copy_1169 = getitem_1930.to(dtype = torch.bfloat16) ;  getitem_1930 = None
        _to_copy_1170 = getitem_1927.to(dtype = torch.bfloat16) 
        t_426 = _to_copy_1169.t() ;  _to_copy_1169 = None
        view_2055 = _to_copy_1170.view(262144, 256) ;  _to_copy_1170 = None
        mm_397 = torch.mm(view_2055,t_426) ;  view_2055 = t_426 = None
        view_2056 = mm_397.view(1, 512, 512, 512) ;  mm_397 = None
        _to_copy_1171 = getitem_1932.to(dtype = torch.bfloat16) ;  getitem_1932 = None
        _to_copy_1172 = getitem_1927.to(dtype = torch.bfloat16) 
        t_427 = _to_copy_1171.t() ;  _to_copy_1171 = None
        view_2057 = _to_copy_1172.view(262144, 256) ;  _to_copy_1172 = None
        mm_398 = torch.mm(view_2057,t_427) ;  view_2057 = t_427 = None
        view_2058 = mm_398.view(1, 512, 512, 512) ;  mm_398 = None
        sigmoid_156 = torch.sigmoid(view_2058) ;  view_2058 = None
        mul_257 = torch.mul(view_2056,sigmoid_156) ;  view_2056 = sigmoid_156 = None
        unsqueeze_710 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_134 = torch.bitwise_not(unsqueeze_710) ;  unsqueeze_710 = None
        masked_fill_134 = mul_257.masked_fill(bitwise_not_134,0) ;  mul_257 = bitwise_not_134 = None
        split_tensor_203 = torch.split(masked_fill_134,256,dim = -1) 
        getitem_1937 = split_tensor_203[0]
        unsqueeze_713 = torch.unsqueeze(getitem_1937,4) ;  getitem_1937 = None
        permute_1137 = unsqueeze_713.permute(0, 1, 4, 3, 2) ;  unsqueeze_713 = None
        permute_1138 = permute_1137.permute(3, 1, 4, 0, 2) ;  permute_1137 = None
        view_2061 = permute_1138.view(256, 512, 512) ;  permute_1138 = None
        split_tensor_204 = torch.split(masked_fill_134,256,dim = -1) ;  masked_fill_134 = None
        getitem_1940 = split_tensor_204[1];  split_tensor_204 = None
        unsqueeze_714 = torch.unsqueeze(getitem_1940,4) ;  getitem_1940 = None
        permute_1139 = unsqueeze_714.permute(0, 4, 1, 3, 2) ;  unsqueeze_714 = None
        permute_1140 = permute_1139.permute(3, 4, 0, 2, 1) ;  permute_1139 = None
        view_2062 = permute_1140.view(256, 512, 512) ;  permute_1140 = None
        bmm_173 = torch.bmm(view_2061,view_2062) ;  view_2061 = view_2062 = None
        view_2063 = bmm_173.view(256, 512, 1, 1, 512) ;  bmm_173 = None
        permute_1141 = view_2063.permute(3, 1, 4, 0, 2) ;  view_2063 = None
        view_2064 = permute_1141.view(1, 512, 512, 256) ;  permute_1141 = None
        _to_copy_1173 = getitem_1931.to(dtype = torch.bfloat16) ;  getitem_1931 = None
        _to_copy_1174 = getitem_1927.to(dtype = torch.bfloat16) 
        t_428 = _to_copy_1173.t() ;  _to_copy_1173 = None
        view_2065 = _to_copy_1174.view(262144, 256) ;  _to_copy_1174 = None
        mm_399 = torch.mm(view_2065,t_428) ;  view_2065 = t_428 = None
        view_2066 = mm_399.view(1, 512, 512, 512) ;  mm_399 = None
        _to_copy_1175 = getitem_1933.to(dtype = torch.bfloat16) ;  getitem_1933 = None
        _to_copy_1176 = getitem_1927.to(dtype = torch.bfloat16) 
        t_429 = _to_copy_1175.t() ;  _to_copy_1175 = None
        view_2067 = _to_copy_1176.view(262144, 256) ;  _to_copy_1176 = None
        mm_400 = torch.mm(view_2067,t_429) ;  view_2067 = t_429 = None
        view_2068 = mm_400.view(1, 512, 512, 512) ;  mm_400 = None
        sigmoid_157 = torch.sigmoid(view_2068) ;  view_2068 = None
        mul_258 = torch.mul(view_2066,sigmoid_157) ;  view_2066 = sigmoid_157 = None
        view_2069 = mul_258.view(262144, 512) ;  mul_258 = None
        view_2070 = view_2069.view(1, 512, 512, 512) ;  view_2069 = None
        transpose_50 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_715 = torch.unsqueeze(transpose_50,3) ;  transpose_50 = None
        clone_190 = torch.clone(unsqueeze_715,memory_format = torch.contiguous_format) ;  unsqueeze_715 = None
        bitwise_not_135 = torch.bitwise_not(clone_190) ;  clone_190 = None
        masked_fill_135 = view_2070.masked_fill(bitwise_not_135,0) ;  view_2070 = bitwise_not_135 = None
        view_2071 = masked_fill_135.view(262144, 512) ;  masked_fill_135 = None
        view_2075 = view_2071.view(1, 512, 512, 512) 
        split_tensor_205 = torch.split(view_2075,256,dim = -1) ;  view_2075 = None
        getitem_1943 = split_tensor_205[0]
        unsqueeze_718 = torch.unsqueeze(getitem_1943,4) ;  getitem_1943 = None
        permute_1146 = unsqueeze_718.permute(0, 2, 4, 3, 1) ;  unsqueeze_718 = None
        permute_1147 = permute_1146.permute(3, 1, 4, 0, 2) ;  permute_1146 = None
        view_2076 = permute_1147.view(256, 512, 512) ;  permute_1147 = None
        view_2077 = view_2071.view(1, 512, 512, 512) ;  view_2071 = None
        split_tensor_206 = torch.split(view_2077,256,dim = -1) ;  view_2077 = None
        getitem_1946 = split_tensor_206[1];  split_tensor_206 = None
        unsqueeze_719 = torch.unsqueeze(getitem_1946,4) ;  getitem_1946 = None
        permute_1148 = unsqueeze_719.permute(0, 4, 2, 3, 1) ;  unsqueeze_719 = None
        permute_1149 = permute_1148.permute(3, 4, 0, 2, 1) ;  permute_1148 = None
        view_2078 = permute_1149.view(256, 512, 512) ;  permute_1149 = None
        bmm_174 = torch.bmm(view_2076,view_2078) ;  view_2076 = view_2078 = None
        view_2079 = bmm_174.view(256, 512, 1, 1, 512) ;  bmm_174 = None
        permute_1150 = view_2079.permute(3, 1, 4, 0, 2) ;  view_2079 = None
        view_2080 = permute_1150.view(1, 512, 512, 256) ;  permute_1150 = None
        _to_copy_1177 = view_2064.to(dtype = torch.float32) ;  view_2064 = None
        native_layer_norm_default_243 = (torch.nn.functional.layer_norm(_to_copy_1177,[256],None,None,1e-05),) ;  _to_copy_1177 = None
        getitem_1947 = native_layer_norm_default_243[0]
        _to_copy_1178 = view_2080.to(dtype = torch.float32) ;  view_2080 = None
        native_layer_norm_default_244 = (torch.nn.functional.layer_norm(_to_copy_1178,[256],None,None,1e-05),) ;  _to_copy_1178 = None
        getitem_1950 = native_layer_norm_default_244[0]
        add_208 = torch.add(getitem_1947,getitem_1950) ;  getitem_1947 = getitem_1950 = None
        _to_copy_1179 = arg644_1.to(dtype = torch.bfloat16) ;  arg644_1 = None
        _to_copy_1180 = add_208.to(dtype = torch.bfloat16) ;  add_208 = None
        t_430 = _to_copy_1179.t() ;  _to_copy_1179 = None
        view_2081 = _to_copy_1180.view(262144, 256) ;  _to_copy_1180 = None
        mm_401 = torch.mm(view_2081,t_430) ;  view_2081 = t_430 = None
        view_2082 = mm_401.view(1, 512, 512, 256) ;  mm_401 = None
        _to_copy_1181 = getitem_1934.to(dtype = torch.bfloat16) ;  getitem_1934 = None
        _to_copy_1182 = getitem_1927.to(dtype = torch.bfloat16) ;  getitem_1927 = None
        t_431 = _to_copy_1181.t() ;  _to_copy_1181 = None
        view_2083 = _to_copy_1182.view(262144, 256) ;  _to_copy_1182 = None
        mm_402 = torch.mm(view_2083,t_431) ;  view_2083 = t_431 = None
        view_2084 = mm_402.view(1, 512, 512, 256) ;  mm_402 = None
        sigmoid_158 = torch.sigmoid(view_2084) ;  view_2084 = None
        mul_259 = torch.mul(view_2082,sigmoid_158) ;  view_2082 = sigmoid_158 = None
        add_209 = torch.add(add_203,mul_259) ;  mul_259 = None
        _to_copy_1183 = add_203.to(dtype = torch.float32) 
        native_layer_norm_default_245 = (torch.nn.functional.layer_norm(_to_copy_1183,[256],None,None,1e-05),) ;  _to_copy_1183 = None
        getitem_1953 = native_layer_norm_default_245[0]
        _to_copy_1184 = arg648_1.to(dtype = torch.bfloat16) ;  arg648_1 = None
        _to_copy_1185 = getitem_1953.to(dtype = torch.bfloat16) 
        t_432 = _to_copy_1184.t() ;  _to_copy_1184 = None
        view_2085 = _to_copy_1185.view(262144, 256) ;  _to_copy_1185 = None
        mm_403 = torch.mm(view_2085,t_432) ;  view_2085 = t_432 = None
        view_2086 = mm_403.view(1, 512, 512, 8) ;  mm_403 = None
        view_2087 = view_2086.view(1, 512, 512, 2, 4) ;  view_2086 = None
        permute_1151 = view_2087.permute(0, 3, 4, 1, 2) ;  view_2087 = None
        view_2088 = permute_1151.view(1, 2, 4, 1, 512, 512) ;  permute_1151 = None
        view_2089 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_136 = torch.bitwise_not(view_2089) ;  view_2089 = None
        masked_fill_136 = view_2088.masked_fill(bitwise_not_136,-10000) ;  view_2088 = bitwise_not_136 = None
        view_2090 = masked_fill_136.view(1, 2, 4, 512, 512) ;  masked_fill_136 = None
        permute_1152 = view_2090.permute(1, 0, 2, 3, 4) ;  view_2090 = None
        view_2091 = permute_1152.view(2, 4, 1, 512, 512) ;  permute_1152 = None
        _to_copy_1186 = arg649_1.to(dtype = torch.bfloat16) ;  arg649_1 = None
        _to_copy_1187 = getitem_1953.to(dtype = torch.bfloat16) 
        t_433 = _to_copy_1186.t() ;  _to_copy_1186 = None
        view_2092 = _to_copy_1187.view(262144, 256) ;  _to_copy_1187 = None
        mm_404 = torch.mm(view_2092,t_433) ;  view_2092 = t_433 = None
        view_2093 = mm_404.view(1, 512, 512, 1024) ;  mm_404 = None
        select_51 = torch.select(view_2091,0,0) 
        view_2094 = view_2093.view(1, 512, 512, 4, 4, 64) ;  view_2093 = None
        permute_1153 = view_2094.permute(4, 0, 3, 1, 2, 5) ;  view_2094 = None
        view_2095 = permute_1153.view(4, 4, 512, 512, 64) ;  permute_1153 = None
        unbind_int_97 = torch.unbind(view_2095) ;  view_2095 = None
        getitem_1956 = unbind_int_97[0]
        getitem_1957 = unbind_int_97[1]
        getitem_1958 = unbind_int_97[2]
        getitem_1959 = unbind_int_97[3];  unbind_int_97 = None
        expand_122 = select_51.expand(4, 512, 512, 512) ;  select_51 = None
        _scaled_dot_product_efficient_attention_default_69 = (torch.nn.functional.scaled_dot_product_attention(getitem_1956,getitem_1957,getitem_1958,expand_122,False),) ;  getitem_1956 = getitem_1957 = getitem_1958 = expand_122 = None
        getitem_1960 = _scaled_dot_product_efficient_attention_default_69[0]
        sigmoid_159 = torch.sigmoid(getitem_1959) ;  getitem_1959 = None
        mul_260 = torch.mul(getitem_1960,sigmoid_159) ;  getitem_1960 = sigmoid_159 = None
        view_2096 = mul_260.view(1, 4, 512, 512, 64) ;  mul_260 = None
        permute_1154 = view_2096.permute(0, 2, 3, 1, 4) ;  view_2096 = None
        clone_191 = torch.clone(permute_1154,memory_format = torch.contiguous_format) ;  permute_1154 = None
        _unsafe_view_164 = clone_191.view(1, 512, 512, 256) ;  clone_191 = None
        transpose_51 = torch.transpose(getitem_1953,1,2) ;  getitem_1953 = None
        _to_copy_1188 = arg650_1.to(dtype = torch.bfloat16) ;  arg650_1 = None
        _to_copy_1189 = transpose_51.to(dtype = torch.bfloat16) ;  transpose_51 = None
        t_434 = _to_copy_1188.t() ;  _to_copy_1188 = None
        expand_123 = _to_copy_1189.expand(1, 512, 512, 256) ;  _to_copy_1189 = None
        view_2097 = expand_123.view(512, 512, 256) ;  expand_123 = None
        expand_124 = t_434.expand(1, 512, 256, 1024) ;  t_434 = None
        view_2098 = expand_124.view(512, 256, 1024) ;  expand_124 = None
        bmm_175 = torch.bmm(view_2097,view_2098) ;  view_2097 = view_2098 = None
        view_2099 = bmm_175.view(1, 512, 512, 1024) ;  bmm_175 = None
        select_52 = torch.select(view_2091,0,1) ;  view_2091 = None
        view_2100 = view_2099.view(1, 512, 512, 4, 4, 64) ;  view_2099 = None
        permute_1155 = view_2100.permute(4, 0, 3, 1, 2, 5) ;  view_2100 = None
        view_2101 = permute_1155.view(4, 4, 512, 512, 64) ;  permute_1155 = None
        unbind_int_98 = torch.unbind(view_2101) ;  view_2101 = None
        getitem_1964 = unbind_int_98[0]
        getitem_1965 = unbind_int_98[1]
        getitem_1966 = unbind_int_98[2]
        getitem_1967 = unbind_int_98[3];  unbind_int_98 = None
        expand_125 = select_52.expand(4, 512, 512, 512) ;  select_52 = None
        _scaled_dot_product_efficient_attention_default_70 = (torch.nn.functional.scaled_dot_product_attention(getitem_1964,getitem_1965,getitem_1966,expand_125,False),) ;  getitem_1964 = getitem_1965 = getitem_1966 = expand_125 = None
        getitem_1968 = _scaled_dot_product_efficient_attention_default_70[0]
        sigmoid_160 = torch.sigmoid(getitem_1967) ;  getitem_1967 = None
        mul_261 = torch.mul(getitem_1968,sigmoid_160) ;  getitem_1968 = sigmoid_160 = None
        view_2102 = mul_261.view(1, 4, 512, 512, 64) ;  mul_261 = None
        permute_1156 = view_2102.permute(0, 2, 3, 1, 4) ;  view_2102 = None
        clone_192 = torch.clone(permute_1156,memory_format = torch.contiguous_format) ;  permute_1156 = None
        _unsafe_view_165 = clone_192.view(1, 512, 512, 256) ;  clone_192 = None
        cat_31 = torch.cat([_unsafe_view_164,_unsafe_view_165],dim = -1) ;  _unsafe_view_164 = _unsafe_view_165 = None
        slice_224 = arg647_1[0:] ;  arg647_1 = None
        unsqueeze_720 = torch.unsqueeze(slice_224,1) ;  slice_224 = None
        mul_262 = torch.mul(arg651_1,unsqueeze_720) ;  arg651_1 = unsqueeze_720 = None
        _to_copy_1190 = mul_262.to(dtype = torch.bfloat16) ;  mul_262 = None
        t_435 = _to_copy_1190.t() ;  _to_copy_1190 = None
        view_2103 = cat_31.view(262144, 512) ;  cat_31 = None
        mm_405 = torch.mm(view_2103,t_435) ;  view_2103 = t_435 = None
        view_2104 = mm_405.view(1, 512, 512, 256) ;  mm_405 = None
        add_210 = torch.add(add_209,view_2104) ;  add_209 = view_2104 = None
        split_tensor_207 = torch.split(add_203,512,dim = -2) 
        getitem_1972 = split_tensor_207[0];  split_tensor_207 = None
        _to_copy_1191 = getitem_1972.to(dtype = torch.float32) ;  getitem_1972 = None
        native_layer_norm_default_246 = (torch.nn.functional.layer_norm(_to_copy_1191,[256],arg638_1,arg639_1,1e-05),) ;  _to_copy_1191 = arg638_1 = arg639_1 = None
        getitem_1973 = native_layer_norm_default_246[0]
        _to_copy_1192 = arg640_1.to(dtype = torch.bfloat16) ;  arg640_1 = None
        _to_copy_1193 = getitem_1973.to(dtype = torch.bfloat16) ;  getitem_1973 = None
        t_436 = _to_copy_1192.t() ;  _to_copy_1192 = None
        view_2105 = _to_copy_1193.view(262144, 256) ;  _to_copy_1193 = None
        mm_406 = torch.mm(view_2105,t_436) ;  view_2105 = t_436 = None
        view_2106 = mm_406.view(1, 512, 512, 1024) ;  mm_406 = None
        split_tensor_208 = torch.split(view_2106,512,dim = -1) ;  view_2106 = None
        getitem_1976 = split_tensor_208[0]
        getitem_1977 = split_tensor_208[1];  split_tensor_208 = None
        silu_56 = torch.nn.functional.silu(getitem_1976) ;  getitem_1976 = None
        mul_263 = torch.mul(silu_56,getitem_1977) ;  silu_56 = getitem_1977 = None
        _to_copy_1194 = arg641_1.to(dtype = torch.bfloat16) ;  arg641_1 = None
        t_437 = _to_copy_1194.t() ;  _to_copy_1194 = None
        view_2108 = mul_263.view(262144, 512) ;  mul_263 = None
        mm_407 = torch.mm(view_2108,t_437) ;  view_2108 = t_437 = None
        view_2109 = mm_407.view(1, 512, 512, 256) ;  mm_407 = None
        add_211 = torch.add(add_210,view_2109) ;  add_210 = view_2109 = None
        _to_copy_1195 = add_207.to(dtype = torch.float32) 
        native_layer_norm_default_247 = (torch.nn.functional.layer_norm(_to_copy_1195,[384],arg656_1,arg657_1,1e-05),) ;  _to_copy_1195 = arg656_1 = arg657_1 = None
        getitem_1978 = native_layer_norm_default_247[0]
        _to_copy_1196 = add_203.to(dtype = torch.float32) ;  add_203 = None
        native_layer_norm_default_248 = (torch.nn.functional.layer_norm(_to_copy_1196,[256],arg658_1,arg659_1,1e-05),) ;  _to_copy_1196 = arg658_1 = arg659_1 = None
        getitem_1981 = native_layer_norm_default_248[0]
        _to_copy_1197 = arg660_1.to(dtype = torch.bfloat16) ;  arg660_1 = None
        _to_copy_1198 = getitem_1981.to(dtype = torch.bfloat16) ;  getitem_1981 = None
        t_438 = _to_copy_1197.t() ;  _to_copy_1197 = None
        view_2110 = _to_copy_1198.view(262144, 256) ;  _to_copy_1198 = None
        mm_408 = torch.mm(view_2110,t_438) ;  view_2110 = t_438 = None
        view_2111 = mm_408.view(1, 512, 512, 16) ;  mm_408 = None
        permute_1157 = view_2111.permute(0, 3, 1, 2) ;  view_2111 = None
        view_2112 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_137 = torch.bitwise_not(view_2112) ;  view_2112 = None
        masked_fill_137 = permute_1157.masked_fill(bitwise_not_137,-10000) ;  permute_1157 = bitwise_not_137 = None
        _to_copy_1199 = getitem_1978.to(dtype = torch.bfloat16) ;  getitem_1978 = None
        _to_copy_1200 = arg662_1.to(dtype = torch.bfloat16) ;  arg662_1 = None
        unsqueeze_721 = torch.unsqueeze(_to_copy_1199,3) ;  _to_copy_1199 = None
        unsqueeze_722 = torch.unsqueeze(unsqueeze_721,4) ;  unsqueeze_721 = None
        unsqueeze_723 = torch.unsqueeze(unsqueeze_722,5) ;  unsqueeze_722 = None
        permute_1158 = unsqueeze_723.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_723 = None
        unsqueeze_724 = torch.unsqueeze(_to_copy_1200,4) ;  _to_copy_1200 = None
        unsqueeze_725 = torch.unsqueeze(unsqueeze_724,5) ;  unsqueeze_724 = None
        permute_1159 = unsqueeze_725.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_725 = None
        permute_1160 = permute_1158.permute(3, 5, 0, 1, 2, 4) ;  permute_1158 = None
        view_2113 = permute_1160.view(1, 512, 384) ;  permute_1160 = None
        permute_1161 = permute_1159.permute(5, 0, 1, 2, 4, 3) ;  permute_1159 = None
        view_2114 = permute_1161.view(1, 384, 1536) ;  permute_1161 = None
        bmm_176 = torch.bmm(view_2113,view_2114) ;  view_2113 = view_2114 = None
        view_2115 = bmm_176.view(512, 1, 4, 1, 16, 24) ;  bmm_176 = None
        permute_1162 = view_2115.permute(2, 3, 4, 0, 5, 1) ;  view_2115 = None
        view_2116 = permute_1162.view(4, 1, 16, 512, 24) ;  permute_1162 = None
        unbind_int_99 = torch.unbind(view_2116) ;  view_2116 = None
        getitem_1984 = unbind_int_99[0]
        getitem_1985 = unbind_int_99[1]
        getitem_1986 = unbind_int_99[2]
        getitem_1987 = unbind_int_99[3];  unbind_int_99 = None
        view_2117 = arg661_1.view(1, 16, 1, 24) ;  arg661_1 = None
        add_212 = torch.add(getitem_1984,view_2117) ;  getitem_1984 = view_2117 = None
        _to_copy_1201 = add_212.to(dtype = torch.bfloat16) ;  add_212 = None
        expand_126 = masked_fill_137.expand(1, 16, 512, 512) ;  masked_fill_137 = None
        _scaled_dot_product_efficient_attention_default_71 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1201,getitem_1985,getitem_1986,expand_126,False),) ;  _to_copy_1201 = getitem_1985 = getitem_1986 = expand_126 = None
        getitem_1988 = _scaled_dot_product_efficient_attention_default_71[0]
        add_213 = torch.add(getitem_1987,1) ;  getitem_1987 = None
        sigmoid_161 = torch.sigmoid(add_213) ;  add_213 = None
        mul_264 = torch.mul(getitem_1988,sigmoid_161) ;  getitem_1988 = sigmoid_161 = None
        _to_copy_1202 = arg663_1.to(dtype = torch.bfloat16) ;  arg663_1 = None
        unsqueeze_726 = torch.unsqueeze(mul_264,4) ;  mul_264 = None
        permute_1163 = unsqueeze_726.permute(0, 2, 4, 3, 1) ;  unsqueeze_726 = None
        unsqueeze_727 = torch.unsqueeze(_to_copy_1202,3) ;  _to_copy_1202 = None
        unsqueeze_728 = torch.unsqueeze(unsqueeze_727,4) ;  unsqueeze_727 = None
        permute_1164 = unsqueeze_728.permute(3, 4, 2, 1, 0) ;  unsqueeze_728 = None
        permute_1165 = permute_1163.permute(1, 3, 4, 0, 2) ;  permute_1163 = None
        clone_193 = torch.clone(permute_1165,memory_format = torch.contiguous_format) ;  permute_1165 = None
        _unsafe_view_166 = clone_193.view(1, 512, 384) ;  clone_193 = None
        permute_1166 = permute_1164.permute(3, 4, 0, 2, 1) ;  permute_1164 = None
        clone_194 = torch.clone(permute_1166,memory_format = torch.contiguous_format) ;  permute_1166 = None
        _unsafe_view_167 = clone_194.view(1, 384, 384) ;  clone_194 = None
        bmm_177 = torch.bmm(_unsafe_view_166,_unsafe_view_167) ;  _unsafe_view_166 = _unsafe_view_167 = None
        view_2118 = bmm_177.view(512, 1, 1, 1, 384) ;  bmm_177 = None
        permute_1167 = view_2118.permute(3, 0, 4, 1, 2) ;  view_2118 = None
        view_2119 = permute_1167.view(1, 512, 384) ;  permute_1167 = None
        unsqueeze_729 = torch.unsqueeze(arg1406_1,-1) 
        mul_265 = torch.mul(view_2119,unsqueeze_729) ;  view_2119 = unsqueeze_729 = None
        add_214 = torch.add(add_207,mul_265) ;  mul_265 = None
        split_tensor_209 = torch.split(add_207,512,dim = -2) ;  add_207 = None
        getitem_1992 = split_tensor_209[0];  split_tensor_209 = None
        _to_copy_1203 = getitem_1992.to(dtype = torch.float32) ;  getitem_1992 = None
        native_layer_norm_default_249 = (torch.nn.functional.layer_norm(_to_copy_1203,[384],arg652_1,arg653_1,1e-05),) ;  _to_copy_1203 = arg652_1 = arg653_1 = None
        getitem_1993 = native_layer_norm_default_249[0]
        _to_copy_1204 = arg654_1.to(dtype = torch.bfloat16) ;  arg654_1 = None
        _to_copy_1205 = getitem_1993.to(dtype = torch.bfloat16) ;  getitem_1993 = None
        t_439 = _to_copy_1204.t() ;  _to_copy_1204 = None
        view_2120 = _to_copy_1205.view(512, 384) ;  _to_copy_1205 = None
        mm_409 = torch.mm(view_2120,t_439) ;  view_2120 = t_439 = None
        view_2121 = mm_409.view(1, 512, 1536) ;  mm_409 = None
        split_tensor_210 = torch.split(view_2121,768,dim = -1) ;  view_2121 = None
        getitem_1996 = split_tensor_210[0]
        getitem_1997 = split_tensor_210[1];  split_tensor_210 = None
        silu_57 = torch.nn.functional.silu(getitem_1996) ;  getitem_1996 = None
        mul_266 = torch.mul(silu_57,getitem_1997) ;  silu_57 = getitem_1997 = None
        _to_copy_1206 = arg655_1.to(dtype = torch.bfloat16) ;  arg655_1 = None
        t_440 = _to_copy_1206.t() ;  _to_copy_1206 = None
        view_2123 = mul_266.view(512, 768) ;  mul_266 = None
        mm_410 = torch.mm(view_2123,t_440) ;  view_2123 = t_440 = None
        view_2124 = mm_410.view(1, 512, 384) ;  mm_410 = None
        add_215 = torch.add(add_214,view_2124) ;  add_214 = view_2124 = None
        _to_copy_1207 = add_211.to(dtype = torch.float32) 
        native_layer_norm_default_250 = (torch.nn.functional.layer_norm(_to_copy_1207,[256],arg668_1,arg669_1,1e-05),) ;  _to_copy_1207 = arg668_1 = arg669_1 = None
        getitem_1998 = native_layer_norm_default_250[0]
        split_with_sizes_default_52 = torch.split(arg671_1,[512,512]) ;  arg671_1 = None
        getitem_2001 = split_with_sizes_default_52[0]
        getitem_2002 = split_with_sizes_default_52[1];  split_with_sizes_default_52 = None
        split_with_sizes_default_53 = torch.split(arg672_1,[512,512,256]) ;  arg672_1 = None
        getitem_2003 = split_with_sizes_default_53[0]
        getitem_2004 = split_with_sizes_default_53[1]
        getitem_2005 = split_with_sizes_default_53[2];  split_with_sizes_default_53 = None
        _to_copy_1208 = getitem_2001.to(dtype = torch.bfloat16) ;  getitem_2001 = None
        _to_copy_1209 = getitem_1998.to(dtype = torch.bfloat16) 
        t_441 = _to_copy_1208.t() ;  _to_copy_1208 = None
        view_2125 = _to_copy_1209.view(262144, 256) ;  _to_copy_1209 = None
        mm_411 = torch.mm(view_2125,t_441) ;  view_2125 = t_441 = None
        view_2126 = mm_411.view(1, 512, 512, 512) ;  mm_411 = None
        _to_copy_1210 = getitem_2003.to(dtype = torch.bfloat16) ;  getitem_2003 = None
        _to_copy_1211 = getitem_1998.to(dtype = torch.bfloat16) 
        t_442 = _to_copy_1210.t() ;  _to_copy_1210 = None
        view_2127 = _to_copy_1211.view(262144, 256) ;  _to_copy_1211 = None
        mm_412 = torch.mm(view_2127,t_442) ;  view_2127 = t_442 = None
        view_2128 = mm_412.view(1, 512, 512, 512) ;  mm_412 = None
        sigmoid_162 = torch.sigmoid(view_2128) ;  view_2128 = None
        mul_267 = torch.mul(view_2126,sigmoid_162) ;  view_2126 = sigmoid_162 = None
        unsqueeze_730 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_138 = torch.bitwise_not(unsqueeze_730) ;  unsqueeze_730 = None
        masked_fill_138 = mul_267.masked_fill(bitwise_not_138,0) ;  mul_267 = bitwise_not_138 = None
        split_tensor_211 = torch.split(masked_fill_138,256,dim = -1) 
        getitem_2008 = split_tensor_211[0]
        unsqueeze_733 = torch.unsqueeze(getitem_2008,4) ;  getitem_2008 = None
        permute_1172 = unsqueeze_733.permute(0, 1, 4, 3, 2) ;  unsqueeze_733 = None
        permute_1173 = permute_1172.permute(3, 1, 4, 0, 2) ;  permute_1172 = None
        view_2131 = permute_1173.view(256, 512, 512) ;  permute_1173 = None
        split_tensor_212 = torch.split(masked_fill_138,256,dim = -1) ;  masked_fill_138 = None
        getitem_2011 = split_tensor_212[1];  split_tensor_212 = None
        unsqueeze_734 = torch.unsqueeze(getitem_2011,4) ;  getitem_2011 = None
        permute_1174 = unsqueeze_734.permute(0, 4, 1, 3, 2) ;  unsqueeze_734 = None
        permute_1175 = permute_1174.permute(3, 4, 0, 2, 1) ;  permute_1174 = None
        view_2132 = permute_1175.view(256, 512, 512) ;  permute_1175 = None
        bmm_178 = torch.bmm(view_2131,view_2132) ;  view_2131 = view_2132 = None
        view_2133 = bmm_178.view(256, 512, 1, 1, 512) ;  bmm_178 = None
        permute_1176 = view_2133.permute(3, 1, 4, 0, 2) ;  view_2133 = None
        view_2134 = permute_1176.view(1, 512, 512, 256) ;  permute_1176 = None
        _to_copy_1212 = getitem_2002.to(dtype = torch.bfloat16) ;  getitem_2002 = None
        _to_copy_1213 = getitem_1998.to(dtype = torch.bfloat16) 
        t_443 = _to_copy_1212.t() ;  _to_copy_1212 = None
        view_2135 = _to_copy_1213.view(262144, 256) ;  _to_copy_1213 = None
        mm_413 = torch.mm(view_2135,t_443) ;  view_2135 = t_443 = None
        view_2136 = mm_413.view(1, 512, 512, 512) ;  mm_413 = None
        _to_copy_1214 = getitem_2004.to(dtype = torch.bfloat16) ;  getitem_2004 = None
        _to_copy_1215 = getitem_1998.to(dtype = torch.bfloat16) 
        t_444 = _to_copy_1214.t() ;  _to_copy_1214 = None
        view_2137 = _to_copy_1215.view(262144, 256) ;  _to_copy_1215 = None
        mm_414 = torch.mm(view_2137,t_444) ;  view_2137 = t_444 = None
        view_2138 = mm_414.view(1, 512, 512, 512) ;  mm_414 = None
        sigmoid_163 = torch.sigmoid(view_2138) ;  view_2138 = None
        mul_268 = torch.mul(view_2136,sigmoid_163) ;  view_2136 = sigmoid_163 = None
        view_2139 = mul_268.view(262144, 512) ;  mul_268 = None
        view_2140 = view_2139.view(1, 512, 512, 512) ;  view_2139 = None
        transpose_52 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_735 = torch.unsqueeze(transpose_52,3) ;  transpose_52 = None
        clone_195 = torch.clone(unsqueeze_735,memory_format = torch.contiguous_format) ;  unsqueeze_735 = None
        bitwise_not_139 = torch.bitwise_not(clone_195) ;  clone_195 = None
        masked_fill_139 = view_2140.masked_fill(bitwise_not_139,0) ;  view_2140 = bitwise_not_139 = None
        view_2141 = masked_fill_139.view(262144, 512) ;  masked_fill_139 = None
        view_2145 = view_2141.view(1, 512, 512, 512) 
        split_tensor_213 = torch.split(view_2145,256,dim = -1) ;  view_2145 = None
        getitem_2014 = split_tensor_213[0]
        unsqueeze_738 = torch.unsqueeze(getitem_2014,4) ;  getitem_2014 = None
        permute_1181 = unsqueeze_738.permute(0, 2, 4, 3, 1) ;  unsqueeze_738 = None
        permute_1182 = permute_1181.permute(3, 1, 4, 0, 2) ;  permute_1181 = None
        view_2146 = permute_1182.view(256, 512, 512) ;  permute_1182 = None
        view_2147 = view_2141.view(1, 512, 512, 512) ;  view_2141 = None
        split_tensor_214 = torch.split(view_2147,256,dim = -1) ;  view_2147 = None
        getitem_2017 = split_tensor_214[1];  split_tensor_214 = None
        unsqueeze_739 = torch.unsqueeze(getitem_2017,4) ;  getitem_2017 = None
        permute_1183 = unsqueeze_739.permute(0, 4, 2, 3, 1) ;  unsqueeze_739 = None
        permute_1184 = permute_1183.permute(3, 4, 0, 2, 1) ;  permute_1183 = None
        view_2148 = permute_1184.view(256, 512, 512) ;  permute_1184 = None
        bmm_179 = torch.bmm(view_2146,view_2148) ;  view_2146 = view_2148 = None
        view_2149 = bmm_179.view(256, 512, 1, 1, 512) ;  bmm_179 = None
        permute_1185 = view_2149.permute(3, 1, 4, 0, 2) ;  view_2149 = None
        view_2150 = permute_1185.view(1, 512, 512, 256) ;  permute_1185 = None
        _to_copy_1216 = view_2134.to(dtype = torch.float32) ;  view_2134 = None
        native_layer_norm_default_251 = (torch.nn.functional.layer_norm(_to_copy_1216,[256],None,None,1e-05),) ;  _to_copy_1216 = None
        getitem_2018 = native_layer_norm_default_251[0]
        _to_copy_1217 = view_2150.to(dtype = torch.float32) ;  view_2150 = None
        native_layer_norm_default_252 = (torch.nn.functional.layer_norm(_to_copy_1217,[256],None,None,1e-05),) ;  _to_copy_1217 = None
        getitem_2021 = native_layer_norm_default_252[0]
        add_216 = torch.add(getitem_2018,getitem_2021) ;  getitem_2018 = getitem_2021 = None
        _to_copy_1218 = arg670_1.to(dtype = torch.bfloat16) ;  arg670_1 = None
        _to_copy_1219 = add_216.to(dtype = torch.bfloat16) ;  add_216 = None
        t_445 = _to_copy_1218.t() ;  _to_copy_1218 = None
        view_2151 = _to_copy_1219.view(262144, 256) ;  _to_copy_1219 = None
        mm_415 = torch.mm(view_2151,t_445) ;  view_2151 = t_445 = None
        view_2152 = mm_415.view(1, 512, 512, 256) ;  mm_415 = None
        _to_copy_1220 = getitem_2005.to(dtype = torch.bfloat16) ;  getitem_2005 = None
        _to_copy_1221 = getitem_1998.to(dtype = torch.bfloat16) ;  getitem_1998 = None
        t_446 = _to_copy_1220.t() ;  _to_copy_1220 = None
        view_2153 = _to_copy_1221.view(262144, 256) ;  _to_copy_1221 = None
        mm_416 = torch.mm(view_2153,t_446) ;  view_2153 = t_446 = None
        view_2154 = mm_416.view(1, 512, 512, 256) ;  mm_416 = None
        sigmoid_164 = torch.sigmoid(view_2154) ;  view_2154 = None
        mul_269 = torch.mul(view_2152,sigmoid_164) ;  view_2152 = sigmoid_164 = None
        add_217 = torch.add(add_211,mul_269) ;  mul_269 = None
        _to_copy_1222 = add_211.to(dtype = torch.float32) 
        native_layer_norm_default_253 = (torch.nn.functional.layer_norm(_to_copy_1222,[256],None,None,1e-05),) ;  _to_copy_1222 = None
        getitem_2024 = native_layer_norm_default_253[0]
        _to_copy_1223 = arg674_1.to(dtype = torch.bfloat16) ;  arg674_1 = None
        _to_copy_1224 = getitem_2024.to(dtype = torch.bfloat16) 
        t_447 = _to_copy_1223.t() ;  _to_copy_1223 = None
        view_2155 = _to_copy_1224.view(262144, 256) ;  _to_copy_1224 = None
        mm_417 = torch.mm(view_2155,t_447) ;  view_2155 = t_447 = None
        view_2156 = mm_417.view(1, 512, 512, 8) ;  mm_417 = None
        view_2157 = view_2156.view(1, 512, 512, 2, 4) ;  view_2156 = None
        permute_1186 = view_2157.permute(0, 3, 4, 1, 2) ;  view_2157 = None
        view_2158 = permute_1186.view(1, 2, 4, 1, 512, 512) ;  permute_1186 = None
        view_2159 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_140 = torch.bitwise_not(view_2159) ;  view_2159 = None
        masked_fill_140 = view_2158.masked_fill(bitwise_not_140,-10000) ;  view_2158 = bitwise_not_140 = None
        view_2160 = masked_fill_140.view(1, 2, 4, 512, 512) ;  masked_fill_140 = None
        permute_1187 = view_2160.permute(1, 0, 2, 3, 4) ;  view_2160 = None
        view_2161 = permute_1187.view(2, 4, 1, 512, 512) ;  permute_1187 = None
        _to_copy_1225 = arg675_1.to(dtype = torch.bfloat16) ;  arg675_1 = None
        _to_copy_1226 = getitem_2024.to(dtype = torch.bfloat16) 
        t_448 = _to_copy_1225.t() ;  _to_copy_1225 = None
        view_2162 = _to_copy_1226.view(262144, 256) ;  _to_copy_1226 = None
        mm_418 = torch.mm(view_2162,t_448) ;  view_2162 = t_448 = None
        view_2163 = mm_418.view(1, 512, 512, 1024) ;  mm_418 = None
        select_53 = torch.select(view_2161,0,0) 
        view_2164 = view_2163.view(1, 512, 512, 4, 4, 64) ;  view_2163 = None
        permute_1188 = view_2164.permute(4, 0, 3, 1, 2, 5) ;  view_2164 = None
        view_2165 = permute_1188.view(4, 4, 512, 512, 64) ;  permute_1188 = None
        unbind_int_100 = torch.unbind(view_2165) ;  view_2165 = None
        getitem_2027 = unbind_int_100[0]
        getitem_2028 = unbind_int_100[1]
        getitem_2029 = unbind_int_100[2]
        getitem_2030 = unbind_int_100[3];  unbind_int_100 = None
        expand_127 = select_53.expand(4, 512, 512, 512) ;  select_53 = None
        _scaled_dot_product_efficient_attention_default_72 = (torch.nn.functional.scaled_dot_product_attention(getitem_2027,getitem_2028,getitem_2029,expand_127,False),) ;  getitem_2027 = getitem_2028 = getitem_2029 = expand_127 = None
        getitem_2031 = _scaled_dot_product_efficient_attention_default_72[0]
        sigmoid_165 = torch.sigmoid(getitem_2030) ;  getitem_2030 = None
        mul_270 = torch.mul(getitem_2031,sigmoid_165) ;  getitem_2031 = sigmoid_165 = None
        view_2166 = mul_270.view(1, 4, 512, 512, 64) ;  mul_270 = None
        permute_1189 = view_2166.permute(0, 2, 3, 1, 4) ;  view_2166 = None
        clone_196 = torch.clone(permute_1189,memory_format = torch.contiguous_format) ;  permute_1189 = None
        _unsafe_view_168 = clone_196.view(1, 512, 512, 256) ;  clone_196 = None
        transpose_53 = torch.transpose(getitem_2024,1,2) ;  getitem_2024 = None
        _to_copy_1227 = arg676_1.to(dtype = torch.bfloat16) ;  arg676_1 = None
        _to_copy_1228 = transpose_53.to(dtype = torch.bfloat16) ;  transpose_53 = None
        t_449 = _to_copy_1227.t() ;  _to_copy_1227 = None
        expand_128 = _to_copy_1228.expand(1, 512, 512, 256) ;  _to_copy_1228 = None
        view_2167 = expand_128.view(512, 512, 256) ;  expand_128 = None
        expand_129 = t_449.expand(1, 512, 256, 1024) ;  t_449 = None
        view_2168 = expand_129.view(512, 256, 1024) ;  expand_129 = None
        bmm_180 = torch.bmm(view_2167,view_2168) ;  view_2167 = view_2168 = None
        view_2169 = bmm_180.view(1, 512, 512, 1024) ;  bmm_180 = None
        select_54 = torch.select(view_2161,0,1) ;  view_2161 = None
        view_2170 = view_2169.view(1, 512, 512, 4, 4, 64) ;  view_2169 = None
        permute_1190 = view_2170.permute(4, 0, 3, 1, 2, 5) ;  view_2170 = None
        view_2171 = permute_1190.view(4, 4, 512, 512, 64) ;  permute_1190 = None
        unbind_int_101 = torch.unbind(view_2171) ;  view_2171 = None
        getitem_2035 = unbind_int_101[0]
        getitem_2036 = unbind_int_101[1]
        getitem_2037 = unbind_int_101[2]
        getitem_2038 = unbind_int_101[3];  unbind_int_101 = None
        expand_130 = select_54.expand(4, 512, 512, 512) ;  select_54 = None
        _scaled_dot_product_efficient_attention_default_73 = (torch.nn.functional.scaled_dot_product_attention(getitem_2035,getitem_2036,getitem_2037,expand_130,False),) ;  getitem_2035 = getitem_2036 = getitem_2037 = expand_130 = None
        getitem_2039 = _scaled_dot_product_efficient_attention_default_73[0]
        sigmoid_166 = torch.sigmoid(getitem_2038) ;  getitem_2038 = None
        mul_271 = torch.mul(getitem_2039,sigmoid_166) ;  getitem_2039 = sigmoid_166 = None
        view_2172 = mul_271.view(1, 4, 512, 512, 64) ;  mul_271 = None
        permute_1191 = view_2172.permute(0, 2, 3, 1, 4) ;  view_2172 = None
        clone_197 = torch.clone(permute_1191,memory_format = torch.contiguous_format) ;  permute_1191 = None
        _unsafe_view_169 = clone_197.view(1, 512, 512, 256) ;  clone_197 = None
        cat_32 = torch.cat([_unsafe_view_168,_unsafe_view_169],dim = -1) ;  _unsafe_view_168 = _unsafe_view_169 = None
        slice_225 = arg673_1[0:] ;  arg673_1 = None
        unsqueeze_740 = torch.unsqueeze(slice_225,1) ;  slice_225 = None
        mul_272 = torch.mul(arg677_1,unsqueeze_740) ;  arg677_1 = unsqueeze_740 = None
        _to_copy_1229 = mul_272.to(dtype = torch.bfloat16) ;  mul_272 = None
        t_450 = _to_copy_1229.t() ;  _to_copy_1229 = None
        view_2173 = cat_32.view(262144, 512) ;  cat_32 = None
        mm_419 = torch.mm(view_2173,t_450) ;  view_2173 = t_450 = None
        view_2174 = mm_419.view(1, 512, 512, 256) ;  mm_419 = None
        add_218 = torch.add(add_217,view_2174) ;  add_217 = view_2174 = None
        split_tensor_215 = torch.split(add_211,512,dim = -2) 
        getitem_2043 = split_tensor_215[0];  split_tensor_215 = None
        _to_copy_1230 = getitem_2043.to(dtype = torch.float32) ;  getitem_2043 = None
        native_layer_norm_default_254 = (torch.nn.functional.layer_norm(_to_copy_1230,[256],arg664_1,arg665_1,1e-05),) ;  _to_copy_1230 = arg664_1 = arg665_1 = None
        getitem_2044 = native_layer_norm_default_254[0]
        _to_copy_1231 = arg666_1.to(dtype = torch.bfloat16) ;  arg666_1 = None
        _to_copy_1232 = getitem_2044.to(dtype = torch.bfloat16) ;  getitem_2044 = None
        t_451 = _to_copy_1231.t() ;  _to_copy_1231 = None
        view_2175 = _to_copy_1232.view(262144, 256) ;  _to_copy_1232 = None
        mm_420 = torch.mm(view_2175,t_451) ;  view_2175 = t_451 = None
        view_2176 = mm_420.view(1, 512, 512, 1024) ;  mm_420 = None
        split_tensor_216 = torch.split(view_2176,512,dim = -1) ;  view_2176 = None
        getitem_2047 = split_tensor_216[0]
        getitem_2048 = split_tensor_216[1];  split_tensor_216 = None
        silu_58 = torch.nn.functional.silu(getitem_2047) ;  getitem_2047 = None
        mul_273 = torch.mul(silu_58,getitem_2048) ;  silu_58 = getitem_2048 = None
        _to_copy_1233 = arg667_1.to(dtype = torch.bfloat16) ;  arg667_1 = None
        t_452 = _to_copy_1233.t() ;  _to_copy_1233 = None
        view_2178 = mul_273.view(262144, 512) ;  mul_273 = None
        mm_421 = torch.mm(view_2178,t_452) ;  view_2178 = t_452 = None
        view_2179 = mm_421.view(1, 512, 512, 256) ;  mm_421 = None
        add_219 = torch.add(add_218,view_2179) ;  add_218 = view_2179 = None
        _to_copy_1234 = add_215.to(dtype = torch.float32) 
        native_layer_norm_default_255 = (torch.nn.functional.layer_norm(_to_copy_1234,[384],arg682_1,arg683_1,1e-05),) ;  _to_copy_1234 = arg682_1 = arg683_1 = None
        getitem_2049 = native_layer_norm_default_255[0]
        _to_copy_1235 = add_211.to(dtype = torch.float32) ;  add_211 = None
        native_layer_norm_default_256 = (torch.nn.functional.layer_norm(_to_copy_1235,[256],arg684_1,arg685_1,1e-05),) ;  _to_copy_1235 = arg684_1 = arg685_1 = None
        getitem_2052 = native_layer_norm_default_256[0]
        _to_copy_1236 = arg686_1.to(dtype = torch.bfloat16) ;  arg686_1 = None
        _to_copy_1237 = getitem_2052.to(dtype = torch.bfloat16) ;  getitem_2052 = None
        t_453 = _to_copy_1236.t() ;  _to_copy_1236 = None
        view_2180 = _to_copy_1237.view(262144, 256) ;  _to_copy_1237 = None
        mm_422 = torch.mm(view_2180,t_453) ;  view_2180 = t_453 = None
        view_2181 = mm_422.view(1, 512, 512, 16) ;  mm_422 = None
        permute_1192 = view_2181.permute(0, 3, 1, 2) ;  view_2181 = None
        view_2182 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_141 = torch.bitwise_not(view_2182) ;  view_2182 = None
        masked_fill_141 = permute_1192.masked_fill(bitwise_not_141,-10000) ;  permute_1192 = bitwise_not_141 = None
        _to_copy_1238 = getitem_2049.to(dtype = torch.bfloat16) ;  getitem_2049 = None
        _to_copy_1239 = arg688_1.to(dtype = torch.bfloat16) ;  arg688_1 = None
        unsqueeze_741 = torch.unsqueeze(_to_copy_1238,3) ;  _to_copy_1238 = None
        unsqueeze_742 = torch.unsqueeze(unsqueeze_741,4) ;  unsqueeze_741 = None
        unsqueeze_743 = torch.unsqueeze(unsqueeze_742,5) ;  unsqueeze_742 = None
        permute_1193 = unsqueeze_743.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_743 = None
        unsqueeze_744 = torch.unsqueeze(_to_copy_1239,4) ;  _to_copy_1239 = None
        unsqueeze_745 = torch.unsqueeze(unsqueeze_744,5) ;  unsqueeze_744 = None
        permute_1194 = unsqueeze_745.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_745 = None
        permute_1195 = permute_1193.permute(3, 5, 0, 1, 2, 4) ;  permute_1193 = None
        view_2183 = permute_1195.view(1, 512, 384) ;  permute_1195 = None
        permute_1196 = permute_1194.permute(5, 0, 1, 2, 4, 3) ;  permute_1194 = None
        view_2184 = permute_1196.view(1, 384, 1536) ;  permute_1196 = None
        bmm_181 = torch.bmm(view_2183,view_2184) ;  view_2183 = view_2184 = None
        view_2185 = bmm_181.view(512, 1, 4, 1, 16, 24) ;  bmm_181 = None
        permute_1197 = view_2185.permute(2, 3, 4, 0, 5, 1) ;  view_2185 = None
        view_2186 = permute_1197.view(4, 1, 16, 512, 24) ;  permute_1197 = None
        unbind_int_102 = torch.unbind(view_2186) ;  view_2186 = None
        getitem_2055 = unbind_int_102[0]
        getitem_2056 = unbind_int_102[1]
        getitem_2057 = unbind_int_102[2]
        getitem_2058 = unbind_int_102[3];  unbind_int_102 = None
        view_2187 = arg687_1.view(1, 16, 1, 24) ;  arg687_1 = None
        add_220 = torch.add(getitem_2055,view_2187) ;  getitem_2055 = view_2187 = None
        _to_copy_1240 = add_220.to(dtype = torch.bfloat16) ;  add_220 = None
        expand_131 = masked_fill_141.expand(1, 16, 512, 512) ;  masked_fill_141 = None
        _scaled_dot_product_efficient_attention_default_74 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1240,getitem_2056,getitem_2057,expand_131,False),) ;  _to_copy_1240 = getitem_2056 = getitem_2057 = expand_131 = None
        getitem_2059 = _scaled_dot_product_efficient_attention_default_74[0]
        add_221 = torch.add(getitem_2058,1) ;  getitem_2058 = None
        sigmoid_167 = torch.sigmoid(add_221) ;  add_221 = None
        mul_274 = torch.mul(getitem_2059,sigmoid_167) ;  getitem_2059 = sigmoid_167 = None
        _to_copy_1241 = arg689_1.to(dtype = torch.bfloat16) ;  arg689_1 = None
        unsqueeze_746 = torch.unsqueeze(mul_274,4) ;  mul_274 = None
        permute_1198 = unsqueeze_746.permute(0, 2, 4, 3, 1) ;  unsqueeze_746 = None
        unsqueeze_747 = torch.unsqueeze(_to_copy_1241,3) ;  _to_copy_1241 = None
        unsqueeze_748 = torch.unsqueeze(unsqueeze_747,4) ;  unsqueeze_747 = None
        permute_1199 = unsqueeze_748.permute(3, 4, 2, 1, 0) ;  unsqueeze_748 = None
        permute_1200 = permute_1198.permute(1, 3, 4, 0, 2) ;  permute_1198 = None
        clone_198 = torch.clone(permute_1200,memory_format = torch.contiguous_format) ;  permute_1200 = None
        _unsafe_view_170 = clone_198.view(1, 512, 384) ;  clone_198 = None
        permute_1201 = permute_1199.permute(3, 4, 0, 2, 1) ;  permute_1199 = None
        clone_199 = torch.clone(permute_1201,memory_format = torch.contiguous_format) ;  permute_1201 = None
        _unsafe_view_171 = clone_199.view(1, 384, 384) ;  clone_199 = None
        bmm_182 = torch.bmm(_unsafe_view_170,_unsafe_view_171) ;  _unsafe_view_170 = _unsafe_view_171 = None
        view_2188 = bmm_182.view(512, 1, 1, 1, 384) ;  bmm_182 = None
        permute_1202 = view_2188.permute(3, 0, 4, 1, 2) ;  view_2188 = None
        view_2189 = permute_1202.view(1, 512, 384) ;  permute_1202 = None
        unsqueeze_749 = torch.unsqueeze(arg1406_1,-1) 
        mul_275 = torch.mul(view_2189,unsqueeze_749) ;  view_2189 = unsqueeze_749 = None
        add_222 = torch.add(add_215,mul_275) ;  mul_275 = None
        split_tensor_217 = torch.split(add_215,512,dim = -2) ;  add_215 = None
        getitem_2063 = split_tensor_217[0];  split_tensor_217 = None
        _to_copy_1242 = getitem_2063.to(dtype = torch.float32) ;  getitem_2063 = None
        native_layer_norm_default_257 = (torch.nn.functional.layer_norm(_to_copy_1242,[384],arg678_1,arg679_1,1e-05),) ;  _to_copy_1242 = arg678_1 = arg679_1 = None
        getitem_2064 = native_layer_norm_default_257[0]
        _to_copy_1243 = arg680_1.to(dtype = torch.bfloat16) ;  arg680_1 = None
        _to_copy_1244 = getitem_2064.to(dtype = torch.bfloat16) ;  getitem_2064 = None
        t_454 = _to_copy_1243.t() ;  _to_copy_1243 = None
        view_2190 = _to_copy_1244.view(512, 384) ;  _to_copy_1244 = None
        mm_423 = torch.mm(view_2190,t_454) ;  view_2190 = t_454 = None
        view_2191 = mm_423.view(1, 512, 1536) ;  mm_423 = None
        split_tensor_218 = torch.split(view_2191,768,dim = -1) ;  view_2191 = None
        getitem_2067 = split_tensor_218[0]
        getitem_2068 = split_tensor_218[1];  split_tensor_218 = None
        silu_59 = torch.nn.functional.silu(getitem_2067) ;  getitem_2067 = None
        mul_276 = torch.mul(silu_59,getitem_2068) ;  silu_59 = getitem_2068 = None
        _to_copy_1245 = arg681_1.to(dtype = torch.bfloat16) ;  arg681_1 = None
        t_455 = _to_copy_1245.t() ;  _to_copy_1245 = None
        view_2193 = mul_276.view(512, 768) ;  mul_276 = None
        mm_424 = torch.mm(view_2193,t_455) ;  view_2193 = t_455 = None
        view_2194 = mm_424.view(1, 512, 384) ;  mm_424 = None
        add_223 = torch.add(add_222,view_2194) ;  add_222 = view_2194 = None
        _to_copy_1246 = add_219.to(dtype = torch.float32) 
        native_layer_norm_default_258 = (torch.nn.functional.layer_norm(_to_copy_1246,[256],arg694_1,arg695_1,1e-05),) ;  _to_copy_1246 = arg694_1 = arg695_1 = None
        getitem_2069 = native_layer_norm_default_258[0]
        split_with_sizes_default_54 = torch.split(arg697_1,[512,512]) ;  arg697_1 = None
        getitem_2072 = split_with_sizes_default_54[0]
        getitem_2073 = split_with_sizes_default_54[1];  split_with_sizes_default_54 = None
        split_with_sizes_default_55 = torch.split(arg698_1,[512,512,256]) ;  arg698_1 = None
        getitem_2074 = split_with_sizes_default_55[0]
        getitem_2075 = split_with_sizes_default_55[1]
        getitem_2076 = split_with_sizes_default_55[2];  split_with_sizes_default_55 = None
        _to_copy_1247 = getitem_2072.to(dtype = torch.bfloat16) ;  getitem_2072 = None
        _to_copy_1248 = getitem_2069.to(dtype = torch.bfloat16) 
        t_456 = _to_copy_1247.t() ;  _to_copy_1247 = None
        view_2195 = _to_copy_1248.view(262144, 256) ;  _to_copy_1248 = None
        mm_425 = torch.mm(view_2195,t_456) ;  view_2195 = t_456 = None
        view_2196 = mm_425.view(1, 512, 512, 512) ;  mm_425 = None
        _to_copy_1249 = getitem_2074.to(dtype = torch.bfloat16) ;  getitem_2074 = None
        _to_copy_1250 = getitem_2069.to(dtype = torch.bfloat16) 
        t_457 = _to_copy_1249.t() ;  _to_copy_1249 = None
        view_2197 = _to_copy_1250.view(262144, 256) ;  _to_copy_1250 = None
        mm_426 = torch.mm(view_2197,t_457) ;  view_2197 = t_457 = None
        view_2198 = mm_426.view(1, 512, 512, 512) ;  mm_426 = None
        sigmoid_168 = torch.sigmoid(view_2198) ;  view_2198 = None
        mul_277 = torch.mul(view_2196,sigmoid_168) ;  view_2196 = sigmoid_168 = None
        unsqueeze_750 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_142 = torch.bitwise_not(unsqueeze_750) ;  unsqueeze_750 = None
        masked_fill_142 = mul_277.masked_fill(bitwise_not_142,0) ;  mul_277 = bitwise_not_142 = None
        split_tensor_219 = torch.split(masked_fill_142,256,dim = -1) 
        getitem_2079 = split_tensor_219[0]
        unsqueeze_753 = torch.unsqueeze(getitem_2079,4) ;  getitem_2079 = None
        permute_1207 = unsqueeze_753.permute(0, 1, 4, 3, 2) ;  unsqueeze_753 = None
        permute_1208 = permute_1207.permute(3, 1, 4, 0, 2) ;  permute_1207 = None
        view_2201 = permute_1208.view(256, 512, 512) ;  permute_1208 = None
        split_tensor_220 = torch.split(masked_fill_142,256,dim = -1) ;  masked_fill_142 = None
        getitem_2082 = split_tensor_220[1];  split_tensor_220 = None
        unsqueeze_754 = torch.unsqueeze(getitem_2082,4) ;  getitem_2082 = None
        permute_1209 = unsqueeze_754.permute(0, 4, 1, 3, 2) ;  unsqueeze_754 = None
        permute_1210 = permute_1209.permute(3, 4, 0, 2, 1) ;  permute_1209 = None
        view_2202 = permute_1210.view(256, 512, 512) ;  permute_1210 = None
        bmm_183 = torch.bmm(view_2201,view_2202) ;  view_2201 = view_2202 = None
        view_2203 = bmm_183.view(256, 512, 1, 1, 512) ;  bmm_183 = None
        permute_1211 = view_2203.permute(3, 1, 4, 0, 2) ;  view_2203 = None
        view_2204 = permute_1211.view(1, 512, 512, 256) ;  permute_1211 = None
        _to_copy_1251 = getitem_2073.to(dtype = torch.bfloat16) ;  getitem_2073 = None
        _to_copy_1252 = getitem_2069.to(dtype = torch.bfloat16) 
        t_458 = _to_copy_1251.t() ;  _to_copy_1251 = None
        view_2205 = _to_copy_1252.view(262144, 256) ;  _to_copy_1252 = None
        mm_427 = torch.mm(view_2205,t_458) ;  view_2205 = t_458 = None
        view_2206 = mm_427.view(1, 512, 512, 512) ;  mm_427 = None
        _to_copy_1253 = getitem_2075.to(dtype = torch.bfloat16) ;  getitem_2075 = None
        _to_copy_1254 = getitem_2069.to(dtype = torch.bfloat16) 
        t_459 = _to_copy_1253.t() ;  _to_copy_1253 = None
        view_2207 = _to_copy_1254.view(262144, 256) ;  _to_copy_1254 = None
        mm_428 = torch.mm(view_2207,t_459) ;  view_2207 = t_459 = None
        view_2208 = mm_428.view(1, 512, 512, 512) ;  mm_428 = None
        sigmoid_169 = torch.sigmoid(view_2208) ;  view_2208 = None
        mul_278 = torch.mul(view_2206,sigmoid_169) ;  view_2206 = sigmoid_169 = None
        view_2209 = mul_278.view(262144, 512) ;  mul_278 = None
        view_2210 = view_2209.view(1, 512, 512, 512) ;  view_2209 = None
        transpose_54 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_755 = torch.unsqueeze(transpose_54,3) ;  transpose_54 = None
        clone_200 = torch.clone(unsqueeze_755,memory_format = torch.contiguous_format) ;  unsqueeze_755 = None
        bitwise_not_143 = torch.bitwise_not(clone_200) ;  clone_200 = None
        masked_fill_143 = view_2210.masked_fill(bitwise_not_143,0) ;  view_2210 = bitwise_not_143 = None
        view_2211 = masked_fill_143.view(262144, 512) ;  masked_fill_143 = None
        view_2215 = view_2211.view(1, 512, 512, 512) 
        split_tensor_221 = torch.split(view_2215,256,dim = -1) ;  view_2215 = None
        getitem_2085 = split_tensor_221[0]
        unsqueeze_758 = torch.unsqueeze(getitem_2085,4) ;  getitem_2085 = None
        permute_1216 = unsqueeze_758.permute(0, 2, 4, 3, 1) ;  unsqueeze_758 = None
        permute_1217 = permute_1216.permute(3, 1, 4, 0, 2) ;  permute_1216 = None
        view_2216 = permute_1217.view(256, 512, 512) ;  permute_1217 = None
        view_2217 = view_2211.view(1, 512, 512, 512) ;  view_2211 = None
        split_tensor_222 = torch.split(view_2217,256,dim = -1) ;  view_2217 = None
        getitem_2088 = split_tensor_222[1];  split_tensor_222 = None
        unsqueeze_759 = torch.unsqueeze(getitem_2088,4) ;  getitem_2088 = None
        permute_1218 = unsqueeze_759.permute(0, 4, 2, 3, 1) ;  unsqueeze_759 = None
        permute_1219 = permute_1218.permute(3, 4, 0, 2, 1) ;  permute_1218 = None
        view_2218 = permute_1219.view(256, 512, 512) ;  permute_1219 = None
        bmm_184 = torch.bmm(view_2216,view_2218) ;  view_2216 = view_2218 = None
        view_2219 = bmm_184.view(256, 512, 1, 1, 512) ;  bmm_184 = None
        permute_1220 = view_2219.permute(3, 1, 4, 0, 2) ;  view_2219 = None
        view_2220 = permute_1220.view(1, 512, 512, 256) ;  permute_1220 = None
        _to_copy_1255 = view_2204.to(dtype = torch.float32) ;  view_2204 = None
        native_layer_norm_default_259 = (torch.nn.functional.layer_norm(_to_copy_1255,[256],None,None,1e-05),) ;  _to_copy_1255 = None
        getitem_2089 = native_layer_norm_default_259[0]
        _to_copy_1256 = view_2220.to(dtype = torch.float32) ;  view_2220 = None
        native_layer_norm_default_260 = (torch.nn.functional.layer_norm(_to_copy_1256,[256],None,None,1e-05),) ;  _to_copy_1256 = None
        getitem_2092 = native_layer_norm_default_260[0]
        add_224 = torch.add(getitem_2089,getitem_2092) ;  getitem_2089 = getitem_2092 = None
        _to_copy_1257 = arg696_1.to(dtype = torch.bfloat16) ;  arg696_1 = None
        _to_copy_1258 = add_224.to(dtype = torch.bfloat16) ;  add_224 = None
        t_460 = _to_copy_1257.t() ;  _to_copy_1257 = None
        view_2221 = _to_copy_1258.view(262144, 256) ;  _to_copy_1258 = None
        mm_429 = torch.mm(view_2221,t_460) ;  view_2221 = t_460 = None
        view_2222 = mm_429.view(1, 512, 512, 256) ;  mm_429 = None
        _to_copy_1259 = getitem_2076.to(dtype = torch.bfloat16) ;  getitem_2076 = None
        _to_copy_1260 = getitem_2069.to(dtype = torch.bfloat16) ;  getitem_2069 = None
        t_461 = _to_copy_1259.t() ;  _to_copy_1259 = None
        view_2223 = _to_copy_1260.view(262144, 256) ;  _to_copy_1260 = None
        mm_430 = torch.mm(view_2223,t_461) ;  view_2223 = t_461 = None
        view_2224 = mm_430.view(1, 512, 512, 256) ;  mm_430 = None
        sigmoid_170 = torch.sigmoid(view_2224) ;  view_2224 = None
        mul_279 = torch.mul(view_2222,sigmoid_170) ;  view_2222 = sigmoid_170 = None
        add_225 = torch.add(add_219,mul_279) ;  mul_279 = None
        _to_copy_1261 = add_219.to(dtype = torch.float32) 
        native_layer_norm_default_261 = (torch.nn.functional.layer_norm(_to_copy_1261,[256],None,None,1e-05),) ;  _to_copy_1261 = None
        getitem_2095 = native_layer_norm_default_261[0]
        _to_copy_1262 = arg700_1.to(dtype = torch.bfloat16) ;  arg700_1 = None
        _to_copy_1263 = getitem_2095.to(dtype = torch.bfloat16) 
        t_462 = _to_copy_1262.t() ;  _to_copy_1262 = None
        view_2225 = _to_copy_1263.view(262144, 256) ;  _to_copy_1263 = None
        mm_431 = torch.mm(view_2225,t_462) ;  view_2225 = t_462 = None
        view_2226 = mm_431.view(1, 512, 512, 8) ;  mm_431 = None
        view_2227 = view_2226.view(1, 512, 512, 2, 4) ;  view_2226 = None
        permute_1221 = view_2227.permute(0, 3, 4, 1, 2) ;  view_2227 = None
        view_2228 = permute_1221.view(1, 2, 4, 1, 512, 512) ;  permute_1221 = None
        view_2229 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_144 = torch.bitwise_not(view_2229) ;  view_2229 = None
        masked_fill_144 = view_2228.masked_fill(bitwise_not_144,-10000) ;  view_2228 = bitwise_not_144 = None
        view_2230 = masked_fill_144.view(1, 2, 4, 512, 512) ;  masked_fill_144 = None
        permute_1222 = view_2230.permute(1, 0, 2, 3, 4) ;  view_2230 = None
        view_2231 = permute_1222.view(2, 4, 1, 512, 512) ;  permute_1222 = None
        _to_copy_1264 = arg701_1.to(dtype = torch.bfloat16) ;  arg701_1 = None
        _to_copy_1265 = getitem_2095.to(dtype = torch.bfloat16) 
        t_463 = _to_copy_1264.t() ;  _to_copy_1264 = None
        view_2232 = _to_copy_1265.view(262144, 256) ;  _to_copy_1265 = None
        mm_432 = torch.mm(view_2232,t_463) ;  view_2232 = t_463 = None
        view_2233 = mm_432.view(1, 512, 512, 1024) ;  mm_432 = None
        select_55 = torch.select(view_2231,0,0) 
        view_2234 = view_2233.view(1, 512, 512, 4, 4, 64) ;  view_2233 = None
        permute_1223 = view_2234.permute(4, 0, 3, 1, 2, 5) ;  view_2234 = None
        view_2235 = permute_1223.view(4, 4, 512, 512, 64) ;  permute_1223 = None
        unbind_int_103 = torch.unbind(view_2235) ;  view_2235 = None
        getitem_2098 = unbind_int_103[0]
        getitem_2099 = unbind_int_103[1]
        getitem_2100 = unbind_int_103[2]
        getitem_2101 = unbind_int_103[3];  unbind_int_103 = None
        expand_132 = select_55.expand(4, 512, 512, 512) ;  select_55 = None
        _scaled_dot_product_efficient_attention_default_75 = (torch.nn.functional.scaled_dot_product_attention(getitem_2098,getitem_2099,getitem_2100,expand_132,False),) ;  getitem_2098 = getitem_2099 = getitem_2100 = expand_132 = None
        getitem_2102 = _scaled_dot_product_efficient_attention_default_75[0]
        sigmoid_171 = torch.sigmoid(getitem_2101) ;  getitem_2101 = None
        mul_280 = torch.mul(getitem_2102,sigmoid_171) ;  getitem_2102 = sigmoid_171 = None
        view_2236 = mul_280.view(1, 4, 512, 512, 64) ;  mul_280 = None
        permute_1224 = view_2236.permute(0, 2, 3, 1, 4) ;  view_2236 = None
        clone_201 = torch.clone(permute_1224,memory_format = torch.contiguous_format) ;  permute_1224 = None
        _unsafe_view_172 = clone_201.view(1, 512, 512, 256) ;  clone_201 = None
        transpose_55 = torch.transpose(getitem_2095,1,2) ;  getitem_2095 = None
        _to_copy_1266 = arg702_1.to(dtype = torch.bfloat16) ;  arg702_1 = None
        _to_copy_1267 = transpose_55.to(dtype = torch.bfloat16) ;  transpose_55 = None
        t_464 = _to_copy_1266.t() ;  _to_copy_1266 = None
        expand_133 = _to_copy_1267.expand(1, 512, 512, 256) ;  _to_copy_1267 = None
        view_2237 = expand_133.view(512, 512, 256) ;  expand_133 = None
        expand_134 = t_464.expand(1, 512, 256, 1024) ;  t_464 = None
        view_2238 = expand_134.view(512, 256, 1024) ;  expand_134 = None
        bmm_185 = torch.bmm(view_2237,view_2238) ;  view_2237 = view_2238 = None
        view_2239 = bmm_185.view(1, 512, 512, 1024) ;  bmm_185 = None
        select_56 = torch.select(view_2231,0,1) ;  view_2231 = None
        view_2240 = view_2239.view(1, 512, 512, 4, 4, 64) ;  view_2239 = None
        permute_1225 = view_2240.permute(4, 0, 3, 1, 2, 5) ;  view_2240 = None
        view_2241 = permute_1225.view(4, 4, 512, 512, 64) ;  permute_1225 = None
        unbind_int_104 = torch.unbind(view_2241) ;  view_2241 = None
        getitem_2106 = unbind_int_104[0]
        getitem_2107 = unbind_int_104[1]
        getitem_2108 = unbind_int_104[2]
        getitem_2109 = unbind_int_104[3];  unbind_int_104 = None
        expand_135 = select_56.expand(4, 512, 512, 512) ;  select_56 = None
        _scaled_dot_product_efficient_attention_default_76 = (torch.nn.functional.scaled_dot_product_attention(getitem_2106,getitem_2107,getitem_2108,expand_135,False),) ;  getitem_2106 = getitem_2107 = getitem_2108 = expand_135 = None
        getitem_2110 = _scaled_dot_product_efficient_attention_default_76[0]
        sigmoid_172 = torch.sigmoid(getitem_2109) ;  getitem_2109 = None
        mul_281 = torch.mul(getitem_2110,sigmoid_172) ;  getitem_2110 = sigmoid_172 = None
        view_2242 = mul_281.view(1, 4, 512, 512, 64) ;  mul_281 = None
        permute_1226 = view_2242.permute(0, 2, 3, 1, 4) ;  view_2242 = None
        clone_202 = torch.clone(permute_1226,memory_format = torch.contiguous_format) ;  permute_1226 = None
        _unsafe_view_173 = clone_202.view(1, 512, 512, 256) ;  clone_202 = None
        cat_33 = torch.cat([_unsafe_view_172,_unsafe_view_173],dim = -1) ;  _unsafe_view_172 = _unsafe_view_173 = None
        slice_226 = arg699_1[0:] ;  arg699_1 = None
        unsqueeze_760 = torch.unsqueeze(slice_226,1) ;  slice_226 = None
        mul_282 = torch.mul(arg703_1,unsqueeze_760) ;  arg703_1 = unsqueeze_760 = None
        _to_copy_1268 = mul_282.to(dtype = torch.bfloat16) ;  mul_282 = None
        t_465 = _to_copy_1268.t() ;  _to_copy_1268 = None
        view_2243 = cat_33.view(262144, 512) ;  cat_33 = None
        mm_433 = torch.mm(view_2243,t_465) ;  view_2243 = t_465 = None
        view_2244 = mm_433.view(1, 512, 512, 256) ;  mm_433 = None
        add_226 = torch.add(add_225,view_2244) ;  add_225 = view_2244 = None
        split_tensor_223 = torch.split(add_219,512,dim = -2) 
        getitem_2114 = split_tensor_223[0];  split_tensor_223 = None
        _to_copy_1269 = getitem_2114.to(dtype = torch.float32) ;  getitem_2114 = None
        native_layer_norm_default_262 = (torch.nn.functional.layer_norm(_to_copy_1269,[256],arg690_1,arg691_1,1e-05),) ;  _to_copy_1269 = arg690_1 = arg691_1 = None
        getitem_2115 = native_layer_norm_default_262[0]
        _to_copy_1270 = arg692_1.to(dtype = torch.bfloat16) ;  arg692_1 = None
        _to_copy_1271 = getitem_2115.to(dtype = torch.bfloat16) ;  getitem_2115 = None
        t_466 = _to_copy_1270.t() ;  _to_copy_1270 = None
        view_2245 = _to_copy_1271.view(262144, 256) ;  _to_copy_1271 = None
        mm_434 = torch.mm(view_2245,t_466) ;  view_2245 = t_466 = None
        view_2246 = mm_434.view(1, 512, 512, 1024) ;  mm_434 = None
        split_tensor_224 = torch.split(view_2246,512,dim = -1) ;  view_2246 = None
        getitem_2118 = split_tensor_224[0]
        getitem_2119 = split_tensor_224[1];  split_tensor_224 = None
        silu_60 = torch.nn.functional.silu(getitem_2118) ;  getitem_2118 = None
        mul_283 = torch.mul(silu_60,getitem_2119) ;  silu_60 = getitem_2119 = None
        _to_copy_1272 = arg693_1.to(dtype = torch.bfloat16) ;  arg693_1 = None
        t_467 = _to_copy_1272.t() ;  _to_copy_1272 = None
        view_2248 = mul_283.view(262144, 512) ;  mul_283 = None
        mm_435 = torch.mm(view_2248,t_467) ;  view_2248 = t_467 = None
        view_2249 = mm_435.view(1, 512, 512, 256) ;  mm_435 = None
        add_227 = torch.add(add_226,view_2249) ;  add_226 = view_2249 = None
        _to_copy_1273 = add_223.to(dtype = torch.float32) 
        native_layer_norm_default_263 = (torch.nn.functional.layer_norm(_to_copy_1273,[384],arg708_1,arg709_1,1e-05),) ;  _to_copy_1273 = arg708_1 = arg709_1 = None
        getitem_2120 = native_layer_norm_default_263[0]
        _to_copy_1274 = add_219.to(dtype = torch.float32) ;  add_219 = None
        native_layer_norm_default_264 = (torch.nn.functional.layer_norm(_to_copy_1274,[256],arg710_1,arg711_1,1e-05),) ;  _to_copy_1274 = arg710_1 = arg711_1 = None
        getitem_2123 = native_layer_norm_default_264[0]
        _to_copy_1275 = arg712_1.to(dtype = torch.bfloat16) ;  arg712_1 = None
        _to_copy_1276 = getitem_2123.to(dtype = torch.bfloat16) ;  getitem_2123 = None
        t_468 = _to_copy_1275.t() ;  _to_copy_1275 = None
        view_2250 = _to_copy_1276.view(262144, 256) ;  _to_copy_1276 = None
        mm_436 = torch.mm(view_2250,t_468) ;  view_2250 = t_468 = None
        view_2251 = mm_436.view(1, 512, 512, 16) ;  mm_436 = None
        permute_1227 = view_2251.permute(0, 3, 1, 2) ;  view_2251 = None
        view_2252 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_145 = torch.bitwise_not(view_2252) ;  view_2252 = None
        masked_fill_145 = permute_1227.masked_fill(bitwise_not_145,-10000) ;  permute_1227 = bitwise_not_145 = None
        _to_copy_1277 = getitem_2120.to(dtype = torch.bfloat16) ;  getitem_2120 = None
        _to_copy_1278 = arg714_1.to(dtype = torch.bfloat16) ;  arg714_1 = None
        unsqueeze_761 = torch.unsqueeze(_to_copy_1277,3) ;  _to_copy_1277 = None
        unsqueeze_762 = torch.unsqueeze(unsqueeze_761,4) ;  unsqueeze_761 = None
        unsqueeze_763 = torch.unsqueeze(unsqueeze_762,5) ;  unsqueeze_762 = None
        permute_1228 = unsqueeze_763.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_763 = None
        unsqueeze_764 = torch.unsqueeze(_to_copy_1278,4) ;  _to_copy_1278 = None
        unsqueeze_765 = torch.unsqueeze(unsqueeze_764,5) ;  unsqueeze_764 = None
        permute_1229 = unsqueeze_765.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_765 = None
        permute_1230 = permute_1228.permute(3, 5, 0, 1, 2, 4) ;  permute_1228 = None
        view_2253 = permute_1230.view(1, 512, 384) ;  permute_1230 = None
        permute_1231 = permute_1229.permute(5, 0, 1, 2, 4, 3) ;  permute_1229 = None
        view_2254 = permute_1231.view(1, 384, 1536) ;  permute_1231 = None
        bmm_186 = torch.bmm(view_2253,view_2254) ;  view_2253 = view_2254 = None
        view_2255 = bmm_186.view(512, 1, 4, 1, 16, 24) ;  bmm_186 = None
        permute_1232 = view_2255.permute(2, 3, 4, 0, 5, 1) ;  view_2255 = None
        view_2256 = permute_1232.view(4, 1, 16, 512, 24) ;  permute_1232 = None
        unbind_int_105 = torch.unbind(view_2256) ;  view_2256 = None
        getitem_2126 = unbind_int_105[0]
        getitem_2127 = unbind_int_105[1]
        getitem_2128 = unbind_int_105[2]
        getitem_2129 = unbind_int_105[3];  unbind_int_105 = None
        view_2257 = arg713_1.view(1, 16, 1, 24) ;  arg713_1 = None
        add_228 = torch.add(getitem_2126,view_2257) ;  getitem_2126 = view_2257 = None
        _to_copy_1279 = add_228.to(dtype = torch.bfloat16) ;  add_228 = None
        expand_136 = masked_fill_145.expand(1, 16, 512, 512) ;  masked_fill_145 = None
        _scaled_dot_product_efficient_attention_default_77 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1279,getitem_2127,getitem_2128,expand_136,False),) ;  _to_copy_1279 = getitem_2127 = getitem_2128 = expand_136 = None
        getitem_2130 = _scaled_dot_product_efficient_attention_default_77[0]
        add_229 = torch.add(getitem_2129,1) ;  getitem_2129 = None
        sigmoid_173 = torch.sigmoid(add_229) ;  add_229 = None
        mul_284 = torch.mul(getitem_2130,sigmoid_173) ;  getitem_2130 = sigmoid_173 = None
        _to_copy_1280 = arg715_1.to(dtype = torch.bfloat16) ;  arg715_1 = None
        unsqueeze_766 = torch.unsqueeze(mul_284,4) ;  mul_284 = None
        permute_1233 = unsqueeze_766.permute(0, 2, 4, 3, 1) ;  unsqueeze_766 = None
        unsqueeze_767 = torch.unsqueeze(_to_copy_1280,3) ;  _to_copy_1280 = None
        unsqueeze_768 = torch.unsqueeze(unsqueeze_767,4) ;  unsqueeze_767 = None
        permute_1234 = unsqueeze_768.permute(3, 4, 2, 1, 0) ;  unsqueeze_768 = None
        permute_1235 = permute_1233.permute(1, 3, 4, 0, 2) ;  permute_1233 = None
        clone_203 = torch.clone(permute_1235,memory_format = torch.contiguous_format) ;  permute_1235 = None
        _unsafe_view_174 = clone_203.view(1, 512, 384) ;  clone_203 = None
        permute_1236 = permute_1234.permute(3, 4, 0, 2, 1) ;  permute_1234 = None
        clone_204 = torch.clone(permute_1236,memory_format = torch.contiguous_format) ;  permute_1236 = None
        _unsafe_view_175 = clone_204.view(1, 384, 384) ;  clone_204 = None
        bmm_187 = torch.bmm(_unsafe_view_174,_unsafe_view_175) ;  _unsafe_view_174 = _unsafe_view_175 = None
        view_2258 = bmm_187.view(512, 1, 1, 1, 384) ;  bmm_187 = None
        permute_1237 = view_2258.permute(3, 0, 4, 1, 2) ;  view_2258 = None
        view_2259 = permute_1237.view(1, 512, 384) ;  permute_1237 = None
        unsqueeze_769 = torch.unsqueeze(arg1406_1,-1) 
        mul_285 = torch.mul(view_2259,unsqueeze_769) ;  view_2259 = unsqueeze_769 = None
        add_230 = torch.add(add_223,mul_285) ;  mul_285 = None
        split_tensor_225 = torch.split(add_223,512,dim = -2) ;  add_223 = None
        getitem_2134 = split_tensor_225[0];  split_tensor_225 = None
        _to_copy_1281 = getitem_2134.to(dtype = torch.float32) ;  getitem_2134 = None
        native_layer_norm_default_265 = (torch.nn.functional.layer_norm(_to_copy_1281,[384],arg704_1,arg705_1,1e-05),) ;  _to_copy_1281 = arg704_1 = arg705_1 = None
        getitem_2135 = native_layer_norm_default_265[0]
        _to_copy_1282 = arg706_1.to(dtype = torch.bfloat16) ;  arg706_1 = None
        _to_copy_1283 = getitem_2135.to(dtype = torch.bfloat16) ;  getitem_2135 = None
        t_469 = _to_copy_1282.t() ;  _to_copy_1282 = None
        view_2260 = _to_copy_1283.view(512, 384) ;  _to_copy_1283 = None
        mm_437 = torch.mm(view_2260,t_469) ;  view_2260 = t_469 = None
        view_2261 = mm_437.view(1, 512, 1536) ;  mm_437 = None
        split_tensor_226 = torch.split(view_2261,768,dim = -1) ;  view_2261 = None
        getitem_2138 = split_tensor_226[0]
        getitem_2139 = split_tensor_226[1];  split_tensor_226 = None
        silu_61 = torch.nn.functional.silu(getitem_2138) ;  getitem_2138 = None
        mul_286 = torch.mul(silu_61,getitem_2139) ;  silu_61 = getitem_2139 = None
        _to_copy_1284 = arg707_1.to(dtype = torch.bfloat16) ;  arg707_1 = None
        t_470 = _to_copy_1284.t() ;  _to_copy_1284 = None
        view_2263 = mul_286.view(512, 768) ;  mul_286 = None
        mm_438 = torch.mm(view_2263,t_470) ;  view_2263 = t_470 = None
        view_2264 = mm_438.view(1, 512, 384) ;  mm_438 = None
        add_231 = torch.add(add_230,view_2264) ;  add_230 = view_2264 = None
        _to_copy_1285 = add_227.to(dtype = torch.float32) 
        native_layer_norm_default_266 = (torch.nn.functional.layer_norm(_to_copy_1285,[256],arg720_1,arg721_1,1e-05),) ;  _to_copy_1285 = arg720_1 = arg721_1 = None
        getitem_2140 = native_layer_norm_default_266[0]
        split_with_sizes_default_56 = torch.split(arg723_1,[512,512]) ;  arg723_1 = None
        getitem_2143 = split_with_sizes_default_56[0]
        getitem_2144 = split_with_sizes_default_56[1];  split_with_sizes_default_56 = None
        split_with_sizes_default_57 = torch.split(arg724_1,[512,512,256]) ;  arg724_1 = None
        getitem_2145 = split_with_sizes_default_57[0]
        getitem_2146 = split_with_sizes_default_57[1]
        getitem_2147 = split_with_sizes_default_57[2];  split_with_sizes_default_57 = None
        _to_copy_1286 = getitem_2143.to(dtype = torch.bfloat16) ;  getitem_2143 = None
        _to_copy_1287 = getitem_2140.to(dtype = torch.bfloat16) 
        t_471 = _to_copy_1286.t() ;  _to_copy_1286 = None
        view_2265 = _to_copy_1287.view(262144, 256) ;  _to_copy_1287 = None
        mm_439 = torch.mm(view_2265,t_471) ;  view_2265 = t_471 = None
        view_2266 = mm_439.view(1, 512, 512, 512) ;  mm_439 = None
        _to_copy_1288 = getitem_2145.to(dtype = torch.bfloat16) ;  getitem_2145 = None
        _to_copy_1289 = getitem_2140.to(dtype = torch.bfloat16) 
        t_472 = _to_copy_1288.t() ;  _to_copy_1288 = None
        view_2267 = _to_copy_1289.view(262144, 256) ;  _to_copy_1289 = None
        mm_440 = torch.mm(view_2267,t_472) ;  view_2267 = t_472 = None
        view_2268 = mm_440.view(1, 512, 512, 512) ;  mm_440 = None
        sigmoid_174 = torch.sigmoid(view_2268) ;  view_2268 = None
        mul_287 = torch.mul(view_2266,sigmoid_174) ;  view_2266 = sigmoid_174 = None
        unsqueeze_770 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_146 = torch.bitwise_not(unsqueeze_770) ;  unsqueeze_770 = None
        masked_fill_146 = mul_287.masked_fill(bitwise_not_146,0) ;  mul_287 = bitwise_not_146 = None
        split_tensor_227 = torch.split(masked_fill_146,256,dim = -1) 
        getitem_2150 = split_tensor_227[0]
        unsqueeze_773 = torch.unsqueeze(getitem_2150,4) ;  getitem_2150 = None
        permute_1242 = unsqueeze_773.permute(0, 1, 4, 3, 2) ;  unsqueeze_773 = None
        permute_1243 = permute_1242.permute(3, 1, 4, 0, 2) ;  permute_1242 = None
        view_2271 = permute_1243.view(256, 512, 512) ;  permute_1243 = None
        split_tensor_228 = torch.split(masked_fill_146,256,dim = -1) ;  masked_fill_146 = None
        getitem_2153 = split_tensor_228[1];  split_tensor_228 = None
        unsqueeze_774 = torch.unsqueeze(getitem_2153,4) ;  getitem_2153 = None
        permute_1244 = unsqueeze_774.permute(0, 4, 1, 3, 2) ;  unsqueeze_774 = None
        permute_1245 = permute_1244.permute(3, 4, 0, 2, 1) ;  permute_1244 = None
        view_2272 = permute_1245.view(256, 512, 512) ;  permute_1245 = None
        bmm_188 = torch.bmm(view_2271,view_2272) ;  view_2271 = view_2272 = None
        view_2273 = bmm_188.view(256, 512, 1, 1, 512) ;  bmm_188 = None
        permute_1246 = view_2273.permute(3, 1, 4, 0, 2) ;  view_2273 = None
        view_2274 = permute_1246.view(1, 512, 512, 256) ;  permute_1246 = None
        _to_copy_1290 = getitem_2144.to(dtype = torch.bfloat16) ;  getitem_2144 = None
        _to_copy_1291 = getitem_2140.to(dtype = torch.bfloat16) 
        t_473 = _to_copy_1290.t() ;  _to_copy_1290 = None
        view_2275 = _to_copy_1291.view(262144, 256) ;  _to_copy_1291 = None
        mm_441 = torch.mm(view_2275,t_473) ;  view_2275 = t_473 = None
        view_2276 = mm_441.view(1, 512, 512, 512) ;  mm_441 = None
        _to_copy_1292 = getitem_2146.to(dtype = torch.bfloat16) ;  getitem_2146 = None
        _to_copy_1293 = getitem_2140.to(dtype = torch.bfloat16) 
        t_474 = _to_copy_1292.t() ;  _to_copy_1292 = None
        view_2277 = _to_copy_1293.view(262144, 256) ;  _to_copy_1293 = None
        mm_442 = torch.mm(view_2277,t_474) ;  view_2277 = t_474 = None
        view_2278 = mm_442.view(1, 512, 512, 512) ;  mm_442 = None
        sigmoid_175 = torch.sigmoid(view_2278) ;  view_2278 = None
        mul_288 = torch.mul(view_2276,sigmoid_175) ;  view_2276 = sigmoid_175 = None
        view_2279 = mul_288.view(262144, 512) ;  mul_288 = None
        view_2280 = view_2279.view(1, 512, 512, 512) ;  view_2279 = None
        transpose_56 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_775 = torch.unsqueeze(transpose_56,3) ;  transpose_56 = None
        clone_205 = torch.clone(unsqueeze_775,memory_format = torch.contiguous_format) ;  unsqueeze_775 = None
        bitwise_not_147 = torch.bitwise_not(clone_205) ;  clone_205 = None
        masked_fill_147 = view_2280.masked_fill(bitwise_not_147,0) ;  view_2280 = bitwise_not_147 = None
        view_2281 = masked_fill_147.view(262144, 512) ;  masked_fill_147 = None
        view_2285 = view_2281.view(1, 512, 512, 512) 
        split_tensor_229 = torch.split(view_2285,256,dim = -1) ;  view_2285 = None
        getitem_2156 = split_tensor_229[0]
        unsqueeze_778 = torch.unsqueeze(getitem_2156,4) ;  getitem_2156 = None
        permute_1251 = unsqueeze_778.permute(0, 2, 4, 3, 1) ;  unsqueeze_778 = None
        permute_1252 = permute_1251.permute(3, 1, 4, 0, 2) ;  permute_1251 = None
        view_2286 = permute_1252.view(256, 512, 512) ;  permute_1252 = None
        view_2287 = view_2281.view(1, 512, 512, 512) ;  view_2281 = None
        split_tensor_230 = torch.split(view_2287,256,dim = -1) ;  view_2287 = None
        getitem_2159 = split_tensor_230[1];  split_tensor_230 = None
        unsqueeze_779 = torch.unsqueeze(getitem_2159,4) ;  getitem_2159 = None
        permute_1253 = unsqueeze_779.permute(0, 4, 2, 3, 1) ;  unsqueeze_779 = None
        permute_1254 = permute_1253.permute(3, 4, 0, 2, 1) ;  permute_1253 = None
        view_2288 = permute_1254.view(256, 512, 512) ;  permute_1254 = None
        bmm_189 = torch.bmm(view_2286,view_2288) ;  view_2286 = view_2288 = None
        view_2289 = bmm_189.view(256, 512, 1, 1, 512) ;  bmm_189 = None
        permute_1255 = view_2289.permute(3, 1, 4, 0, 2) ;  view_2289 = None
        view_2290 = permute_1255.view(1, 512, 512, 256) ;  permute_1255 = None
        _to_copy_1294 = view_2274.to(dtype = torch.float32) ;  view_2274 = None
        native_layer_norm_default_267 = (torch.nn.functional.layer_norm(_to_copy_1294,[256],None,None,1e-05),) ;  _to_copy_1294 = None
        getitem_2160 = native_layer_norm_default_267[0]
        _to_copy_1295 = view_2290.to(dtype = torch.float32) ;  view_2290 = None
        native_layer_norm_default_268 = (torch.nn.functional.layer_norm(_to_copy_1295,[256],None,None,1e-05),) ;  _to_copy_1295 = None
        getitem_2163 = native_layer_norm_default_268[0]
        add_232 = torch.add(getitem_2160,getitem_2163) ;  getitem_2160 = getitem_2163 = None
        _to_copy_1296 = arg722_1.to(dtype = torch.bfloat16) ;  arg722_1 = None
        _to_copy_1297 = add_232.to(dtype = torch.bfloat16) ;  add_232 = None
        t_475 = _to_copy_1296.t() ;  _to_copy_1296 = None
        view_2291 = _to_copy_1297.view(262144, 256) ;  _to_copy_1297 = None
        mm_443 = torch.mm(view_2291,t_475) ;  view_2291 = t_475 = None
        view_2292 = mm_443.view(1, 512, 512, 256) ;  mm_443 = None
        _to_copy_1298 = getitem_2147.to(dtype = torch.bfloat16) ;  getitem_2147 = None
        _to_copy_1299 = getitem_2140.to(dtype = torch.bfloat16) ;  getitem_2140 = None
        t_476 = _to_copy_1298.t() ;  _to_copy_1298 = None
        view_2293 = _to_copy_1299.view(262144, 256) ;  _to_copy_1299 = None
        mm_444 = torch.mm(view_2293,t_476) ;  view_2293 = t_476 = None
        view_2294 = mm_444.view(1, 512, 512, 256) ;  mm_444 = None
        sigmoid_176 = torch.sigmoid(view_2294) ;  view_2294 = None
        mul_289 = torch.mul(view_2292,sigmoid_176) ;  view_2292 = sigmoid_176 = None
        add_233 = torch.add(add_227,mul_289) ;  mul_289 = None
        _to_copy_1300 = add_227.to(dtype = torch.float32) 
        native_layer_norm_default_269 = (torch.nn.functional.layer_norm(_to_copy_1300,[256],None,None,1e-05),) ;  _to_copy_1300 = None
        getitem_2166 = native_layer_norm_default_269[0]
        _to_copy_1301 = arg726_1.to(dtype = torch.bfloat16) ;  arg726_1 = None
        _to_copy_1302 = getitem_2166.to(dtype = torch.bfloat16) 
        t_477 = _to_copy_1301.t() ;  _to_copy_1301 = None
        view_2295 = _to_copy_1302.view(262144, 256) ;  _to_copy_1302 = None
        mm_445 = torch.mm(view_2295,t_477) ;  view_2295 = t_477 = None
        view_2296 = mm_445.view(1, 512, 512, 8) ;  mm_445 = None
        view_2297 = view_2296.view(1, 512, 512, 2, 4) ;  view_2296 = None
        permute_1256 = view_2297.permute(0, 3, 4, 1, 2) ;  view_2297 = None
        view_2298 = permute_1256.view(1, 2, 4, 1, 512, 512) ;  permute_1256 = None
        view_2299 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_148 = torch.bitwise_not(view_2299) ;  view_2299 = None
        masked_fill_148 = view_2298.masked_fill(bitwise_not_148,-10000) ;  view_2298 = bitwise_not_148 = None
        view_2300 = masked_fill_148.view(1, 2, 4, 512, 512) ;  masked_fill_148 = None
        permute_1257 = view_2300.permute(1, 0, 2, 3, 4) ;  view_2300 = None
        view_2301 = permute_1257.view(2, 4, 1, 512, 512) ;  permute_1257 = None
        _to_copy_1303 = arg727_1.to(dtype = torch.bfloat16) ;  arg727_1 = None
        _to_copy_1304 = getitem_2166.to(dtype = torch.bfloat16) 
        t_478 = _to_copy_1303.t() ;  _to_copy_1303 = None
        view_2302 = _to_copy_1304.view(262144, 256) ;  _to_copy_1304 = None
        mm_446 = torch.mm(view_2302,t_478) ;  view_2302 = t_478 = None
        view_2303 = mm_446.view(1, 512, 512, 1024) ;  mm_446 = None
        select_57 = torch.select(view_2301,0,0) 
        view_2304 = view_2303.view(1, 512, 512, 4, 4, 64) ;  view_2303 = None
        permute_1258 = view_2304.permute(4, 0, 3, 1, 2, 5) ;  view_2304 = None
        view_2305 = permute_1258.view(4, 4, 512, 512, 64) ;  permute_1258 = None
        unbind_int_106 = torch.unbind(view_2305) ;  view_2305 = None
        getitem_2169 = unbind_int_106[0]
        getitem_2170 = unbind_int_106[1]
        getitem_2171 = unbind_int_106[2]
        getitem_2172 = unbind_int_106[3];  unbind_int_106 = None
        expand_137 = select_57.expand(4, 512, 512, 512) ;  select_57 = None
        _scaled_dot_product_efficient_attention_default_78 = (torch.nn.functional.scaled_dot_product_attention(getitem_2169,getitem_2170,getitem_2171,expand_137,False),) ;  getitem_2169 = getitem_2170 = getitem_2171 = expand_137 = None
        getitem_2173 = _scaled_dot_product_efficient_attention_default_78[0]
        sigmoid_177 = torch.sigmoid(getitem_2172) ;  getitem_2172 = None
        mul_290 = torch.mul(getitem_2173,sigmoid_177) ;  getitem_2173 = sigmoid_177 = None
        view_2306 = mul_290.view(1, 4, 512, 512, 64) ;  mul_290 = None
        permute_1259 = view_2306.permute(0, 2, 3, 1, 4) ;  view_2306 = None
        clone_206 = torch.clone(permute_1259,memory_format = torch.contiguous_format) ;  permute_1259 = None
        _unsafe_view_176 = clone_206.view(1, 512, 512, 256) ;  clone_206 = None
        transpose_57 = torch.transpose(getitem_2166,1,2) ;  getitem_2166 = None
        _to_copy_1305 = arg728_1.to(dtype = torch.bfloat16) ;  arg728_1 = None
        _to_copy_1306 = transpose_57.to(dtype = torch.bfloat16) ;  transpose_57 = None
        t_479 = _to_copy_1305.t() ;  _to_copy_1305 = None
        expand_138 = _to_copy_1306.expand(1, 512, 512, 256) ;  _to_copy_1306 = None
        view_2307 = expand_138.view(512, 512, 256) ;  expand_138 = None
        expand_139 = t_479.expand(1, 512, 256, 1024) ;  t_479 = None
        view_2308 = expand_139.view(512, 256, 1024) ;  expand_139 = None
        bmm_190 = torch.bmm(view_2307,view_2308) ;  view_2307 = view_2308 = None
        view_2309 = bmm_190.view(1, 512, 512, 1024) ;  bmm_190 = None
        select_58 = torch.select(view_2301,0,1) ;  view_2301 = None
        view_2310 = view_2309.view(1, 512, 512, 4, 4, 64) ;  view_2309 = None
        permute_1260 = view_2310.permute(4, 0, 3, 1, 2, 5) ;  view_2310 = None
        view_2311 = permute_1260.view(4, 4, 512, 512, 64) ;  permute_1260 = None
        unbind_int_107 = torch.unbind(view_2311) ;  view_2311 = None
        getitem_2177 = unbind_int_107[0]
        getitem_2178 = unbind_int_107[1]
        getitem_2179 = unbind_int_107[2]
        getitem_2180 = unbind_int_107[3];  unbind_int_107 = None
        expand_140 = select_58.expand(4, 512, 512, 512) ;  select_58 = None
        _scaled_dot_product_efficient_attention_default_79 = (torch.nn.functional.scaled_dot_product_attention(getitem_2177,getitem_2178,getitem_2179,expand_140,False),) ;  getitem_2177 = getitem_2178 = getitem_2179 = expand_140 = None
        getitem_2181 = _scaled_dot_product_efficient_attention_default_79[0]
        sigmoid_178 = torch.sigmoid(getitem_2180) ;  getitem_2180 = None
        mul_291 = torch.mul(getitem_2181,sigmoid_178) ;  getitem_2181 = sigmoid_178 = None
        view_2312 = mul_291.view(1, 4, 512, 512, 64) ;  mul_291 = None
        permute_1261 = view_2312.permute(0, 2, 3, 1, 4) ;  view_2312 = None
        clone_207 = torch.clone(permute_1261,memory_format = torch.contiguous_format) ;  permute_1261 = None
        _unsafe_view_177 = clone_207.view(1, 512, 512, 256) ;  clone_207 = None
        cat_34 = torch.cat([_unsafe_view_176,_unsafe_view_177],dim = -1) ;  _unsafe_view_176 = _unsafe_view_177 = None
        slice_227 = arg725_1[0:] ;  arg725_1 = None
        unsqueeze_780 = torch.unsqueeze(slice_227,1) ;  slice_227 = None
        mul_292 = torch.mul(arg729_1,unsqueeze_780) ;  arg729_1 = unsqueeze_780 = None
        _to_copy_1307 = mul_292.to(dtype = torch.bfloat16) ;  mul_292 = None
        t_480 = _to_copy_1307.t() ;  _to_copy_1307 = None
        view_2313 = cat_34.view(262144, 512) ;  cat_34 = None
        mm_447 = torch.mm(view_2313,t_480) ;  view_2313 = t_480 = None
        view_2314 = mm_447.view(1, 512, 512, 256) ;  mm_447 = None
        add_234 = torch.add(add_233,view_2314) ;  add_233 = view_2314 = None
        split_tensor_231 = torch.split(add_227,512,dim = -2) 
        getitem_2185 = split_tensor_231[0];  split_tensor_231 = None
        _to_copy_1308 = getitem_2185.to(dtype = torch.float32) ;  getitem_2185 = None
        native_layer_norm_default_270 = (torch.nn.functional.layer_norm(_to_copy_1308,[256],arg716_1,arg717_1,1e-05),) ;  _to_copy_1308 = arg716_1 = arg717_1 = None
        getitem_2186 = native_layer_norm_default_270[0]
        _to_copy_1309 = arg718_1.to(dtype = torch.bfloat16) ;  arg718_1 = None
        _to_copy_1310 = getitem_2186.to(dtype = torch.bfloat16) ;  getitem_2186 = None
        t_481 = _to_copy_1309.t() ;  _to_copy_1309 = None
        view_2315 = _to_copy_1310.view(262144, 256) ;  _to_copy_1310 = None
        mm_448 = torch.mm(view_2315,t_481) ;  view_2315 = t_481 = None
        view_2316 = mm_448.view(1, 512, 512, 1024) ;  mm_448 = None
        split_tensor_232 = torch.split(view_2316,512,dim = -1) ;  view_2316 = None
        getitem_2189 = split_tensor_232[0]
        getitem_2190 = split_tensor_232[1];  split_tensor_232 = None
        silu_62 = torch.nn.functional.silu(getitem_2189) ;  getitem_2189 = None
        mul_293 = torch.mul(silu_62,getitem_2190) ;  silu_62 = getitem_2190 = None
        _to_copy_1311 = arg719_1.to(dtype = torch.bfloat16) ;  arg719_1 = None
        t_482 = _to_copy_1311.t() ;  _to_copy_1311 = None
        view_2318 = mul_293.view(262144, 512) ;  mul_293 = None
        mm_449 = torch.mm(view_2318,t_482) ;  view_2318 = t_482 = None
        view_2319 = mm_449.view(1, 512, 512, 256) ;  mm_449 = None
        add_235 = torch.add(add_234,view_2319) ;  add_234 = view_2319 = None
        _to_copy_1312 = add_231.to(dtype = torch.float32) 
        native_layer_norm_default_271 = (torch.nn.functional.layer_norm(_to_copy_1312,[384],arg734_1,arg735_1,1e-05),) ;  _to_copy_1312 = arg734_1 = arg735_1 = None
        getitem_2191 = native_layer_norm_default_271[0]
        _to_copy_1313 = add_227.to(dtype = torch.float32) ;  add_227 = None
        native_layer_norm_default_272 = (torch.nn.functional.layer_norm(_to_copy_1313,[256],arg736_1,arg737_1,1e-05),) ;  _to_copy_1313 = arg736_1 = arg737_1 = None
        getitem_2194 = native_layer_norm_default_272[0]
        _to_copy_1314 = arg738_1.to(dtype = torch.bfloat16) ;  arg738_1 = None
        _to_copy_1315 = getitem_2194.to(dtype = torch.bfloat16) ;  getitem_2194 = None
        t_483 = _to_copy_1314.t() ;  _to_copy_1314 = None
        view_2320 = _to_copy_1315.view(262144, 256) ;  _to_copy_1315 = None
        mm_450 = torch.mm(view_2320,t_483) ;  view_2320 = t_483 = None
        view_2321 = mm_450.view(1, 512, 512, 16) ;  mm_450 = None
        permute_1262 = view_2321.permute(0, 3, 1, 2) ;  view_2321 = None
        view_2322 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_149 = torch.bitwise_not(view_2322) ;  view_2322 = None
        masked_fill_149 = permute_1262.masked_fill(bitwise_not_149,-10000) ;  permute_1262 = bitwise_not_149 = None
        _to_copy_1316 = getitem_2191.to(dtype = torch.bfloat16) ;  getitem_2191 = None
        _to_copy_1317 = arg740_1.to(dtype = torch.bfloat16) ;  arg740_1 = None
        unsqueeze_781 = torch.unsqueeze(_to_copy_1316,3) ;  _to_copy_1316 = None
        unsqueeze_782 = torch.unsqueeze(unsqueeze_781,4) ;  unsqueeze_781 = None
        unsqueeze_783 = torch.unsqueeze(unsqueeze_782,5) ;  unsqueeze_782 = None
        permute_1263 = unsqueeze_783.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_783 = None
        unsqueeze_784 = torch.unsqueeze(_to_copy_1317,4) ;  _to_copy_1317 = None
        unsqueeze_785 = torch.unsqueeze(unsqueeze_784,5) ;  unsqueeze_784 = None
        permute_1264 = unsqueeze_785.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_785 = None
        permute_1265 = permute_1263.permute(3, 5, 0, 1, 2, 4) ;  permute_1263 = None
        view_2323 = permute_1265.view(1, 512, 384) ;  permute_1265 = None
        permute_1266 = permute_1264.permute(5, 0, 1, 2, 4, 3) ;  permute_1264 = None
        view_2324 = permute_1266.view(1, 384, 1536) ;  permute_1266 = None
        bmm_191 = torch.bmm(view_2323,view_2324) ;  view_2323 = view_2324 = None
        view_2325 = bmm_191.view(512, 1, 4, 1, 16, 24) ;  bmm_191 = None
        permute_1267 = view_2325.permute(2, 3, 4, 0, 5, 1) ;  view_2325 = None
        view_2326 = permute_1267.view(4, 1, 16, 512, 24) ;  permute_1267 = None
        unbind_int_108 = torch.unbind(view_2326) ;  view_2326 = None
        getitem_2197 = unbind_int_108[0]
        getitem_2198 = unbind_int_108[1]
        getitem_2199 = unbind_int_108[2]
        getitem_2200 = unbind_int_108[3];  unbind_int_108 = None
        view_2327 = arg739_1.view(1, 16, 1, 24) ;  arg739_1 = None
        add_236 = torch.add(getitem_2197,view_2327) ;  getitem_2197 = view_2327 = None
        _to_copy_1318 = add_236.to(dtype = torch.bfloat16) ;  add_236 = None
        expand_141 = masked_fill_149.expand(1, 16, 512, 512) ;  masked_fill_149 = None
        _scaled_dot_product_efficient_attention_default_80 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1318,getitem_2198,getitem_2199,expand_141,False),) ;  _to_copy_1318 = getitem_2198 = getitem_2199 = expand_141 = None
        getitem_2201 = _scaled_dot_product_efficient_attention_default_80[0]
        add_237 = torch.add(getitem_2200,1) ;  getitem_2200 = None
        sigmoid_179 = torch.sigmoid(add_237) ;  add_237 = None
        mul_294 = torch.mul(getitem_2201,sigmoid_179) ;  getitem_2201 = sigmoid_179 = None
        _to_copy_1319 = arg741_1.to(dtype = torch.bfloat16) ;  arg741_1 = None
        unsqueeze_786 = torch.unsqueeze(mul_294,4) ;  mul_294 = None
        permute_1268 = unsqueeze_786.permute(0, 2, 4, 3, 1) ;  unsqueeze_786 = None
        unsqueeze_787 = torch.unsqueeze(_to_copy_1319,3) ;  _to_copy_1319 = None
        unsqueeze_788 = torch.unsqueeze(unsqueeze_787,4) ;  unsqueeze_787 = None
        permute_1269 = unsqueeze_788.permute(3, 4, 2, 1, 0) ;  unsqueeze_788 = None
        permute_1270 = permute_1268.permute(1, 3, 4, 0, 2) ;  permute_1268 = None
        clone_208 = torch.clone(permute_1270,memory_format = torch.contiguous_format) ;  permute_1270 = None
        _unsafe_view_178 = clone_208.view(1, 512, 384) ;  clone_208 = None
        permute_1271 = permute_1269.permute(3, 4, 0, 2, 1) ;  permute_1269 = None
        clone_209 = torch.clone(permute_1271,memory_format = torch.contiguous_format) ;  permute_1271 = None
        _unsafe_view_179 = clone_209.view(1, 384, 384) ;  clone_209 = None
        bmm_192 = torch.bmm(_unsafe_view_178,_unsafe_view_179) ;  _unsafe_view_178 = _unsafe_view_179 = None
        view_2328 = bmm_192.view(512, 1, 1, 1, 384) ;  bmm_192 = None
        permute_1272 = view_2328.permute(3, 0, 4, 1, 2) ;  view_2328 = None
        view_2329 = permute_1272.view(1, 512, 384) ;  permute_1272 = None
        unsqueeze_789 = torch.unsqueeze(arg1406_1,-1) 
        mul_295 = torch.mul(view_2329,unsqueeze_789) ;  view_2329 = unsqueeze_789 = None
        add_238 = torch.add(add_231,mul_295) ;  mul_295 = None
        split_tensor_233 = torch.split(add_231,512,dim = -2) ;  add_231 = None
        getitem_2205 = split_tensor_233[0];  split_tensor_233 = None
        _to_copy_1320 = getitem_2205.to(dtype = torch.float32) ;  getitem_2205 = None
        native_layer_norm_default_273 = (torch.nn.functional.layer_norm(_to_copy_1320,[384],arg730_1,arg731_1,1e-05),) ;  _to_copy_1320 = arg730_1 = arg731_1 = None
        getitem_2206 = native_layer_norm_default_273[0]
        _to_copy_1321 = arg732_1.to(dtype = torch.bfloat16) ;  arg732_1 = None
        _to_copy_1322 = getitem_2206.to(dtype = torch.bfloat16) ;  getitem_2206 = None
        t_484 = _to_copy_1321.t() ;  _to_copy_1321 = None
        view_2330 = _to_copy_1322.view(512, 384) ;  _to_copy_1322 = None
        mm_451 = torch.mm(view_2330,t_484) ;  view_2330 = t_484 = None
        view_2331 = mm_451.view(1, 512, 1536) ;  mm_451 = None
        split_tensor_234 = torch.split(view_2331,768,dim = -1) ;  view_2331 = None
        getitem_2209 = split_tensor_234[0]
        getitem_2210 = split_tensor_234[1];  split_tensor_234 = None
        silu_63 = torch.nn.functional.silu(getitem_2209) ;  getitem_2209 = None
        mul_296 = torch.mul(silu_63,getitem_2210) ;  silu_63 = getitem_2210 = None
        _to_copy_1323 = arg733_1.to(dtype = torch.bfloat16) ;  arg733_1 = None
        t_485 = _to_copy_1323.t() ;  _to_copy_1323 = None
        view_2333 = mul_296.view(512, 768) ;  mul_296 = None
        mm_452 = torch.mm(view_2333,t_485) ;  view_2333 = t_485 = None
        view_2334 = mm_452.view(1, 512, 384) ;  mm_452 = None
        add_239 = torch.add(add_238,view_2334) ;  add_238 = view_2334 = None
        _to_copy_1324 = add_235.to(dtype = torch.float32) 
        native_layer_norm_default_274 = (torch.nn.functional.layer_norm(_to_copy_1324,[256],arg746_1,arg747_1,1e-05),) ;  _to_copy_1324 = arg746_1 = arg747_1 = None
        getitem_2211 = native_layer_norm_default_274[0]
        split_with_sizes_default_58 = torch.split(arg749_1,[512,512]) ;  arg749_1 = None
        getitem_2214 = split_with_sizes_default_58[0]
        getitem_2215 = split_with_sizes_default_58[1];  split_with_sizes_default_58 = None
        split_with_sizes_default_59 = torch.split(arg750_1,[512,512,256]) ;  arg750_1 = None
        getitem_2216 = split_with_sizes_default_59[0]
        getitem_2217 = split_with_sizes_default_59[1]
        getitem_2218 = split_with_sizes_default_59[2];  split_with_sizes_default_59 = None
        _to_copy_1325 = getitem_2214.to(dtype = torch.bfloat16) ;  getitem_2214 = None
        _to_copy_1326 = getitem_2211.to(dtype = torch.bfloat16) 
        t_486 = _to_copy_1325.t() ;  _to_copy_1325 = None
        view_2335 = _to_copy_1326.view(262144, 256) ;  _to_copy_1326 = None
        mm_453 = torch.mm(view_2335,t_486) ;  view_2335 = t_486 = None
        view_2336 = mm_453.view(1, 512, 512, 512) ;  mm_453 = None
        _to_copy_1327 = getitem_2216.to(dtype = torch.bfloat16) ;  getitem_2216 = None
        _to_copy_1328 = getitem_2211.to(dtype = torch.bfloat16) 
        t_487 = _to_copy_1327.t() ;  _to_copy_1327 = None
        view_2337 = _to_copy_1328.view(262144, 256) ;  _to_copy_1328 = None
        mm_454 = torch.mm(view_2337,t_487) ;  view_2337 = t_487 = None
        view_2338 = mm_454.view(1, 512, 512, 512) ;  mm_454 = None
        sigmoid_180 = torch.sigmoid(view_2338) ;  view_2338 = None
        mul_297 = torch.mul(view_2336,sigmoid_180) ;  view_2336 = sigmoid_180 = None
        unsqueeze_790 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_150 = torch.bitwise_not(unsqueeze_790) ;  unsqueeze_790 = None
        masked_fill_150 = mul_297.masked_fill(bitwise_not_150,0) ;  mul_297 = bitwise_not_150 = None
        split_tensor_235 = torch.split(masked_fill_150,256,dim = -1) 
        getitem_2221 = split_tensor_235[0]
        unsqueeze_793 = torch.unsqueeze(getitem_2221,4) ;  getitem_2221 = None
        permute_1277 = unsqueeze_793.permute(0, 1, 4, 3, 2) ;  unsqueeze_793 = None
        permute_1278 = permute_1277.permute(3, 1, 4, 0, 2) ;  permute_1277 = None
        view_2341 = permute_1278.view(256, 512, 512) ;  permute_1278 = None
        split_tensor_236 = torch.split(masked_fill_150,256,dim = -1) ;  masked_fill_150 = None
        getitem_2224 = split_tensor_236[1];  split_tensor_236 = None
        unsqueeze_794 = torch.unsqueeze(getitem_2224,4) ;  getitem_2224 = None
        permute_1279 = unsqueeze_794.permute(0, 4, 1, 3, 2) ;  unsqueeze_794 = None
        permute_1280 = permute_1279.permute(3, 4, 0, 2, 1) ;  permute_1279 = None
        view_2342 = permute_1280.view(256, 512, 512) ;  permute_1280 = None
        bmm_193 = torch.bmm(view_2341,view_2342) ;  view_2341 = view_2342 = None
        view_2343 = bmm_193.view(256, 512, 1, 1, 512) ;  bmm_193 = None
        permute_1281 = view_2343.permute(3, 1, 4, 0, 2) ;  view_2343 = None
        view_2344 = permute_1281.view(1, 512, 512, 256) ;  permute_1281 = None
        _to_copy_1329 = getitem_2215.to(dtype = torch.bfloat16) ;  getitem_2215 = None
        _to_copy_1330 = getitem_2211.to(dtype = torch.bfloat16) 
        t_488 = _to_copy_1329.t() ;  _to_copy_1329 = None
        view_2345 = _to_copy_1330.view(262144, 256) ;  _to_copy_1330 = None
        mm_455 = torch.mm(view_2345,t_488) ;  view_2345 = t_488 = None
        view_2346 = mm_455.view(1, 512, 512, 512) ;  mm_455 = None
        _to_copy_1331 = getitem_2217.to(dtype = torch.bfloat16) ;  getitem_2217 = None
        _to_copy_1332 = getitem_2211.to(dtype = torch.bfloat16) 
        t_489 = _to_copy_1331.t() ;  _to_copy_1331 = None
        view_2347 = _to_copy_1332.view(262144, 256) ;  _to_copy_1332 = None
        mm_456 = torch.mm(view_2347,t_489) ;  view_2347 = t_489 = None
        view_2348 = mm_456.view(1, 512, 512, 512) ;  mm_456 = None
        sigmoid_181 = torch.sigmoid(view_2348) ;  view_2348 = None
        mul_298 = torch.mul(view_2346,sigmoid_181) ;  view_2346 = sigmoid_181 = None
        view_2349 = mul_298.view(262144, 512) ;  mul_298 = None
        view_2350 = view_2349.view(1, 512, 512, 512) ;  view_2349 = None
        transpose_58 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_795 = torch.unsqueeze(transpose_58,3) ;  transpose_58 = None
        clone_210 = torch.clone(unsqueeze_795,memory_format = torch.contiguous_format) ;  unsqueeze_795 = None
        bitwise_not_151 = torch.bitwise_not(clone_210) ;  clone_210 = None
        masked_fill_151 = view_2350.masked_fill(bitwise_not_151,0) ;  view_2350 = bitwise_not_151 = None
        view_2351 = masked_fill_151.view(262144, 512) ;  masked_fill_151 = None
        view_2355 = view_2351.view(1, 512, 512, 512) 
        split_tensor_237 = torch.split(view_2355,256,dim = -1) ;  view_2355 = None
        getitem_2227 = split_tensor_237[0]
        unsqueeze_798 = torch.unsqueeze(getitem_2227,4) ;  getitem_2227 = None
        permute_1286 = unsqueeze_798.permute(0, 2, 4, 3, 1) ;  unsqueeze_798 = None
        permute_1287 = permute_1286.permute(3, 1, 4, 0, 2) ;  permute_1286 = None
        view_2356 = permute_1287.view(256, 512, 512) ;  permute_1287 = None
        view_2357 = view_2351.view(1, 512, 512, 512) ;  view_2351 = None
        split_tensor_238 = torch.split(view_2357,256,dim = -1) ;  view_2357 = None
        getitem_2230 = split_tensor_238[1];  split_tensor_238 = None
        unsqueeze_799 = torch.unsqueeze(getitem_2230,4) ;  getitem_2230 = None
        permute_1288 = unsqueeze_799.permute(0, 4, 2, 3, 1) ;  unsqueeze_799 = None
        permute_1289 = permute_1288.permute(3, 4, 0, 2, 1) ;  permute_1288 = None
        view_2358 = permute_1289.view(256, 512, 512) ;  permute_1289 = None
        bmm_194 = torch.bmm(view_2356,view_2358) ;  view_2356 = view_2358 = None
        view_2359 = bmm_194.view(256, 512, 1, 1, 512) ;  bmm_194 = None
        permute_1290 = view_2359.permute(3, 1, 4, 0, 2) ;  view_2359 = None
        view_2360 = permute_1290.view(1, 512, 512, 256) ;  permute_1290 = None
        _to_copy_1333 = view_2344.to(dtype = torch.float32) ;  view_2344 = None
        native_layer_norm_default_275 = (torch.nn.functional.layer_norm(_to_copy_1333,[256],None,None,1e-05),) ;  _to_copy_1333 = None
        getitem_2231 = native_layer_norm_default_275[0]
        _to_copy_1334 = view_2360.to(dtype = torch.float32) ;  view_2360 = None
        native_layer_norm_default_276 = (torch.nn.functional.layer_norm(_to_copy_1334,[256],None,None,1e-05),) ;  _to_copy_1334 = None
        getitem_2234 = native_layer_norm_default_276[0]
        add_240 = torch.add(getitem_2231,getitem_2234) ;  getitem_2231 = getitem_2234 = None
        _to_copy_1335 = arg748_1.to(dtype = torch.bfloat16) ;  arg748_1 = None
        _to_copy_1336 = add_240.to(dtype = torch.bfloat16) ;  add_240 = None
        t_490 = _to_copy_1335.t() ;  _to_copy_1335 = None
        view_2361 = _to_copy_1336.view(262144, 256) ;  _to_copy_1336 = None
        mm_457 = torch.mm(view_2361,t_490) ;  view_2361 = t_490 = None
        view_2362 = mm_457.view(1, 512, 512, 256) ;  mm_457 = None
        _to_copy_1337 = getitem_2218.to(dtype = torch.bfloat16) ;  getitem_2218 = None
        _to_copy_1338 = getitem_2211.to(dtype = torch.bfloat16) ;  getitem_2211 = None
        t_491 = _to_copy_1337.t() ;  _to_copy_1337 = None
        view_2363 = _to_copy_1338.view(262144, 256) ;  _to_copy_1338 = None
        mm_458 = torch.mm(view_2363,t_491) ;  view_2363 = t_491 = None
        view_2364 = mm_458.view(1, 512, 512, 256) ;  mm_458 = None
        sigmoid_182 = torch.sigmoid(view_2364) ;  view_2364 = None
        mul_299 = torch.mul(view_2362,sigmoid_182) ;  view_2362 = sigmoid_182 = None
        add_241 = torch.add(add_235,mul_299) ;  mul_299 = None
        _to_copy_1339 = add_235.to(dtype = torch.float32) 
        native_layer_norm_default_277 = (torch.nn.functional.layer_norm(_to_copy_1339,[256],None,None,1e-05),) ;  _to_copy_1339 = None
        getitem_2237 = native_layer_norm_default_277[0]
        _to_copy_1340 = arg752_1.to(dtype = torch.bfloat16) ;  arg752_1 = None
        _to_copy_1341 = getitem_2237.to(dtype = torch.bfloat16) 
        t_492 = _to_copy_1340.t() ;  _to_copy_1340 = None
        view_2365 = _to_copy_1341.view(262144, 256) ;  _to_copy_1341 = None
        mm_459 = torch.mm(view_2365,t_492) ;  view_2365 = t_492 = None
        view_2366 = mm_459.view(1, 512, 512, 8) ;  mm_459 = None
        view_2367 = view_2366.view(1, 512, 512, 2, 4) ;  view_2366 = None
        permute_1291 = view_2367.permute(0, 3, 4, 1, 2) ;  view_2367 = None
        view_2368 = permute_1291.view(1, 2, 4, 1, 512, 512) ;  permute_1291 = None
        view_2369 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_152 = torch.bitwise_not(view_2369) ;  view_2369 = None
        masked_fill_152 = view_2368.masked_fill(bitwise_not_152,-10000) ;  view_2368 = bitwise_not_152 = None
        view_2370 = masked_fill_152.view(1, 2, 4, 512, 512) ;  masked_fill_152 = None
        permute_1292 = view_2370.permute(1, 0, 2, 3, 4) ;  view_2370 = None
        view_2371 = permute_1292.view(2, 4, 1, 512, 512) ;  permute_1292 = None
        _to_copy_1342 = arg753_1.to(dtype = torch.bfloat16) ;  arg753_1 = None
        _to_copy_1343 = getitem_2237.to(dtype = torch.bfloat16) 
        t_493 = _to_copy_1342.t() ;  _to_copy_1342 = None
        view_2372 = _to_copy_1343.view(262144, 256) ;  _to_copy_1343 = None
        mm_460 = torch.mm(view_2372,t_493) ;  view_2372 = t_493 = None
        view_2373 = mm_460.view(1, 512, 512, 1024) ;  mm_460 = None
        select_59 = torch.select(view_2371,0,0) 
        view_2374 = view_2373.view(1, 512, 512, 4, 4, 64) ;  view_2373 = None
        permute_1293 = view_2374.permute(4, 0, 3, 1, 2, 5) ;  view_2374 = None
        view_2375 = permute_1293.view(4, 4, 512, 512, 64) ;  permute_1293 = None
        unbind_int_109 = torch.unbind(view_2375) ;  view_2375 = None
        getitem_2240 = unbind_int_109[0]
        getitem_2241 = unbind_int_109[1]
        getitem_2242 = unbind_int_109[2]
        getitem_2243 = unbind_int_109[3];  unbind_int_109 = None
        expand_142 = select_59.expand(4, 512, 512, 512) ;  select_59 = None
        _scaled_dot_product_efficient_attention_default_81 = (torch.nn.functional.scaled_dot_product_attention(getitem_2240,getitem_2241,getitem_2242,expand_142,False),) ;  getitem_2240 = getitem_2241 = getitem_2242 = expand_142 = None
        getitem_2244 = _scaled_dot_product_efficient_attention_default_81[0]
        sigmoid_183 = torch.sigmoid(getitem_2243) ;  getitem_2243 = None
        mul_300 = torch.mul(getitem_2244,sigmoid_183) ;  getitem_2244 = sigmoid_183 = None
        view_2376 = mul_300.view(1, 4, 512, 512, 64) ;  mul_300 = None
        permute_1294 = view_2376.permute(0, 2, 3, 1, 4) ;  view_2376 = None
        clone_211 = torch.clone(permute_1294,memory_format = torch.contiguous_format) ;  permute_1294 = None
        _unsafe_view_180 = clone_211.view(1, 512, 512, 256) ;  clone_211 = None
        transpose_59 = torch.transpose(getitem_2237,1,2) ;  getitem_2237 = None
        _to_copy_1344 = arg754_1.to(dtype = torch.bfloat16) ;  arg754_1 = None
        _to_copy_1345 = transpose_59.to(dtype = torch.bfloat16) ;  transpose_59 = None
        t_494 = _to_copy_1344.t() ;  _to_copy_1344 = None
        expand_143 = _to_copy_1345.expand(1, 512, 512, 256) ;  _to_copy_1345 = None
        view_2377 = expand_143.view(512, 512, 256) ;  expand_143 = None
        expand_144 = t_494.expand(1, 512, 256, 1024) ;  t_494 = None
        view_2378 = expand_144.view(512, 256, 1024) ;  expand_144 = None
        bmm_195 = torch.bmm(view_2377,view_2378) ;  view_2377 = view_2378 = None
        view_2379 = bmm_195.view(1, 512, 512, 1024) ;  bmm_195 = None
        select_60 = torch.select(view_2371,0,1) ;  view_2371 = None
        view_2380 = view_2379.view(1, 512, 512, 4, 4, 64) ;  view_2379 = None
        permute_1295 = view_2380.permute(4, 0, 3, 1, 2, 5) ;  view_2380 = None
        view_2381 = permute_1295.view(4, 4, 512, 512, 64) ;  permute_1295 = None
        unbind_int_110 = torch.unbind(view_2381) ;  view_2381 = None
        getitem_2248 = unbind_int_110[0]
        getitem_2249 = unbind_int_110[1]
        getitem_2250 = unbind_int_110[2]
        getitem_2251 = unbind_int_110[3];  unbind_int_110 = None
        expand_145 = select_60.expand(4, 512, 512, 512) ;  select_60 = None
        _scaled_dot_product_efficient_attention_default_82 = (torch.nn.functional.scaled_dot_product_attention(getitem_2248,getitem_2249,getitem_2250,expand_145,False),) ;  getitem_2248 = getitem_2249 = getitem_2250 = expand_145 = None
        getitem_2252 = _scaled_dot_product_efficient_attention_default_82[0]
        sigmoid_184 = torch.sigmoid(getitem_2251) ;  getitem_2251 = None
        mul_301 = torch.mul(getitem_2252,sigmoid_184) ;  getitem_2252 = sigmoid_184 = None
        view_2382 = mul_301.view(1, 4, 512, 512, 64) ;  mul_301 = None
        permute_1296 = view_2382.permute(0, 2, 3, 1, 4) ;  view_2382 = None
        clone_212 = torch.clone(permute_1296,memory_format = torch.contiguous_format) ;  permute_1296 = None
        _unsafe_view_181 = clone_212.view(1, 512, 512, 256) ;  clone_212 = None
        cat_35 = torch.cat([_unsafe_view_180,_unsafe_view_181],dim = -1) ;  _unsafe_view_180 = _unsafe_view_181 = None
        slice_228 = arg751_1[0:] ;  arg751_1 = None
        unsqueeze_800 = torch.unsqueeze(slice_228,1) ;  slice_228 = None
        mul_302 = torch.mul(arg755_1,unsqueeze_800) ;  arg755_1 = unsqueeze_800 = None
        _to_copy_1346 = mul_302.to(dtype = torch.bfloat16) ;  mul_302 = None
        t_495 = _to_copy_1346.t() ;  _to_copy_1346 = None
        view_2383 = cat_35.view(262144, 512) ;  cat_35 = None
        mm_461 = torch.mm(view_2383,t_495) ;  view_2383 = t_495 = None
        view_2384 = mm_461.view(1, 512, 512, 256) ;  mm_461 = None
        add_242 = torch.add(add_241,view_2384) ;  add_241 = view_2384 = None
        split_tensor_239 = torch.split(add_235,512,dim = -2) 
        getitem_2256 = split_tensor_239[0];  split_tensor_239 = None
        _to_copy_1347 = getitem_2256.to(dtype = torch.float32) ;  getitem_2256 = None
        native_layer_norm_default_278 = (torch.nn.functional.layer_norm(_to_copy_1347,[256],arg742_1,arg743_1,1e-05),) ;  _to_copy_1347 = arg742_1 = arg743_1 = None
        getitem_2257 = native_layer_norm_default_278[0]
        _to_copy_1348 = arg744_1.to(dtype = torch.bfloat16) ;  arg744_1 = None
        _to_copy_1349 = getitem_2257.to(dtype = torch.bfloat16) ;  getitem_2257 = None
        t_496 = _to_copy_1348.t() ;  _to_copy_1348 = None
        view_2385 = _to_copy_1349.view(262144, 256) ;  _to_copy_1349 = None
        mm_462 = torch.mm(view_2385,t_496) ;  view_2385 = t_496 = None
        view_2386 = mm_462.view(1, 512, 512, 1024) ;  mm_462 = None
        split_tensor_240 = torch.split(view_2386,512,dim = -1) ;  view_2386 = None
        getitem_2260 = split_tensor_240[0]
        getitem_2261 = split_tensor_240[1];  split_tensor_240 = None
        silu_64 = torch.nn.functional.silu(getitem_2260) ;  getitem_2260 = None
        mul_303 = torch.mul(silu_64,getitem_2261) ;  silu_64 = getitem_2261 = None
        _to_copy_1350 = arg745_1.to(dtype = torch.bfloat16) ;  arg745_1 = None
        t_497 = _to_copy_1350.t() ;  _to_copy_1350 = None
        view_2388 = mul_303.view(262144, 512) ;  mul_303 = None
        mm_463 = torch.mm(view_2388,t_497) ;  view_2388 = t_497 = None
        view_2389 = mm_463.view(1, 512, 512, 256) ;  mm_463 = None
        add_243 = torch.add(add_242,view_2389) ;  add_242 = view_2389 = None
        _to_copy_1351 = add_239.to(dtype = torch.float32) 
        native_layer_norm_default_279 = (torch.nn.functional.layer_norm(_to_copy_1351,[384],arg760_1,arg761_1,1e-05),) ;  _to_copy_1351 = arg760_1 = arg761_1 = None
        getitem_2262 = native_layer_norm_default_279[0]
        _to_copy_1352 = add_235.to(dtype = torch.float32) ;  add_235 = None
        native_layer_norm_default_280 = (torch.nn.functional.layer_norm(_to_copy_1352,[256],arg762_1,arg763_1,1e-05),) ;  _to_copy_1352 = arg762_1 = arg763_1 = None
        getitem_2265 = native_layer_norm_default_280[0]
        _to_copy_1353 = arg764_1.to(dtype = torch.bfloat16) ;  arg764_1 = None
        _to_copy_1354 = getitem_2265.to(dtype = torch.bfloat16) ;  getitem_2265 = None
        t_498 = _to_copy_1353.t() ;  _to_copy_1353 = None
        view_2390 = _to_copy_1354.view(262144, 256) ;  _to_copy_1354 = None
        mm_464 = torch.mm(view_2390,t_498) ;  view_2390 = t_498 = None
        view_2391 = mm_464.view(1, 512, 512, 16) ;  mm_464 = None
        permute_1297 = view_2391.permute(0, 3, 1, 2) ;  view_2391 = None
        view_2392 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_153 = torch.bitwise_not(view_2392) ;  view_2392 = None
        masked_fill_153 = permute_1297.masked_fill(bitwise_not_153,-10000) ;  permute_1297 = bitwise_not_153 = None
        _to_copy_1355 = getitem_2262.to(dtype = torch.bfloat16) ;  getitem_2262 = None
        _to_copy_1356 = arg766_1.to(dtype = torch.bfloat16) ;  arg766_1 = None
        unsqueeze_801 = torch.unsqueeze(_to_copy_1355,3) ;  _to_copy_1355 = None
        unsqueeze_802 = torch.unsqueeze(unsqueeze_801,4) ;  unsqueeze_801 = None
        unsqueeze_803 = torch.unsqueeze(unsqueeze_802,5) ;  unsqueeze_802 = None
        permute_1298 = unsqueeze_803.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_803 = None
        unsqueeze_804 = torch.unsqueeze(_to_copy_1356,4) ;  _to_copy_1356 = None
        unsqueeze_805 = torch.unsqueeze(unsqueeze_804,5) ;  unsqueeze_804 = None
        permute_1299 = unsqueeze_805.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_805 = None
        permute_1300 = permute_1298.permute(3, 5, 0, 1, 2, 4) ;  permute_1298 = None
        view_2393 = permute_1300.view(1, 512, 384) ;  permute_1300 = None
        permute_1301 = permute_1299.permute(5, 0, 1, 2, 4, 3) ;  permute_1299 = None
        view_2394 = permute_1301.view(1, 384, 1536) ;  permute_1301 = None
        bmm_196 = torch.bmm(view_2393,view_2394) ;  view_2393 = view_2394 = None
        view_2395 = bmm_196.view(512, 1, 4, 1, 16, 24) ;  bmm_196 = None
        permute_1302 = view_2395.permute(2, 3, 4, 0, 5, 1) ;  view_2395 = None
        view_2396 = permute_1302.view(4, 1, 16, 512, 24) ;  permute_1302 = None
        unbind_int_111 = torch.unbind(view_2396) ;  view_2396 = None
        getitem_2268 = unbind_int_111[0]
        getitem_2269 = unbind_int_111[1]
        getitem_2270 = unbind_int_111[2]
        getitem_2271 = unbind_int_111[3];  unbind_int_111 = None
        view_2397 = arg765_1.view(1, 16, 1, 24) ;  arg765_1 = None
        add_244 = torch.add(getitem_2268,view_2397) ;  getitem_2268 = view_2397 = None
        _to_copy_1357 = add_244.to(dtype = torch.bfloat16) ;  add_244 = None
        expand_146 = masked_fill_153.expand(1, 16, 512, 512) ;  masked_fill_153 = None
        _scaled_dot_product_efficient_attention_default_83 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1357,getitem_2269,getitem_2270,expand_146,False),) ;  _to_copy_1357 = getitem_2269 = getitem_2270 = expand_146 = None
        getitem_2272 = _scaled_dot_product_efficient_attention_default_83[0]
        add_245 = torch.add(getitem_2271,1) ;  getitem_2271 = None
        sigmoid_185 = torch.sigmoid(add_245) ;  add_245 = None
        mul_304 = torch.mul(getitem_2272,sigmoid_185) ;  getitem_2272 = sigmoid_185 = None
        _to_copy_1358 = arg767_1.to(dtype = torch.bfloat16) ;  arg767_1 = None
        unsqueeze_806 = torch.unsqueeze(mul_304,4) ;  mul_304 = None
        permute_1303 = unsqueeze_806.permute(0, 2, 4, 3, 1) ;  unsqueeze_806 = None
        unsqueeze_807 = torch.unsqueeze(_to_copy_1358,3) ;  _to_copy_1358 = None
        unsqueeze_808 = torch.unsqueeze(unsqueeze_807,4) ;  unsqueeze_807 = None
        permute_1304 = unsqueeze_808.permute(3, 4, 2, 1, 0) ;  unsqueeze_808 = None
        permute_1305 = permute_1303.permute(1, 3, 4, 0, 2) ;  permute_1303 = None
        clone_213 = torch.clone(permute_1305,memory_format = torch.contiguous_format) ;  permute_1305 = None
        _unsafe_view_182 = clone_213.view(1, 512, 384) ;  clone_213 = None
        permute_1306 = permute_1304.permute(3, 4, 0, 2, 1) ;  permute_1304 = None
        clone_214 = torch.clone(permute_1306,memory_format = torch.contiguous_format) ;  permute_1306 = None
        _unsafe_view_183 = clone_214.view(1, 384, 384) ;  clone_214 = None
        bmm_197 = torch.bmm(_unsafe_view_182,_unsafe_view_183) ;  _unsafe_view_182 = _unsafe_view_183 = None
        view_2398 = bmm_197.view(512, 1, 1, 1, 384) ;  bmm_197 = None
        permute_1307 = view_2398.permute(3, 0, 4, 1, 2) ;  view_2398 = None
        view_2399 = permute_1307.view(1, 512, 384) ;  permute_1307 = None
        unsqueeze_809 = torch.unsqueeze(arg1406_1,-1) 
        mul_305 = torch.mul(view_2399,unsqueeze_809) ;  view_2399 = unsqueeze_809 = None
        add_246 = torch.add(add_239,mul_305) ;  mul_305 = None
        split_tensor_241 = torch.split(add_239,512,dim = -2) ;  add_239 = None
        getitem_2276 = split_tensor_241[0];  split_tensor_241 = None
        _to_copy_1359 = getitem_2276.to(dtype = torch.float32) ;  getitem_2276 = None
        native_layer_norm_default_281 = (torch.nn.functional.layer_norm(_to_copy_1359,[384],arg756_1,arg757_1,1e-05),) ;  _to_copy_1359 = arg756_1 = arg757_1 = None
        getitem_2277 = native_layer_norm_default_281[0]
        _to_copy_1360 = arg758_1.to(dtype = torch.bfloat16) ;  arg758_1 = None
        _to_copy_1361 = getitem_2277.to(dtype = torch.bfloat16) ;  getitem_2277 = None
        t_499 = _to_copy_1360.t() ;  _to_copy_1360 = None
        view_2400 = _to_copy_1361.view(512, 384) ;  _to_copy_1361 = None
        mm_465 = torch.mm(view_2400,t_499) ;  view_2400 = t_499 = None
        view_2401 = mm_465.view(1, 512, 1536) ;  mm_465 = None
        split_tensor_242 = torch.split(view_2401,768,dim = -1) ;  view_2401 = None
        getitem_2280 = split_tensor_242[0]
        getitem_2281 = split_tensor_242[1];  split_tensor_242 = None
        silu_65 = torch.nn.functional.silu(getitem_2280) ;  getitem_2280 = None
        mul_306 = torch.mul(silu_65,getitem_2281) ;  silu_65 = getitem_2281 = None
        _to_copy_1362 = arg759_1.to(dtype = torch.bfloat16) ;  arg759_1 = None
        t_500 = _to_copy_1362.t() ;  _to_copy_1362 = None
        view_2403 = mul_306.view(512, 768) ;  mul_306 = None
        mm_466 = torch.mm(view_2403,t_500) ;  view_2403 = t_500 = None
        view_2404 = mm_466.view(1, 512, 384) ;  mm_466 = None
        add_247 = torch.add(add_246,view_2404) ;  add_246 = view_2404 = None
        _to_copy_1363 = add_243.to(dtype = torch.float32) 
        native_layer_norm_default_282 = (torch.nn.functional.layer_norm(_to_copy_1363,[256],arg772_1,arg773_1,1e-05),) ;  _to_copy_1363 = arg772_1 = arg773_1 = None
        getitem_2282 = native_layer_norm_default_282[0]
        split_with_sizes_default_60 = torch.split(arg775_1,[512,512]) ;  arg775_1 = None
        getitem_2285 = split_with_sizes_default_60[0]
        getitem_2286 = split_with_sizes_default_60[1];  split_with_sizes_default_60 = None
        split_with_sizes_default_61 = torch.split(arg776_1,[512,512,256]) ;  arg776_1 = None
        getitem_2287 = split_with_sizes_default_61[0]
        getitem_2288 = split_with_sizes_default_61[1]
        getitem_2289 = split_with_sizes_default_61[2];  split_with_sizes_default_61 = None
        _to_copy_1364 = getitem_2285.to(dtype = torch.bfloat16) ;  getitem_2285 = None
        _to_copy_1365 = getitem_2282.to(dtype = torch.bfloat16) 
        t_501 = _to_copy_1364.t() ;  _to_copy_1364 = None
        view_2405 = _to_copy_1365.view(262144, 256) ;  _to_copy_1365 = None
        mm_467 = torch.mm(view_2405,t_501) ;  view_2405 = t_501 = None
        view_2406 = mm_467.view(1, 512, 512, 512) ;  mm_467 = None
        _to_copy_1366 = getitem_2287.to(dtype = torch.bfloat16) ;  getitem_2287 = None
        _to_copy_1367 = getitem_2282.to(dtype = torch.bfloat16) 
        t_502 = _to_copy_1366.t() ;  _to_copy_1366 = None
        view_2407 = _to_copy_1367.view(262144, 256) ;  _to_copy_1367 = None
        mm_468 = torch.mm(view_2407,t_502) ;  view_2407 = t_502 = None
        view_2408 = mm_468.view(1, 512, 512, 512) ;  mm_468 = None
        sigmoid_186 = torch.sigmoid(view_2408) ;  view_2408 = None
        mul_307 = torch.mul(view_2406,sigmoid_186) ;  view_2406 = sigmoid_186 = None
        unsqueeze_810 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_154 = torch.bitwise_not(unsqueeze_810) ;  unsqueeze_810 = None
        masked_fill_154 = mul_307.masked_fill(bitwise_not_154,0) ;  mul_307 = bitwise_not_154 = None
        split_tensor_243 = torch.split(masked_fill_154,256,dim = -1) 
        getitem_2292 = split_tensor_243[0]
        unsqueeze_813 = torch.unsqueeze(getitem_2292,4) ;  getitem_2292 = None
        permute_1312 = unsqueeze_813.permute(0, 1, 4, 3, 2) ;  unsqueeze_813 = None
        permute_1313 = permute_1312.permute(3, 1, 4, 0, 2) ;  permute_1312 = None
        view_2411 = permute_1313.view(256, 512, 512) ;  permute_1313 = None
        split_tensor_244 = torch.split(masked_fill_154,256,dim = -1) ;  masked_fill_154 = None
        getitem_2295 = split_tensor_244[1];  split_tensor_244 = None
        unsqueeze_814 = torch.unsqueeze(getitem_2295,4) ;  getitem_2295 = None
        permute_1314 = unsqueeze_814.permute(0, 4, 1, 3, 2) ;  unsqueeze_814 = None
        permute_1315 = permute_1314.permute(3, 4, 0, 2, 1) ;  permute_1314 = None
        view_2412 = permute_1315.view(256, 512, 512) ;  permute_1315 = None
        bmm_198 = torch.bmm(view_2411,view_2412) ;  view_2411 = view_2412 = None
        view_2413 = bmm_198.view(256, 512, 1, 1, 512) ;  bmm_198 = None
        permute_1316 = view_2413.permute(3, 1, 4, 0, 2) ;  view_2413 = None
        view_2414 = permute_1316.view(1, 512, 512, 256) ;  permute_1316 = None
        _to_copy_1368 = getitem_2286.to(dtype = torch.bfloat16) ;  getitem_2286 = None
        _to_copy_1369 = getitem_2282.to(dtype = torch.bfloat16) 
        t_503 = _to_copy_1368.t() ;  _to_copy_1368 = None
        view_2415 = _to_copy_1369.view(262144, 256) ;  _to_copy_1369 = None
        mm_469 = torch.mm(view_2415,t_503) ;  view_2415 = t_503 = None
        view_2416 = mm_469.view(1, 512, 512, 512) ;  mm_469 = None
        _to_copy_1370 = getitem_2288.to(dtype = torch.bfloat16) ;  getitem_2288 = None
        _to_copy_1371 = getitem_2282.to(dtype = torch.bfloat16) 
        t_504 = _to_copy_1370.t() ;  _to_copy_1370 = None
        view_2417 = _to_copy_1371.view(262144, 256) ;  _to_copy_1371 = None
        mm_470 = torch.mm(view_2417,t_504) ;  view_2417 = t_504 = None
        view_2418 = mm_470.view(1, 512, 512, 512) ;  mm_470 = None
        sigmoid_187 = torch.sigmoid(view_2418) ;  view_2418 = None
        mul_308 = torch.mul(view_2416,sigmoid_187) ;  view_2416 = sigmoid_187 = None
        view_2419 = mul_308.view(262144, 512) ;  mul_308 = None
        view_2420 = view_2419.view(1, 512, 512, 512) ;  view_2419 = None
        transpose_60 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_815 = torch.unsqueeze(transpose_60,3) ;  transpose_60 = None
        clone_215 = torch.clone(unsqueeze_815,memory_format = torch.contiguous_format) ;  unsqueeze_815 = None
        bitwise_not_155 = torch.bitwise_not(clone_215) ;  clone_215 = None
        masked_fill_155 = view_2420.masked_fill(bitwise_not_155,0) ;  view_2420 = bitwise_not_155 = None
        view_2421 = masked_fill_155.view(262144, 512) ;  masked_fill_155 = None
        view_2425 = view_2421.view(1, 512, 512, 512) 
        split_tensor_245 = torch.split(view_2425,256,dim = -1) ;  view_2425 = None
        getitem_2298 = split_tensor_245[0]
        unsqueeze_818 = torch.unsqueeze(getitem_2298,4) ;  getitem_2298 = None
        permute_1321 = unsqueeze_818.permute(0, 2, 4, 3, 1) ;  unsqueeze_818 = None
        permute_1322 = permute_1321.permute(3, 1, 4, 0, 2) ;  permute_1321 = None
        view_2426 = permute_1322.view(256, 512, 512) ;  permute_1322 = None
        view_2427 = view_2421.view(1, 512, 512, 512) ;  view_2421 = None
        split_tensor_246 = torch.split(view_2427,256,dim = -1) ;  view_2427 = None
        getitem_2301 = split_tensor_246[1];  split_tensor_246 = None
        unsqueeze_819 = torch.unsqueeze(getitem_2301,4) ;  getitem_2301 = None
        permute_1323 = unsqueeze_819.permute(0, 4, 2, 3, 1) ;  unsqueeze_819 = None
        permute_1324 = permute_1323.permute(3, 4, 0, 2, 1) ;  permute_1323 = None
        view_2428 = permute_1324.view(256, 512, 512) ;  permute_1324 = None
        bmm_199 = torch.bmm(view_2426,view_2428) ;  view_2426 = view_2428 = None
        view_2429 = bmm_199.view(256, 512, 1, 1, 512) ;  bmm_199 = None
        permute_1325 = view_2429.permute(3, 1, 4, 0, 2) ;  view_2429 = None
        view_2430 = permute_1325.view(1, 512, 512, 256) ;  permute_1325 = None
        _to_copy_1372 = view_2414.to(dtype = torch.float32) ;  view_2414 = None
        native_layer_norm_default_283 = (torch.nn.functional.layer_norm(_to_copy_1372,[256],None,None,1e-05),) ;  _to_copy_1372 = None
        getitem_2302 = native_layer_norm_default_283[0]
        _to_copy_1373 = view_2430.to(dtype = torch.float32) ;  view_2430 = None
        native_layer_norm_default_284 = (torch.nn.functional.layer_norm(_to_copy_1373,[256],None,None,1e-05),) ;  _to_copy_1373 = None
        getitem_2305 = native_layer_norm_default_284[0]
        add_248 = torch.add(getitem_2302,getitem_2305) ;  getitem_2302 = getitem_2305 = None
        _to_copy_1374 = arg774_1.to(dtype = torch.bfloat16) ;  arg774_1 = None
        _to_copy_1375 = add_248.to(dtype = torch.bfloat16) ;  add_248 = None
        t_505 = _to_copy_1374.t() ;  _to_copy_1374 = None
        view_2431 = _to_copy_1375.view(262144, 256) ;  _to_copy_1375 = None
        mm_471 = torch.mm(view_2431,t_505) ;  view_2431 = t_505 = None
        view_2432 = mm_471.view(1, 512, 512, 256) ;  mm_471 = None
        _to_copy_1376 = getitem_2289.to(dtype = torch.bfloat16) ;  getitem_2289 = None
        _to_copy_1377 = getitem_2282.to(dtype = torch.bfloat16) ;  getitem_2282 = None
        t_506 = _to_copy_1376.t() ;  _to_copy_1376 = None
        view_2433 = _to_copy_1377.view(262144, 256) ;  _to_copy_1377 = None
        mm_472 = torch.mm(view_2433,t_506) ;  view_2433 = t_506 = None
        view_2434 = mm_472.view(1, 512, 512, 256) ;  mm_472 = None
        sigmoid_188 = torch.sigmoid(view_2434) ;  view_2434 = None
        mul_309 = torch.mul(view_2432,sigmoid_188) ;  view_2432 = sigmoid_188 = None
        add_249 = torch.add(add_243,mul_309) ;  mul_309 = None
        _to_copy_1378 = add_243.to(dtype = torch.float32) 
        native_layer_norm_default_285 = (torch.nn.functional.layer_norm(_to_copy_1378,[256],None,None,1e-05),) ;  _to_copy_1378 = None
        getitem_2308 = native_layer_norm_default_285[0]
        _to_copy_1379 = arg778_1.to(dtype = torch.bfloat16) ;  arg778_1 = None
        _to_copy_1380 = getitem_2308.to(dtype = torch.bfloat16) 
        t_507 = _to_copy_1379.t() ;  _to_copy_1379 = None
        view_2435 = _to_copy_1380.view(262144, 256) ;  _to_copy_1380 = None
        mm_473 = torch.mm(view_2435,t_507) ;  view_2435 = t_507 = None
        view_2436 = mm_473.view(1, 512, 512, 8) ;  mm_473 = None
        view_2437 = view_2436.view(1, 512, 512, 2, 4) ;  view_2436 = None
        permute_1326 = view_2437.permute(0, 3, 4, 1, 2) ;  view_2437 = None
        view_2438 = permute_1326.view(1, 2, 4, 1, 512, 512) ;  permute_1326 = None
        view_2439 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_156 = torch.bitwise_not(view_2439) ;  view_2439 = None
        masked_fill_156 = view_2438.masked_fill(bitwise_not_156,-10000) ;  view_2438 = bitwise_not_156 = None
        view_2440 = masked_fill_156.view(1, 2, 4, 512, 512) ;  masked_fill_156 = None
        permute_1327 = view_2440.permute(1, 0, 2, 3, 4) ;  view_2440 = None
        view_2441 = permute_1327.view(2, 4, 1, 512, 512) ;  permute_1327 = None
        _to_copy_1381 = arg779_1.to(dtype = torch.bfloat16) ;  arg779_1 = None
        _to_copy_1382 = getitem_2308.to(dtype = torch.bfloat16) 
        t_508 = _to_copy_1381.t() ;  _to_copy_1381 = None
        view_2442 = _to_copy_1382.view(262144, 256) ;  _to_copy_1382 = None
        mm_474 = torch.mm(view_2442,t_508) ;  view_2442 = t_508 = None
        view_2443 = mm_474.view(1, 512, 512, 1024) ;  mm_474 = None
        select_61 = torch.select(view_2441,0,0) 
        view_2444 = view_2443.view(1, 512, 512, 4, 4, 64) ;  view_2443 = None
        permute_1328 = view_2444.permute(4, 0, 3, 1, 2, 5) ;  view_2444 = None
        view_2445 = permute_1328.view(4, 4, 512, 512, 64) ;  permute_1328 = None
        unbind_int_112 = torch.unbind(view_2445) ;  view_2445 = None
        getitem_2311 = unbind_int_112[0]
        getitem_2312 = unbind_int_112[1]
        getitem_2313 = unbind_int_112[2]
        getitem_2314 = unbind_int_112[3];  unbind_int_112 = None
        expand_147 = select_61.expand(4, 512, 512, 512) ;  select_61 = None
        _scaled_dot_product_efficient_attention_default_84 = (torch.nn.functional.scaled_dot_product_attention(getitem_2311,getitem_2312,getitem_2313,expand_147,False),) ;  getitem_2311 = getitem_2312 = getitem_2313 = expand_147 = None
        getitem_2315 = _scaled_dot_product_efficient_attention_default_84[0]
        sigmoid_189 = torch.sigmoid(getitem_2314) ;  getitem_2314 = None
        mul_310 = torch.mul(getitem_2315,sigmoid_189) ;  getitem_2315 = sigmoid_189 = None
        view_2446 = mul_310.view(1, 4, 512, 512, 64) ;  mul_310 = None
        permute_1329 = view_2446.permute(0, 2, 3, 1, 4) ;  view_2446 = None
        clone_216 = torch.clone(permute_1329,memory_format = torch.contiguous_format) ;  permute_1329 = None
        _unsafe_view_184 = clone_216.view(1, 512, 512, 256) ;  clone_216 = None
        transpose_61 = torch.transpose(getitem_2308,1,2) ;  getitem_2308 = None
        _to_copy_1383 = arg780_1.to(dtype = torch.bfloat16) ;  arg780_1 = None
        _to_copy_1384 = transpose_61.to(dtype = torch.bfloat16) ;  transpose_61 = None
        t_509 = _to_copy_1383.t() ;  _to_copy_1383 = None
        expand_148 = _to_copy_1384.expand(1, 512, 512, 256) ;  _to_copy_1384 = None
        view_2447 = expand_148.view(512, 512, 256) ;  expand_148 = None
        expand_149 = t_509.expand(1, 512, 256, 1024) ;  t_509 = None
        view_2448 = expand_149.view(512, 256, 1024) ;  expand_149 = None
        bmm_200 = torch.bmm(view_2447,view_2448) ;  view_2447 = view_2448 = None
        view_2449 = bmm_200.view(1, 512, 512, 1024) ;  bmm_200 = None
        select_62 = torch.select(view_2441,0,1) ;  view_2441 = None
        view_2450 = view_2449.view(1, 512, 512, 4, 4, 64) ;  view_2449 = None
        permute_1330 = view_2450.permute(4, 0, 3, 1, 2, 5) ;  view_2450 = None
        view_2451 = permute_1330.view(4, 4, 512, 512, 64) ;  permute_1330 = None
        unbind_int_113 = torch.unbind(view_2451) ;  view_2451 = None
        getitem_2319 = unbind_int_113[0]
        getitem_2320 = unbind_int_113[1]
        getitem_2321 = unbind_int_113[2]
        getitem_2322 = unbind_int_113[3];  unbind_int_113 = None
        expand_150 = select_62.expand(4, 512, 512, 512) ;  select_62 = None
        _scaled_dot_product_efficient_attention_default_85 = (torch.nn.functional.scaled_dot_product_attention(getitem_2319,getitem_2320,getitem_2321,expand_150,False),) ;  getitem_2319 = getitem_2320 = getitem_2321 = expand_150 = None
        getitem_2323 = _scaled_dot_product_efficient_attention_default_85[0]
        sigmoid_190 = torch.sigmoid(getitem_2322) ;  getitem_2322 = None
        mul_311 = torch.mul(getitem_2323,sigmoid_190) ;  getitem_2323 = sigmoid_190 = None
        view_2452 = mul_311.view(1, 4, 512, 512, 64) ;  mul_311 = None
        permute_1331 = view_2452.permute(0, 2, 3, 1, 4) ;  view_2452 = None
        clone_217 = torch.clone(permute_1331,memory_format = torch.contiguous_format) ;  permute_1331 = None
        _unsafe_view_185 = clone_217.view(1, 512, 512, 256) ;  clone_217 = None
        cat_36 = torch.cat([_unsafe_view_184,_unsafe_view_185],dim = -1) ;  _unsafe_view_184 = _unsafe_view_185 = None
        slice_229 = arg777_1[0:] ;  arg777_1 = None
        unsqueeze_820 = torch.unsqueeze(slice_229,1) ;  slice_229 = None
        mul_312 = torch.mul(arg781_1,unsqueeze_820) ;  arg781_1 = unsqueeze_820 = None
        _to_copy_1385 = mul_312.to(dtype = torch.bfloat16) ;  mul_312 = None
        t_510 = _to_copy_1385.t() ;  _to_copy_1385 = None
        view_2453 = cat_36.view(262144, 512) ;  cat_36 = None
        mm_475 = torch.mm(view_2453,t_510) ;  view_2453 = t_510 = None
        view_2454 = mm_475.view(1, 512, 512, 256) ;  mm_475 = None
        add_250 = torch.add(add_249,view_2454) ;  add_249 = view_2454 = None
        split_tensor_247 = torch.split(add_243,512,dim = -2) 
        getitem_2327 = split_tensor_247[0];  split_tensor_247 = None
        _to_copy_1386 = getitem_2327.to(dtype = torch.float32) ;  getitem_2327 = None
        native_layer_norm_default_286 = (torch.nn.functional.layer_norm(_to_copy_1386,[256],arg768_1,arg769_1,1e-05),) ;  _to_copy_1386 = arg768_1 = arg769_1 = None
        getitem_2328 = native_layer_norm_default_286[0]
        _to_copy_1387 = arg770_1.to(dtype = torch.bfloat16) ;  arg770_1 = None
        _to_copy_1388 = getitem_2328.to(dtype = torch.bfloat16) ;  getitem_2328 = None
        t_511 = _to_copy_1387.t() ;  _to_copy_1387 = None
        view_2455 = _to_copy_1388.view(262144, 256) ;  _to_copy_1388 = None
        mm_476 = torch.mm(view_2455,t_511) ;  view_2455 = t_511 = None
        view_2456 = mm_476.view(1, 512, 512, 1024) ;  mm_476 = None
        split_tensor_248 = torch.split(view_2456,512,dim = -1) ;  view_2456 = None
        getitem_2331 = split_tensor_248[0]
        getitem_2332 = split_tensor_248[1];  split_tensor_248 = None
        silu_66 = torch.nn.functional.silu(getitem_2331) ;  getitem_2331 = None
        mul_313 = torch.mul(silu_66,getitem_2332) ;  silu_66 = getitem_2332 = None
        _to_copy_1389 = arg771_1.to(dtype = torch.bfloat16) ;  arg771_1 = None
        t_512 = _to_copy_1389.t() ;  _to_copy_1389 = None
        view_2458 = mul_313.view(262144, 512) ;  mul_313 = None
        mm_477 = torch.mm(view_2458,t_512) ;  view_2458 = t_512 = None
        view_2459 = mm_477.view(1, 512, 512, 256) ;  mm_477 = None
        add_251 = torch.add(add_250,view_2459) ;  add_250 = view_2459 = None
        _to_copy_1390 = add_247.to(dtype = torch.float32) 
        native_layer_norm_default_287 = (torch.nn.functional.layer_norm(_to_copy_1390,[384],arg786_1,arg787_1,1e-05),) ;  _to_copy_1390 = arg786_1 = arg787_1 = None
        getitem_2333 = native_layer_norm_default_287[0]
        _to_copy_1391 = add_243.to(dtype = torch.float32) ;  add_243 = None
        native_layer_norm_default_288 = (torch.nn.functional.layer_norm(_to_copy_1391,[256],arg788_1,arg789_1,1e-05),) ;  _to_copy_1391 = arg788_1 = arg789_1 = None
        getitem_2336 = native_layer_norm_default_288[0]
        _to_copy_1392 = arg790_1.to(dtype = torch.bfloat16) ;  arg790_1 = None
        _to_copy_1393 = getitem_2336.to(dtype = torch.bfloat16) ;  getitem_2336 = None
        t_513 = _to_copy_1392.t() ;  _to_copy_1392 = None
        view_2460 = _to_copy_1393.view(262144, 256) ;  _to_copy_1393 = None
        mm_478 = torch.mm(view_2460,t_513) ;  view_2460 = t_513 = None
        view_2461 = mm_478.view(1, 512, 512, 16) ;  mm_478 = None
        permute_1332 = view_2461.permute(0, 3, 1, 2) ;  view_2461 = None
        view_2462 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_157 = torch.bitwise_not(view_2462) ;  view_2462 = None
        masked_fill_157 = permute_1332.masked_fill(bitwise_not_157,-10000) ;  permute_1332 = bitwise_not_157 = None
        _to_copy_1394 = getitem_2333.to(dtype = torch.bfloat16) ;  getitem_2333 = None
        _to_copy_1395 = arg792_1.to(dtype = torch.bfloat16) ;  arg792_1 = None
        unsqueeze_821 = torch.unsqueeze(_to_copy_1394,3) ;  _to_copy_1394 = None
        unsqueeze_822 = torch.unsqueeze(unsqueeze_821,4) ;  unsqueeze_821 = None
        unsqueeze_823 = torch.unsqueeze(unsqueeze_822,5) ;  unsqueeze_822 = None
        permute_1333 = unsqueeze_823.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_823 = None
        unsqueeze_824 = torch.unsqueeze(_to_copy_1395,4) ;  _to_copy_1395 = None
        unsqueeze_825 = torch.unsqueeze(unsqueeze_824,5) ;  unsqueeze_824 = None
        permute_1334 = unsqueeze_825.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_825 = None
        permute_1335 = permute_1333.permute(3, 5, 0, 1, 2, 4) ;  permute_1333 = None
        view_2463 = permute_1335.view(1, 512, 384) ;  permute_1335 = None
        permute_1336 = permute_1334.permute(5, 0, 1, 2, 4, 3) ;  permute_1334 = None
        view_2464 = permute_1336.view(1, 384, 1536) ;  permute_1336 = None
        bmm_201 = torch.bmm(view_2463,view_2464) ;  view_2463 = view_2464 = None
        view_2465 = bmm_201.view(512, 1, 4, 1, 16, 24) ;  bmm_201 = None
        permute_1337 = view_2465.permute(2, 3, 4, 0, 5, 1) ;  view_2465 = None
        view_2466 = permute_1337.view(4, 1, 16, 512, 24) ;  permute_1337 = None
        unbind_int_114 = torch.unbind(view_2466) ;  view_2466 = None
        getitem_2339 = unbind_int_114[0]
        getitem_2340 = unbind_int_114[1]
        getitem_2341 = unbind_int_114[2]
        getitem_2342 = unbind_int_114[3];  unbind_int_114 = None
        view_2467 = arg791_1.view(1, 16, 1, 24) ;  arg791_1 = None
        add_252 = torch.add(getitem_2339,view_2467) ;  getitem_2339 = view_2467 = None
        _to_copy_1396 = add_252.to(dtype = torch.bfloat16) ;  add_252 = None
        expand_151 = masked_fill_157.expand(1, 16, 512, 512) ;  masked_fill_157 = None
        _scaled_dot_product_efficient_attention_default_86 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1396,getitem_2340,getitem_2341,expand_151,False),) ;  _to_copy_1396 = getitem_2340 = getitem_2341 = expand_151 = None
        getitem_2343 = _scaled_dot_product_efficient_attention_default_86[0]
        add_253 = torch.add(getitem_2342,1) ;  getitem_2342 = None
        sigmoid_191 = torch.sigmoid(add_253) ;  add_253 = None
        mul_314 = torch.mul(getitem_2343,sigmoid_191) ;  getitem_2343 = sigmoid_191 = None
        _to_copy_1397 = arg793_1.to(dtype = torch.bfloat16) ;  arg793_1 = None
        unsqueeze_826 = torch.unsqueeze(mul_314,4) ;  mul_314 = None
        permute_1338 = unsqueeze_826.permute(0, 2, 4, 3, 1) ;  unsqueeze_826 = None
        unsqueeze_827 = torch.unsqueeze(_to_copy_1397,3) ;  _to_copy_1397 = None
        unsqueeze_828 = torch.unsqueeze(unsqueeze_827,4) ;  unsqueeze_827 = None
        permute_1339 = unsqueeze_828.permute(3, 4, 2, 1, 0) ;  unsqueeze_828 = None
        permute_1340 = permute_1338.permute(1, 3, 4, 0, 2) ;  permute_1338 = None
        clone_218 = torch.clone(permute_1340,memory_format = torch.contiguous_format) ;  permute_1340 = None
        _unsafe_view_186 = clone_218.view(1, 512, 384) ;  clone_218 = None
        permute_1341 = permute_1339.permute(3, 4, 0, 2, 1) ;  permute_1339 = None
        clone_219 = torch.clone(permute_1341,memory_format = torch.contiguous_format) ;  permute_1341 = None
        _unsafe_view_187 = clone_219.view(1, 384, 384) ;  clone_219 = None
        bmm_202 = torch.bmm(_unsafe_view_186,_unsafe_view_187) ;  _unsafe_view_186 = _unsafe_view_187 = None
        view_2468 = bmm_202.view(512, 1, 1, 1, 384) ;  bmm_202 = None
        permute_1342 = view_2468.permute(3, 0, 4, 1, 2) ;  view_2468 = None
        view_2469 = permute_1342.view(1, 512, 384) ;  permute_1342 = None
        unsqueeze_829 = torch.unsqueeze(arg1406_1,-1) 
        mul_315 = torch.mul(view_2469,unsqueeze_829) ;  view_2469 = unsqueeze_829 = None
        add_254 = torch.add(add_247,mul_315) ;  mul_315 = None
        split_tensor_249 = torch.split(add_247,512,dim = -2) ;  add_247 = None
        getitem_2347 = split_tensor_249[0];  split_tensor_249 = None
        _to_copy_1398 = getitem_2347.to(dtype = torch.float32) ;  getitem_2347 = None
        native_layer_norm_default_289 = (torch.nn.functional.layer_norm(_to_copy_1398,[384],arg782_1,arg783_1,1e-05),) ;  _to_copy_1398 = arg782_1 = arg783_1 = None
        getitem_2348 = native_layer_norm_default_289[0]
        _to_copy_1399 = arg784_1.to(dtype = torch.bfloat16) ;  arg784_1 = None
        _to_copy_1400 = getitem_2348.to(dtype = torch.bfloat16) ;  getitem_2348 = None
        t_514 = _to_copy_1399.t() ;  _to_copy_1399 = None
        view_2470 = _to_copy_1400.view(512, 384) ;  _to_copy_1400 = None
        mm_479 = torch.mm(view_2470,t_514) ;  view_2470 = t_514 = None
        view_2471 = mm_479.view(1, 512, 1536) ;  mm_479 = None
        split_tensor_250 = torch.split(view_2471,768,dim = -1) ;  view_2471 = None
        getitem_2351 = split_tensor_250[0]
        getitem_2352 = split_tensor_250[1];  split_tensor_250 = None
        silu_67 = torch.nn.functional.silu(getitem_2351) ;  getitem_2351 = None
        mul_316 = torch.mul(silu_67,getitem_2352) ;  silu_67 = getitem_2352 = None
        _to_copy_1401 = arg785_1.to(dtype = torch.bfloat16) ;  arg785_1 = None
        t_515 = _to_copy_1401.t() ;  _to_copy_1401 = None
        view_2473 = mul_316.view(512, 768) ;  mul_316 = None
        mm_480 = torch.mm(view_2473,t_515) ;  view_2473 = t_515 = None
        view_2474 = mm_480.view(1, 512, 384) ;  mm_480 = None
        add_255 = torch.add(add_254,view_2474) ;  add_254 = view_2474 = None
        _to_copy_1402 = add_251.to(dtype = torch.float32) 
        native_layer_norm_default_290 = (torch.nn.functional.layer_norm(_to_copy_1402,[256],arg798_1,arg799_1,1e-05),) ;  _to_copy_1402 = arg798_1 = arg799_1 = None
        getitem_2353 = native_layer_norm_default_290[0]
        split_with_sizes_default_62 = torch.split(arg801_1,[512,512]) ;  arg801_1 = None
        getitem_2356 = split_with_sizes_default_62[0]
        getitem_2357 = split_with_sizes_default_62[1];  split_with_sizes_default_62 = None
        split_with_sizes_default_63 = torch.split(arg802_1,[512,512,256]) ;  arg802_1 = None
        getitem_2358 = split_with_sizes_default_63[0]
        getitem_2359 = split_with_sizes_default_63[1]
        getitem_2360 = split_with_sizes_default_63[2];  split_with_sizes_default_63 = None
        _to_copy_1403 = getitem_2356.to(dtype = torch.bfloat16) ;  getitem_2356 = None
        _to_copy_1404 = getitem_2353.to(dtype = torch.bfloat16) 
        t_516 = _to_copy_1403.t() ;  _to_copy_1403 = None
        view_2475 = _to_copy_1404.view(262144, 256) ;  _to_copy_1404 = None
        mm_481 = torch.mm(view_2475,t_516) ;  view_2475 = t_516 = None
        view_2476 = mm_481.view(1, 512, 512, 512) ;  mm_481 = None
        _to_copy_1405 = getitem_2358.to(dtype = torch.bfloat16) ;  getitem_2358 = None
        _to_copy_1406 = getitem_2353.to(dtype = torch.bfloat16) 
        t_517 = _to_copy_1405.t() ;  _to_copy_1405 = None
        view_2477 = _to_copy_1406.view(262144, 256) ;  _to_copy_1406 = None
        mm_482 = torch.mm(view_2477,t_517) ;  view_2477 = t_517 = None
        view_2478 = mm_482.view(1, 512, 512, 512) ;  mm_482 = None
        sigmoid_192 = torch.sigmoid(view_2478) ;  view_2478 = None
        mul_317 = torch.mul(view_2476,sigmoid_192) ;  view_2476 = sigmoid_192 = None
        unsqueeze_830 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_158 = torch.bitwise_not(unsqueeze_830) ;  unsqueeze_830 = None
        masked_fill_158 = mul_317.masked_fill(bitwise_not_158,0) ;  mul_317 = bitwise_not_158 = None
        split_tensor_251 = torch.split(masked_fill_158,256,dim = -1) 
        getitem_2363 = split_tensor_251[0]
        unsqueeze_833 = torch.unsqueeze(getitem_2363,4) ;  getitem_2363 = None
        permute_1347 = unsqueeze_833.permute(0, 1, 4, 3, 2) ;  unsqueeze_833 = None
        permute_1348 = permute_1347.permute(3, 1, 4, 0, 2) ;  permute_1347 = None
        view_2481 = permute_1348.view(256, 512, 512) ;  permute_1348 = None
        split_tensor_252 = torch.split(masked_fill_158,256,dim = -1) ;  masked_fill_158 = None
        getitem_2366 = split_tensor_252[1];  split_tensor_252 = None
        unsqueeze_834 = torch.unsqueeze(getitem_2366,4) ;  getitem_2366 = None
        permute_1349 = unsqueeze_834.permute(0, 4, 1, 3, 2) ;  unsqueeze_834 = None
        permute_1350 = permute_1349.permute(3, 4, 0, 2, 1) ;  permute_1349 = None
        view_2482 = permute_1350.view(256, 512, 512) ;  permute_1350 = None
        bmm_203 = torch.bmm(view_2481,view_2482) ;  view_2481 = view_2482 = None
        view_2483 = bmm_203.view(256, 512, 1, 1, 512) ;  bmm_203 = None
        permute_1351 = view_2483.permute(3, 1, 4, 0, 2) ;  view_2483 = None
        view_2484 = permute_1351.view(1, 512, 512, 256) ;  permute_1351 = None
        _to_copy_1407 = getitem_2357.to(dtype = torch.bfloat16) ;  getitem_2357 = None
        _to_copy_1408 = getitem_2353.to(dtype = torch.bfloat16) 
        t_518 = _to_copy_1407.t() ;  _to_copy_1407 = None
        view_2485 = _to_copy_1408.view(262144, 256) ;  _to_copy_1408 = None
        mm_483 = torch.mm(view_2485,t_518) ;  view_2485 = t_518 = None
        view_2486 = mm_483.view(1, 512, 512, 512) ;  mm_483 = None
        _to_copy_1409 = getitem_2359.to(dtype = torch.bfloat16) ;  getitem_2359 = None
        _to_copy_1410 = getitem_2353.to(dtype = torch.bfloat16) 
        t_519 = _to_copy_1409.t() ;  _to_copy_1409 = None
        view_2487 = _to_copy_1410.view(262144, 256) ;  _to_copy_1410 = None
        mm_484 = torch.mm(view_2487,t_519) ;  view_2487 = t_519 = None
        view_2488 = mm_484.view(1, 512, 512, 512) ;  mm_484 = None
        sigmoid_193 = torch.sigmoid(view_2488) ;  view_2488 = None
        mul_318 = torch.mul(view_2486,sigmoid_193) ;  view_2486 = sigmoid_193 = None
        view_2489 = mul_318.view(262144, 512) ;  mul_318 = None
        view_2490 = view_2489.view(1, 512, 512, 512) ;  view_2489 = None
        transpose_62 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_835 = torch.unsqueeze(transpose_62,3) ;  transpose_62 = None
        clone_220 = torch.clone(unsqueeze_835,memory_format = torch.contiguous_format) ;  unsqueeze_835 = None
        bitwise_not_159 = torch.bitwise_not(clone_220) ;  clone_220 = None
        masked_fill_159 = view_2490.masked_fill(bitwise_not_159,0) ;  view_2490 = bitwise_not_159 = None
        view_2491 = masked_fill_159.view(262144, 512) ;  masked_fill_159 = None
        view_2495 = view_2491.view(1, 512, 512, 512) 
        split_tensor_253 = torch.split(view_2495,256,dim = -1) ;  view_2495 = None
        getitem_2369 = split_tensor_253[0]
        unsqueeze_838 = torch.unsqueeze(getitem_2369,4) ;  getitem_2369 = None
        permute_1356 = unsqueeze_838.permute(0, 2, 4, 3, 1) ;  unsqueeze_838 = None
        permute_1357 = permute_1356.permute(3, 1, 4, 0, 2) ;  permute_1356 = None
        view_2496 = permute_1357.view(256, 512, 512) ;  permute_1357 = None
        view_2497 = view_2491.view(1, 512, 512, 512) ;  view_2491 = None
        split_tensor_254 = torch.split(view_2497,256,dim = -1) ;  view_2497 = None
        getitem_2372 = split_tensor_254[1];  split_tensor_254 = None
        unsqueeze_839 = torch.unsqueeze(getitem_2372,4) ;  getitem_2372 = None
        permute_1358 = unsqueeze_839.permute(0, 4, 2, 3, 1) ;  unsqueeze_839 = None
        permute_1359 = permute_1358.permute(3, 4, 0, 2, 1) ;  permute_1358 = None
        view_2498 = permute_1359.view(256, 512, 512) ;  permute_1359 = None
        bmm_204 = torch.bmm(view_2496,view_2498) ;  view_2496 = view_2498 = None
        view_2499 = bmm_204.view(256, 512, 1, 1, 512) ;  bmm_204 = None
        permute_1360 = view_2499.permute(3, 1, 4, 0, 2) ;  view_2499 = None
        view_2500 = permute_1360.view(1, 512, 512, 256) ;  permute_1360 = None
        _to_copy_1411 = view_2484.to(dtype = torch.float32) ;  view_2484 = None
        native_layer_norm_default_291 = (torch.nn.functional.layer_norm(_to_copy_1411,[256],None,None,1e-05),) ;  _to_copy_1411 = None
        getitem_2373 = native_layer_norm_default_291[0]
        _to_copy_1412 = view_2500.to(dtype = torch.float32) ;  view_2500 = None
        native_layer_norm_default_292 = (torch.nn.functional.layer_norm(_to_copy_1412,[256],None,None,1e-05),) ;  _to_copy_1412 = None
        getitem_2376 = native_layer_norm_default_292[0]
        add_256 = torch.add(getitem_2373,getitem_2376) ;  getitem_2373 = getitem_2376 = None
        _to_copy_1413 = arg800_1.to(dtype = torch.bfloat16) ;  arg800_1 = None
        _to_copy_1414 = add_256.to(dtype = torch.bfloat16) ;  add_256 = None
        t_520 = _to_copy_1413.t() ;  _to_copy_1413 = None
        view_2501 = _to_copy_1414.view(262144, 256) ;  _to_copy_1414 = None
        mm_485 = torch.mm(view_2501,t_520) ;  view_2501 = t_520 = None
        view_2502 = mm_485.view(1, 512, 512, 256) ;  mm_485 = None
        _to_copy_1415 = getitem_2360.to(dtype = torch.bfloat16) ;  getitem_2360 = None
        _to_copy_1416 = getitem_2353.to(dtype = torch.bfloat16) ;  getitem_2353 = None
        t_521 = _to_copy_1415.t() ;  _to_copy_1415 = None
        view_2503 = _to_copy_1416.view(262144, 256) ;  _to_copy_1416 = None
        mm_486 = torch.mm(view_2503,t_521) ;  view_2503 = t_521 = None
        view_2504 = mm_486.view(1, 512, 512, 256) ;  mm_486 = None
        sigmoid_194 = torch.sigmoid(view_2504) ;  view_2504 = None
        mul_319 = torch.mul(view_2502,sigmoid_194) ;  view_2502 = sigmoid_194 = None
        add_257 = torch.add(add_251,mul_319) ;  mul_319 = None
        _to_copy_1417 = add_251.to(dtype = torch.float32) 
        native_layer_norm_default_293 = (torch.nn.functional.layer_norm(_to_copy_1417,[256],None,None,1e-05),) ;  _to_copy_1417 = None
        getitem_2379 = native_layer_norm_default_293[0]
        _to_copy_1418 = arg804_1.to(dtype = torch.bfloat16) ;  arg804_1 = None
        _to_copy_1419 = getitem_2379.to(dtype = torch.bfloat16) 
        t_522 = _to_copy_1418.t() ;  _to_copy_1418 = None
        view_2505 = _to_copy_1419.view(262144, 256) ;  _to_copy_1419 = None
        mm_487 = torch.mm(view_2505,t_522) ;  view_2505 = t_522 = None
        view_2506 = mm_487.view(1, 512, 512, 8) ;  mm_487 = None
        view_2507 = view_2506.view(1, 512, 512, 2, 4) ;  view_2506 = None
        permute_1361 = view_2507.permute(0, 3, 4, 1, 2) ;  view_2507 = None
        view_2508 = permute_1361.view(1, 2, 4, 1, 512, 512) ;  permute_1361 = None
        view_2509 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_160 = torch.bitwise_not(view_2509) ;  view_2509 = None
        masked_fill_160 = view_2508.masked_fill(bitwise_not_160,-10000) ;  view_2508 = bitwise_not_160 = None
        view_2510 = masked_fill_160.view(1, 2, 4, 512, 512) ;  masked_fill_160 = None
        permute_1362 = view_2510.permute(1, 0, 2, 3, 4) ;  view_2510 = None
        view_2511 = permute_1362.view(2, 4, 1, 512, 512) ;  permute_1362 = None
        _to_copy_1420 = arg805_1.to(dtype = torch.bfloat16) ;  arg805_1 = None
        _to_copy_1421 = getitem_2379.to(dtype = torch.bfloat16) 
        t_523 = _to_copy_1420.t() ;  _to_copy_1420 = None
        view_2512 = _to_copy_1421.view(262144, 256) ;  _to_copy_1421 = None
        mm_488 = torch.mm(view_2512,t_523) ;  view_2512 = t_523 = None
        view_2513 = mm_488.view(1, 512, 512, 1024) ;  mm_488 = None
        select_63 = torch.select(view_2511,0,0) 
        view_2514 = view_2513.view(1, 512, 512, 4, 4, 64) ;  view_2513 = None
        permute_1363 = view_2514.permute(4, 0, 3, 1, 2, 5) ;  view_2514 = None
        view_2515 = permute_1363.view(4, 4, 512, 512, 64) ;  permute_1363 = None
        unbind_int_115 = torch.unbind(view_2515) ;  view_2515 = None
        getitem_2382 = unbind_int_115[0]
        getitem_2383 = unbind_int_115[1]
        getitem_2384 = unbind_int_115[2]
        getitem_2385 = unbind_int_115[3];  unbind_int_115 = None
        expand_152 = select_63.expand(4, 512, 512, 512) ;  select_63 = None
        _scaled_dot_product_efficient_attention_default_87 = (torch.nn.functional.scaled_dot_product_attention(getitem_2382,getitem_2383,getitem_2384,expand_152,False),) ;  getitem_2382 = getitem_2383 = getitem_2384 = expand_152 = None
        getitem_2386 = _scaled_dot_product_efficient_attention_default_87[0]
        sigmoid_195 = torch.sigmoid(getitem_2385) ;  getitem_2385 = None
        mul_320 = torch.mul(getitem_2386,sigmoid_195) ;  getitem_2386 = sigmoid_195 = None
        view_2516 = mul_320.view(1, 4, 512, 512, 64) ;  mul_320 = None
        permute_1364 = view_2516.permute(0, 2, 3, 1, 4) ;  view_2516 = None
        clone_221 = torch.clone(permute_1364,memory_format = torch.contiguous_format) ;  permute_1364 = None
        _unsafe_view_188 = clone_221.view(1, 512, 512, 256) ;  clone_221 = None
        transpose_63 = torch.transpose(getitem_2379,1,2) ;  getitem_2379 = None
        _to_copy_1422 = arg806_1.to(dtype = torch.bfloat16) ;  arg806_1 = None
        _to_copy_1423 = transpose_63.to(dtype = torch.bfloat16) ;  transpose_63 = None
        t_524 = _to_copy_1422.t() ;  _to_copy_1422 = None
        expand_153 = _to_copy_1423.expand(1, 512, 512, 256) ;  _to_copy_1423 = None
        view_2517 = expand_153.view(512, 512, 256) ;  expand_153 = None
        expand_154 = t_524.expand(1, 512, 256, 1024) ;  t_524 = None
        view_2518 = expand_154.view(512, 256, 1024) ;  expand_154 = None
        bmm_205 = torch.bmm(view_2517,view_2518) ;  view_2517 = view_2518 = None
        view_2519 = bmm_205.view(1, 512, 512, 1024) ;  bmm_205 = None
        select_64 = torch.select(view_2511,0,1) ;  view_2511 = None
        view_2520 = view_2519.view(1, 512, 512, 4, 4, 64) ;  view_2519 = None
        permute_1365 = view_2520.permute(4, 0, 3, 1, 2, 5) ;  view_2520 = None
        view_2521 = permute_1365.view(4, 4, 512, 512, 64) ;  permute_1365 = None
        unbind_int_116 = torch.unbind(view_2521) ;  view_2521 = None
        getitem_2390 = unbind_int_116[0]
        getitem_2391 = unbind_int_116[1]
        getitem_2392 = unbind_int_116[2]
        getitem_2393 = unbind_int_116[3];  unbind_int_116 = None
        expand_155 = select_64.expand(4, 512, 512, 512) ;  select_64 = None
        _scaled_dot_product_efficient_attention_default_88 = (torch.nn.functional.scaled_dot_product_attention(getitem_2390,getitem_2391,getitem_2392,expand_155,False),) ;  getitem_2390 = getitem_2391 = getitem_2392 = expand_155 = None
        getitem_2394 = _scaled_dot_product_efficient_attention_default_88[0]
        sigmoid_196 = torch.sigmoid(getitem_2393) ;  getitem_2393 = None
        mul_321 = torch.mul(getitem_2394,sigmoid_196) ;  getitem_2394 = sigmoid_196 = None
        view_2522 = mul_321.view(1, 4, 512, 512, 64) ;  mul_321 = None
        permute_1366 = view_2522.permute(0, 2, 3, 1, 4) ;  view_2522 = None
        clone_222 = torch.clone(permute_1366,memory_format = torch.contiguous_format) ;  permute_1366 = None
        _unsafe_view_189 = clone_222.view(1, 512, 512, 256) ;  clone_222 = None
        cat_37 = torch.cat([_unsafe_view_188,_unsafe_view_189],dim = -1) ;  _unsafe_view_188 = _unsafe_view_189 = None
        slice_230 = arg803_1[0:] ;  arg803_1 = None
        unsqueeze_840 = torch.unsqueeze(slice_230,1) ;  slice_230 = None
        mul_322 = torch.mul(arg807_1,unsqueeze_840) ;  arg807_1 = unsqueeze_840 = None
        _to_copy_1424 = mul_322.to(dtype = torch.bfloat16) ;  mul_322 = None
        t_525 = _to_copy_1424.t() ;  _to_copy_1424 = None
        view_2523 = cat_37.view(262144, 512) ;  cat_37 = None
        mm_489 = torch.mm(view_2523,t_525) ;  view_2523 = t_525 = None
        view_2524 = mm_489.view(1, 512, 512, 256) ;  mm_489 = None
        add_258 = torch.add(add_257,view_2524) ;  add_257 = view_2524 = None
        split_tensor_255 = torch.split(add_251,512,dim = -2) 
        getitem_2398 = split_tensor_255[0];  split_tensor_255 = None
        _to_copy_1425 = getitem_2398.to(dtype = torch.float32) ;  getitem_2398 = None
        native_layer_norm_default_294 = (torch.nn.functional.layer_norm(_to_copy_1425,[256],arg794_1,arg795_1,1e-05),) ;  _to_copy_1425 = arg794_1 = arg795_1 = None
        getitem_2399 = native_layer_norm_default_294[0]
        _to_copy_1426 = arg796_1.to(dtype = torch.bfloat16) ;  arg796_1 = None
        _to_copy_1427 = getitem_2399.to(dtype = torch.bfloat16) ;  getitem_2399 = None
        t_526 = _to_copy_1426.t() ;  _to_copy_1426 = None
        view_2525 = _to_copy_1427.view(262144, 256) ;  _to_copy_1427 = None
        mm_490 = torch.mm(view_2525,t_526) ;  view_2525 = t_526 = None
        view_2526 = mm_490.view(1, 512, 512, 1024) ;  mm_490 = None
        split_tensor_256 = torch.split(view_2526,512,dim = -1) ;  view_2526 = None
        getitem_2402 = split_tensor_256[0]
        getitem_2403 = split_tensor_256[1];  split_tensor_256 = None
        silu_68 = torch.nn.functional.silu(getitem_2402) ;  getitem_2402 = None
        mul_323 = torch.mul(silu_68,getitem_2403) ;  silu_68 = getitem_2403 = None
        _to_copy_1428 = arg797_1.to(dtype = torch.bfloat16) ;  arg797_1 = None
        t_527 = _to_copy_1428.t() ;  _to_copy_1428 = None
        view_2528 = mul_323.view(262144, 512) ;  mul_323 = None
        mm_491 = torch.mm(view_2528,t_527) ;  view_2528 = t_527 = None
        view_2529 = mm_491.view(1, 512, 512, 256) ;  mm_491 = None
        add_259 = torch.add(add_258,view_2529) ;  add_258 = view_2529 = None
        _to_copy_1429 = add_255.to(dtype = torch.float32) 
        native_layer_norm_default_295 = (torch.nn.functional.layer_norm(_to_copy_1429,[384],arg812_1,arg813_1,1e-05),) ;  _to_copy_1429 = arg812_1 = arg813_1 = None
        getitem_2404 = native_layer_norm_default_295[0]
        _to_copy_1430 = add_251.to(dtype = torch.float32) ;  add_251 = None
        native_layer_norm_default_296 = (torch.nn.functional.layer_norm(_to_copy_1430,[256],arg814_1,arg815_1,1e-05),) ;  _to_copy_1430 = arg814_1 = arg815_1 = None
        getitem_2407 = native_layer_norm_default_296[0]
        _to_copy_1431 = arg816_1.to(dtype = torch.bfloat16) ;  arg816_1 = None
        _to_copy_1432 = getitem_2407.to(dtype = torch.bfloat16) ;  getitem_2407 = None
        t_528 = _to_copy_1431.t() ;  _to_copy_1431 = None
        view_2530 = _to_copy_1432.view(262144, 256) ;  _to_copy_1432 = None
        mm_492 = torch.mm(view_2530,t_528) ;  view_2530 = t_528 = None
        view_2531 = mm_492.view(1, 512, 512, 16) ;  mm_492 = None
        permute_1367 = view_2531.permute(0, 3, 1, 2) ;  view_2531 = None
        view_2532 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_161 = torch.bitwise_not(view_2532) ;  view_2532 = None
        masked_fill_161 = permute_1367.masked_fill(bitwise_not_161,-10000) ;  permute_1367 = bitwise_not_161 = None
        _to_copy_1433 = getitem_2404.to(dtype = torch.bfloat16) ;  getitem_2404 = None
        _to_copy_1434 = arg818_1.to(dtype = torch.bfloat16) ;  arg818_1 = None
        unsqueeze_841 = torch.unsqueeze(_to_copy_1433,3) ;  _to_copy_1433 = None
        unsqueeze_842 = torch.unsqueeze(unsqueeze_841,4) ;  unsqueeze_841 = None
        unsqueeze_843 = torch.unsqueeze(unsqueeze_842,5) ;  unsqueeze_842 = None
        permute_1368 = unsqueeze_843.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_843 = None
        unsqueeze_844 = torch.unsqueeze(_to_copy_1434,4) ;  _to_copy_1434 = None
        unsqueeze_845 = torch.unsqueeze(unsqueeze_844,5) ;  unsqueeze_844 = None
        permute_1369 = unsqueeze_845.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_845 = None
        permute_1370 = permute_1368.permute(3, 5, 0, 1, 2, 4) ;  permute_1368 = None
        view_2533 = permute_1370.view(1, 512, 384) ;  permute_1370 = None
        permute_1371 = permute_1369.permute(5, 0, 1, 2, 4, 3) ;  permute_1369 = None
        view_2534 = permute_1371.view(1, 384, 1536) ;  permute_1371 = None
        bmm_206 = torch.bmm(view_2533,view_2534) ;  view_2533 = view_2534 = None
        view_2535 = bmm_206.view(512, 1, 4, 1, 16, 24) ;  bmm_206 = None
        permute_1372 = view_2535.permute(2, 3, 4, 0, 5, 1) ;  view_2535 = None
        view_2536 = permute_1372.view(4, 1, 16, 512, 24) ;  permute_1372 = None
        unbind_int_117 = torch.unbind(view_2536) ;  view_2536 = None
        getitem_2410 = unbind_int_117[0]
        getitem_2411 = unbind_int_117[1]
        getitem_2412 = unbind_int_117[2]
        getitem_2413 = unbind_int_117[3];  unbind_int_117 = None
        view_2537 = arg817_1.view(1, 16, 1, 24) ;  arg817_1 = None
        add_260 = torch.add(getitem_2410,view_2537) ;  getitem_2410 = view_2537 = None
        _to_copy_1435 = add_260.to(dtype = torch.bfloat16) ;  add_260 = None
        expand_156 = masked_fill_161.expand(1, 16, 512, 512) ;  masked_fill_161 = None
        _scaled_dot_product_efficient_attention_default_89 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1435,getitem_2411,getitem_2412,expand_156,False),) ;  _to_copy_1435 = getitem_2411 = getitem_2412 = expand_156 = None
        getitem_2414 = _scaled_dot_product_efficient_attention_default_89[0]
        add_261 = torch.add(getitem_2413,1) ;  getitem_2413 = None
        sigmoid_197 = torch.sigmoid(add_261) ;  add_261 = None
        mul_324 = torch.mul(getitem_2414,sigmoid_197) ;  getitem_2414 = sigmoid_197 = None
        _to_copy_1436 = arg819_1.to(dtype = torch.bfloat16) ;  arg819_1 = None
        unsqueeze_846 = torch.unsqueeze(mul_324,4) ;  mul_324 = None
        permute_1373 = unsqueeze_846.permute(0, 2, 4, 3, 1) ;  unsqueeze_846 = None
        unsqueeze_847 = torch.unsqueeze(_to_copy_1436,3) ;  _to_copy_1436 = None
        unsqueeze_848 = torch.unsqueeze(unsqueeze_847,4) ;  unsqueeze_847 = None
        permute_1374 = unsqueeze_848.permute(3, 4, 2, 1, 0) ;  unsqueeze_848 = None
        permute_1375 = permute_1373.permute(1, 3, 4, 0, 2) ;  permute_1373 = None
        clone_223 = torch.clone(permute_1375,memory_format = torch.contiguous_format) ;  permute_1375 = None
        _unsafe_view_190 = clone_223.view(1, 512, 384) ;  clone_223 = None
        permute_1376 = permute_1374.permute(3, 4, 0, 2, 1) ;  permute_1374 = None
        clone_224 = torch.clone(permute_1376,memory_format = torch.contiguous_format) ;  permute_1376 = None
        _unsafe_view_191 = clone_224.view(1, 384, 384) ;  clone_224 = None
        bmm_207 = torch.bmm(_unsafe_view_190,_unsafe_view_191) ;  _unsafe_view_190 = _unsafe_view_191 = None
        view_2538 = bmm_207.view(512, 1, 1, 1, 384) ;  bmm_207 = None
        permute_1377 = view_2538.permute(3, 0, 4, 1, 2) ;  view_2538 = None
        view_2539 = permute_1377.view(1, 512, 384) ;  permute_1377 = None
        unsqueeze_849 = torch.unsqueeze(arg1406_1,-1) 
        mul_325 = torch.mul(view_2539,unsqueeze_849) ;  view_2539 = unsqueeze_849 = None
        add_262 = torch.add(add_255,mul_325) ;  mul_325 = None
        split_tensor_257 = torch.split(add_255,512,dim = -2) ;  add_255 = None
        getitem_2418 = split_tensor_257[0];  split_tensor_257 = None
        _to_copy_1437 = getitem_2418.to(dtype = torch.float32) ;  getitem_2418 = None
        native_layer_norm_default_297 = (torch.nn.functional.layer_norm(_to_copy_1437,[384],arg808_1,arg809_1,1e-05),) ;  _to_copy_1437 = arg808_1 = arg809_1 = None
        getitem_2419 = native_layer_norm_default_297[0]
        _to_copy_1438 = arg810_1.to(dtype = torch.bfloat16) ;  arg810_1 = None
        _to_copy_1439 = getitem_2419.to(dtype = torch.bfloat16) ;  getitem_2419 = None
        t_529 = _to_copy_1438.t() ;  _to_copy_1438 = None
        view_2540 = _to_copy_1439.view(512, 384) ;  _to_copy_1439 = None
        mm_493 = torch.mm(view_2540,t_529) ;  view_2540 = t_529 = None
        view_2541 = mm_493.view(1, 512, 1536) ;  mm_493 = None
        split_tensor_258 = torch.split(view_2541,768,dim = -1) ;  view_2541 = None
        getitem_2422 = split_tensor_258[0]
        getitem_2423 = split_tensor_258[1];  split_tensor_258 = None
        silu_69 = torch.nn.functional.silu(getitem_2422) ;  getitem_2422 = None
        mul_326 = torch.mul(silu_69,getitem_2423) ;  silu_69 = getitem_2423 = None
        _to_copy_1440 = arg811_1.to(dtype = torch.bfloat16) ;  arg811_1 = None
        t_530 = _to_copy_1440.t() ;  _to_copy_1440 = None
        view_2543 = mul_326.view(512, 768) ;  mul_326 = None
        mm_494 = torch.mm(view_2543,t_530) ;  view_2543 = t_530 = None
        view_2544 = mm_494.view(1, 512, 384) ;  mm_494 = None
        add_263 = torch.add(add_262,view_2544) ;  add_262 = view_2544 = None
        _to_copy_1441 = add_259.to(dtype = torch.float32) 
        native_layer_norm_default_298 = (torch.nn.functional.layer_norm(_to_copy_1441,[256],arg824_1,arg825_1,1e-05),) ;  _to_copy_1441 = arg824_1 = arg825_1 = None
        getitem_2424 = native_layer_norm_default_298[0]
        split_with_sizes_default_64 = torch.split(arg827_1,[512,512]) ;  arg827_1 = None
        getitem_2427 = split_with_sizes_default_64[0]
        getitem_2428 = split_with_sizes_default_64[1];  split_with_sizes_default_64 = None
        split_with_sizes_default_65 = torch.split(arg828_1,[512,512,256]) ;  arg828_1 = None
        getitem_2429 = split_with_sizes_default_65[0]
        getitem_2430 = split_with_sizes_default_65[1]
        getitem_2431 = split_with_sizes_default_65[2];  split_with_sizes_default_65 = None
        _to_copy_1442 = getitem_2427.to(dtype = torch.bfloat16) ;  getitem_2427 = None
        _to_copy_1443 = getitem_2424.to(dtype = torch.bfloat16) 
        t_531 = _to_copy_1442.t() ;  _to_copy_1442 = None
        view_2545 = _to_copy_1443.view(262144, 256) ;  _to_copy_1443 = None
        mm_495 = torch.mm(view_2545,t_531) ;  view_2545 = t_531 = None
        view_2546 = mm_495.view(1, 512, 512, 512) ;  mm_495 = None
        _to_copy_1444 = getitem_2429.to(dtype = torch.bfloat16) ;  getitem_2429 = None
        _to_copy_1445 = getitem_2424.to(dtype = torch.bfloat16) 
        t_532 = _to_copy_1444.t() ;  _to_copy_1444 = None
        view_2547 = _to_copy_1445.view(262144, 256) ;  _to_copy_1445 = None
        mm_496 = torch.mm(view_2547,t_532) ;  view_2547 = t_532 = None
        view_2548 = mm_496.view(1, 512, 512, 512) ;  mm_496 = None
        sigmoid_198 = torch.sigmoid(view_2548) ;  view_2548 = None
        mul_327 = torch.mul(view_2546,sigmoid_198) ;  view_2546 = sigmoid_198 = None
        unsqueeze_850 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_162 = torch.bitwise_not(unsqueeze_850) ;  unsqueeze_850 = None
        masked_fill_162 = mul_327.masked_fill(bitwise_not_162,0) ;  mul_327 = bitwise_not_162 = None
        split_tensor_259 = torch.split(masked_fill_162,256,dim = -1) 
        getitem_2434 = split_tensor_259[0]
        unsqueeze_853 = torch.unsqueeze(getitem_2434,4) ;  getitem_2434 = None
        permute_1382 = unsqueeze_853.permute(0, 1, 4, 3, 2) ;  unsqueeze_853 = None
        permute_1383 = permute_1382.permute(3, 1, 4, 0, 2) ;  permute_1382 = None
        view_2551 = permute_1383.view(256, 512, 512) ;  permute_1383 = None
        split_tensor_260 = torch.split(masked_fill_162,256,dim = -1) ;  masked_fill_162 = None
        getitem_2437 = split_tensor_260[1];  split_tensor_260 = None
        unsqueeze_854 = torch.unsqueeze(getitem_2437,4) ;  getitem_2437 = None
        permute_1384 = unsqueeze_854.permute(0, 4, 1, 3, 2) ;  unsqueeze_854 = None
        permute_1385 = permute_1384.permute(3, 4, 0, 2, 1) ;  permute_1384 = None
        view_2552 = permute_1385.view(256, 512, 512) ;  permute_1385 = None
        bmm_208 = torch.bmm(view_2551,view_2552) ;  view_2551 = view_2552 = None
        view_2553 = bmm_208.view(256, 512, 1, 1, 512) ;  bmm_208 = None
        permute_1386 = view_2553.permute(3, 1, 4, 0, 2) ;  view_2553 = None
        view_2554 = permute_1386.view(1, 512, 512, 256) ;  permute_1386 = None
        _to_copy_1446 = getitem_2428.to(dtype = torch.bfloat16) ;  getitem_2428 = None
        _to_copy_1447 = getitem_2424.to(dtype = torch.bfloat16) 
        t_533 = _to_copy_1446.t() ;  _to_copy_1446 = None
        view_2555 = _to_copy_1447.view(262144, 256) ;  _to_copy_1447 = None
        mm_497 = torch.mm(view_2555,t_533) ;  view_2555 = t_533 = None
        view_2556 = mm_497.view(1, 512, 512, 512) ;  mm_497 = None
        _to_copy_1448 = getitem_2430.to(dtype = torch.bfloat16) ;  getitem_2430 = None
        _to_copy_1449 = getitem_2424.to(dtype = torch.bfloat16) 
        t_534 = _to_copy_1448.t() ;  _to_copy_1448 = None
        view_2557 = _to_copy_1449.view(262144, 256) ;  _to_copy_1449 = None
        mm_498 = torch.mm(view_2557,t_534) ;  view_2557 = t_534 = None
        view_2558 = mm_498.view(1, 512, 512, 512) ;  mm_498 = None
        sigmoid_199 = torch.sigmoid(view_2558) ;  view_2558 = None
        mul_328 = torch.mul(view_2556,sigmoid_199) ;  view_2556 = sigmoid_199 = None
        view_2559 = mul_328.view(262144, 512) ;  mul_328 = None
        view_2560 = view_2559.view(1, 512, 512, 512) ;  view_2559 = None
        transpose_64 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_855 = torch.unsqueeze(transpose_64,3) ;  transpose_64 = None
        clone_225 = torch.clone(unsqueeze_855,memory_format = torch.contiguous_format) ;  unsqueeze_855 = None
        bitwise_not_163 = torch.bitwise_not(clone_225) ;  clone_225 = None
        masked_fill_163 = view_2560.masked_fill(bitwise_not_163,0) ;  view_2560 = bitwise_not_163 = None
        view_2561 = masked_fill_163.view(262144, 512) ;  masked_fill_163 = None
        view_2565 = view_2561.view(1, 512, 512, 512) 
        split_tensor_261 = torch.split(view_2565,256,dim = -1) ;  view_2565 = None
        getitem_2440 = split_tensor_261[0]
        unsqueeze_858 = torch.unsqueeze(getitem_2440,4) ;  getitem_2440 = None
        permute_1391 = unsqueeze_858.permute(0, 2, 4, 3, 1) ;  unsqueeze_858 = None
        permute_1392 = permute_1391.permute(3, 1, 4, 0, 2) ;  permute_1391 = None
        view_2566 = permute_1392.view(256, 512, 512) ;  permute_1392 = None
        view_2567 = view_2561.view(1, 512, 512, 512) ;  view_2561 = None
        split_tensor_262 = torch.split(view_2567,256,dim = -1) ;  view_2567 = None
        getitem_2443 = split_tensor_262[1];  split_tensor_262 = None
        unsqueeze_859 = torch.unsqueeze(getitem_2443,4) ;  getitem_2443 = None
        permute_1393 = unsqueeze_859.permute(0, 4, 2, 3, 1) ;  unsqueeze_859 = None
        permute_1394 = permute_1393.permute(3, 4, 0, 2, 1) ;  permute_1393 = None
        view_2568 = permute_1394.view(256, 512, 512) ;  permute_1394 = None
        bmm_209 = torch.bmm(view_2566,view_2568) ;  view_2566 = view_2568 = None
        view_2569 = bmm_209.view(256, 512, 1, 1, 512) ;  bmm_209 = None
        permute_1395 = view_2569.permute(3, 1, 4, 0, 2) ;  view_2569 = None
        view_2570 = permute_1395.view(1, 512, 512, 256) ;  permute_1395 = None
        _to_copy_1450 = view_2554.to(dtype = torch.float32) ;  view_2554 = None
        native_layer_norm_default_299 = (torch.nn.functional.layer_norm(_to_copy_1450,[256],None,None,1e-05),) ;  _to_copy_1450 = None
        getitem_2444 = native_layer_norm_default_299[0]
        _to_copy_1451 = view_2570.to(dtype = torch.float32) ;  view_2570 = None
        native_layer_norm_default_300 = (torch.nn.functional.layer_norm(_to_copy_1451,[256],None,None,1e-05),) ;  _to_copy_1451 = None
        getitem_2447 = native_layer_norm_default_300[0]
        add_264 = torch.add(getitem_2444,getitem_2447) ;  getitem_2444 = getitem_2447 = None
        _to_copy_1452 = arg826_1.to(dtype = torch.bfloat16) ;  arg826_1 = None
        _to_copy_1453 = add_264.to(dtype = torch.bfloat16) ;  add_264 = None
        t_535 = _to_copy_1452.t() ;  _to_copy_1452 = None
        view_2571 = _to_copy_1453.view(262144, 256) ;  _to_copy_1453 = None
        mm_499 = torch.mm(view_2571,t_535) ;  view_2571 = t_535 = None
        view_2572 = mm_499.view(1, 512, 512, 256) ;  mm_499 = None
        _to_copy_1454 = getitem_2431.to(dtype = torch.bfloat16) ;  getitem_2431 = None
        _to_copy_1455 = getitem_2424.to(dtype = torch.bfloat16) ;  getitem_2424 = None
        t_536 = _to_copy_1454.t() ;  _to_copy_1454 = None
        view_2573 = _to_copy_1455.view(262144, 256) ;  _to_copy_1455 = None
        mm_500 = torch.mm(view_2573,t_536) ;  view_2573 = t_536 = None
        view_2574 = mm_500.view(1, 512, 512, 256) ;  mm_500 = None
        sigmoid_200 = torch.sigmoid(view_2574) ;  view_2574 = None
        mul_329 = torch.mul(view_2572,sigmoid_200) ;  view_2572 = sigmoid_200 = None
        add_265 = torch.add(add_259,mul_329) ;  mul_329 = None
        _to_copy_1456 = add_259.to(dtype = torch.float32) 
        native_layer_norm_default_301 = (torch.nn.functional.layer_norm(_to_copy_1456,[256],None,None,1e-05),) ;  _to_copy_1456 = None
        getitem_2450 = native_layer_norm_default_301[0]
        _to_copy_1457 = arg830_1.to(dtype = torch.bfloat16) ;  arg830_1 = None
        _to_copy_1458 = getitem_2450.to(dtype = torch.bfloat16) 
        t_537 = _to_copy_1457.t() ;  _to_copy_1457 = None
        view_2575 = _to_copy_1458.view(262144, 256) ;  _to_copy_1458 = None
        mm_501 = torch.mm(view_2575,t_537) ;  view_2575 = t_537 = None
        view_2576 = mm_501.view(1, 512, 512, 8) ;  mm_501 = None
        view_2577 = view_2576.view(1, 512, 512, 2, 4) ;  view_2576 = None
        permute_1396 = view_2577.permute(0, 3, 4, 1, 2) ;  view_2577 = None
        view_2578 = permute_1396.view(1, 2, 4, 1, 512, 512) ;  permute_1396 = None
        view_2579 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_164 = torch.bitwise_not(view_2579) ;  view_2579 = None
        masked_fill_164 = view_2578.masked_fill(bitwise_not_164,-10000) ;  view_2578 = bitwise_not_164 = None
        view_2580 = masked_fill_164.view(1, 2, 4, 512, 512) ;  masked_fill_164 = None
        permute_1397 = view_2580.permute(1, 0, 2, 3, 4) ;  view_2580 = None
        view_2581 = permute_1397.view(2, 4, 1, 512, 512) ;  permute_1397 = None
        _to_copy_1459 = arg831_1.to(dtype = torch.bfloat16) ;  arg831_1 = None
        _to_copy_1460 = getitem_2450.to(dtype = torch.bfloat16) 
        t_538 = _to_copy_1459.t() ;  _to_copy_1459 = None
        view_2582 = _to_copy_1460.view(262144, 256) ;  _to_copy_1460 = None
        mm_502 = torch.mm(view_2582,t_538) ;  view_2582 = t_538 = None
        view_2583 = mm_502.view(1, 512, 512, 1024) ;  mm_502 = None
        select_65 = torch.select(view_2581,0,0) 
        view_2584 = view_2583.view(1, 512, 512, 4, 4, 64) ;  view_2583 = None
        permute_1398 = view_2584.permute(4, 0, 3, 1, 2, 5) ;  view_2584 = None
        view_2585 = permute_1398.view(4, 4, 512, 512, 64) ;  permute_1398 = None
        unbind_int_118 = torch.unbind(view_2585) ;  view_2585 = None
        getitem_2453 = unbind_int_118[0]
        getitem_2454 = unbind_int_118[1]
        getitem_2455 = unbind_int_118[2]
        getitem_2456 = unbind_int_118[3];  unbind_int_118 = None
        expand_157 = select_65.expand(4, 512, 512, 512) ;  select_65 = None
        _scaled_dot_product_efficient_attention_default_90 = (torch.nn.functional.scaled_dot_product_attention(getitem_2453,getitem_2454,getitem_2455,expand_157,False),) ;  getitem_2453 = getitem_2454 = getitem_2455 = expand_157 = None
        getitem_2457 = _scaled_dot_product_efficient_attention_default_90[0]
        sigmoid_201 = torch.sigmoid(getitem_2456) ;  getitem_2456 = None
        mul_330 = torch.mul(getitem_2457,sigmoid_201) ;  getitem_2457 = sigmoid_201 = None
        view_2586 = mul_330.view(1, 4, 512, 512, 64) ;  mul_330 = None
        permute_1399 = view_2586.permute(0, 2, 3, 1, 4) ;  view_2586 = None
        clone_226 = torch.clone(permute_1399,memory_format = torch.contiguous_format) ;  permute_1399 = None
        _unsafe_view_192 = clone_226.view(1, 512, 512, 256) ;  clone_226 = None
        transpose_65 = torch.transpose(getitem_2450,1,2) ;  getitem_2450 = None
        _to_copy_1461 = arg832_1.to(dtype = torch.bfloat16) ;  arg832_1 = None
        _to_copy_1462 = transpose_65.to(dtype = torch.bfloat16) ;  transpose_65 = None
        t_539 = _to_copy_1461.t() ;  _to_copy_1461 = None
        expand_158 = _to_copy_1462.expand(1, 512, 512, 256) ;  _to_copy_1462 = None
        view_2587 = expand_158.view(512, 512, 256) ;  expand_158 = None
        expand_159 = t_539.expand(1, 512, 256, 1024) ;  t_539 = None
        view_2588 = expand_159.view(512, 256, 1024) ;  expand_159 = None
        bmm_210 = torch.bmm(view_2587,view_2588) ;  view_2587 = view_2588 = None
        view_2589 = bmm_210.view(1, 512, 512, 1024) ;  bmm_210 = None
        select_66 = torch.select(view_2581,0,1) ;  view_2581 = None
        view_2590 = view_2589.view(1, 512, 512, 4, 4, 64) ;  view_2589 = None
        permute_1400 = view_2590.permute(4, 0, 3, 1, 2, 5) ;  view_2590 = None
        view_2591 = permute_1400.view(4, 4, 512, 512, 64) ;  permute_1400 = None
        unbind_int_119 = torch.unbind(view_2591) ;  view_2591 = None
        getitem_2461 = unbind_int_119[0]
        getitem_2462 = unbind_int_119[1]
        getitem_2463 = unbind_int_119[2]
        getitem_2464 = unbind_int_119[3];  unbind_int_119 = None
        expand_160 = select_66.expand(4, 512, 512, 512) ;  select_66 = None
        _scaled_dot_product_efficient_attention_default_91 = (torch.nn.functional.scaled_dot_product_attention(getitem_2461,getitem_2462,getitem_2463,expand_160,False),) ;  getitem_2461 = getitem_2462 = getitem_2463 = expand_160 = None
        getitem_2465 = _scaled_dot_product_efficient_attention_default_91[0]
        sigmoid_202 = torch.sigmoid(getitem_2464) ;  getitem_2464 = None
        mul_331 = torch.mul(getitem_2465,sigmoid_202) ;  getitem_2465 = sigmoid_202 = None
        view_2592 = mul_331.view(1, 4, 512, 512, 64) ;  mul_331 = None
        permute_1401 = view_2592.permute(0, 2, 3, 1, 4) ;  view_2592 = None
        clone_227 = torch.clone(permute_1401,memory_format = torch.contiguous_format) ;  permute_1401 = None
        _unsafe_view_193 = clone_227.view(1, 512, 512, 256) ;  clone_227 = None
        cat_38 = torch.cat([_unsafe_view_192,_unsafe_view_193],dim = -1) ;  _unsafe_view_192 = _unsafe_view_193 = None
        slice_231 = arg829_1[0:] ;  arg829_1 = None
        unsqueeze_860 = torch.unsqueeze(slice_231,1) ;  slice_231 = None
        mul_332 = torch.mul(arg833_1,unsqueeze_860) ;  arg833_1 = unsqueeze_860 = None
        _to_copy_1463 = mul_332.to(dtype = torch.bfloat16) ;  mul_332 = None
        t_540 = _to_copy_1463.t() ;  _to_copy_1463 = None
        view_2593 = cat_38.view(262144, 512) ;  cat_38 = None
        mm_503 = torch.mm(view_2593,t_540) ;  view_2593 = t_540 = None
        view_2594 = mm_503.view(1, 512, 512, 256) ;  mm_503 = None
        add_266 = torch.add(add_265,view_2594) ;  add_265 = view_2594 = None
        split_tensor_263 = torch.split(add_259,512,dim = -2) 
        getitem_2469 = split_tensor_263[0];  split_tensor_263 = None
        _to_copy_1464 = getitem_2469.to(dtype = torch.float32) ;  getitem_2469 = None
        native_layer_norm_default_302 = (torch.nn.functional.layer_norm(_to_copy_1464,[256],arg820_1,arg821_1,1e-05),) ;  _to_copy_1464 = arg820_1 = arg821_1 = None
        getitem_2470 = native_layer_norm_default_302[0]
        _to_copy_1465 = arg822_1.to(dtype = torch.bfloat16) ;  arg822_1 = None
        _to_copy_1466 = getitem_2470.to(dtype = torch.bfloat16) ;  getitem_2470 = None
        t_541 = _to_copy_1465.t() ;  _to_copy_1465 = None
        view_2595 = _to_copy_1466.view(262144, 256) ;  _to_copy_1466 = None
        mm_504 = torch.mm(view_2595,t_541) ;  view_2595 = t_541 = None
        view_2596 = mm_504.view(1, 512, 512, 1024) ;  mm_504 = None
        split_tensor_264 = torch.split(view_2596,512,dim = -1) ;  view_2596 = None
        getitem_2473 = split_tensor_264[0]
        getitem_2474 = split_tensor_264[1];  split_tensor_264 = None
        silu_70 = torch.nn.functional.silu(getitem_2473) ;  getitem_2473 = None
        mul_333 = torch.mul(silu_70,getitem_2474) ;  silu_70 = getitem_2474 = None
        _to_copy_1467 = arg823_1.to(dtype = torch.bfloat16) ;  arg823_1 = None
        t_542 = _to_copy_1467.t() ;  _to_copy_1467 = None
        view_2598 = mul_333.view(262144, 512) ;  mul_333 = None
        mm_505 = torch.mm(view_2598,t_542) ;  view_2598 = t_542 = None
        view_2599 = mm_505.view(1, 512, 512, 256) ;  mm_505 = None
        add_267 = torch.add(add_266,view_2599) ;  add_266 = view_2599 = None
        _to_copy_1468 = add_263.to(dtype = torch.float32) 
        native_layer_norm_default_303 = (torch.nn.functional.layer_norm(_to_copy_1468,[384],arg838_1,arg839_1,1e-05),) ;  _to_copy_1468 = arg838_1 = arg839_1 = None
        getitem_2475 = native_layer_norm_default_303[0]
        _to_copy_1469 = add_259.to(dtype = torch.float32) ;  add_259 = None
        native_layer_norm_default_304 = (torch.nn.functional.layer_norm(_to_copy_1469,[256],arg840_1,arg841_1,1e-05),) ;  _to_copy_1469 = arg840_1 = arg841_1 = None
        getitem_2478 = native_layer_norm_default_304[0]
        _to_copy_1470 = arg842_1.to(dtype = torch.bfloat16) ;  arg842_1 = None
        _to_copy_1471 = getitem_2478.to(dtype = torch.bfloat16) ;  getitem_2478 = None
        t_543 = _to_copy_1470.t() ;  _to_copy_1470 = None
        view_2600 = _to_copy_1471.view(262144, 256) ;  _to_copy_1471 = None
        mm_506 = torch.mm(view_2600,t_543) ;  view_2600 = t_543 = None
        view_2601 = mm_506.view(1, 512, 512, 16) ;  mm_506 = None
        permute_1402 = view_2601.permute(0, 3, 1, 2) ;  view_2601 = None
        view_2602 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_165 = torch.bitwise_not(view_2602) ;  view_2602 = None
        masked_fill_165 = permute_1402.masked_fill(bitwise_not_165,-10000) ;  permute_1402 = bitwise_not_165 = None
        _to_copy_1472 = getitem_2475.to(dtype = torch.bfloat16) ;  getitem_2475 = None
        _to_copy_1473 = arg844_1.to(dtype = torch.bfloat16) ;  arg844_1 = None
        unsqueeze_861 = torch.unsqueeze(_to_copy_1472,3) ;  _to_copy_1472 = None
        unsqueeze_862 = torch.unsqueeze(unsqueeze_861,4) ;  unsqueeze_861 = None
        unsqueeze_863 = torch.unsqueeze(unsqueeze_862,5) ;  unsqueeze_862 = None
        permute_1403 = unsqueeze_863.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_863 = None
        unsqueeze_864 = torch.unsqueeze(_to_copy_1473,4) ;  _to_copy_1473 = None
        unsqueeze_865 = torch.unsqueeze(unsqueeze_864,5) ;  unsqueeze_864 = None
        permute_1404 = unsqueeze_865.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_865 = None
        permute_1405 = permute_1403.permute(3, 5, 0, 1, 2, 4) ;  permute_1403 = None
        view_2603 = permute_1405.view(1, 512, 384) ;  permute_1405 = None
        permute_1406 = permute_1404.permute(5, 0, 1, 2, 4, 3) ;  permute_1404 = None
        view_2604 = permute_1406.view(1, 384, 1536) ;  permute_1406 = None
        bmm_211 = torch.bmm(view_2603,view_2604) ;  view_2603 = view_2604 = None
        view_2605 = bmm_211.view(512, 1, 4, 1, 16, 24) ;  bmm_211 = None
        permute_1407 = view_2605.permute(2, 3, 4, 0, 5, 1) ;  view_2605 = None
        view_2606 = permute_1407.view(4, 1, 16, 512, 24) ;  permute_1407 = None
        unbind_int_120 = torch.unbind(view_2606) ;  view_2606 = None
        getitem_2481 = unbind_int_120[0]
        getitem_2482 = unbind_int_120[1]
        getitem_2483 = unbind_int_120[2]
        getitem_2484 = unbind_int_120[3];  unbind_int_120 = None
        view_2607 = arg843_1.view(1, 16, 1, 24) ;  arg843_1 = None
        add_268 = torch.add(getitem_2481,view_2607) ;  getitem_2481 = view_2607 = None
        _to_copy_1474 = add_268.to(dtype = torch.bfloat16) ;  add_268 = None
        expand_161 = masked_fill_165.expand(1, 16, 512, 512) ;  masked_fill_165 = None
        _scaled_dot_product_efficient_attention_default_92 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1474,getitem_2482,getitem_2483,expand_161,False),) ;  _to_copy_1474 = getitem_2482 = getitem_2483 = expand_161 = None
        getitem_2485 = _scaled_dot_product_efficient_attention_default_92[0]
        add_269 = torch.add(getitem_2484,1) ;  getitem_2484 = None
        sigmoid_203 = torch.sigmoid(add_269) ;  add_269 = None
        mul_334 = torch.mul(getitem_2485,sigmoid_203) ;  getitem_2485 = sigmoid_203 = None
        _to_copy_1475 = arg845_1.to(dtype = torch.bfloat16) ;  arg845_1 = None
        unsqueeze_866 = torch.unsqueeze(mul_334,4) ;  mul_334 = None
        permute_1408 = unsqueeze_866.permute(0, 2, 4, 3, 1) ;  unsqueeze_866 = None
        unsqueeze_867 = torch.unsqueeze(_to_copy_1475,3) ;  _to_copy_1475 = None
        unsqueeze_868 = torch.unsqueeze(unsqueeze_867,4) ;  unsqueeze_867 = None
        permute_1409 = unsqueeze_868.permute(3, 4, 2, 1, 0) ;  unsqueeze_868 = None
        permute_1410 = permute_1408.permute(1, 3, 4, 0, 2) ;  permute_1408 = None
        clone_228 = torch.clone(permute_1410,memory_format = torch.contiguous_format) ;  permute_1410 = None
        _unsafe_view_194 = clone_228.view(1, 512, 384) ;  clone_228 = None
        permute_1411 = permute_1409.permute(3, 4, 0, 2, 1) ;  permute_1409 = None
        clone_229 = torch.clone(permute_1411,memory_format = torch.contiguous_format) ;  permute_1411 = None
        _unsafe_view_195 = clone_229.view(1, 384, 384) ;  clone_229 = None
        bmm_212 = torch.bmm(_unsafe_view_194,_unsafe_view_195) ;  _unsafe_view_194 = _unsafe_view_195 = None
        view_2608 = bmm_212.view(512, 1, 1, 1, 384) ;  bmm_212 = None
        permute_1412 = view_2608.permute(3, 0, 4, 1, 2) ;  view_2608 = None
        view_2609 = permute_1412.view(1, 512, 384) ;  permute_1412 = None
        unsqueeze_869 = torch.unsqueeze(arg1406_1,-1) 
        mul_335 = torch.mul(view_2609,unsqueeze_869) ;  view_2609 = unsqueeze_869 = None
        add_270 = torch.add(add_263,mul_335) ;  mul_335 = None
        split_tensor_265 = torch.split(add_263,512,dim = -2) ;  add_263 = None
        getitem_2489 = split_tensor_265[0];  split_tensor_265 = None
        _to_copy_1476 = getitem_2489.to(dtype = torch.float32) ;  getitem_2489 = None
        native_layer_norm_default_305 = (torch.nn.functional.layer_norm(_to_copy_1476,[384],arg834_1,arg835_1,1e-05),) ;  _to_copy_1476 = arg834_1 = arg835_1 = None
        getitem_2490 = native_layer_norm_default_305[0]
        _to_copy_1477 = arg836_1.to(dtype = torch.bfloat16) ;  arg836_1 = None
        _to_copy_1478 = getitem_2490.to(dtype = torch.bfloat16) ;  getitem_2490 = None
        t_544 = _to_copy_1477.t() ;  _to_copy_1477 = None
        view_2610 = _to_copy_1478.view(512, 384) ;  _to_copy_1478 = None
        mm_507 = torch.mm(view_2610,t_544) ;  view_2610 = t_544 = None
        view_2611 = mm_507.view(1, 512, 1536) ;  mm_507 = None
        split_tensor_266 = torch.split(view_2611,768,dim = -1) ;  view_2611 = None
        getitem_2493 = split_tensor_266[0]
        getitem_2494 = split_tensor_266[1];  split_tensor_266 = None
        silu_71 = torch.nn.functional.silu(getitem_2493) ;  getitem_2493 = None
        mul_336 = torch.mul(silu_71,getitem_2494) ;  silu_71 = getitem_2494 = None
        _to_copy_1479 = arg837_1.to(dtype = torch.bfloat16) ;  arg837_1 = None
        t_545 = _to_copy_1479.t() ;  _to_copy_1479 = None
        view_2613 = mul_336.view(512, 768) ;  mul_336 = None
        mm_508 = torch.mm(view_2613,t_545) ;  view_2613 = t_545 = None
        view_2614 = mm_508.view(1, 512, 384) ;  mm_508 = None
        add_271 = torch.add(add_270,view_2614) ;  add_270 = view_2614 = None
        _to_copy_1480 = add_267.to(dtype = torch.float32) 
        native_layer_norm_default_306 = (torch.nn.functional.layer_norm(_to_copy_1480,[256],arg850_1,arg851_1,1e-05),) ;  _to_copy_1480 = arg850_1 = arg851_1 = None
        getitem_2495 = native_layer_norm_default_306[0]
        split_with_sizes_default_66 = torch.split(arg853_1,[512,512]) ;  arg853_1 = None
        getitem_2498 = split_with_sizes_default_66[0]
        getitem_2499 = split_with_sizes_default_66[1];  split_with_sizes_default_66 = None
        split_with_sizes_default_67 = torch.split(arg854_1,[512,512,256]) ;  arg854_1 = None
        getitem_2500 = split_with_sizes_default_67[0]
        getitem_2501 = split_with_sizes_default_67[1]
        getitem_2502 = split_with_sizes_default_67[2];  split_with_sizes_default_67 = None
        _to_copy_1481 = getitem_2498.to(dtype = torch.bfloat16) ;  getitem_2498 = None
        _to_copy_1482 = getitem_2495.to(dtype = torch.bfloat16) 
        t_546 = _to_copy_1481.t() ;  _to_copy_1481 = None
        view_2615 = _to_copy_1482.view(262144, 256) ;  _to_copy_1482 = None
        mm_509 = torch.mm(view_2615,t_546) ;  view_2615 = t_546 = None
        view_2616 = mm_509.view(1, 512, 512, 512) ;  mm_509 = None
        _to_copy_1483 = getitem_2500.to(dtype = torch.bfloat16) ;  getitem_2500 = None
        _to_copy_1484 = getitem_2495.to(dtype = torch.bfloat16) 
        t_547 = _to_copy_1483.t() ;  _to_copy_1483 = None
        view_2617 = _to_copy_1484.view(262144, 256) ;  _to_copy_1484 = None
        mm_510 = torch.mm(view_2617,t_547) ;  view_2617 = t_547 = None
        view_2618 = mm_510.view(1, 512, 512, 512) ;  mm_510 = None
        sigmoid_204 = torch.sigmoid(view_2618) ;  view_2618 = None
        mul_337 = torch.mul(view_2616,sigmoid_204) ;  view_2616 = sigmoid_204 = None
        unsqueeze_870 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_166 = torch.bitwise_not(unsqueeze_870) ;  unsqueeze_870 = None
        masked_fill_166 = mul_337.masked_fill(bitwise_not_166,0) ;  mul_337 = bitwise_not_166 = None
        split_tensor_267 = torch.split(masked_fill_166,256,dim = -1) 
        getitem_2505 = split_tensor_267[0]
        unsqueeze_873 = torch.unsqueeze(getitem_2505,4) ;  getitem_2505 = None
        permute_1417 = unsqueeze_873.permute(0, 1, 4, 3, 2) ;  unsqueeze_873 = None
        permute_1418 = permute_1417.permute(3, 1, 4, 0, 2) ;  permute_1417 = None
        view_2621 = permute_1418.view(256, 512, 512) ;  permute_1418 = None
        split_tensor_268 = torch.split(masked_fill_166,256,dim = -1) ;  masked_fill_166 = None
        getitem_2508 = split_tensor_268[1];  split_tensor_268 = None
        unsqueeze_874 = torch.unsqueeze(getitem_2508,4) ;  getitem_2508 = None
        permute_1419 = unsqueeze_874.permute(0, 4, 1, 3, 2) ;  unsqueeze_874 = None
        permute_1420 = permute_1419.permute(3, 4, 0, 2, 1) ;  permute_1419 = None
        view_2622 = permute_1420.view(256, 512, 512) ;  permute_1420 = None
        bmm_213 = torch.bmm(view_2621,view_2622) ;  view_2621 = view_2622 = None
        view_2623 = bmm_213.view(256, 512, 1, 1, 512) ;  bmm_213 = None
        permute_1421 = view_2623.permute(3, 1, 4, 0, 2) ;  view_2623 = None
        view_2624 = permute_1421.view(1, 512, 512, 256) ;  permute_1421 = None
        _to_copy_1485 = getitem_2499.to(dtype = torch.bfloat16) ;  getitem_2499 = None
        _to_copy_1486 = getitem_2495.to(dtype = torch.bfloat16) 
        t_548 = _to_copy_1485.t() ;  _to_copy_1485 = None
        view_2625 = _to_copy_1486.view(262144, 256) ;  _to_copy_1486 = None
        mm_511 = torch.mm(view_2625,t_548) ;  view_2625 = t_548 = None
        view_2626 = mm_511.view(1, 512, 512, 512) ;  mm_511 = None
        _to_copy_1487 = getitem_2501.to(dtype = torch.bfloat16) ;  getitem_2501 = None
        _to_copy_1488 = getitem_2495.to(dtype = torch.bfloat16) 
        t_549 = _to_copy_1487.t() ;  _to_copy_1487 = None
        view_2627 = _to_copy_1488.view(262144, 256) ;  _to_copy_1488 = None
        mm_512 = torch.mm(view_2627,t_549) ;  view_2627 = t_549 = None
        view_2628 = mm_512.view(1, 512, 512, 512) ;  mm_512 = None
        sigmoid_205 = torch.sigmoid(view_2628) ;  view_2628 = None
        mul_338 = torch.mul(view_2626,sigmoid_205) ;  view_2626 = sigmoid_205 = None
        view_2629 = mul_338.view(262144, 512) ;  mul_338 = None
        view_2630 = view_2629.view(1, 512, 512, 512) ;  view_2629 = None
        transpose_66 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_875 = torch.unsqueeze(transpose_66,3) ;  transpose_66 = None
        clone_230 = torch.clone(unsqueeze_875,memory_format = torch.contiguous_format) ;  unsqueeze_875 = None
        bitwise_not_167 = torch.bitwise_not(clone_230) ;  clone_230 = None
        masked_fill_167 = view_2630.masked_fill(bitwise_not_167,0) ;  view_2630 = bitwise_not_167 = None
        view_2631 = masked_fill_167.view(262144, 512) ;  masked_fill_167 = None
        view_2635 = view_2631.view(1, 512, 512, 512) 
        split_tensor_269 = torch.split(view_2635,256,dim = -1) ;  view_2635 = None
        getitem_2511 = split_tensor_269[0]
        unsqueeze_878 = torch.unsqueeze(getitem_2511,4) ;  getitem_2511 = None
        permute_1426 = unsqueeze_878.permute(0, 2, 4, 3, 1) ;  unsqueeze_878 = None
        permute_1427 = permute_1426.permute(3, 1, 4, 0, 2) ;  permute_1426 = None
        view_2636 = permute_1427.view(256, 512, 512) ;  permute_1427 = None
        view_2637 = view_2631.view(1, 512, 512, 512) ;  view_2631 = None
        split_tensor_270 = torch.split(view_2637,256,dim = -1) ;  view_2637 = None
        getitem_2514 = split_tensor_270[1];  split_tensor_270 = None
        unsqueeze_879 = torch.unsqueeze(getitem_2514,4) ;  getitem_2514 = None
        permute_1428 = unsqueeze_879.permute(0, 4, 2, 3, 1) ;  unsqueeze_879 = None
        permute_1429 = permute_1428.permute(3, 4, 0, 2, 1) ;  permute_1428 = None
        view_2638 = permute_1429.view(256, 512, 512) ;  permute_1429 = None
        bmm_214 = torch.bmm(view_2636,view_2638) ;  view_2636 = view_2638 = None
        view_2639 = bmm_214.view(256, 512, 1, 1, 512) ;  bmm_214 = None
        permute_1430 = view_2639.permute(3, 1, 4, 0, 2) ;  view_2639 = None
        view_2640 = permute_1430.view(1, 512, 512, 256) ;  permute_1430 = None
        _to_copy_1489 = view_2624.to(dtype = torch.float32) ;  view_2624 = None
        native_layer_norm_default_307 = (torch.nn.functional.layer_norm(_to_copy_1489,[256],None,None,1e-05),) ;  _to_copy_1489 = None
        getitem_2515 = native_layer_norm_default_307[0]
        _to_copy_1490 = view_2640.to(dtype = torch.float32) ;  view_2640 = None
        native_layer_norm_default_308 = (torch.nn.functional.layer_norm(_to_copy_1490,[256],None,None,1e-05),) ;  _to_copy_1490 = None
        getitem_2518 = native_layer_norm_default_308[0]
        add_272 = torch.add(getitem_2515,getitem_2518) ;  getitem_2515 = getitem_2518 = None
        _to_copy_1491 = arg852_1.to(dtype = torch.bfloat16) ;  arg852_1 = None
        _to_copy_1492 = add_272.to(dtype = torch.bfloat16) ;  add_272 = None
        t_550 = _to_copy_1491.t() ;  _to_copy_1491 = None
        view_2641 = _to_copy_1492.view(262144, 256) ;  _to_copy_1492 = None
        mm_513 = torch.mm(view_2641,t_550) ;  view_2641 = t_550 = None
        view_2642 = mm_513.view(1, 512, 512, 256) ;  mm_513 = None
        _to_copy_1493 = getitem_2502.to(dtype = torch.bfloat16) ;  getitem_2502 = None
        _to_copy_1494 = getitem_2495.to(dtype = torch.bfloat16) ;  getitem_2495 = None
        t_551 = _to_copy_1493.t() ;  _to_copy_1493 = None
        view_2643 = _to_copy_1494.view(262144, 256) ;  _to_copy_1494 = None
        mm_514 = torch.mm(view_2643,t_551) ;  view_2643 = t_551 = None
        view_2644 = mm_514.view(1, 512, 512, 256) ;  mm_514 = None
        sigmoid_206 = torch.sigmoid(view_2644) ;  view_2644 = None
        mul_339 = torch.mul(view_2642,sigmoid_206) ;  view_2642 = sigmoid_206 = None
        add_273 = torch.add(add_267,mul_339) ;  mul_339 = None
        _to_copy_1495 = add_267.to(dtype = torch.float32) 
        native_layer_norm_default_309 = (torch.nn.functional.layer_norm(_to_copy_1495,[256],None,None,1e-05),) ;  _to_copy_1495 = None
        getitem_2521 = native_layer_norm_default_309[0]
        _to_copy_1496 = arg856_1.to(dtype = torch.bfloat16) ;  arg856_1 = None
        _to_copy_1497 = getitem_2521.to(dtype = torch.bfloat16) 
        t_552 = _to_copy_1496.t() ;  _to_copy_1496 = None
        view_2645 = _to_copy_1497.view(262144, 256) ;  _to_copy_1497 = None
        mm_515 = torch.mm(view_2645,t_552) ;  view_2645 = t_552 = None
        view_2646 = mm_515.view(1, 512, 512, 8) ;  mm_515 = None
        view_2647 = view_2646.view(1, 512, 512, 2, 4) ;  view_2646 = None
        permute_1431 = view_2647.permute(0, 3, 4, 1, 2) ;  view_2647 = None
        view_2648 = permute_1431.view(1, 2, 4, 1, 512, 512) ;  permute_1431 = None
        view_2649 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_168 = torch.bitwise_not(view_2649) ;  view_2649 = None
        masked_fill_168 = view_2648.masked_fill(bitwise_not_168,-10000) ;  view_2648 = bitwise_not_168 = None
        view_2650 = masked_fill_168.view(1, 2, 4, 512, 512) ;  masked_fill_168 = None
        permute_1432 = view_2650.permute(1, 0, 2, 3, 4) ;  view_2650 = None
        view_2651 = permute_1432.view(2, 4, 1, 512, 512) ;  permute_1432 = None
        _to_copy_1498 = arg857_1.to(dtype = torch.bfloat16) ;  arg857_1 = None
        _to_copy_1499 = getitem_2521.to(dtype = torch.bfloat16) 
        t_553 = _to_copy_1498.t() ;  _to_copy_1498 = None
        view_2652 = _to_copy_1499.view(262144, 256) ;  _to_copy_1499 = None
        mm_516 = torch.mm(view_2652,t_553) ;  view_2652 = t_553 = None
        view_2653 = mm_516.view(1, 512, 512, 1024) ;  mm_516 = None
        select_67 = torch.select(view_2651,0,0) 
        view_2654 = view_2653.view(1, 512, 512, 4, 4, 64) ;  view_2653 = None
        permute_1433 = view_2654.permute(4, 0, 3, 1, 2, 5) ;  view_2654 = None
        view_2655 = permute_1433.view(4, 4, 512, 512, 64) ;  permute_1433 = None
        unbind_int_121 = torch.unbind(view_2655) ;  view_2655 = None
        getitem_2524 = unbind_int_121[0]
        getitem_2525 = unbind_int_121[1]
        getitem_2526 = unbind_int_121[2]
        getitem_2527 = unbind_int_121[3];  unbind_int_121 = None
        expand_162 = select_67.expand(4, 512, 512, 512) ;  select_67 = None
        _scaled_dot_product_efficient_attention_default_93 = (torch.nn.functional.scaled_dot_product_attention(getitem_2524,getitem_2525,getitem_2526,expand_162,False),) ;  getitem_2524 = getitem_2525 = getitem_2526 = expand_162 = None
        getitem_2528 = _scaled_dot_product_efficient_attention_default_93[0]
        sigmoid_207 = torch.sigmoid(getitem_2527) ;  getitem_2527 = None
        mul_340 = torch.mul(getitem_2528,sigmoid_207) ;  getitem_2528 = sigmoid_207 = None
        view_2656 = mul_340.view(1, 4, 512, 512, 64) ;  mul_340 = None
        permute_1434 = view_2656.permute(0, 2, 3, 1, 4) ;  view_2656 = None
        clone_231 = torch.clone(permute_1434,memory_format = torch.contiguous_format) ;  permute_1434 = None
        _unsafe_view_196 = clone_231.view(1, 512, 512, 256) ;  clone_231 = None
        transpose_67 = torch.transpose(getitem_2521,1,2) ;  getitem_2521 = None
        _to_copy_1500 = arg858_1.to(dtype = torch.bfloat16) ;  arg858_1 = None
        _to_copy_1501 = transpose_67.to(dtype = torch.bfloat16) ;  transpose_67 = None
        t_554 = _to_copy_1500.t() ;  _to_copy_1500 = None
        expand_163 = _to_copy_1501.expand(1, 512, 512, 256) ;  _to_copy_1501 = None
        view_2657 = expand_163.view(512, 512, 256) ;  expand_163 = None
        expand_164 = t_554.expand(1, 512, 256, 1024) ;  t_554 = None
        view_2658 = expand_164.view(512, 256, 1024) ;  expand_164 = None
        bmm_215 = torch.bmm(view_2657,view_2658) ;  view_2657 = view_2658 = None
        view_2659 = bmm_215.view(1, 512, 512, 1024) ;  bmm_215 = None
        select_68 = torch.select(view_2651,0,1) ;  view_2651 = None
        view_2660 = view_2659.view(1, 512, 512, 4, 4, 64) ;  view_2659 = None
        permute_1435 = view_2660.permute(4, 0, 3, 1, 2, 5) ;  view_2660 = None
        view_2661 = permute_1435.view(4, 4, 512, 512, 64) ;  permute_1435 = None
        unbind_int_122 = torch.unbind(view_2661) ;  view_2661 = None
        getitem_2532 = unbind_int_122[0]
        getitem_2533 = unbind_int_122[1]
        getitem_2534 = unbind_int_122[2]
        getitem_2535 = unbind_int_122[3];  unbind_int_122 = None
        expand_165 = select_68.expand(4, 512, 512, 512) ;  select_68 = None
        _scaled_dot_product_efficient_attention_default_94 = (torch.nn.functional.scaled_dot_product_attention(getitem_2532,getitem_2533,getitem_2534,expand_165,False),) ;  getitem_2532 = getitem_2533 = getitem_2534 = expand_165 = None
        getitem_2536 = _scaled_dot_product_efficient_attention_default_94[0]
        sigmoid_208 = torch.sigmoid(getitem_2535) ;  getitem_2535 = None
        mul_341 = torch.mul(getitem_2536,sigmoid_208) ;  getitem_2536 = sigmoid_208 = None
        view_2662 = mul_341.view(1, 4, 512, 512, 64) ;  mul_341 = None
        permute_1436 = view_2662.permute(0, 2, 3, 1, 4) ;  view_2662 = None
        clone_232 = torch.clone(permute_1436,memory_format = torch.contiguous_format) ;  permute_1436 = None
        _unsafe_view_197 = clone_232.view(1, 512, 512, 256) ;  clone_232 = None
        cat_39 = torch.cat([_unsafe_view_196,_unsafe_view_197],dim = -1) ;  _unsafe_view_196 = _unsafe_view_197 = None
        slice_232 = arg855_1[0:] ;  arg855_1 = None
        unsqueeze_880 = torch.unsqueeze(slice_232,1) ;  slice_232 = None
        mul_342 = torch.mul(arg859_1,unsqueeze_880) ;  arg859_1 = unsqueeze_880 = None
        _to_copy_1502 = mul_342.to(dtype = torch.bfloat16) ;  mul_342 = None
        t_555 = _to_copy_1502.t() ;  _to_copy_1502 = None
        view_2663 = cat_39.view(262144, 512) ;  cat_39 = None
        mm_517 = torch.mm(view_2663,t_555) ;  view_2663 = t_555 = None
        view_2664 = mm_517.view(1, 512, 512, 256) ;  mm_517 = None
        add_274 = torch.add(add_273,view_2664) ;  add_273 = view_2664 = None
        split_tensor_271 = torch.split(add_267,512,dim = -2) 
        getitem_2540 = split_tensor_271[0];  split_tensor_271 = None
        _to_copy_1503 = getitem_2540.to(dtype = torch.float32) ;  getitem_2540 = None
        native_layer_norm_default_310 = (torch.nn.functional.layer_norm(_to_copy_1503,[256],arg846_1,arg847_1,1e-05),) ;  _to_copy_1503 = arg846_1 = arg847_1 = None
        getitem_2541 = native_layer_norm_default_310[0]
        _to_copy_1504 = arg848_1.to(dtype = torch.bfloat16) ;  arg848_1 = None
        _to_copy_1505 = getitem_2541.to(dtype = torch.bfloat16) ;  getitem_2541 = None
        t_556 = _to_copy_1504.t() ;  _to_copy_1504 = None
        view_2665 = _to_copy_1505.view(262144, 256) ;  _to_copy_1505 = None
        mm_518 = torch.mm(view_2665,t_556) ;  view_2665 = t_556 = None
        view_2666 = mm_518.view(1, 512, 512, 1024) ;  mm_518 = None
        split_tensor_272 = torch.split(view_2666,512,dim = -1) ;  view_2666 = None
        getitem_2544 = split_tensor_272[0]
        getitem_2545 = split_tensor_272[1];  split_tensor_272 = None
        silu_72 = torch.nn.functional.silu(getitem_2544) ;  getitem_2544 = None
        mul_343 = torch.mul(silu_72,getitem_2545) ;  silu_72 = getitem_2545 = None
        _to_copy_1506 = arg849_1.to(dtype = torch.bfloat16) ;  arg849_1 = None
        t_557 = _to_copy_1506.t() ;  _to_copy_1506 = None
        view_2668 = mul_343.view(262144, 512) ;  mul_343 = None
        mm_519 = torch.mm(view_2668,t_557) ;  view_2668 = t_557 = None
        view_2669 = mm_519.view(1, 512, 512, 256) ;  mm_519 = None
        add_275 = torch.add(add_274,view_2669) ;  add_274 = view_2669 = None
        _to_copy_1507 = add_271.to(dtype = torch.float32) 
        native_layer_norm_default_311 = (torch.nn.functional.layer_norm(_to_copy_1507,[384],arg864_1,arg865_1,1e-05),) ;  _to_copy_1507 = arg864_1 = arg865_1 = None
        getitem_2546 = native_layer_norm_default_311[0]
        _to_copy_1508 = add_267.to(dtype = torch.float32) ;  add_267 = None
        native_layer_norm_default_312 = (torch.nn.functional.layer_norm(_to_copy_1508,[256],arg866_1,arg867_1,1e-05),) ;  _to_copy_1508 = arg866_1 = arg867_1 = None
        getitem_2549 = native_layer_norm_default_312[0]
        _to_copy_1509 = arg868_1.to(dtype = torch.bfloat16) ;  arg868_1 = None
        _to_copy_1510 = getitem_2549.to(dtype = torch.bfloat16) ;  getitem_2549 = None
        t_558 = _to_copy_1509.t() ;  _to_copy_1509 = None
        view_2670 = _to_copy_1510.view(262144, 256) ;  _to_copy_1510 = None
        mm_520 = torch.mm(view_2670,t_558) ;  view_2670 = t_558 = None
        view_2671 = mm_520.view(1, 512, 512, 16) ;  mm_520 = None
        permute_1437 = view_2671.permute(0, 3, 1, 2) ;  view_2671 = None
        view_2672 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_169 = torch.bitwise_not(view_2672) ;  view_2672 = None
        masked_fill_169 = permute_1437.masked_fill(bitwise_not_169,-10000) ;  permute_1437 = bitwise_not_169 = None
        _to_copy_1511 = getitem_2546.to(dtype = torch.bfloat16) ;  getitem_2546 = None
        _to_copy_1512 = arg870_1.to(dtype = torch.bfloat16) ;  arg870_1 = None
        unsqueeze_881 = torch.unsqueeze(_to_copy_1511,3) ;  _to_copy_1511 = None
        unsqueeze_882 = torch.unsqueeze(unsqueeze_881,4) ;  unsqueeze_881 = None
        unsqueeze_883 = torch.unsqueeze(unsqueeze_882,5) ;  unsqueeze_882 = None
        permute_1438 = unsqueeze_883.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_883 = None
        unsqueeze_884 = torch.unsqueeze(_to_copy_1512,4) ;  _to_copy_1512 = None
        unsqueeze_885 = torch.unsqueeze(unsqueeze_884,5) ;  unsqueeze_884 = None
        permute_1439 = unsqueeze_885.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_885 = None
        permute_1440 = permute_1438.permute(3, 5, 0, 1, 2, 4) ;  permute_1438 = None
        view_2673 = permute_1440.view(1, 512, 384) ;  permute_1440 = None
        permute_1441 = permute_1439.permute(5, 0, 1, 2, 4, 3) ;  permute_1439 = None
        view_2674 = permute_1441.view(1, 384, 1536) ;  permute_1441 = None
        bmm_216 = torch.bmm(view_2673,view_2674) ;  view_2673 = view_2674 = None
        view_2675 = bmm_216.view(512, 1, 4, 1, 16, 24) ;  bmm_216 = None
        permute_1442 = view_2675.permute(2, 3, 4, 0, 5, 1) ;  view_2675 = None
        view_2676 = permute_1442.view(4, 1, 16, 512, 24) ;  permute_1442 = None
        unbind_int_123 = torch.unbind(view_2676) ;  view_2676 = None
        getitem_2552 = unbind_int_123[0]
        getitem_2553 = unbind_int_123[1]
        getitem_2554 = unbind_int_123[2]
        getitem_2555 = unbind_int_123[3];  unbind_int_123 = None
        view_2677 = arg869_1.view(1, 16, 1, 24) ;  arg869_1 = None
        add_276 = torch.add(getitem_2552,view_2677) ;  getitem_2552 = view_2677 = None
        _to_copy_1513 = add_276.to(dtype = torch.bfloat16) ;  add_276 = None
        expand_166 = masked_fill_169.expand(1, 16, 512, 512) ;  masked_fill_169 = None
        _scaled_dot_product_efficient_attention_default_95 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1513,getitem_2553,getitem_2554,expand_166,False),) ;  _to_copy_1513 = getitem_2553 = getitem_2554 = expand_166 = None
        getitem_2556 = _scaled_dot_product_efficient_attention_default_95[0]
        add_277 = torch.add(getitem_2555,1) ;  getitem_2555 = None
        sigmoid_209 = torch.sigmoid(add_277) ;  add_277 = None
        mul_344 = torch.mul(getitem_2556,sigmoid_209) ;  getitem_2556 = sigmoid_209 = None
        _to_copy_1514 = arg871_1.to(dtype = torch.bfloat16) ;  arg871_1 = None
        unsqueeze_886 = torch.unsqueeze(mul_344,4) ;  mul_344 = None
        permute_1443 = unsqueeze_886.permute(0, 2, 4, 3, 1) ;  unsqueeze_886 = None
        unsqueeze_887 = torch.unsqueeze(_to_copy_1514,3) ;  _to_copy_1514 = None
        unsqueeze_888 = torch.unsqueeze(unsqueeze_887,4) ;  unsqueeze_887 = None
        permute_1444 = unsqueeze_888.permute(3, 4, 2, 1, 0) ;  unsqueeze_888 = None
        permute_1445 = permute_1443.permute(1, 3, 4, 0, 2) ;  permute_1443 = None
        clone_233 = torch.clone(permute_1445,memory_format = torch.contiguous_format) ;  permute_1445 = None
        _unsafe_view_198 = clone_233.view(1, 512, 384) ;  clone_233 = None
        permute_1446 = permute_1444.permute(3, 4, 0, 2, 1) ;  permute_1444 = None
        clone_234 = torch.clone(permute_1446,memory_format = torch.contiguous_format) ;  permute_1446 = None
        _unsafe_view_199 = clone_234.view(1, 384, 384) ;  clone_234 = None
        bmm_217 = torch.bmm(_unsafe_view_198,_unsafe_view_199) ;  _unsafe_view_198 = _unsafe_view_199 = None
        view_2678 = bmm_217.view(512, 1, 1, 1, 384) ;  bmm_217 = None
        permute_1447 = view_2678.permute(3, 0, 4, 1, 2) ;  view_2678 = None
        view_2679 = permute_1447.view(1, 512, 384) ;  permute_1447 = None
        unsqueeze_889 = torch.unsqueeze(arg1406_1,-1) 
        mul_345 = torch.mul(view_2679,unsqueeze_889) ;  view_2679 = unsqueeze_889 = None
        add_278 = torch.add(add_271,mul_345) ;  mul_345 = None
        split_tensor_273 = torch.split(add_271,512,dim = -2) ;  add_271 = None
        getitem_2560 = split_tensor_273[0];  split_tensor_273 = None
        _to_copy_1515 = getitem_2560.to(dtype = torch.float32) ;  getitem_2560 = None
        native_layer_norm_default_313 = (torch.nn.functional.layer_norm(_to_copy_1515,[384],arg860_1,arg861_1,1e-05),) ;  _to_copy_1515 = arg860_1 = arg861_1 = None
        getitem_2561 = native_layer_norm_default_313[0]
        _to_copy_1516 = arg862_1.to(dtype = torch.bfloat16) ;  arg862_1 = None
        _to_copy_1517 = getitem_2561.to(dtype = torch.bfloat16) ;  getitem_2561 = None
        t_559 = _to_copy_1516.t() ;  _to_copy_1516 = None
        view_2680 = _to_copy_1517.view(512, 384) ;  _to_copy_1517 = None
        mm_521 = torch.mm(view_2680,t_559) ;  view_2680 = t_559 = None
        view_2681 = mm_521.view(1, 512, 1536) ;  mm_521 = None
        split_tensor_274 = torch.split(view_2681,768,dim = -1) ;  view_2681 = None
        getitem_2564 = split_tensor_274[0]
        getitem_2565 = split_tensor_274[1];  split_tensor_274 = None
        silu_73 = torch.nn.functional.silu(getitem_2564) ;  getitem_2564 = None
        mul_346 = torch.mul(silu_73,getitem_2565) ;  silu_73 = getitem_2565 = None
        _to_copy_1518 = arg863_1.to(dtype = torch.bfloat16) ;  arg863_1 = None
        t_560 = _to_copy_1518.t() ;  _to_copy_1518 = None
        view_2683 = mul_346.view(512, 768) ;  mul_346 = None
        mm_522 = torch.mm(view_2683,t_560) ;  view_2683 = t_560 = None
        view_2684 = mm_522.view(1, 512, 384) ;  mm_522 = None
        add_279 = torch.add(add_278,view_2684) ;  add_278 = view_2684 = None
        _to_copy_1519 = add_275.to(dtype = torch.float32) 
        native_layer_norm_default_314 = (torch.nn.functional.layer_norm(_to_copy_1519,[256],arg876_1,arg877_1,1e-05),) ;  _to_copy_1519 = arg876_1 = arg877_1 = None
        getitem_2566 = native_layer_norm_default_314[0]
        split_with_sizes_default_68 = torch.split(arg879_1,[512,512]) ;  arg879_1 = None
        getitem_2569 = split_with_sizes_default_68[0]
        getitem_2570 = split_with_sizes_default_68[1];  split_with_sizes_default_68 = None
        split_with_sizes_default_69 = torch.split(arg880_1,[512,512,256]) ;  arg880_1 = None
        getitem_2571 = split_with_sizes_default_69[0]
        getitem_2572 = split_with_sizes_default_69[1]
        getitem_2573 = split_with_sizes_default_69[2];  split_with_sizes_default_69 = None
        _to_copy_1520 = getitem_2569.to(dtype = torch.bfloat16) ;  getitem_2569 = None
        _to_copy_1521 = getitem_2566.to(dtype = torch.bfloat16) 
        t_561 = _to_copy_1520.t() ;  _to_copy_1520 = None
        view_2685 = _to_copy_1521.view(262144, 256) ;  _to_copy_1521 = None
        mm_523 = torch.mm(view_2685,t_561) ;  view_2685 = t_561 = None
        view_2686 = mm_523.view(1, 512, 512, 512) ;  mm_523 = None
        _to_copy_1522 = getitem_2571.to(dtype = torch.bfloat16) ;  getitem_2571 = None
        _to_copy_1523 = getitem_2566.to(dtype = torch.bfloat16) 
        t_562 = _to_copy_1522.t() ;  _to_copy_1522 = None
        view_2687 = _to_copy_1523.view(262144, 256) ;  _to_copy_1523 = None
        mm_524 = torch.mm(view_2687,t_562) ;  view_2687 = t_562 = None
        view_2688 = mm_524.view(1, 512, 512, 512) ;  mm_524 = None
        sigmoid_210 = torch.sigmoid(view_2688) ;  view_2688 = None
        mul_347 = torch.mul(view_2686,sigmoid_210) ;  view_2686 = sigmoid_210 = None
        unsqueeze_890 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_170 = torch.bitwise_not(unsqueeze_890) ;  unsqueeze_890 = None
        masked_fill_170 = mul_347.masked_fill(bitwise_not_170,0) ;  mul_347 = bitwise_not_170 = None
        split_tensor_275 = torch.split(masked_fill_170,256,dim = -1) 
        getitem_2576 = split_tensor_275[0]
        unsqueeze_893 = torch.unsqueeze(getitem_2576,4) ;  getitem_2576 = None
        permute_1452 = unsqueeze_893.permute(0, 1, 4, 3, 2) ;  unsqueeze_893 = None
        permute_1453 = permute_1452.permute(3, 1, 4, 0, 2) ;  permute_1452 = None
        view_2691 = permute_1453.view(256, 512, 512) ;  permute_1453 = None
        split_tensor_276 = torch.split(masked_fill_170,256,dim = -1) ;  masked_fill_170 = None
        getitem_2579 = split_tensor_276[1];  split_tensor_276 = None
        unsqueeze_894 = torch.unsqueeze(getitem_2579,4) ;  getitem_2579 = None
        permute_1454 = unsqueeze_894.permute(0, 4, 1, 3, 2) ;  unsqueeze_894 = None
        permute_1455 = permute_1454.permute(3, 4, 0, 2, 1) ;  permute_1454 = None
        view_2692 = permute_1455.view(256, 512, 512) ;  permute_1455 = None
        bmm_218 = torch.bmm(view_2691,view_2692) ;  view_2691 = view_2692 = None
        view_2693 = bmm_218.view(256, 512, 1, 1, 512) ;  bmm_218 = None
        permute_1456 = view_2693.permute(3, 1, 4, 0, 2) ;  view_2693 = None
        view_2694 = permute_1456.view(1, 512, 512, 256) ;  permute_1456 = None
        _to_copy_1524 = getitem_2570.to(dtype = torch.bfloat16) ;  getitem_2570 = None
        _to_copy_1525 = getitem_2566.to(dtype = torch.bfloat16) 
        t_563 = _to_copy_1524.t() ;  _to_copy_1524 = None
        view_2695 = _to_copy_1525.view(262144, 256) ;  _to_copy_1525 = None
        mm_525 = torch.mm(view_2695,t_563) ;  view_2695 = t_563 = None
        view_2696 = mm_525.view(1, 512, 512, 512) ;  mm_525 = None
        _to_copy_1526 = getitem_2572.to(dtype = torch.bfloat16) ;  getitem_2572 = None
        _to_copy_1527 = getitem_2566.to(dtype = torch.bfloat16) 
        t_564 = _to_copy_1526.t() ;  _to_copy_1526 = None
        view_2697 = _to_copy_1527.view(262144, 256) ;  _to_copy_1527 = None
        mm_526 = torch.mm(view_2697,t_564) ;  view_2697 = t_564 = None
        view_2698 = mm_526.view(1, 512, 512, 512) ;  mm_526 = None
        sigmoid_211 = torch.sigmoid(view_2698) ;  view_2698 = None
        mul_348 = torch.mul(view_2696,sigmoid_211) ;  view_2696 = sigmoid_211 = None
        view_2699 = mul_348.view(262144, 512) ;  mul_348 = None
        view_2700 = view_2699.view(1, 512, 512, 512) ;  view_2699 = None
        transpose_68 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_895 = torch.unsqueeze(transpose_68,3) ;  transpose_68 = None
        clone_235 = torch.clone(unsqueeze_895,memory_format = torch.contiguous_format) ;  unsqueeze_895 = None
        bitwise_not_171 = torch.bitwise_not(clone_235) ;  clone_235 = None
        masked_fill_171 = view_2700.masked_fill(bitwise_not_171,0) ;  view_2700 = bitwise_not_171 = None
        view_2701 = masked_fill_171.view(262144, 512) ;  masked_fill_171 = None
        view_2705 = view_2701.view(1, 512, 512, 512) 
        split_tensor_277 = torch.split(view_2705,256,dim = -1) ;  view_2705 = None
        getitem_2582 = split_tensor_277[0]
        unsqueeze_898 = torch.unsqueeze(getitem_2582,4) ;  getitem_2582 = None
        permute_1461 = unsqueeze_898.permute(0, 2, 4, 3, 1) ;  unsqueeze_898 = None
        permute_1462 = permute_1461.permute(3, 1, 4, 0, 2) ;  permute_1461 = None
        view_2706 = permute_1462.view(256, 512, 512) ;  permute_1462 = None
        view_2707 = view_2701.view(1, 512, 512, 512) ;  view_2701 = None
        split_tensor_278 = torch.split(view_2707,256,dim = -1) ;  view_2707 = None
        getitem_2585 = split_tensor_278[1];  split_tensor_278 = None
        unsqueeze_899 = torch.unsqueeze(getitem_2585,4) ;  getitem_2585 = None
        permute_1463 = unsqueeze_899.permute(0, 4, 2, 3, 1) ;  unsqueeze_899 = None
        permute_1464 = permute_1463.permute(3, 4, 0, 2, 1) ;  permute_1463 = None
        view_2708 = permute_1464.view(256, 512, 512) ;  permute_1464 = None
        bmm_219 = torch.bmm(view_2706,view_2708) ;  view_2706 = view_2708 = None
        view_2709 = bmm_219.view(256, 512, 1, 1, 512) ;  bmm_219 = None
        permute_1465 = view_2709.permute(3, 1, 4, 0, 2) ;  view_2709 = None
        view_2710 = permute_1465.view(1, 512, 512, 256) ;  permute_1465 = None
        _to_copy_1528 = view_2694.to(dtype = torch.float32) ;  view_2694 = None
        native_layer_norm_default_315 = (torch.nn.functional.layer_norm(_to_copy_1528,[256],None,None,1e-05),) ;  _to_copy_1528 = None
        getitem_2586 = native_layer_norm_default_315[0]
        _to_copy_1529 = view_2710.to(dtype = torch.float32) ;  view_2710 = None
        native_layer_norm_default_316 = (torch.nn.functional.layer_norm(_to_copy_1529,[256],None,None,1e-05),) ;  _to_copy_1529 = None
        getitem_2589 = native_layer_norm_default_316[0]
        add_280 = torch.add(getitem_2586,getitem_2589) ;  getitem_2586 = getitem_2589 = None
        _to_copy_1530 = arg878_1.to(dtype = torch.bfloat16) ;  arg878_1 = None
        _to_copy_1531 = add_280.to(dtype = torch.bfloat16) ;  add_280 = None
        t_565 = _to_copy_1530.t() ;  _to_copy_1530 = None
        view_2711 = _to_copy_1531.view(262144, 256) ;  _to_copy_1531 = None
        mm_527 = torch.mm(view_2711,t_565) ;  view_2711 = t_565 = None
        view_2712 = mm_527.view(1, 512, 512, 256) ;  mm_527 = None
        _to_copy_1532 = getitem_2573.to(dtype = torch.bfloat16) ;  getitem_2573 = None
        _to_copy_1533 = getitem_2566.to(dtype = torch.bfloat16) ;  getitem_2566 = None
        t_566 = _to_copy_1532.t() ;  _to_copy_1532 = None
        view_2713 = _to_copy_1533.view(262144, 256) ;  _to_copy_1533 = None
        mm_528 = torch.mm(view_2713,t_566) ;  view_2713 = t_566 = None
        view_2714 = mm_528.view(1, 512, 512, 256) ;  mm_528 = None
        sigmoid_212 = torch.sigmoid(view_2714) ;  view_2714 = None
        mul_349 = torch.mul(view_2712,sigmoid_212) ;  view_2712 = sigmoid_212 = None
        add_281 = torch.add(add_275,mul_349) ;  mul_349 = None
        _to_copy_1534 = add_275.to(dtype = torch.float32) 
        native_layer_norm_default_317 = (torch.nn.functional.layer_norm(_to_copy_1534,[256],None,None,1e-05),) ;  _to_copy_1534 = None
        getitem_2592 = native_layer_norm_default_317[0]
        _to_copy_1535 = arg882_1.to(dtype = torch.bfloat16) ;  arg882_1 = None
        _to_copy_1536 = getitem_2592.to(dtype = torch.bfloat16) 
        t_567 = _to_copy_1535.t() ;  _to_copy_1535 = None
        view_2715 = _to_copy_1536.view(262144, 256) ;  _to_copy_1536 = None
        mm_529 = torch.mm(view_2715,t_567) ;  view_2715 = t_567 = None
        view_2716 = mm_529.view(1, 512, 512, 8) ;  mm_529 = None
        view_2717 = view_2716.view(1, 512, 512, 2, 4) ;  view_2716 = None
        permute_1466 = view_2717.permute(0, 3, 4, 1, 2) ;  view_2717 = None
        view_2718 = permute_1466.view(1, 2, 4, 1, 512, 512) ;  permute_1466 = None
        view_2719 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_172 = torch.bitwise_not(view_2719) ;  view_2719 = None
        masked_fill_172 = view_2718.masked_fill(bitwise_not_172,-10000) ;  view_2718 = bitwise_not_172 = None
        view_2720 = masked_fill_172.view(1, 2, 4, 512, 512) ;  masked_fill_172 = None
        permute_1467 = view_2720.permute(1, 0, 2, 3, 4) ;  view_2720 = None
        view_2721 = permute_1467.view(2, 4, 1, 512, 512) ;  permute_1467 = None
        _to_copy_1537 = arg883_1.to(dtype = torch.bfloat16) ;  arg883_1 = None
        _to_copy_1538 = getitem_2592.to(dtype = torch.bfloat16) 
        t_568 = _to_copy_1537.t() ;  _to_copy_1537 = None
        view_2722 = _to_copy_1538.view(262144, 256) ;  _to_copy_1538 = None
        mm_530 = torch.mm(view_2722,t_568) ;  view_2722 = t_568 = None
        view_2723 = mm_530.view(1, 512, 512, 1024) ;  mm_530 = None
        select_69 = torch.select(view_2721,0,0) 
        view_2724 = view_2723.view(1, 512, 512, 4, 4, 64) ;  view_2723 = None
        permute_1468 = view_2724.permute(4, 0, 3, 1, 2, 5) ;  view_2724 = None
        view_2725 = permute_1468.view(4, 4, 512, 512, 64) ;  permute_1468 = None
        unbind_int_124 = torch.unbind(view_2725) ;  view_2725 = None
        getitem_2595 = unbind_int_124[0]
        getitem_2596 = unbind_int_124[1]
        getitem_2597 = unbind_int_124[2]
        getitem_2598 = unbind_int_124[3];  unbind_int_124 = None
        expand_167 = select_69.expand(4, 512, 512, 512) ;  select_69 = None
        _scaled_dot_product_efficient_attention_default_96 = (torch.nn.functional.scaled_dot_product_attention(getitem_2595,getitem_2596,getitem_2597,expand_167,False),) ;  getitem_2595 = getitem_2596 = getitem_2597 = expand_167 = None
        getitem_2599 = _scaled_dot_product_efficient_attention_default_96[0]
        sigmoid_213 = torch.sigmoid(getitem_2598) ;  getitem_2598 = None
        mul_350 = torch.mul(getitem_2599,sigmoid_213) ;  getitem_2599 = sigmoid_213 = None
        view_2726 = mul_350.view(1, 4, 512, 512, 64) ;  mul_350 = None
        permute_1469 = view_2726.permute(0, 2, 3, 1, 4) ;  view_2726 = None
        clone_236 = torch.clone(permute_1469,memory_format = torch.contiguous_format) ;  permute_1469 = None
        _unsafe_view_200 = clone_236.view(1, 512, 512, 256) ;  clone_236 = None
        transpose_69 = torch.transpose(getitem_2592,1,2) ;  getitem_2592 = None
        _to_copy_1539 = arg884_1.to(dtype = torch.bfloat16) ;  arg884_1 = None
        _to_copy_1540 = transpose_69.to(dtype = torch.bfloat16) ;  transpose_69 = None
        t_569 = _to_copy_1539.t() ;  _to_copy_1539 = None
        expand_168 = _to_copy_1540.expand(1, 512, 512, 256) ;  _to_copy_1540 = None
        view_2727 = expand_168.view(512, 512, 256) ;  expand_168 = None
        expand_169 = t_569.expand(1, 512, 256, 1024) ;  t_569 = None
        view_2728 = expand_169.view(512, 256, 1024) ;  expand_169 = None
        bmm_220 = torch.bmm(view_2727,view_2728) ;  view_2727 = view_2728 = None
        view_2729 = bmm_220.view(1, 512, 512, 1024) ;  bmm_220 = None
        select_70 = torch.select(view_2721,0,1) ;  view_2721 = None
        view_2730 = view_2729.view(1, 512, 512, 4, 4, 64) ;  view_2729 = None
        permute_1470 = view_2730.permute(4, 0, 3, 1, 2, 5) ;  view_2730 = None
        view_2731 = permute_1470.view(4, 4, 512, 512, 64) ;  permute_1470 = None
        unbind_int_125 = torch.unbind(view_2731) ;  view_2731 = None
        getitem_2603 = unbind_int_125[0]
        getitem_2604 = unbind_int_125[1]
        getitem_2605 = unbind_int_125[2]
        getitem_2606 = unbind_int_125[3];  unbind_int_125 = None
        expand_170 = select_70.expand(4, 512, 512, 512) ;  select_70 = None
        _scaled_dot_product_efficient_attention_default_97 = (torch.nn.functional.scaled_dot_product_attention(getitem_2603,getitem_2604,getitem_2605,expand_170,False),) ;  getitem_2603 = getitem_2604 = getitem_2605 = expand_170 = None
        getitem_2607 = _scaled_dot_product_efficient_attention_default_97[0]
        sigmoid_214 = torch.sigmoid(getitem_2606) ;  getitem_2606 = None
        mul_351 = torch.mul(getitem_2607,sigmoid_214) ;  getitem_2607 = sigmoid_214 = None
        view_2732 = mul_351.view(1, 4, 512, 512, 64) ;  mul_351 = None
        permute_1471 = view_2732.permute(0, 2, 3, 1, 4) ;  view_2732 = None
        clone_237 = torch.clone(permute_1471,memory_format = torch.contiguous_format) ;  permute_1471 = None
        _unsafe_view_201 = clone_237.view(1, 512, 512, 256) ;  clone_237 = None
        cat_40 = torch.cat([_unsafe_view_200,_unsafe_view_201],dim = -1) ;  _unsafe_view_200 = _unsafe_view_201 = None
        slice_233 = arg881_1[0:] ;  arg881_1 = None
        unsqueeze_900 = torch.unsqueeze(slice_233,1) ;  slice_233 = None
        mul_352 = torch.mul(arg885_1,unsqueeze_900) ;  arg885_1 = unsqueeze_900 = None
        _to_copy_1541 = mul_352.to(dtype = torch.bfloat16) ;  mul_352 = None
        t_570 = _to_copy_1541.t() ;  _to_copy_1541 = None
        view_2733 = cat_40.view(262144, 512) ;  cat_40 = None
        mm_531 = torch.mm(view_2733,t_570) ;  view_2733 = t_570 = None
        view_2734 = mm_531.view(1, 512, 512, 256) ;  mm_531 = None
        add_282 = torch.add(add_281,view_2734) ;  add_281 = view_2734 = None
        split_tensor_279 = torch.split(add_275,512,dim = -2) 
        getitem_2611 = split_tensor_279[0];  split_tensor_279 = None
        _to_copy_1542 = getitem_2611.to(dtype = torch.float32) ;  getitem_2611 = None
        native_layer_norm_default_318 = (torch.nn.functional.layer_norm(_to_copy_1542,[256],arg872_1,arg873_1,1e-05),) ;  _to_copy_1542 = arg872_1 = arg873_1 = None
        getitem_2612 = native_layer_norm_default_318[0]
        _to_copy_1543 = arg874_1.to(dtype = torch.bfloat16) ;  arg874_1 = None
        _to_copy_1544 = getitem_2612.to(dtype = torch.bfloat16) ;  getitem_2612 = None
        t_571 = _to_copy_1543.t() ;  _to_copy_1543 = None
        view_2735 = _to_copy_1544.view(262144, 256) ;  _to_copy_1544 = None
        mm_532 = torch.mm(view_2735,t_571) ;  view_2735 = t_571 = None
        view_2736 = mm_532.view(1, 512, 512, 1024) ;  mm_532 = None
        split_tensor_280 = torch.split(view_2736,512,dim = -1) ;  view_2736 = None
        getitem_2615 = split_tensor_280[0]
        getitem_2616 = split_tensor_280[1];  split_tensor_280 = None
        silu_74 = torch.nn.functional.silu(getitem_2615) ;  getitem_2615 = None
        mul_353 = torch.mul(silu_74,getitem_2616) ;  silu_74 = getitem_2616 = None
        _to_copy_1545 = arg875_1.to(dtype = torch.bfloat16) ;  arg875_1 = None
        t_572 = _to_copy_1545.t() ;  _to_copy_1545 = None
        view_2738 = mul_353.view(262144, 512) ;  mul_353 = None
        mm_533 = torch.mm(view_2738,t_572) ;  view_2738 = t_572 = None
        view_2739 = mm_533.view(1, 512, 512, 256) ;  mm_533 = None
        add_283 = torch.add(add_282,view_2739) ;  add_282 = view_2739 = None
        _to_copy_1546 = add_279.to(dtype = torch.float32) 
        native_layer_norm_default_319 = (torch.nn.functional.layer_norm(_to_copy_1546,[384],arg890_1,arg891_1,1e-05),) ;  _to_copy_1546 = arg890_1 = arg891_1 = None
        getitem_2617 = native_layer_norm_default_319[0]
        _to_copy_1547 = add_275.to(dtype = torch.float32) ;  add_275 = None
        native_layer_norm_default_320 = (torch.nn.functional.layer_norm(_to_copy_1547,[256],arg892_1,arg893_1,1e-05),) ;  _to_copy_1547 = arg892_1 = arg893_1 = None
        getitem_2620 = native_layer_norm_default_320[0]
        _to_copy_1548 = arg894_1.to(dtype = torch.bfloat16) ;  arg894_1 = None
        _to_copy_1549 = getitem_2620.to(dtype = torch.bfloat16) ;  getitem_2620 = None
        t_573 = _to_copy_1548.t() ;  _to_copy_1548 = None
        view_2740 = _to_copy_1549.view(262144, 256) ;  _to_copy_1549 = None
        mm_534 = torch.mm(view_2740,t_573) ;  view_2740 = t_573 = None
        view_2741 = mm_534.view(1, 512, 512, 16) ;  mm_534 = None
        permute_1472 = view_2741.permute(0, 3, 1, 2) ;  view_2741 = None
        view_2742 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_173 = torch.bitwise_not(view_2742) ;  view_2742 = None
        masked_fill_173 = permute_1472.masked_fill(bitwise_not_173,-10000) ;  permute_1472 = bitwise_not_173 = None
        _to_copy_1550 = getitem_2617.to(dtype = torch.bfloat16) ;  getitem_2617 = None
        _to_copy_1551 = arg896_1.to(dtype = torch.bfloat16) ;  arg896_1 = None
        unsqueeze_901 = torch.unsqueeze(_to_copy_1550,3) ;  _to_copy_1550 = None
        unsqueeze_902 = torch.unsqueeze(unsqueeze_901,4) ;  unsqueeze_901 = None
        unsqueeze_903 = torch.unsqueeze(unsqueeze_902,5) ;  unsqueeze_902 = None
        permute_1473 = unsqueeze_903.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_903 = None
        unsqueeze_904 = torch.unsqueeze(_to_copy_1551,4) ;  _to_copy_1551 = None
        unsqueeze_905 = torch.unsqueeze(unsqueeze_904,5) ;  unsqueeze_904 = None
        permute_1474 = unsqueeze_905.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_905 = None
        permute_1475 = permute_1473.permute(3, 5, 0, 1, 2, 4) ;  permute_1473 = None
        view_2743 = permute_1475.view(1, 512, 384) ;  permute_1475 = None
        permute_1476 = permute_1474.permute(5, 0, 1, 2, 4, 3) ;  permute_1474 = None
        view_2744 = permute_1476.view(1, 384, 1536) ;  permute_1476 = None
        bmm_221 = torch.bmm(view_2743,view_2744) ;  view_2743 = view_2744 = None
        view_2745 = bmm_221.view(512, 1, 4, 1, 16, 24) ;  bmm_221 = None
        permute_1477 = view_2745.permute(2, 3, 4, 0, 5, 1) ;  view_2745 = None
        view_2746 = permute_1477.view(4, 1, 16, 512, 24) ;  permute_1477 = None
        unbind_int_126 = torch.unbind(view_2746) ;  view_2746 = None
        getitem_2623 = unbind_int_126[0]
        getitem_2624 = unbind_int_126[1]
        getitem_2625 = unbind_int_126[2]
        getitem_2626 = unbind_int_126[3];  unbind_int_126 = None
        view_2747 = arg895_1.view(1, 16, 1, 24) ;  arg895_1 = None
        add_284 = torch.add(getitem_2623,view_2747) ;  getitem_2623 = view_2747 = None
        _to_copy_1552 = add_284.to(dtype = torch.bfloat16) ;  add_284 = None
        expand_171 = masked_fill_173.expand(1, 16, 512, 512) ;  masked_fill_173 = None
        _scaled_dot_product_efficient_attention_default_98 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1552,getitem_2624,getitem_2625,expand_171,False),) ;  _to_copy_1552 = getitem_2624 = getitem_2625 = expand_171 = None
        getitem_2627 = _scaled_dot_product_efficient_attention_default_98[0]
        add_285 = torch.add(getitem_2626,1) ;  getitem_2626 = None
        sigmoid_215 = torch.sigmoid(add_285) ;  add_285 = None
        mul_354 = torch.mul(getitem_2627,sigmoid_215) ;  getitem_2627 = sigmoid_215 = None
        _to_copy_1553 = arg897_1.to(dtype = torch.bfloat16) ;  arg897_1 = None
        unsqueeze_906 = torch.unsqueeze(mul_354,4) ;  mul_354 = None
        permute_1478 = unsqueeze_906.permute(0, 2, 4, 3, 1) ;  unsqueeze_906 = None
        unsqueeze_907 = torch.unsqueeze(_to_copy_1553,3) ;  _to_copy_1553 = None
        unsqueeze_908 = torch.unsqueeze(unsqueeze_907,4) ;  unsqueeze_907 = None
        permute_1479 = unsqueeze_908.permute(3, 4, 2, 1, 0) ;  unsqueeze_908 = None
        permute_1480 = permute_1478.permute(1, 3, 4, 0, 2) ;  permute_1478 = None
        clone_238 = torch.clone(permute_1480,memory_format = torch.contiguous_format) ;  permute_1480 = None
        _unsafe_view_202 = clone_238.view(1, 512, 384) ;  clone_238 = None
        permute_1481 = permute_1479.permute(3, 4, 0, 2, 1) ;  permute_1479 = None
        clone_239 = torch.clone(permute_1481,memory_format = torch.contiguous_format) ;  permute_1481 = None
        _unsafe_view_203 = clone_239.view(1, 384, 384) ;  clone_239 = None
        bmm_222 = torch.bmm(_unsafe_view_202,_unsafe_view_203) ;  _unsafe_view_202 = _unsafe_view_203 = None
        view_2748 = bmm_222.view(512, 1, 1, 1, 384) ;  bmm_222 = None
        permute_1482 = view_2748.permute(3, 0, 4, 1, 2) ;  view_2748 = None
        view_2749 = permute_1482.view(1, 512, 384) ;  permute_1482 = None
        unsqueeze_909 = torch.unsqueeze(arg1406_1,-1) 
        mul_355 = torch.mul(view_2749,unsqueeze_909) ;  view_2749 = unsqueeze_909 = None
        add_286 = torch.add(add_279,mul_355) ;  mul_355 = None
        split_tensor_281 = torch.split(add_279,512,dim = -2) ;  add_279 = None
        getitem_2631 = split_tensor_281[0];  split_tensor_281 = None
        _to_copy_1554 = getitem_2631.to(dtype = torch.float32) ;  getitem_2631 = None
        native_layer_norm_default_321 = (torch.nn.functional.layer_norm(_to_copy_1554,[384],arg886_1,arg887_1,1e-05),) ;  _to_copy_1554 = arg886_1 = arg887_1 = None
        getitem_2632 = native_layer_norm_default_321[0]
        _to_copy_1555 = arg888_1.to(dtype = torch.bfloat16) ;  arg888_1 = None
        _to_copy_1556 = getitem_2632.to(dtype = torch.bfloat16) ;  getitem_2632 = None
        t_574 = _to_copy_1555.t() ;  _to_copy_1555 = None
        view_2750 = _to_copy_1556.view(512, 384) ;  _to_copy_1556 = None
        mm_535 = torch.mm(view_2750,t_574) ;  view_2750 = t_574 = None
        view_2751 = mm_535.view(1, 512, 1536) ;  mm_535 = None
        split_tensor_282 = torch.split(view_2751,768,dim = -1) ;  view_2751 = None
        getitem_2635 = split_tensor_282[0]
        getitem_2636 = split_tensor_282[1];  split_tensor_282 = None
        silu_75 = torch.nn.functional.silu(getitem_2635) ;  getitem_2635 = None
        mul_356 = torch.mul(silu_75,getitem_2636) ;  silu_75 = getitem_2636 = None
        _to_copy_1557 = arg889_1.to(dtype = torch.bfloat16) ;  arg889_1 = None
        t_575 = _to_copy_1557.t() ;  _to_copy_1557 = None
        view_2753 = mul_356.view(512, 768) ;  mul_356 = None
        mm_536 = torch.mm(view_2753,t_575) ;  view_2753 = t_575 = None
        view_2754 = mm_536.view(1, 512, 384) ;  mm_536 = None
        add_287 = torch.add(add_286,view_2754) ;  add_286 = view_2754 = None
        _to_copy_1558 = add_283.to(dtype = torch.float32) 
        native_layer_norm_default_322 = (torch.nn.functional.layer_norm(_to_copy_1558,[256],arg902_1,arg903_1,1e-05),) ;  _to_copy_1558 = arg902_1 = arg903_1 = None
        getitem_2637 = native_layer_norm_default_322[0]
        split_with_sizes_default_70 = torch.split(arg905_1,[512,512]) ;  arg905_1 = None
        getitem_2640 = split_with_sizes_default_70[0]
        getitem_2641 = split_with_sizes_default_70[1];  split_with_sizes_default_70 = None
        split_with_sizes_default_71 = torch.split(arg906_1,[512,512,256]) ;  arg906_1 = None
        getitem_2642 = split_with_sizes_default_71[0]
        getitem_2643 = split_with_sizes_default_71[1]
        getitem_2644 = split_with_sizes_default_71[2];  split_with_sizes_default_71 = None
        _to_copy_1559 = getitem_2640.to(dtype = torch.bfloat16) ;  getitem_2640 = None
        _to_copy_1560 = getitem_2637.to(dtype = torch.bfloat16) 
        t_576 = _to_copy_1559.t() ;  _to_copy_1559 = None
        view_2755 = _to_copy_1560.view(262144, 256) ;  _to_copy_1560 = None
        mm_537 = torch.mm(view_2755,t_576) ;  view_2755 = t_576 = None
        view_2756 = mm_537.view(1, 512, 512, 512) ;  mm_537 = None
        _to_copy_1561 = getitem_2642.to(dtype = torch.bfloat16) ;  getitem_2642 = None
        _to_copy_1562 = getitem_2637.to(dtype = torch.bfloat16) 
        t_577 = _to_copy_1561.t() ;  _to_copy_1561 = None
        view_2757 = _to_copy_1562.view(262144, 256) ;  _to_copy_1562 = None
        mm_538 = torch.mm(view_2757,t_577) ;  view_2757 = t_577 = None
        view_2758 = mm_538.view(1, 512, 512, 512) ;  mm_538 = None
        sigmoid_216 = torch.sigmoid(view_2758) ;  view_2758 = None
        mul_357 = torch.mul(view_2756,sigmoid_216) ;  view_2756 = sigmoid_216 = None
        unsqueeze_910 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_174 = torch.bitwise_not(unsqueeze_910) ;  unsqueeze_910 = None
        masked_fill_174 = mul_357.masked_fill(bitwise_not_174,0) ;  mul_357 = bitwise_not_174 = None
        split_tensor_283 = torch.split(masked_fill_174,256,dim = -1) 
        getitem_2647 = split_tensor_283[0]
        unsqueeze_913 = torch.unsqueeze(getitem_2647,4) ;  getitem_2647 = None
        permute_1487 = unsqueeze_913.permute(0, 1, 4, 3, 2) ;  unsqueeze_913 = None
        permute_1488 = permute_1487.permute(3, 1, 4, 0, 2) ;  permute_1487 = None
        view_2761 = permute_1488.view(256, 512, 512) ;  permute_1488 = None
        split_tensor_284 = torch.split(masked_fill_174,256,dim = -1) ;  masked_fill_174 = None
        getitem_2650 = split_tensor_284[1];  split_tensor_284 = None
        unsqueeze_914 = torch.unsqueeze(getitem_2650,4) ;  getitem_2650 = None
        permute_1489 = unsqueeze_914.permute(0, 4, 1, 3, 2) ;  unsqueeze_914 = None
        permute_1490 = permute_1489.permute(3, 4, 0, 2, 1) ;  permute_1489 = None
        view_2762 = permute_1490.view(256, 512, 512) ;  permute_1490 = None
        bmm_223 = torch.bmm(view_2761,view_2762) ;  view_2761 = view_2762 = None
        view_2763 = bmm_223.view(256, 512, 1, 1, 512) ;  bmm_223 = None
        permute_1491 = view_2763.permute(3, 1, 4, 0, 2) ;  view_2763 = None
        view_2764 = permute_1491.view(1, 512, 512, 256) ;  permute_1491 = None
        _to_copy_1563 = getitem_2641.to(dtype = torch.bfloat16) ;  getitem_2641 = None
        _to_copy_1564 = getitem_2637.to(dtype = torch.bfloat16) 
        t_578 = _to_copy_1563.t() ;  _to_copy_1563 = None
        view_2765 = _to_copy_1564.view(262144, 256) ;  _to_copy_1564 = None
        mm_539 = torch.mm(view_2765,t_578) ;  view_2765 = t_578 = None
        view_2766 = mm_539.view(1, 512, 512, 512) ;  mm_539 = None
        _to_copy_1565 = getitem_2643.to(dtype = torch.bfloat16) ;  getitem_2643 = None
        _to_copy_1566 = getitem_2637.to(dtype = torch.bfloat16) 
        t_579 = _to_copy_1565.t() ;  _to_copy_1565 = None
        view_2767 = _to_copy_1566.view(262144, 256) ;  _to_copy_1566 = None
        mm_540 = torch.mm(view_2767,t_579) ;  view_2767 = t_579 = None
        view_2768 = mm_540.view(1, 512, 512, 512) ;  mm_540 = None
        sigmoid_217 = torch.sigmoid(view_2768) ;  view_2768 = None
        mul_358 = torch.mul(view_2766,sigmoid_217) ;  view_2766 = sigmoid_217 = None
        view_2769 = mul_358.view(262144, 512) ;  mul_358 = None
        view_2770 = view_2769.view(1, 512, 512, 512) ;  view_2769 = None
        transpose_70 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_915 = torch.unsqueeze(transpose_70,3) ;  transpose_70 = None
        clone_240 = torch.clone(unsqueeze_915,memory_format = torch.contiguous_format) ;  unsqueeze_915 = None
        bitwise_not_175 = torch.bitwise_not(clone_240) ;  clone_240 = None
        masked_fill_175 = view_2770.masked_fill(bitwise_not_175,0) ;  view_2770 = bitwise_not_175 = None
        view_2771 = masked_fill_175.view(262144, 512) ;  masked_fill_175 = None
        view_2775 = view_2771.view(1, 512, 512, 512) 
        split_tensor_285 = torch.split(view_2775,256,dim = -1) ;  view_2775 = None
        getitem_2653 = split_tensor_285[0]
        unsqueeze_918 = torch.unsqueeze(getitem_2653,4) ;  getitem_2653 = None
        permute_1496 = unsqueeze_918.permute(0, 2, 4, 3, 1) ;  unsqueeze_918 = None
        permute_1497 = permute_1496.permute(3, 1, 4, 0, 2) ;  permute_1496 = None
        view_2776 = permute_1497.view(256, 512, 512) ;  permute_1497 = None
        view_2777 = view_2771.view(1, 512, 512, 512) ;  view_2771 = None
        split_tensor_286 = torch.split(view_2777,256,dim = -1) ;  view_2777 = None
        getitem_2656 = split_tensor_286[1];  split_tensor_286 = None
        unsqueeze_919 = torch.unsqueeze(getitem_2656,4) ;  getitem_2656 = None
        permute_1498 = unsqueeze_919.permute(0, 4, 2, 3, 1) ;  unsqueeze_919 = None
        permute_1499 = permute_1498.permute(3, 4, 0, 2, 1) ;  permute_1498 = None
        view_2778 = permute_1499.view(256, 512, 512) ;  permute_1499 = None
        bmm_224 = torch.bmm(view_2776,view_2778) ;  view_2776 = view_2778 = None
        view_2779 = bmm_224.view(256, 512, 1, 1, 512) ;  bmm_224 = None
        permute_1500 = view_2779.permute(3, 1, 4, 0, 2) ;  view_2779 = None
        view_2780 = permute_1500.view(1, 512, 512, 256) ;  permute_1500 = None
        _to_copy_1567 = view_2764.to(dtype = torch.float32) ;  view_2764 = None
        native_layer_norm_default_323 = (torch.nn.functional.layer_norm(_to_copy_1567,[256],None,None,1e-05),) ;  _to_copy_1567 = None
        getitem_2657 = native_layer_norm_default_323[0]
        _to_copy_1568 = view_2780.to(dtype = torch.float32) ;  view_2780 = None
        native_layer_norm_default_324 = (torch.nn.functional.layer_norm(_to_copy_1568,[256],None,None,1e-05),) ;  _to_copy_1568 = None
        getitem_2660 = native_layer_norm_default_324[0]
        add_288 = torch.add(getitem_2657,getitem_2660) ;  getitem_2657 = getitem_2660 = None
        _to_copy_1569 = arg904_1.to(dtype = torch.bfloat16) ;  arg904_1 = None
        _to_copy_1570 = add_288.to(dtype = torch.bfloat16) ;  add_288 = None
        t_580 = _to_copy_1569.t() ;  _to_copy_1569 = None
        view_2781 = _to_copy_1570.view(262144, 256) ;  _to_copy_1570 = None
        mm_541 = torch.mm(view_2781,t_580) ;  view_2781 = t_580 = None
        view_2782 = mm_541.view(1, 512, 512, 256) ;  mm_541 = None
        _to_copy_1571 = getitem_2644.to(dtype = torch.bfloat16) ;  getitem_2644 = None
        _to_copy_1572 = getitem_2637.to(dtype = torch.bfloat16) ;  getitem_2637 = None
        t_581 = _to_copy_1571.t() ;  _to_copy_1571 = None
        view_2783 = _to_copy_1572.view(262144, 256) ;  _to_copy_1572 = None
        mm_542 = torch.mm(view_2783,t_581) ;  view_2783 = t_581 = None
        view_2784 = mm_542.view(1, 512, 512, 256) ;  mm_542 = None
        sigmoid_218 = torch.sigmoid(view_2784) ;  view_2784 = None
        mul_359 = torch.mul(view_2782,sigmoid_218) ;  view_2782 = sigmoid_218 = None
        add_289 = torch.add(add_283,mul_359) ;  mul_359 = None
        _to_copy_1573 = add_283.to(dtype = torch.float32) 
        native_layer_norm_default_325 = (torch.nn.functional.layer_norm(_to_copy_1573,[256],None,None,1e-05),) ;  _to_copy_1573 = None
        getitem_2663 = native_layer_norm_default_325[0]
        _to_copy_1574 = arg908_1.to(dtype = torch.bfloat16) ;  arg908_1 = None
        _to_copy_1575 = getitem_2663.to(dtype = torch.bfloat16) 
        t_582 = _to_copy_1574.t() ;  _to_copy_1574 = None
        view_2785 = _to_copy_1575.view(262144, 256) ;  _to_copy_1575 = None
        mm_543 = torch.mm(view_2785,t_582) ;  view_2785 = t_582 = None
        view_2786 = mm_543.view(1, 512, 512, 8) ;  mm_543 = None
        view_2787 = view_2786.view(1, 512, 512, 2, 4) ;  view_2786 = None
        permute_1501 = view_2787.permute(0, 3, 4, 1, 2) ;  view_2787 = None
        view_2788 = permute_1501.view(1, 2, 4, 1, 512, 512) ;  permute_1501 = None
        view_2789 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_176 = torch.bitwise_not(view_2789) ;  view_2789 = None
        masked_fill_176 = view_2788.masked_fill(bitwise_not_176,-10000) ;  view_2788 = bitwise_not_176 = None
        view_2790 = masked_fill_176.view(1, 2, 4, 512, 512) ;  masked_fill_176 = None
        permute_1502 = view_2790.permute(1, 0, 2, 3, 4) ;  view_2790 = None
        view_2791 = permute_1502.view(2, 4, 1, 512, 512) ;  permute_1502 = None
        _to_copy_1576 = arg909_1.to(dtype = torch.bfloat16) ;  arg909_1 = None
        _to_copy_1577 = getitem_2663.to(dtype = torch.bfloat16) 
        t_583 = _to_copy_1576.t() ;  _to_copy_1576 = None
        view_2792 = _to_copy_1577.view(262144, 256) ;  _to_copy_1577 = None
        mm_544 = torch.mm(view_2792,t_583) ;  view_2792 = t_583 = None
        view_2793 = mm_544.view(1, 512, 512, 1024) ;  mm_544 = None
        select_71 = torch.select(view_2791,0,0) 
        view_2794 = view_2793.view(1, 512, 512, 4, 4, 64) ;  view_2793 = None
        permute_1503 = view_2794.permute(4, 0, 3, 1, 2, 5) ;  view_2794 = None
        view_2795 = permute_1503.view(4, 4, 512, 512, 64) ;  permute_1503 = None
        unbind_int_127 = torch.unbind(view_2795) ;  view_2795 = None
        getitem_2666 = unbind_int_127[0]
        getitem_2667 = unbind_int_127[1]
        getitem_2668 = unbind_int_127[2]
        getitem_2669 = unbind_int_127[3];  unbind_int_127 = None
        expand_172 = select_71.expand(4, 512, 512, 512) ;  select_71 = None
        _scaled_dot_product_efficient_attention_default_99 = (torch.nn.functional.scaled_dot_product_attention(getitem_2666,getitem_2667,getitem_2668,expand_172,False),) ;  getitem_2666 = getitem_2667 = getitem_2668 = expand_172 = None
        getitem_2670 = _scaled_dot_product_efficient_attention_default_99[0]
        sigmoid_219 = torch.sigmoid(getitem_2669) ;  getitem_2669 = None
        mul_360 = torch.mul(getitem_2670,sigmoid_219) ;  getitem_2670 = sigmoid_219 = None
        view_2796 = mul_360.view(1, 4, 512, 512, 64) ;  mul_360 = None
        permute_1504 = view_2796.permute(0, 2, 3, 1, 4) ;  view_2796 = None
        clone_241 = torch.clone(permute_1504,memory_format = torch.contiguous_format) ;  permute_1504 = None
        _unsafe_view_204 = clone_241.view(1, 512, 512, 256) ;  clone_241 = None
        transpose_71 = torch.transpose(getitem_2663,1,2) ;  getitem_2663 = None
        _to_copy_1578 = arg910_1.to(dtype = torch.bfloat16) ;  arg910_1 = None
        _to_copy_1579 = transpose_71.to(dtype = torch.bfloat16) ;  transpose_71 = None
        t_584 = _to_copy_1578.t() ;  _to_copy_1578 = None
        expand_173 = _to_copy_1579.expand(1, 512, 512, 256) ;  _to_copy_1579 = None
        view_2797 = expand_173.view(512, 512, 256) ;  expand_173 = None
        expand_174 = t_584.expand(1, 512, 256, 1024) ;  t_584 = None
        view_2798 = expand_174.view(512, 256, 1024) ;  expand_174 = None
        bmm_225 = torch.bmm(view_2797,view_2798) ;  view_2797 = view_2798 = None
        view_2799 = bmm_225.view(1, 512, 512, 1024) ;  bmm_225 = None
        select_72 = torch.select(view_2791,0,1) ;  view_2791 = None
        view_2800 = view_2799.view(1, 512, 512, 4, 4, 64) ;  view_2799 = None
        permute_1505 = view_2800.permute(4, 0, 3, 1, 2, 5) ;  view_2800 = None
        view_2801 = permute_1505.view(4, 4, 512, 512, 64) ;  permute_1505 = None
        unbind_int_128 = torch.unbind(view_2801) ;  view_2801 = None
        getitem_2674 = unbind_int_128[0]
        getitem_2675 = unbind_int_128[1]
        getitem_2676 = unbind_int_128[2]
        getitem_2677 = unbind_int_128[3];  unbind_int_128 = None
        expand_175 = select_72.expand(4, 512, 512, 512) ;  select_72 = None
        _scaled_dot_product_efficient_attention_default_100 = (torch.nn.functional.scaled_dot_product_attention(getitem_2674,getitem_2675,getitem_2676,expand_175,False),) ;  getitem_2674 = getitem_2675 = getitem_2676 = expand_175 = None
        getitem_2678 = _scaled_dot_product_efficient_attention_default_100[0]
        sigmoid_220 = torch.sigmoid(getitem_2677) ;  getitem_2677 = None
        mul_361 = torch.mul(getitem_2678,sigmoid_220) ;  getitem_2678 = sigmoid_220 = None
        view_2802 = mul_361.view(1, 4, 512, 512, 64) ;  mul_361 = None
        permute_1506 = view_2802.permute(0, 2, 3, 1, 4) ;  view_2802 = None
        clone_242 = torch.clone(permute_1506,memory_format = torch.contiguous_format) ;  permute_1506 = None
        _unsafe_view_205 = clone_242.view(1, 512, 512, 256) ;  clone_242 = None
        cat_41 = torch.cat([_unsafe_view_204,_unsafe_view_205],dim = -1) ;  _unsafe_view_204 = _unsafe_view_205 = None
        slice_234 = arg907_1[0:] ;  arg907_1 = None
        unsqueeze_920 = torch.unsqueeze(slice_234,1) ;  slice_234 = None
        mul_362 = torch.mul(arg911_1,unsqueeze_920) ;  arg911_1 = unsqueeze_920 = None
        _to_copy_1580 = mul_362.to(dtype = torch.bfloat16) ;  mul_362 = None
        t_585 = _to_copy_1580.t() ;  _to_copy_1580 = None
        view_2803 = cat_41.view(262144, 512) ;  cat_41 = None
        mm_545 = torch.mm(view_2803,t_585) ;  view_2803 = t_585 = None
        view_2804 = mm_545.view(1, 512, 512, 256) ;  mm_545 = None
        add_290 = torch.add(add_289,view_2804) ;  add_289 = view_2804 = None
        split_tensor_287 = torch.split(add_283,512,dim = -2) 
        getitem_2682 = split_tensor_287[0];  split_tensor_287 = None
        _to_copy_1581 = getitem_2682.to(dtype = torch.float32) ;  getitem_2682 = None
        native_layer_norm_default_326 = (torch.nn.functional.layer_norm(_to_copy_1581,[256],arg898_1,arg899_1,1e-05),) ;  _to_copy_1581 = arg898_1 = arg899_1 = None
        getitem_2683 = native_layer_norm_default_326[0]
        _to_copy_1582 = arg900_1.to(dtype = torch.bfloat16) ;  arg900_1 = None
        _to_copy_1583 = getitem_2683.to(dtype = torch.bfloat16) ;  getitem_2683 = None
        t_586 = _to_copy_1582.t() ;  _to_copy_1582 = None
        view_2805 = _to_copy_1583.view(262144, 256) ;  _to_copy_1583 = None
        mm_546 = torch.mm(view_2805,t_586) ;  view_2805 = t_586 = None
        view_2806 = mm_546.view(1, 512, 512, 1024) ;  mm_546 = None
        split_tensor_288 = torch.split(view_2806,512,dim = -1) ;  view_2806 = None
        getitem_2686 = split_tensor_288[0]
        getitem_2687 = split_tensor_288[1];  split_tensor_288 = None
        silu_76 = torch.nn.functional.silu(getitem_2686) ;  getitem_2686 = None
        mul_363 = torch.mul(silu_76,getitem_2687) ;  silu_76 = getitem_2687 = None
        _to_copy_1584 = arg901_1.to(dtype = torch.bfloat16) ;  arg901_1 = None
        t_587 = _to_copy_1584.t() ;  _to_copy_1584 = None
        view_2808 = mul_363.view(262144, 512) ;  mul_363 = None
        mm_547 = torch.mm(view_2808,t_587) ;  view_2808 = t_587 = None
        view_2809 = mm_547.view(1, 512, 512, 256) ;  mm_547 = None
        add_291 = torch.add(add_290,view_2809) ;  add_290 = view_2809 = None
        _to_copy_1585 = add_287.to(dtype = torch.float32) 
        native_layer_norm_default_327 = (torch.nn.functional.layer_norm(_to_copy_1585,[384],arg916_1,arg917_1,1e-05),) ;  _to_copy_1585 = arg916_1 = arg917_1 = None
        getitem_2688 = native_layer_norm_default_327[0]
        _to_copy_1586 = add_283.to(dtype = torch.float32) ;  add_283 = None
        native_layer_norm_default_328 = (torch.nn.functional.layer_norm(_to_copy_1586,[256],arg918_1,arg919_1,1e-05),) ;  _to_copy_1586 = arg918_1 = arg919_1 = None
        getitem_2691 = native_layer_norm_default_328[0]
        _to_copy_1587 = arg920_1.to(dtype = torch.bfloat16) ;  arg920_1 = None
        _to_copy_1588 = getitem_2691.to(dtype = torch.bfloat16) ;  getitem_2691 = None
        t_588 = _to_copy_1587.t() ;  _to_copy_1587 = None
        view_2810 = _to_copy_1588.view(262144, 256) ;  _to_copy_1588 = None
        mm_548 = torch.mm(view_2810,t_588) ;  view_2810 = t_588 = None
        view_2811 = mm_548.view(1, 512, 512, 16) ;  mm_548 = None
        permute_1507 = view_2811.permute(0, 3, 1, 2) ;  view_2811 = None
        view_2812 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_177 = torch.bitwise_not(view_2812) ;  view_2812 = None
        masked_fill_177 = permute_1507.masked_fill(bitwise_not_177,-10000) ;  permute_1507 = bitwise_not_177 = None
        _to_copy_1589 = getitem_2688.to(dtype = torch.bfloat16) ;  getitem_2688 = None
        _to_copy_1590 = arg922_1.to(dtype = torch.bfloat16) ;  arg922_1 = None
        unsqueeze_921 = torch.unsqueeze(_to_copy_1589,3) ;  _to_copy_1589 = None
        unsqueeze_922 = torch.unsqueeze(unsqueeze_921,4) ;  unsqueeze_921 = None
        unsqueeze_923 = torch.unsqueeze(unsqueeze_922,5) ;  unsqueeze_922 = None
        permute_1508 = unsqueeze_923.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_923 = None
        unsqueeze_924 = torch.unsqueeze(_to_copy_1590,4) ;  _to_copy_1590 = None
        unsqueeze_925 = torch.unsqueeze(unsqueeze_924,5) ;  unsqueeze_924 = None
        permute_1509 = unsqueeze_925.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_925 = None
        permute_1510 = permute_1508.permute(3, 5, 0, 1, 2, 4) ;  permute_1508 = None
        view_2813 = permute_1510.view(1, 512, 384) ;  permute_1510 = None
        permute_1511 = permute_1509.permute(5, 0, 1, 2, 4, 3) ;  permute_1509 = None
        view_2814 = permute_1511.view(1, 384, 1536) ;  permute_1511 = None
        bmm_226 = torch.bmm(view_2813,view_2814) ;  view_2813 = view_2814 = None
        view_2815 = bmm_226.view(512, 1, 4, 1, 16, 24) ;  bmm_226 = None
        permute_1512 = view_2815.permute(2, 3, 4, 0, 5, 1) ;  view_2815 = None
        view_2816 = permute_1512.view(4, 1, 16, 512, 24) ;  permute_1512 = None
        unbind_int_129 = torch.unbind(view_2816) ;  view_2816 = None
        getitem_2694 = unbind_int_129[0]
        getitem_2695 = unbind_int_129[1]
        getitem_2696 = unbind_int_129[2]
        getitem_2697 = unbind_int_129[3];  unbind_int_129 = None
        view_2817 = arg921_1.view(1, 16, 1, 24) ;  arg921_1 = None
        add_292 = torch.add(getitem_2694,view_2817) ;  getitem_2694 = view_2817 = None
        _to_copy_1591 = add_292.to(dtype = torch.bfloat16) ;  add_292 = None
        expand_176 = masked_fill_177.expand(1, 16, 512, 512) ;  masked_fill_177 = None
        _scaled_dot_product_efficient_attention_default_101 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1591,getitem_2695,getitem_2696,expand_176,False),) ;  _to_copy_1591 = getitem_2695 = getitem_2696 = expand_176 = None
        getitem_2698 = _scaled_dot_product_efficient_attention_default_101[0]
        add_293 = torch.add(getitem_2697,1) ;  getitem_2697 = None
        sigmoid_221 = torch.sigmoid(add_293) ;  add_293 = None
        mul_364 = torch.mul(getitem_2698,sigmoid_221) ;  getitem_2698 = sigmoid_221 = None
        _to_copy_1592 = arg923_1.to(dtype = torch.bfloat16) ;  arg923_1 = None
        unsqueeze_926 = torch.unsqueeze(mul_364,4) ;  mul_364 = None
        permute_1513 = unsqueeze_926.permute(0, 2, 4, 3, 1) ;  unsqueeze_926 = None
        unsqueeze_927 = torch.unsqueeze(_to_copy_1592,3) ;  _to_copy_1592 = None
        unsqueeze_928 = torch.unsqueeze(unsqueeze_927,4) ;  unsqueeze_927 = None
        permute_1514 = unsqueeze_928.permute(3, 4, 2, 1, 0) ;  unsqueeze_928 = None
        permute_1515 = permute_1513.permute(1, 3, 4, 0, 2) ;  permute_1513 = None
        clone_243 = torch.clone(permute_1515,memory_format = torch.contiguous_format) ;  permute_1515 = None
        _unsafe_view_206 = clone_243.view(1, 512, 384) ;  clone_243 = None
        permute_1516 = permute_1514.permute(3, 4, 0, 2, 1) ;  permute_1514 = None
        clone_244 = torch.clone(permute_1516,memory_format = torch.contiguous_format) ;  permute_1516 = None
        _unsafe_view_207 = clone_244.view(1, 384, 384) ;  clone_244 = None
        bmm_227 = torch.bmm(_unsafe_view_206,_unsafe_view_207) ;  _unsafe_view_206 = _unsafe_view_207 = None
        view_2818 = bmm_227.view(512, 1, 1, 1, 384) ;  bmm_227 = None
        permute_1517 = view_2818.permute(3, 0, 4, 1, 2) ;  view_2818 = None
        view_2819 = permute_1517.view(1, 512, 384) ;  permute_1517 = None
        unsqueeze_929 = torch.unsqueeze(arg1406_1,-1) 
        mul_365 = torch.mul(view_2819,unsqueeze_929) ;  view_2819 = unsqueeze_929 = None
        add_294 = torch.add(add_287,mul_365) ;  mul_365 = None
        split_tensor_289 = torch.split(add_287,512,dim = -2) ;  add_287 = None
        getitem_2702 = split_tensor_289[0];  split_tensor_289 = None
        _to_copy_1593 = getitem_2702.to(dtype = torch.float32) ;  getitem_2702 = None
        native_layer_norm_default_329 = (torch.nn.functional.layer_norm(_to_copy_1593,[384],arg912_1,arg913_1,1e-05),) ;  _to_copy_1593 = arg912_1 = arg913_1 = None
        getitem_2703 = native_layer_norm_default_329[0]
        _to_copy_1594 = arg914_1.to(dtype = torch.bfloat16) ;  arg914_1 = None
        _to_copy_1595 = getitem_2703.to(dtype = torch.bfloat16) ;  getitem_2703 = None
        t_589 = _to_copy_1594.t() ;  _to_copy_1594 = None
        view_2820 = _to_copy_1595.view(512, 384) ;  _to_copy_1595 = None
        mm_549 = torch.mm(view_2820,t_589) ;  view_2820 = t_589 = None
        view_2821 = mm_549.view(1, 512, 1536) ;  mm_549 = None
        split_tensor_290 = torch.split(view_2821,768,dim = -1) ;  view_2821 = None
        getitem_2706 = split_tensor_290[0]
        getitem_2707 = split_tensor_290[1];  split_tensor_290 = None
        silu_77 = torch.nn.functional.silu(getitem_2706) ;  getitem_2706 = None
        mul_366 = torch.mul(silu_77,getitem_2707) ;  silu_77 = getitem_2707 = None
        _to_copy_1596 = arg915_1.to(dtype = torch.bfloat16) ;  arg915_1 = None
        t_590 = _to_copy_1596.t() ;  _to_copy_1596 = None
        view_2823 = mul_366.view(512, 768) ;  mul_366 = None
        mm_550 = torch.mm(view_2823,t_590) ;  view_2823 = t_590 = None
        view_2824 = mm_550.view(1, 512, 384) ;  mm_550 = None
        add_295 = torch.add(add_294,view_2824) ;  add_294 = view_2824 = None
        _to_copy_1597 = add_291.to(dtype = torch.float32) 
        native_layer_norm_default_330 = (torch.nn.functional.layer_norm(_to_copy_1597,[256],arg928_1,arg929_1,1e-05),) ;  _to_copy_1597 = arg928_1 = arg929_1 = None
        getitem_2708 = native_layer_norm_default_330[0]
        split_with_sizes_default_72 = torch.split(arg931_1,[512,512]) ;  arg931_1 = None
        getitem_2711 = split_with_sizes_default_72[0]
        getitem_2712 = split_with_sizes_default_72[1];  split_with_sizes_default_72 = None
        split_with_sizes_default_73 = torch.split(arg932_1,[512,512,256]) ;  arg932_1 = None
        getitem_2713 = split_with_sizes_default_73[0]
        getitem_2714 = split_with_sizes_default_73[1]
        getitem_2715 = split_with_sizes_default_73[2];  split_with_sizes_default_73 = None
        _to_copy_1598 = getitem_2711.to(dtype = torch.bfloat16) ;  getitem_2711 = None
        _to_copy_1599 = getitem_2708.to(dtype = torch.bfloat16) 
        t_591 = _to_copy_1598.t() ;  _to_copy_1598 = None
        view_2825 = _to_copy_1599.view(262144, 256) ;  _to_copy_1599 = None
        mm_551 = torch.mm(view_2825,t_591) ;  view_2825 = t_591 = None
        view_2826 = mm_551.view(1, 512, 512, 512) ;  mm_551 = None
        _to_copy_1600 = getitem_2713.to(dtype = torch.bfloat16) ;  getitem_2713 = None
        _to_copy_1601 = getitem_2708.to(dtype = torch.bfloat16) 
        t_592 = _to_copy_1600.t() ;  _to_copy_1600 = None
        view_2827 = _to_copy_1601.view(262144, 256) ;  _to_copy_1601 = None
        mm_552 = torch.mm(view_2827,t_592) ;  view_2827 = t_592 = None
        view_2828 = mm_552.view(1, 512, 512, 512) ;  mm_552 = None
        sigmoid_222 = torch.sigmoid(view_2828) ;  view_2828 = None
        mul_367 = torch.mul(view_2826,sigmoid_222) ;  view_2826 = sigmoid_222 = None
        unsqueeze_930 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_178 = torch.bitwise_not(unsqueeze_930) ;  unsqueeze_930 = None
        masked_fill_178 = mul_367.masked_fill(bitwise_not_178,0) ;  mul_367 = bitwise_not_178 = None
        split_tensor_291 = torch.split(masked_fill_178,256,dim = -1) 
        getitem_2718 = split_tensor_291[0]
        unsqueeze_933 = torch.unsqueeze(getitem_2718,4) ;  getitem_2718 = None
        permute_1522 = unsqueeze_933.permute(0, 1, 4, 3, 2) ;  unsqueeze_933 = None
        permute_1523 = permute_1522.permute(3, 1, 4, 0, 2) ;  permute_1522 = None
        view_2831 = permute_1523.view(256, 512, 512) ;  permute_1523 = None
        split_tensor_292 = torch.split(masked_fill_178,256,dim = -1) ;  masked_fill_178 = None
        getitem_2721 = split_tensor_292[1];  split_tensor_292 = None
        unsqueeze_934 = torch.unsqueeze(getitem_2721,4) ;  getitem_2721 = None
        permute_1524 = unsqueeze_934.permute(0, 4, 1, 3, 2) ;  unsqueeze_934 = None
        permute_1525 = permute_1524.permute(3, 4, 0, 2, 1) ;  permute_1524 = None
        view_2832 = permute_1525.view(256, 512, 512) ;  permute_1525 = None
        bmm_228 = torch.bmm(view_2831,view_2832) ;  view_2831 = view_2832 = None
        view_2833 = bmm_228.view(256, 512, 1, 1, 512) ;  bmm_228 = None
        permute_1526 = view_2833.permute(3, 1, 4, 0, 2) ;  view_2833 = None
        view_2834 = permute_1526.view(1, 512, 512, 256) ;  permute_1526 = None
        _to_copy_1602 = getitem_2712.to(dtype = torch.bfloat16) ;  getitem_2712 = None
        _to_copy_1603 = getitem_2708.to(dtype = torch.bfloat16) 
        t_593 = _to_copy_1602.t() ;  _to_copy_1602 = None
        view_2835 = _to_copy_1603.view(262144, 256) ;  _to_copy_1603 = None
        mm_553 = torch.mm(view_2835,t_593) ;  view_2835 = t_593 = None
        view_2836 = mm_553.view(1, 512, 512, 512) ;  mm_553 = None
        _to_copy_1604 = getitem_2714.to(dtype = torch.bfloat16) ;  getitem_2714 = None
        _to_copy_1605 = getitem_2708.to(dtype = torch.bfloat16) 
        t_594 = _to_copy_1604.t() ;  _to_copy_1604 = None
        view_2837 = _to_copy_1605.view(262144, 256) ;  _to_copy_1605 = None
        mm_554 = torch.mm(view_2837,t_594) ;  view_2837 = t_594 = None
        view_2838 = mm_554.view(1, 512, 512, 512) ;  mm_554 = None
        sigmoid_223 = torch.sigmoid(view_2838) ;  view_2838 = None
        mul_368 = torch.mul(view_2836,sigmoid_223) ;  view_2836 = sigmoid_223 = None
        view_2839 = mul_368.view(262144, 512) ;  mul_368 = None
        view_2840 = view_2839.view(1, 512, 512, 512) ;  view_2839 = None
        transpose_72 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_935 = torch.unsqueeze(transpose_72,3) ;  transpose_72 = None
        clone_245 = torch.clone(unsqueeze_935,memory_format = torch.contiguous_format) ;  unsqueeze_935 = None
        bitwise_not_179 = torch.bitwise_not(clone_245) ;  clone_245 = None
        masked_fill_179 = view_2840.masked_fill(bitwise_not_179,0) ;  view_2840 = bitwise_not_179 = None
        view_2841 = masked_fill_179.view(262144, 512) ;  masked_fill_179 = None
        view_2845 = view_2841.view(1, 512, 512, 512) 
        split_tensor_293 = torch.split(view_2845,256,dim = -1) ;  view_2845 = None
        getitem_2724 = split_tensor_293[0]
        unsqueeze_938 = torch.unsqueeze(getitem_2724,4) ;  getitem_2724 = None
        permute_1531 = unsqueeze_938.permute(0, 2, 4, 3, 1) ;  unsqueeze_938 = None
        permute_1532 = permute_1531.permute(3, 1, 4, 0, 2) ;  permute_1531 = None
        view_2846 = permute_1532.view(256, 512, 512) ;  permute_1532 = None
        view_2847 = view_2841.view(1, 512, 512, 512) ;  view_2841 = None
        split_tensor_294 = torch.split(view_2847,256,dim = -1) ;  view_2847 = None
        getitem_2727 = split_tensor_294[1];  split_tensor_294 = None
        unsqueeze_939 = torch.unsqueeze(getitem_2727,4) ;  getitem_2727 = None
        permute_1533 = unsqueeze_939.permute(0, 4, 2, 3, 1) ;  unsqueeze_939 = None
        permute_1534 = permute_1533.permute(3, 4, 0, 2, 1) ;  permute_1533 = None
        view_2848 = permute_1534.view(256, 512, 512) ;  permute_1534 = None
        bmm_229 = torch.bmm(view_2846,view_2848) ;  view_2846 = view_2848 = None
        view_2849 = bmm_229.view(256, 512, 1, 1, 512) ;  bmm_229 = None
        permute_1535 = view_2849.permute(3, 1, 4, 0, 2) ;  view_2849 = None
        view_2850 = permute_1535.view(1, 512, 512, 256) ;  permute_1535 = None
        _to_copy_1606 = view_2834.to(dtype = torch.float32) ;  view_2834 = None
        native_layer_norm_default_331 = (torch.nn.functional.layer_norm(_to_copy_1606,[256],None,None,1e-05),) ;  _to_copy_1606 = None
        getitem_2728 = native_layer_norm_default_331[0]
        _to_copy_1607 = view_2850.to(dtype = torch.float32) ;  view_2850 = None
        native_layer_norm_default_332 = (torch.nn.functional.layer_norm(_to_copy_1607,[256],None,None,1e-05),) ;  _to_copy_1607 = None
        getitem_2731 = native_layer_norm_default_332[0]
        add_296 = torch.add(getitem_2728,getitem_2731) ;  getitem_2728 = getitem_2731 = None
        _to_copy_1608 = arg930_1.to(dtype = torch.bfloat16) ;  arg930_1 = None
        _to_copy_1609 = add_296.to(dtype = torch.bfloat16) ;  add_296 = None
        t_595 = _to_copy_1608.t() ;  _to_copy_1608 = None
        view_2851 = _to_copy_1609.view(262144, 256) ;  _to_copy_1609 = None
        mm_555 = torch.mm(view_2851,t_595) ;  view_2851 = t_595 = None
        view_2852 = mm_555.view(1, 512, 512, 256) ;  mm_555 = None
        _to_copy_1610 = getitem_2715.to(dtype = torch.bfloat16) ;  getitem_2715 = None
        _to_copy_1611 = getitem_2708.to(dtype = torch.bfloat16) ;  getitem_2708 = None
        t_596 = _to_copy_1610.t() ;  _to_copy_1610 = None
        view_2853 = _to_copy_1611.view(262144, 256) ;  _to_copy_1611 = None
        mm_556 = torch.mm(view_2853,t_596) ;  view_2853 = t_596 = None
        view_2854 = mm_556.view(1, 512, 512, 256) ;  mm_556 = None
        sigmoid_224 = torch.sigmoid(view_2854) ;  view_2854 = None
        mul_369 = torch.mul(view_2852,sigmoid_224) ;  view_2852 = sigmoid_224 = None
        add_297 = torch.add(add_291,mul_369) ;  mul_369 = None
        _to_copy_1612 = add_291.to(dtype = torch.float32) 
        native_layer_norm_default_333 = (torch.nn.functional.layer_norm(_to_copy_1612,[256],None,None,1e-05),) ;  _to_copy_1612 = None
        getitem_2734 = native_layer_norm_default_333[0]
        _to_copy_1613 = arg934_1.to(dtype = torch.bfloat16) ;  arg934_1 = None
        _to_copy_1614 = getitem_2734.to(dtype = torch.bfloat16) 
        t_597 = _to_copy_1613.t() ;  _to_copy_1613 = None
        view_2855 = _to_copy_1614.view(262144, 256) ;  _to_copy_1614 = None
        mm_557 = torch.mm(view_2855,t_597) ;  view_2855 = t_597 = None
        view_2856 = mm_557.view(1, 512, 512, 8) ;  mm_557 = None
        view_2857 = view_2856.view(1, 512, 512, 2, 4) ;  view_2856 = None
        permute_1536 = view_2857.permute(0, 3, 4, 1, 2) ;  view_2857 = None
        view_2858 = permute_1536.view(1, 2, 4, 1, 512, 512) ;  permute_1536 = None
        view_2859 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_180 = torch.bitwise_not(view_2859) ;  view_2859 = None
        masked_fill_180 = view_2858.masked_fill(bitwise_not_180,-10000) ;  view_2858 = bitwise_not_180 = None
        view_2860 = masked_fill_180.view(1, 2, 4, 512, 512) ;  masked_fill_180 = None
        permute_1537 = view_2860.permute(1, 0, 2, 3, 4) ;  view_2860 = None
        view_2861 = permute_1537.view(2, 4, 1, 512, 512) ;  permute_1537 = None
        _to_copy_1615 = arg935_1.to(dtype = torch.bfloat16) ;  arg935_1 = None
        _to_copy_1616 = getitem_2734.to(dtype = torch.bfloat16) 
        t_598 = _to_copy_1615.t() ;  _to_copy_1615 = None
        view_2862 = _to_copy_1616.view(262144, 256) ;  _to_copy_1616 = None
        mm_558 = torch.mm(view_2862,t_598) ;  view_2862 = t_598 = None
        view_2863 = mm_558.view(1, 512, 512, 1024) ;  mm_558 = None
        select_73 = torch.select(view_2861,0,0) 
        view_2864 = view_2863.view(1, 512, 512, 4, 4, 64) ;  view_2863 = None
        permute_1538 = view_2864.permute(4, 0, 3, 1, 2, 5) ;  view_2864 = None
        view_2865 = permute_1538.view(4, 4, 512, 512, 64) ;  permute_1538 = None
        unbind_int_130 = torch.unbind(view_2865) ;  view_2865 = None
        getitem_2737 = unbind_int_130[0]
        getitem_2738 = unbind_int_130[1]
        getitem_2739 = unbind_int_130[2]
        getitem_2740 = unbind_int_130[3];  unbind_int_130 = None
        expand_177 = select_73.expand(4, 512, 512, 512) ;  select_73 = None
        _scaled_dot_product_efficient_attention_default_102 = (torch.nn.functional.scaled_dot_product_attention(getitem_2737,getitem_2738,getitem_2739,expand_177,False),) ;  getitem_2737 = getitem_2738 = getitem_2739 = expand_177 = None
        getitem_2741 = _scaled_dot_product_efficient_attention_default_102[0]
        sigmoid_225 = torch.sigmoid(getitem_2740) ;  getitem_2740 = None
        mul_370 = torch.mul(getitem_2741,sigmoid_225) ;  getitem_2741 = sigmoid_225 = None
        view_2866 = mul_370.view(1, 4, 512, 512, 64) ;  mul_370 = None
        permute_1539 = view_2866.permute(0, 2, 3, 1, 4) ;  view_2866 = None
        clone_246 = torch.clone(permute_1539,memory_format = torch.contiguous_format) ;  permute_1539 = None
        _unsafe_view_208 = clone_246.view(1, 512, 512, 256) ;  clone_246 = None
        transpose_73 = torch.transpose(getitem_2734,1,2) ;  getitem_2734 = None
        _to_copy_1617 = arg936_1.to(dtype = torch.bfloat16) ;  arg936_1 = None
        _to_copy_1618 = transpose_73.to(dtype = torch.bfloat16) ;  transpose_73 = None
        t_599 = _to_copy_1617.t() ;  _to_copy_1617 = None
        expand_178 = _to_copy_1618.expand(1, 512, 512, 256) ;  _to_copy_1618 = None
        view_2867 = expand_178.view(512, 512, 256) ;  expand_178 = None
        expand_179 = t_599.expand(1, 512, 256, 1024) ;  t_599 = None
        view_2868 = expand_179.view(512, 256, 1024) ;  expand_179 = None
        bmm_230 = torch.bmm(view_2867,view_2868) ;  view_2867 = view_2868 = None
        view_2869 = bmm_230.view(1, 512, 512, 1024) ;  bmm_230 = None
        select_74 = torch.select(view_2861,0,1) ;  view_2861 = None
        view_2870 = view_2869.view(1, 512, 512, 4, 4, 64) ;  view_2869 = None
        permute_1540 = view_2870.permute(4, 0, 3, 1, 2, 5) ;  view_2870 = None
        view_2871 = permute_1540.view(4, 4, 512, 512, 64) ;  permute_1540 = None
        unbind_int_131 = torch.unbind(view_2871) ;  view_2871 = None
        getitem_2745 = unbind_int_131[0]
        getitem_2746 = unbind_int_131[1]
        getitem_2747 = unbind_int_131[2]
        getitem_2748 = unbind_int_131[3];  unbind_int_131 = None
        expand_180 = select_74.expand(4, 512, 512, 512) ;  select_74 = None
        _scaled_dot_product_efficient_attention_default_103 = (torch.nn.functional.scaled_dot_product_attention(getitem_2745,getitem_2746,getitem_2747,expand_180,False),) ;  getitem_2745 = getitem_2746 = getitem_2747 = expand_180 = None
        getitem_2749 = _scaled_dot_product_efficient_attention_default_103[0]
        sigmoid_226 = torch.sigmoid(getitem_2748) ;  getitem_2748 = None
        mul_371 = torch.mul(getitem_2749,sigmoid_226) ;  getitem_2749 = sigmoid_226 = None
        view_2872 = mul_371.view(1, 4, 512, 512, 64) ;  mul_371 = None
        permute_1541 = view_2872.permute(0, 2, 3, 1, 4) ;  view_2872 = None
        clone_247 = torch.clone(permute_1541,memory_format = torch.contiguous_format) ;  permute_1541 = None
        _unsafe_view_209 = clone_247.view(1, 512, 512, 256) ;  clone_247 = None
        cat_42 = torch.cat([_unsafe_view_208,_unsafe_view_209],dim = -1) ;  _unsafe_view_208 = _unsafe_view_209 = None
        slice_235 = arg933_1[0:] ;  arg933_1 = None
        unsqueeze_940 = torch.unsqueeze(slice_235,1) ;  slice_235 = None
        mul_372 = torch.mul(arg937_1,unsqueeze_940) ;  arg937_1 = unsqueeze_940 = None
        _to_copy_1619 = mul_372.to(dtype = torch.bfloat16) ;  mul_372 = None
        t_600 = _to_copy_1619.t() ;  _to_copy_1619 = None
        view_2873 = cat_42.view(262144, 512) ;  cat_42 = None
        mm_559 = torch.mm(view_2873,t_600) ;  view_2873 = t_600 = None
        view_2874 = mm_559.view(1, 512, 512, 256) ;  mm_559 = None
        add_298 = torch.add(add_297,view_2874) ;  add_297 = view_2874 = None
        split_tensor_295 = torch.split(add_291,512,dim = -2) 
        getitem_2753 = split_tensor_295[0];  split_tensor_295 = None
        _to_copy_1620 = getitem_2753.to(dtype = torch.float32) ;  getitem_2753 = None
        native_layer_norm_default_334 = (torch.nn.functional.layer_norm(_to_copy_1620,[256],arg924_1,arg925_1,1e-05),) ;  _to_copy_1620 = arg924_1 = arg925_1 = None
        getitem_2754 = native_layer_norm_default_334[0]
        _to_copy_1621 = arg926_1.to(dtype = torch.bfloat16) ;  arg926_1 = None
        _to_copy_1622 = getitem_2754.to(dtype = torch.bfloat16) ;  getitem_2754 = None
        t_601 = _to_copy_1621.t() ;  _to_copy_1621 = None
        view_2875 = _to_copy_1622.view(262144, 256) ;  _to_copy_1622 = None
        mm_560 = torch.mm(view_2875,t_601) ;  view_2875 = t_601 = None
        view_2876 = mm_560.view(1, 512, 512, 1024) ;  mm_560 = None
        split_tensor_296 = torch.split(view_2876,512,dim = -1) ;  view_2876 = None
        getitem_2757 = split_tensor_296[0]
        getitem_2758 = split_tensor_296[1];  split_tensor_296 = None
        silu_78 = torch.nn.functional.silu(getitem_2757) ;  getitem_2757 = None
        mul_373 = torch.mul(silu_78,getitem_2758) ;  silu_78 = getitem_2758 = None
        _to_copy_1623 = arg927_1.to(dtype = torch.bfloat16) ;  arg927_1 = None
        t_602 = _to_copy_1623.t() ;  _to_copy_1623 = None
        view_2878 = mul_373.view(262144, 512) ;  mul_373 = None
        mm_561 = torch.mm(view_2878,t_602) ;  view_2878 = t_602 = None
        view_2879 = mm_561.view(1, 512, 512, 256) ;  mm_561 = None
        add_299 = torch.add(add_298,view_2879) ;  add_298 = view_2879 = None
        _to_copy_1624 = add_295.to(dtype = torch.float32) 
        native_layer_norm_default_335 = (torch.nn.functional.layer_norm(_to_copy_1624,[384],arg942_1,arg943_1,1e-05),) ;  _to_copy_1624 = arg942_1 = arg943_1 = None
        getitem_2759 = native_layer_norm_default_335[0]
        _to_copy_1625 = add_291.to(dtype = torch.float32) ;  add_291 = None
        native_layer_norm_default_336 = (torch.nn.functional.layer_norm(_to_copy_1625,[256],arg944_1,arg945_1,1e-05),) ;  _to_copy_1625 = arg944_1 = arg945_1 = None
        getitem_2762 = native_layer_norm_default_336[0]
        _to_copy_1626 = arg946_1.to(dtype = torch.bfloat16) ;  arg946_1 = None
        _to_copy_1627 = getitem_2762.to(dtype = torch.bfloat16) ;  getitem_2762 = None
        t_603 = _to_copy_1626.t() ;  _to_copy_1626 = None
        view_2880 = _to_copy_1627.view(262144, 256) ;  _to_copy_1627 = None
        mm_562 = torch.mm(view_2880,t_603) ;  view_2880 = t_603 = None
        view_2881 = mm_562.view(1, 512, 512, 16) ;  mm_562 = None
        permute_1542 = view_2881.permute(0, 3, 1, 2) ;  view_2881 = None
        view_2882 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_181 = torch.bitwise_not(view_2882) ;  view_2882 = None
        masked_fill_181 = permute_1542.masked_fill(bitwise_not_181,-10000) ;  permute_1542 = bitwise_not_181 = None
        _to_copy_1628 = getitem_2759.to(dtype = torch.bfloat16) ;  getitem_2759 = None
        _to_copy_1629 = arg948_1.to(dtype = torch.bfloat16) ;  arg948_1 = None
        unsqueeze_941 = torch.unsqueeze(_to_copy_1628,3) ;  _to_copy_1628 = None
        unsqueeze_942 = torch.unsqueeze(unsqueeze_941,4) ;  unsqueeze_941 = None
        unsqueeze_943 = torch.unsqueeze(unsqueeze_942,5) ;  unsqueeze_942 = None
        permute_1543 = unsqueeze_943.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_943 = None
        unsqueeze_944 = torch.unsqueeze(_to_copy_1629,4) ;  _to_copy_1629 = None
        unsqueeze_945 = torch.unsqueeze(unsqueeze_944,5) ;  unsqueeze_944 = None
        permute_1544 = unsqueeze_945.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_945 = None
        permute_1545 = permute_1543.permute(3, 5, 0, 1, 2, 4) ;  permute_1543 = None
        view_2883 = permute_1545.view(1, 512, 384) ;  permute_1545 = None
        permute_1546 = permute_1544.permute(5, 0, 1, 2, 4, 3) ;  permute_1544 = None
        view_2884 = permute_1546.view(1, 384, 1536) ;  permute_1546 = None
        bmm_231 = torch.bmm(view_2883,view_2884) ;  view_2883 = view_2884 = None
        view_2885 = bmm_231.view(512, 1, 4, 1, 16, 24) ;  bmm_231 = None
        permute_1547 = view_2885.permute(2, 3, 4, 0, 5, 1) ;  view_2885 = None
        view_2886 = permute_1547.view(4, 1, 16, 512, 24) ;  permute_1547 = None
        unbind_int_132 = torch.unbind(view_2886) ;  view_2886 = None
        getitem_2765 = unbind_int_132[0]
        getitem_2766 = unbind_int_132[1]
        getitem_2767 = unbind_int_132[2]
        getitem_2768 = unbind_int_132[3];  unbind_int_132 = None
        view_2887 = arg947_1.view(1, 16, 1, 24) ;  arg947_1 = None
        add_300 = torch.add(getitem_2765,view_2887) ;  getitem_2765 = view_2887 = None
        _to_copy_1630 = add_300.to(dtype = torch.bfloat16) ;  add_300 = None
        expand_181 = masked_fill_181.expand(1, 16, 512, 512) ;  masked_fill_181 = None
        _scaled_dot_product_efficient_attention_default_104 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1630,getitem_2766,getitem_2767,expand_181,False),) ;  _to_copy_1630 = getitem_2766 = getitem_2767 = expand_181 = None
        getitem_2769 = _scaled_dot_product_efficient_attention_default_104[0]
        add_301 = torch.add(getitem_2768,1) ;  getitem_2768 = None
        sigmoid_227 = torch.sigmoid(add_301) ;  add_301 = None
        mul_374 = torch.mul(getitem_2769,sigmoid_227) ;  getitem_2769 = sigmoid_227 = None
        _to_copy_1631 = arg949_1.to(dtype = torch.bfloat16) ;  arg949_1 = None
        unsqueeze_946 = torch.unsqueeze(mul_374,4) ;  mul_374 = None
        permute_1548 = unsqueeze_946.permute(0, 2, 4, 3, 1) ;  unsqueeze_946 = None
        unsqueeze_947 = torch.unsqueeze(_to_copy_1631,3) ;  _to_copy_1631 = None
        unsqueeze_948 = torch.unsqueeze(unsqueeze_947,4) ;  unsqueeze_947 = None
        permute_1549 = unsqueeze_948.permute(3, 4, 2, 1, 0) ;  unsqueeze_948 = None
        permute_1550 = permute_1548.permute(1, 3, 4, 0, 2) ;  permute_1548 = None
        clone_248 = torch.clone(permute_1550,memory_format = torch.contiguous_format) ;  permute_1550 = None
        _unsafe_view_210 = clone_248.view(1, 512, 384) ;  clone_248 = None
        permute_1551 = permute_1549.permute(3, 4, 0, 2, 1) ;  permute_1549 = None
        clone_249 = torch.clone(permute_1551,memory_format = torch.contiguous_format) ;  permute_1551 = None
        _unsafe_view_211 = clone_249.view(1, 384, 384) ;  clone_249 = None
        bmm_232 = torch.bmm(_unsafe_view_210,_unsafe_view_211) ;  _unsafe_view_210 = _unsafe_view_211 = None
        view_2888 = bmm_232.view(512, 1, 1, 1, 384) ;  bmm_232 = None
        permute_1552 = view_2888.permute(3, 0, 4, 1, 2) ;  view_2888 = None
        view_2889 = permute_1552.view(1, 512, 384) ;  permute_1552 = None
        unsqueeze_949 = torch.unsqueeze(arg1406_1,-1) 
        mul_375 = torch.mul(view_2889,unsqueeze_949) ;  view_2889 = unsqueeze_949 = None
        add_302 = torch.add(add_295,mul_375) ;  mul_375 = None
        split_tensor_297 = torch.split(add_295,512,dim = -2) ;  add_295 = None
        getitem_2773 = split_tensor_297[0];  split_tensor_297 = None
        _to_copy_1632 = getitem_2773.to(dtype = torch.float32) ;  getitem_2773 = None
        native_layer_norm_default_337 = (torch.nn.functional.layer_norm(_to_copy_1632,[384],arg938_1,arg939_1,1e-05),) ;  _to_copy_1632 = arg938_1 = arg939_1 = None
        getitem_2774 = native_layer_norm_default_337[0]
        _to_copy_1633 = arg940_1.to(dtype = torch.bfloat16) ;  arg940_1 = None
        _to_copy_1634 = getitem_2774.to(dtype = torch.bfloat16) ;  getitem_2774 = None
        t_604 = _to_copy_1633.t() ;  _to_copy_1633 = None
        view_2890 = _to_copy_1634.view(512, 384) ;  _to_copy_1634 = None
        mm_563 = torch.mm(view_2890,t_604) ;  view_2890 = t_604 = None
        view_2891 = mm_563.view(1, 512, 1536) ;  mm_563 = None
        split_tensor_298 = torch.split(view_2891,768,dim = -1) ;  view_2891 = None
        getitem_2777 = split_tensor_298[0]
        getitem_2778 = split_tensor_298[1];  split_tensor_298 = None
        silu_79 = torch.nn.functional.silu(getitem_2777) ;  getitem_2777 = None
        mul_376 = torch.mul(silu_79,getitem_2778) ;  silu_79 = getitem_2778 = None
        _to_copy_1635 = arg941_1.to(dtype = torch.bfloat16) ;  arg941_1 = None
        t_605 = _to_copy_1635.t() ;  _to_copy_1635 = None
        view_2893 = mul_376.view(512, 768) ;  mul_376 = None
        mm_564 = torch.mm(view_2893,t_605) ;  view_2893 = t_605 = None
        view_2894 = mm_564.view(1, 512, 384) ;  mm_564 = None
        add_303 = torch.add(add_302,view_2894) ;  add_302 = view_2894 = None
        _to_copy_1636 = add_299.to(dtype = torch.float32) 
        native_layer_norm_default_338 = (torch.nn.functional.layer_norm(_to_copy_1636,[256],arg954_1,arg955_1,1e-05),) ;  _to_copy_1636 = arg954_1 = arg955_1 = None
        getitem_2779 = native_layer_norm_default_338[0]
        split_with_sizes_default_74 = torch.split(arg957_1,[512,512]) ;  arg957_1 = None
        getitem_2782 = split_with_sizes_default_74[0]
        getitem_2783 = split_with_sizes_default_74[1];  split_with_sizes_default_74 = None
        split_with_sizes_default_75 = torch.split(arg958_1,[512,512,256]) ;  arg958_1 = None
        getitem_2784 = split_with_sizes_default_75[0]
        getitem_2785 = split_with_sizes_default_75[1]
        getitem_2786 = split_with_sizes_default_75[2];  split_with_sizes_default_75 = None
        _to_copy_1637 = getitem_2782.to(dtype = torch.bfloat16) ;  getitem_2782 = None
        _to_copy_1638 = getitem_2779.to(dtype = torch.bfloat16) 
        t_606 = _to_copy_1637.t() ;  _to_copy_1637 = None
        view_2895 = _to_copy_1638.view(262144, 256) ;  _to_copy_1638 = None
        mm_565 = torch.mm(view_2895,t_606) ;  view_2895 = t_606 = None
        view_2896 = mm_565.view(1, 512, 512, 512) ;  mm_565 = None
        _to_copy_1639 = getitem_2784.to(dtype = torch.bfloat16) ;  getitem_2784 = None
        _to_copy_1640 = getitem_2779.to(dtype = torch.bfloat16) 
        t_607 = _to_copy_1639.t() ;  _to_copy_1639 = None
        view_2897 = _to_copy_1640.view(262144, 256) ;  _to_copy_1640 = None
        mm_566 = torch.mm(view_2897,t_607) ;  view_2897 = t_607 = None
        view_2898 = mm_566.view(1, 512, 512, 512) ;  mm_566 = None
        sigmoid_228 = torch.sigmoid(view_2898) ;  view_2898 = None
        mul_377 = torch.mul(view_2896,sigmoid_228) ;  view_2896 = sigmoid_228 = None
        unsqueeze_950 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_182 = torch.bitwise_not(unsqueeze_950) ;  unsqueeze_950 = None
        masked_fill_182 = mul_377.masked_fill(bitwise_not_182,0) ;  mul_377 = bitwise_not_182 = None
        split_tensor_299 = torch.split(masked_fill_182,256,dim = -1) 
        getitem_2789 = split_tensor_299[0]
        unsqueeze_953 = torch.unsqueeze(getitem_2789,4) ;  getitem_2789 = None
        permute_1557 = unsqueeze_953.permute(0, 1, 4, 3, 2) ;  unsqueeze_953 = None
        permute_1558 = permute_1557.permute(3, 1, 4, 0, 2) ;  permute_1557 = None
        view_2901 = permute_1558.view(256, 512, 512) ;  permute_1558 = None
        split_tensor_300 = torch.split(masked_fill_182,256,dim = -1) ;  masked_fill_182 = None
        getitem_2792 = split_tensor_300[1];  split_tensor_300 = None
        unsqueeze_954 = torch.unsqueeze(getitem_2792,4) ;  getitem_2792 = None
        permute_1559 = unsqueeze_954.permute(0, 4, 1, 3, 2) ;  unsqueeze_954 = None
        permute_1560 = permute_1559.permute(3, 4, 0, 2, 1) ;  permute_1559 = None
        view_2902 = permute_1560.view(256, 512, 512) ;  permute_1560 = None
        bmm_233 = torch.bmm(view_2901,view_2902) ;  view_2901 = view_2902 = None
        view_2903 = bmm_233.view(256, 512, 1, 1, 512) ;  bmm_233 = None
        permute_1561 = view_2903.permute(3, 1, 4, 0, 2) ;  view_2903 = None
        view_2904 = permute_1561.view(1, 512, 512, 256) ;  permute_1561 = None
        _to_copy_1641 = getitem_2783.to(dtype = torch.bfloat16) ;  getitem_2783 = None
        _to_copy_1642 = getitem_2779.to(dtype = torch.bfloat16) 
        t_608 = _to_copy_1641.t() ;  _to_copy_1641 = None
        view_2905 = _to_copy_1642.view(262144, 256) ;  _to_copy_1642 = None
        mm_567 = torch.mm(view_2905,t_608) ;  view_2905 = t_608 = None
        view_2906 = mm_567.view(1, 512, 512, 512) ;  mm_567 = None
        _to_copy_1643 = getitem_2785.to(dtype = torch.bfloat16) ;  getitem_2785 = None
        _to_copy_1644 = getitem_2779.to(dtype = torch.bfloat16) 
        t_609 = _to_copy_1643.t() ;  _to_copy_1643 = None
        view_2907 = _to_copy_1644.view(262144, 256) ;  _to_copy_1644 = None
        mm_568 = torch.mm(view_2907,t_609) ;  view_2907 = t_609 = None
        view_2908 = mm_568.view(1, 512, 512, 512) ;  mm_568 = None
        sigmoid_229 = torch.sigmoid(view_2908) ;  view_2908 = None
        mul_378 = torch.mul(view_2906,sigmoid_229) ;  view_2906 = sigmoid_229 = None
        view_2909 = mul_378.view(262144, 512) ;  mul_378 = None
        view_2910 = view_2909.view(1, 512, 512, 512) ;  view_2909 = None
        transpose_74 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_955 = torch.unsqueeze(transpose_74,3) ;  transpose_74 = None
        clone_250 = torch.clone(unsqueeze_955,memory_format = torch.contiguous_format) ;  unsqueeze_955 = None
        bitwise_not_183 = torch.bitwise_not(clone_250) ;  clone_250 = None
        masked_fill_183 = view_2910.masked_fill(bitwise_not_183,0) ;  view_2910 = bitwise_not_183 = None
        view_2911 = masked_fill_183.view(262144, 512) ;  masked_fill_183 = None
        view_2915 = view_2911.view(1, 512, 512, 512) 
        split_tensor_301 = torch.split(view_2915,256,dim = -1) ;  view_2915 = None
        getitem_2795 = split_tensor_301[0]
        unsqueeze_958 = torch.unsqueeze(getitem_2795,4) ;  getitem_2795 = None
        permute_1566 = unsqueeze_958.permute(0, 2, 4, 3, 1) ;  unsqueeze_958 = None
        permute_1567 = permute_1566.permute(3, 1, 4, 0, 2) ;  permute_1566 = None
        view_2916 = permute_1567.view(256, 512, 512) ;  permute_1567 = None
        view_2917 = view_2911.view(1, 512, 512, 512) ;  view_2911 = None
        split_tensor_302 = torch.split(view_2917,256,dim = -1) ;  view_2917 = None
        getitem_2798 = split_tensor_302[1];  split_tensor_302 = None
        unsqueeze_959 = torch.unsqueeze(getitem_2798,4) ;  getitem_2798 = None
        permute_1568 = unsqueeze_959.permute(0, 4, 2, 3, 1) ;  unsqueeze_959 = None
        permute_1569 = permute_1568.permute(3, 4, 0, 2, 1) ;  permute_1568 = None
        view_2918 = permute_1569.view(256, 512, 512) ;  permute_1569 = None
        bmm_234 = torch.bmm(view_2916,view_2918) ;  view_2916 = view_2918 = None
        view_2919 = bmm_234.view(256, 512, 1, 1, 512) ;  bmm_234 = None
        permute_1570 = view_2919.permute(3, 1, 4, 0, 2) ;  view_2919 = None
        view_2920 = permute_1570.view(1, 512, 512, 256) ;  permute_1570 = None
        _to_copy_1645 = view_2904.to(dtype = torch.float32) ;  view_2904 = None
        native_layer_norm_default_339 = (torch.nn.functional.layer_norm(_to_copy_1645,[256],None,None,1e-05),) ;  _to_copy_1645 = None
        getitem_2799 = native_layer_norm_default_339[0]
        _to_copy_1646 = view_2920.to(dtype = torch.float32) ;  view_2920 = None
        native_layer_norm_default_340 = (torch.nn.functional.layer_norm(_to_copy_1646,[256],None,None,1e-05),) ;  _to_copy_1646 = None
        getitem_2802 = native_layer_norm_default_340[0]
        add_304 = torch.add(getitem_2799,getitem_2802) ;  getitem_2799 = getitem_2802 = None
        _to_copy_1647 = arg956_1.to(dtype = torch.bfloat16) ;  arg956_1 = None
        _to_copy_1648 = add_304.to(dtype = torch.bfloat16) ;  add_304 = None
        t_610 = _to_copy_1647.t() ;  _to_copy_1647 = None
        view_2921 = _to_copy_1648.view(262144, 256) ;  _to_copy_1648 = None
        mm_569 = torch.mm(view_2921,t_610) ;  view_2921 = t_610 = None
        view_2922 = mm_569.view(1, 512, 512, 256) ;  mm_569 = None
        _to_copy_1649 = getitem_2786.to(dtype = torch.bfloat16) ;  getitem_2786 = None
        _to_copy_1650 = getitem_2779.to(dtype = torch.bfloat16) ;  getitem_2779 = None
        t_611 = _to_copy_1649.t() ;  _to_copy_1649 = None
        view_2923 = _to_copy_1650.view(262144, 256) ;  _to_copy_1650 = None
        mm_570 = torch.mm(view_2923,t_611) ;  view_2923 = t_611 = None
        view_2924 = mm_570.view(1, 512, 512, 256) ;  mm_570 = None
        sigmoid_230 = torch.sigmoid(view_2924) ;  view_2924 = None
        mul_379 = torch.mul(view_2922,sigmoid_230) ;  view_2922 = sigmoid_230 = None
        add_305 = torch.add(add_299,mul_379) ;  mul_379 = None
        _to_copy_1651 = add_299.to(dtype = torch.float32) 
        native_layer_norm_default_341 = (torch.nn.functional.layer_norm(_to_copy_1651,[256],None,None,1e-05),) ;  _to_copy_1651 = None
        getitem_2805 = native_layer_norm_default_341[0]
        _to_copy_1652 = arg960_1.to(dtype = torch.bfloat16) ;  arg960_1 = None
        _to_copy_1653 = getitem_2805.to(dtype = torch.bfloat16) 
        t_612 = _to_copy_1652.t() ;  _to_copy_1652 = None
        view_2925 = _to_copy_1653.view(262144, 256) ;  _to_copy_1653 = None
        mm_571 = torch.mm(view_2925,t_612) ;  view_2925 = t_612 = None
        view_2926 = mm_571.view(1, 512, 512, 8) ;  mm_571 = None
        view_2927 = view_2926.view(1, 512, 512, 2, 4) ;  view_2926 = None
        permute_1571 = view_2927.permute(0, 3, 4, 1, 2) ;  view_2927 = None
        view_2928 = permute_1571.view(1, 2, 4, 1, 512, 512) ;  permute_1571 = None
        view_2929 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_184 = torch.bitwise_not(view_2929) ;  view_2929 = None
        masked_fill_184 = view_2928.masked_fill(bitwise_not_184,-10000) ;  view_2928 = bitwise_not_184 = None
        view_2930 = masked_fill_184.view(1, 2, 4, 512, 512) ;  masked_fill_184 = None
        permute_1572 = view_2930.permute(1, 0, 2, 3, 4) ;  view_2930 = None
        view_2931 = permute_1572.view(2, 4, 1, 512, 512) ;  permute_1572 = None
        _to_copy_1654 = arg961_1.to(dtype = torch.bfloat16) ;  arg961_1 = None
        _to_copy_1655 = getitem_2805.to(dtype = torch.bfloat16) 
        t_613 = _to_copy_1654.t() ;  _to_copy_1654 = None
        view_2932 = _to_copy_1655.view(262144, 256) ;  _to_copy_1655 = None
        mm_572 = torch.mm(view_2932,t_613) ;  view_2932 = t_613 = None
        view_2933 = mm_572.view(1, 512, 512, 1024) ;  mm_572 = None
        select_75 = torch.select(view_2931,0,0) 
        view_2934 = view_2933.view(1, 512, 512, 4, 4, 64) ;  view_2933 = None
        permute_1573 = view_2934.permute(4, 0, 3, 1, 2, 5) ;  view_2934 = None
        view_2935 = permute_1573.view(4, 4, 512, 512, 64) ;  permute_1573 = None
        unbind_int_133 = torch.unbind(view_2935) ;  view_2935 = None
        getitem_2808 = unbind_int_133[0]
        getitem_2809 = unbind_int_133[1]
        getitem_2810 = unbind_int_133[2]
        getitem_2811 = unbind_int_133[3];  unbind_int_133 = None
        expand_182 = select_75.expand(4, 512, 512, 512) ;  select_75 = None
        _scaled_dot_product_efficient_attention_default_105 = (torch.nn.functional.scaled_dot_product_attention(getitem_2808,getitem_2809,getitem_2810,expand_182,False),) ;  getitem_2808 = getitem_2809 = getitem_2810 = expand_182 = None
        getitem_2812 = _scaled_dot_product_efficient_attention_default_105[0]
        sigmoid_231 = torch.sigmoid(getitem_2811) ;  getitem_2811 = None
        mul_380 = torch.mul(getitem_2812,sigmoid_231) ;  getitem_2812 = sigmoid_231 = None
        view_2936 = mul_380.view(1, 4, 512, 512, 64) ;  mul_380 = None
        permute_1574 = view_2936.permute(0, 2, 3, 1, 4) ;  view_2936 = None
        clone_251 = torch.clone(permute_1574,memory_format = torch.contiguous_format) ;  permute_1574 = None
        _unsafe_view_212 = clone_251.view(1, 512, 512, 256) ;  clone_251 = None
        transpose_75 = torch.transpose(getitem_2805,1,2) ;  getitem_2805 = None
        _to_copy_1656 = arg962_1.to(dtype = torch.bfloat16) ;  arg962_1 = None
        _to_copy_1657 = transpose_75.to(dtype = torch.bfloat16) ;  transpose_75 = None
        t_614 = _to_copy_1656.t() ;  _to_copy_1656 = None
        expand_183 = _to_copy_1657.expand(1, 512, 512, 256) ;  _to_copy_1657 = None
        view_2937 = expand_183.view(512, 512, 256) ;  expand_183 = None
        expand_184 = t_614.expand(1, 512, 256, 1024) ;  t_614 = None
        view_2938 = expand_184.view(512, 256, 1024) ;  expand_184 = None
        bmm_235 = torch.bmm(view_2937,view_2938) ;  view_2937 = view_2938 = None
        view_2939 = bmm_235.view(1, 512, 512, 1024) ;  bmm_235 = None
        select_76 = torch.select(view_2931,0,1) ;  view_2931 = None
        view_2940 = view_2939.view(1, 512, 512, 4, 4, 64) ;  view_2939 = None
        permute_1575 = view_2940.permute(4, 0, 3, 1, 2, 5) ;  view_2940 = None
        view_2941 = permute_1575.view(4, 4, 512, 512, 64) ;  permute_1575 = None
        unbind_int_134 = torch.unbind(view_2941) ;  view_2941 = None
        getitem_2816 = unbind_int_134[0]
        getitem_2817 = unbind_int_134[1]
        getitem_2818 = unbind_int_134[2]
        getitem_2819 = unbind_int_134[3];  unbind_int_134 = None
        expand_185 = select_76.expand(4, 512, 512, 512) ;  select_76 = None
        _scaled_dot_product_efficient_attention_default_106 = (torch.nn.functional.scaled_dot_product_attention(getitem_2816,getitem_2817,getitem_2818,expand_185,False),) ;  getitem_2816 = getitem_2817 = getitem_2818 = expand_185 = None
        getitem_2820 = _scaled_dot_product_efficient_attention_default_106[0]
        sigmoid_232 = torch.sigmoid(getitem_2819) ;  getitem_2819 = None
        mul_381 = torch.mul(getitem_2820,sigmoid_232) ;  getitem_2820 = sigmoid_232 = None
        view_2942 = mul_381.view(1, 4, 512, 512, 64) ;  mul_381 = None
        permute_1576 = view_2942.permute(0, 2, 3, 1, 4) ;  view_2942 = None
        clone_252 = torch.clone(permute_1576,memory_format = torch.contiguous_format) ;  permute_1576 = None
        _unsafe_view_213 = clone_252.view(1, 512, 512, 256) ;  clone_252 = None
        cat_43 = torch.cat([_unsafe_view_212,_unsafe_view_213],dim = -1) ;  _unsafe_view_212 = _unsafe_view_213 = None
        slice_236 = arg959_1[0:] ;  arg959_1 = None
        unsqueeze_960 = torch.unsqueeze(slice_236,1) ;  slice_236 = None
        mul_382 = torch.mul(arg963_1,unsqueeze_960) ;  arg963_1 = unsqueeze_960 = None
        _to_copy_1658 = mul_382.to(dtype = torch.bfloat16) ;  mul_382 = None
        t_615 = _to_copy_1658.t() ;  _to_copy_1658 = None
        view_2943 = cat_43.view(262144, 512) ;  cat_43 = None
        mm_573 = torch.mm(view_2943,t_615) ;  view_2943 = t_615 = None
        view_2944 = mm_573.view(1, 512, 512, 256) ;  mm_573 = None
        add_306 = torch.add(add_305,view_2944) ;  add_305 = view_2944 = None
        split_tensor_303 = torch.split(add_299,512,dim = -2) 
        getitem_2824 = split_tensor_303[0];  split_tensor_303 = None
        _to_copy_1659 = getitem_2824.to(dtype = torch.float32) ;  getitem_2824 = None
        native_layer_norm_default_342 = (torch.nn.functional.layer_norm(_to_copy_1659,[256],arg950_1,arg951_1,1e-05),) ;  _to_copy_1659 = arg950_1 = arg951_1 = None
        getitem_2825 = native_layer_norm_default_342[0]
        _to_copy_1660 = arg952_1.to(dtype = torch.bfloat16) ;  arg952_1 = None
        _to_copy_1661 = getitem_2825.to(dtype = torch.bfloat16) ;  getitem_2825 = None
        t_616 = _to_copy_1660.t() ;  _to_copy_1660 = None
        view_2945 = _to_copy_1661.view(262144, 256) ;  _to_copy_1661 = None
        mm_574 = torch.mm(view_2945,t_616) ;  view_2945 = t_616 = None
        view_2946 = mm_574.view(1, 512, 512, 1024) ;  mm_574 = None
        split_tensor_304 = torch.split(view_2946,512,dim = -1) ;  view_2946 = None
        getitem_2828 = split_tensor_304[0]
        getitem_2829 = split_tensor_304[1];  split_tensor_304 = None
        silu_80 = torch.nn.functional.silu(getitem_2828) ;  getitem_2828 = None
        mul_383 = torch.mul(silu_80,getitem_2829) ;  silu_80 = getitem_2829 = None
        _to_copy_1662 = arg953_1.to(dtype = torch.bfloat16) ;  arg953_1 = None
        t_617 = _to_copy_1662.t() ;  _to_copy_1662 = None
        view_2948 = mul_383.view(262144, 512) ;  mul_383 = None
        mm_575 = torch.mm(view_2948,t_617) ;  view_2948 = t_617 = None
        view_2949 = mm_575.view(1, 512, 512, 256) ;  mm_575 = None
        add_307 = torch.add(add_306,view_2949) ;  add_306 = view_2949 = None
        _to_copy_1663 = add_303.to(dtype = torch.float32) 
        native_layer_norm_default_343 = (torch.nn.functional.layer_norm(_to_copy_1663,[384],arg968_1,arg969_1,1e-05),) ;  _to_copy_1663 = arg968_1 = arg969_1 = None
        getitem_2830 = native_layer_norm_default_343[0]
        _to_copy_1664 = add_299.to(dtype = torch.float32) ;  add_299 = None
        native_layer_norm_default_344 = (torch.nn.functional.layer_norm(_to_copy_1664,[256],arg970_1,arg971_1,1e-05),) ;  _to_copy_1664 = arg970_1 = arg971_1 = None
        getitem_2833 = native_layer_norm_default_344[0]
        _to_copy_1665 = arg972_1.to(dtype = torch.bfloat16) ;  arg972_1 = None
        _to_copy_1666 = getitem_2833.to(dtype = torch.bfloat16) ;  getitem_2833 = None
        t_618 = _to_copy_1665.t() ;  _to_copy_1665 = None
        view_2950 = _to_copy_1666.view(262144, 256) ;  _to_copy_1666 = None
        mm_576 = torch.mm(view_2950,t_618) ;  view_2950 = t_618 = None
        view_2951 = mm_576.view(1, 512, 512, 16) ;  mm_576 = None
        permute_1577 = view_2951.permute(0, 3, 1, 2) ;  view_2951 = None
        view_2952 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_185 = torch.bitwise_not(view_2952) ;  view_2952 = None
        masked_fill_185 = permute_1577.masked_fill(bitwise_not_185,-10000) ;  permute_1577 = bitwise_not_185 = None
        _to_copy_1667 = getitem_2830.to(dtype = torch.bfloat16) ;  getitem_2830 = None
        _to_copy_1668 = arg974_1.to(dtype = torch.bfloat16) ;  arg974_1 = None
        unsqueeze_961 = torch.unsqueeze(_to_copy_1667,3) ;  _to_copy_1667 = None
        unsqueeze_962 = torch.unsqueeze(unsqueeze_961,4) ;  unsqueeze_961 = None
        unsqueeze_963 = torch.unsqueeze(unsqueeze_962,5) ;  unsqueeze_962 = None
        permute_1578 = unsqueeze_963.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_963 = None
        unsqueeze_964 = torch.unsqueeze(_to_copy_1668,4) ;  _to_copy_1668 = None
        unsqueeze_965 = torch.unsqueeze(unsqueeze_964,5) ;  unsqueeze_964 = None
        permute_1579 = unsqueeze_965.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_965 = None
        permute_1580 = permute_1578.permute(3, 5, 0, 1, 2, 4) ;  permute_1578 = None
        view_2953 = permute_1580.view(1, 512, 384) ;  permute_1580 = None
        permute_1581 = permute_1579.permute(5, 0, 1, 2, 4, 3) ;  permute_1579 = None
        view_2954 = permute_1581.view(1, 384, 1536) ;  permute_1581 = None
        bmm_236 = torch.bmm(view_2953,view_2954) ;  view_2953 = view_2954 = None
        view_2955 = bmm_236.view(512, 1, 4, 1, 16, 24) ;  bmm_236 = None
        permute_1582 = view_2955.permute(2, 3, 4, 0, 5, 1) ;  view_2955 = None
        view_2956 = permute_1582.view(4, 1, 16, 512, 24) ;  permute_1582 = None
        unbind_int_135 = torch.unbind(view_2956) ;  view_2956 = None
        getitem_2836 = unbind_int_135[0]
        getitem_2837 = unbind_int_135[1]
        getitem_2838 = unbind_int_135[2]
        getitem_2839 = unbind_int_135[3];  unbind_int_135 = None
        view_2957 = arg973_1.view(1, 16, 1, 24) ;  arg973_1 = None
        add_308 = torch.add(getitem_2836,view_2957) ;  getitem_2836 = view_2957 = None
        _to_copy_1669 = add_308.to(dtype = torch.bfloat16) ;  add_308 = None
        expand_186 = masked_fill_185.expand(1, 16, 512, 512) ;  masked_fill_185 = None
        _scaled_dot_product_efficient_attention_default_107 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1669,getitem_2837,getitem_2838,expand_186,False),) ;  _to_copy_1669 = getitem_2837 = getitem_2838 = expand_186 = None
        getitem_2840 = _scaled_dot_product_efficient_attention_default_107[0]
        add_309 = torch.add(getitem_2839,1) ;  getitem_2839 = None
        sigmoid_233 = torch.sigmoid(add_309) ;  add_309 = None
        mul_384 = torch.mul(getitem_2840,sigmoid_233) ;  getitem_2840 = sigmoid_233 = None
        _to_copy_1670 = arg975_1.to(dtype = torch.bfloat16) ;  arg975_1 = None
        unsqueeze_966 = torch.unsqueeze(mul_384,4) ;  mul_384 = None
        permute_1583 = unsqueeze_966.permute(0, 2, 4, 3, 1) ;  unsqueeze_966 = None
        unsqueeze_967 = torch.unsqueeze(_to_copy_1670,3) ;  _to_copy_1670 = None
        unsqueeze_968 = torch.unsqueeze(unsqueeze_967,4) ;  unsqueeze_967 = None
        permute_1584 = unsqueeze_968.permute(3, 4, 2, 1, 0) ;  unsqueeze_968 = None
        permute_1585 = permute_1583.permute(1, 3, 4, 0, 2) ;  permute_1583 = None
        clone_253 = torch.clone(permute_1585,memory_format = torch.contiguous_format) ;  permute_1585 = None
        _unsafe_view_214 = clone_253.view(1, 512, 384) ;  clone_253 = None
        permute_1586 = permute_1584.permute(3, 4, 0, 2, 1) ;  permute_1584 = None
        clone_254 = torch.clone(permute_1586,memory_format = torch.contiguous_format) ;  permute_1586 = None
        _unsafe_view_215 = clone_254.view(1, 384, 384) ;  clone_254 = None
        bmm_237 = torch.bmm(_unsafe_view_214,_unsafe_view_215) ;  _unsafe_view_214 = _unsafe_view_215 = None
        view_2958 = bmm_237.view(512, 1, 1, 1, 384) ;  bmm_237 = None
        permute_1587 = view_2958.permute(3, 0, 4, 1, 2) ;  view_2958 = None
        view_2959 = permute_1587.view(1, 512, 384) ;  permute_1587 = None
        unsqueeze_969 = torch.unsqueeze(arg1406_1,-1) 
        mul_385 = torch.mul(view_2959,unsqueeze_969) ;  view_2959 = unsqueeze_969 = None
        add_310 = torch.add(add_303,mul_385) ;  mul_385 = None
        split_tensor_305 = torch.split(add_303,512,dim = -2) ;  add_303 = None
        getitem_2844 = split_tensor_305[0];  split_tensor_305 = None
        _to_copy_1671 = getitem_2844.to(dtype = torch.float32) ;  getitem_2844 = None
        native_layer_norm_default_345 = (torch.nn.functional.layer_norm(_to_copy_1671,[384],arg964_1,arg965_1,1e-05),) ;  _to_copy_1671 = arg964_1 = arg965_1 = None
        getitem_2845 = native_layer_norm_default_345[0]
        _to_copy_1672 = arg966_1.to(dtype = torch.bfloat16) ;  arg966_1 = None
        _to_copy_1673 = getitem_2845.to(dtype = torch.bfloat16) ;  getitem_2845 = None
        t_619 = _to_copy_1672.t() ;  _to_copy_1672 = None
        view_2960 = _to_copy_1673.view(512, 384) ;  _to_copy_1673 = None
        mm_577 = torch.mm(view_2960,t_619) ;  view_2960 = t_619 = None
        view_2961 = mm_577.view(1, 512, 1536) ;  mm_577 = None
        split_tensor_306 = torch.split(view_2961,768,dim = -1) ;  view_2961 = None
        getitem_2848 = split_tensor_306[0]
        getitem_2849 = split_tensor_306[1];  split_tensor_306 = None
        silu_81 = torch.nn.functional.silu(getitem_2848) ;  getitem_2848 = None
        mul_386 = torch.mul(silu_81,getitem_2849) ;  silu_81 = getitem_2849 = None
        _to_copy_1674 = arg967_1.to(dtype = torch.bfloat16) ;  arg967_1 = None
        t_620 = _to_copy_1674.t() ;  _to_copy_1674 = None
        view_2963 = mul_386.view(512, 768) ;  mul_386 = None
        mm_578 = torch.mm(view_2963,t_620) ;  view_2963 = t_620 = None
        view_2964 = mm_578.view(1, 512, 384) ;  mm_578 = None
        add_311 = torch.add(add_310,view_2964) ;  add_310 = view_2964 = None
        _to_copy_1675 = add_307.to(dtype = torch.float32) 
        native_layer_norm_default_346 = (torch.nn.functional.layer_norm(_to_copy_1675,[256],arg980_1,arg981_1,1e-05),) ;  _to_copy_1675 = arg980_1 = arg981_1 = None
        getitem_2850 = native_layer_norm_default_346[0]
        split_with_sizes_default_76 = torch.split(arg983_1,[512,512]) ;  arg983_1 = None
        getitem_2853 = split_with_sizes_default_76[0]
        getitem_2854 = split_with_sizes_default_76[1];  split_with_sizes_default_76 = None
        split_with_sizes_default_77 = torch.split(arg984_1,[512,512,256]) ;  arg984_1 = None
        getitem_2855 = split_with_sizes_default_77[0]
        getitem_2856 = split_with_sizes_default_77[1]
        getitem_2857 = split_with_sizes_default_77[2];  split_with_sizes_default_77 = None
        _to_copy_1676 = getitem_2853.to(dtype = torch.bfloat16) ;  getitem_2853 = None
        _to_copy_1677 = getitem_2850.to(dtype = torch.bfloat16) 
        t_621 = _to_copy_1676.t() ;  _to_copy_1676 = None
        view_2965 = _to_copy_1677.view(262144, 256) ;  _to_copy_1677 = None
        mm_579 = torch.mm(view_2965,t_621) ;  view_2965 = t_621 = None
        view_2966 = mm_579.view(1, 512, 512, 512) ;  mm_579 = None
        _to_copy_1678 = getitem_2855.to(dtype = torch.bfloat16) ;  getitem_2855 = None
        _to_copy_1679 = getitem_2850.to(dtype = torch.bfloat16) 
        t_622 = _to_copy_1678.t() ;  _to_copy_1678 = None
        view_2967 = _to_copy_1679.view(262144, 256) ;  _to_copy_1679 = None
        mm_580 = torch.mm(view_2967,t_622) ;  view_2967 = t_622 = None
        view_2968 = mm_580.view(1, 512, 512, 512) ;  mm_580 = None
        sigmoid_234 = torch.sigmoid(view_2968) ;  view_2968 = None
        mul_387 = torch.mul(view_2966,sigmoid_234) ;  view_2966 = sigmoid_234 = None
        unsqueeze_970 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_186 = torch.bitwise_not(unsqueeze_970) ;  unsqueeze_970 = None
        masked_fill_186 = mul_387.masked_fill(bitwise_not_186,0) ;  mul_387 = bitwise_not_186 = None
        split_tensor_307 = torch.split(masked_fill_186,256,dim = -1) 
        getitem_2860 = split_tensor_307[0]
        unsqueeze_973 = torch.unsqueeze(getitem_2860,4) ;  getitem_2860 = None
        permute_1592 = unsqueeze_973.permute(0, 1, 4, 3, 2) ;  unsqueeze_973 = None
        permute_1593 = permute_1592.permute(3, 1, 4, 0, 2) ;  permute_1592 = None
        view_2971 = permute_1593.view(256, 512, 512) ;  permute_1593 = None
        split_tensor_308 = torch.split(masked_fill_186,256,dim = -1) ;  masked_fill_186 = None
        getitem_2863 = split_tensor_308[1];  split_tensor_308 = None
        unsqueeze_974 = torch.unsqueeze(getitem_2863,4) ;  getitem_2863 = None
        permute_1594 = unsqueeze_974.permute(0, 4, 1, 3, 2) ;  unsqueeze_974 = None
        permute_1595 = permute_1594.permute(3, 4, 0, 2, 1) ;  permute_1594 = None
        view_2972 = permute_1595.view(256, 512, 512) ;  permute_1595 = None
        bmm_238 = torch.bmm(view_2971,view_2972) ;  view_2971 = view_2972 = None
        view_2973 = bmm_238.view(256, 512, 1, 1, 512) ;  bmm_238 = None
        permute_1596 = view_2973.permute(3, 1, 4, 0, 2) ;  view_2973 = None
        view_2974 = permute_1596.view(1, 512, 512, 256) ;  permute_1596 = None
        _to_copy_1680 = getitem_2854.to(dtype = torch.bfloat16) ;  getitem_2854 = None
        _to_copy_1681 = getitem_2850.to(dtype = torch.bfloat16) 
        t_623 = _to_copy_1680.t() ;  _to_copy_1680 = None
        view_2975 = _to_copy_1681.view(262144, 256) ;  _to_copy_1681 = None
        mm_581 = torch.mm(view_2975,t_623) ;  view_2975 = t_623 = None
        view_2976 = mm_581.view(1, 512, 512, 512) ;  mm_581 = None
        _to_copy_1682 = getitem_2856.to(dtype = torch.bfloat16) ;  getitem_2856 = None
        _to_copy_1683 = getitem_2850.to(dtype = torch.bfloat16) 
        t_624 = _to_copy_1682.t() ;  _to_copy_1682 = None
        view_2977 = _to_copy_1683.view(262144, 256) ;  _to_copy_1683 = None
        mm_582 = torch.mm(view_2977,t_624) ;  view_2977 = t_624 = None
        view_2978 = mm_582.view(1, 512, 512, 512) ;  mm_582 = None
        sigmoid_235 = torch.sigmoid(view_2978) ;  view_2978 = None
        mul_388 = torch.mul(view_2976,sigmoid_235) ;  view_2976 = sigmoid_235 = None
        view_2979 = mul_388.view(262144, 512) ;  mul_388 = None
        view_2980 = view_2979.view(1, 512, 512, 512) ;  view_2979 = None
        transpose_76 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_975 = torch.unsqueeze(transpose_76,3) ;  transpose_76 = None
        clone_255 = torch.clone(unsqueeze_975,memory_format = torch.contiguous_format) ;  unsqueeze_975 = None
        bitwise_not_187 = torch.bitwise_not(clone_255) ;  clone_255 = None
        masked_fill_187 = view_2980.masked_fill(bitwise_not_187,0) ;  view_2980 = bitwise_not_187 = None
        view_2981 = masked_fill_187.view(262144, 512) ;  masked_fill_187 = None
        view_2985 = view_2981.view(1, 512, 512, 512) 
        split_tensor_309 = torch.split(view_2985,256,dim = -1) ;  view_2985 = None
        getitem_2866 = split_tensor_309[0]
        unsqueeze_978 = torch.unsqueeze(getitem_2866,4) ;  getitem_2866 = None
        permute_1601 = unsqueeze_978.permute(0, 2, 4, 3, 1) ;  unsqueeze_978 = None
        permute_1602 = permute_1601.permute(3, 1, 4, 0, 2) ;  permute_1601 = None
        view_2986 = permute_1602.view(256, 512, 512) ;  permute_1602 = None
        view_2987 = view_2981.view(1, 512, 512, 512) ;  view_2981 = None
        split_tensor_310 = torch.split(view_2987,256,dim = -1) ;  view_2987 = None
        getitem_2869 = split_tensor_310[1];  split_tensor_310 = None
        unsqueeze_979 = torch.unsqueeze(getitem_2869,4) ;  getitem_2869 = None
        permute_1603 = unsqueeze_979.permute(0, 4, 2, 3, 1) ;  unsqueeze_979 = None
        permute_1604 = permute_1603.permute(3, 4, 0, 2, 1) ;  permute_1603 = None
        view_2988 = permute_1604.view(256, 512, 512) ;  permute_1604 = None
        bmm_239 = torch.bmm(view_2986,view_2988) ;  view_2986 = view_2988 = None
        view_2989 = bmm_239.view(256, 512, 1, 1, 512) ;  bmm_239 = None
        permute_1605 = view_2989.permute(3, 1, 4, 0, 2) ;  view_2989 = None
        view_2990 = permute_1605.view(1, 512, 512, 256) ;  permute_1605 = None
        _to_copy_1684 = view_2974.to(dtype = torch.float32) ;  view_2974 = None
        native_layer_norm_default_347 = (torch.nn.functional.layer_norm(_to_copy_1684,[256],None,None,1e-05),) ;  _to_copy_1684 = None
        getitem_2870 = native_layer_norm_default_347[0]
        _to_copy_1685 = view_2990.to(dtype = torch.float32) ;  view_2990 = None
        native_layer_norm_default_348 = (torch.nn.functional.layer_norm(_to_copy_1685,[256],None,None,1e-05),) ;  _to_copy_1685 = None
        getitem_2873 = native_layer_norm_default_348[0]
        add_312 = torch.add(getitem_2870,getitem_2873) ;  getitem_2870 = getitem_2873 = None
        _to_copy_1686 = arg982_1.to(dtype = torch.bfloat16) ;  arg982_1 = None
        _to_copy_1687 = add_312.to(dtype = torch.bfloat16) ;  add_312 = None
        t_625 = _to_copy_1686.t() ;  _to_copy_1686 = None
        view_2991 = _to_copy_1687.view(262144, 256) ;  _to_copy_1687 = None
        mm_583 = torch.mm(view_2991,t_625) ;  view_2991 = t_625 = None
        view_2992 = mm_583.view(1, 512, 512, 256) ;  mm_583 = None
        _to_copy_1688 = getitem_2857.to(dtype = torch.bfloat16) ;  getitem_2857 = None
        _to_copy_1689 = getitem_2850.to(dtype = torch.bfloat16) ;  getitem_2850 = None
        t_626 = _to_copy_1688.t() ;  _to_copy_1688 = None
        view_2993 = _to_copy_1689.view(262144, 256) ;  _to_copy_1689 = None
        mm_584 = torch.mm(view_2993,t_626) ;  view_2993 = t_626 = None
        view_2994 = mm_584.view(1, 512, 512, 256) ;  mm_584 = None
        sigmoid_236 = torch.sigmoid(view_2994) ;  view_2994 = None
        mul_389 = torch.mul(view_2992,sigmoid_236) ;  view_2992 = sigmoid_236 = None
        add_313 = torch.add(add_307,mul_389) ;  mul_389 = None
        _to_copy_1690 = add_307.to(dtype = torch.float32) 
        native_layer_norm_default_349 = (torch.nn.functional.layer_norm(_to_copy_1690,[256],None,None,1e-05),) ;  _to_copy_1690 = None
        getitem_2876 = native_layer_norm_default_349[0]
        _to_copy_1691 = arg986_1.to(dtype = torch.bfloat16) ;  arg986_1 = None
        _to_copy_1692 = getitem_2876.to(dtype = torch.bfloat16) 
        t_627 = _to_copy_1691.t() ;  _to_copy_1691 = None
        view_2995 = _to_copy_1692.view(262144, 256) ;  _to_copy_1692 = None
        mm_585 = torch.mm(view_2995,t_627) ;  view_2995 = t_627 = None
        view_2996 = mm_585.view(1, 512, 512, 8) ;  mm_585 = None
        view_2997 = view_2996.view(1, 512, 512, 2, 4) ;  view_2996 = None
        permute_1606 = view_2997.permute(0, 3, 4, 1, 2) ;  view_2997 = None
        view_2998 = permute_1606.view(1, 2, 4, 1, 512, 512) ;  permute_1606 = None
        view_2999 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_188 = torch.bitwise_not(view_2999) ;  view_2999 = None
        masked_fill_188 = view_2998.masked_fill(bitwise_not_188,-10000) ;  view_2998 = bitwise_not_188 = None
        view_3000 = masked_fill_188.view(1, 2, 4, 512, 512) ;  masked_fill_188 = None
        permute_1607 = view_3000.permute(1, 0, 2, 3, 4) ;  view_3000 = None
        view_3001 = permute_1607.view(2, 4, 1, 512, 512) ;  permute_1607 = None
        _to_copy_1693 = arg987_1.to(dtype = torch.bfloat16) ;  arg987_1 = None
        _to_copy_1694 = getitem_2876.to(dtype = torch.bfloat16) 
        t_628 = _to_copy_1693.t() ;  _to_copy_1693 = None
        view_3002 = _to_copy_1694.view(262144, 256) ;  _to_copy_1694 = None
        mm_586 = torch.mm(view_3002,t_628) ;  view_3002 = t_628 = None
        view_3003 = mm_586.view(1, 512, 512, 1024) ;  mm_586 = None
        select_77 = torch.select(view_3001,0,0) 
        view_3004 = view_3003.view(1, 512, 512, 4, 4, 64) ;  view_3003 = None
        permute_1608 = view_3004.permute(4, 0, 3, 1, 2, 5) ;  view_3004 = None
        view_3005 = permute_1608.view(4, 4, 512, 512, 64) ;  permute_1608 = None
        unbind_int_136 = torch.unbind(view_3005) ;  view_3005 = None
        getitem_2879 = unbind_int_136[0]
        getitem_2880 = unbind_int_136[1]
        getitem_2881 = unbind_int_136[2]
        getitem_2882 = unbind_int_136[3];  unbind_int_136 = None
        expand_187 = select_77.expand(4, 512, 512, 512) ;  select_77 = None
        _scaled_dot_product_efficient_attention_default_108 = (torch.nn.functional.scaled_dot_product_attention(getitem_2879,getitem_2880,getitem_2881,expand_187,False),) ;  getitem_2879 = getitem_2880 = getitem_2881 = expand_187 = None
        getitem_2883 = _scaled_dot_product_efficient_attention_default_108[0]
        sigmoid_237 = torch.sigmoid(getitem_2882) ;  getitem_2882 = None
        mul_390 = torch.mul(getitem_2883,sigmoid_237) ;  getitem_2883 = sigmoid_237 = None
        view_3006 = mul_390.view(1, 4, 512, 512, 64) ;  mul_390 = None
        permute_1609 = view_3006.permute(0, 2, 3, 1, 4) ;  view_3006 = None
        clone_256 = torch.clone(permute_1609,memory_format = torch.contiguous_format) ;  permute_1609 = None
        _unsafe_view_216 = clone_256.view(1, 512, 512, 256) ;  clone_256 = None
        transpose_77 = torch.transpose(getitem_2876,1,2) ;  getitem_2876 = None
        _to_copy_1695 = arg988_1.to(dtype = torch.bfloat16) ;  arg988_1 = None
        _to_copy_1696 = transpose_77.to(dtype = torch.bfloat16) ;  transpose_77 = None
        t_629 = _to_copy_1695.t() ;  _to_copy_1695 = None
        expand_188 = _to_copy_1696.expand(1, 512, 512, 256) ;  _to_copy_1696 = None
        view_3007 = expand_188.view(512, 512, 256) ;  expand_188 = None
        expand_189 = t_629.expand(1, 512, 256, 1024) ;  t_629 = None
        view_3008 = expand_189.view(512, 256, 1024) ;  expand_189 = None
        bmm_240 = torch.bmm(view_3007,view_3008) ;  view_3007 = view_3008 = None
        view_3009 = bmm_240.view(1, 512, 512, 1024) ;  bmm_240 = None
        select_78 = torch.select(view_3001,0,1) ;  view_3001 = None
        view_3010 = view_3009.view(1, 512, 512, 4, 4, 64) ;  view_3009 = None
        permute_1610 = view_3010.permute(4, 0, 3, 1, 2, 5) ;  view_3010 = None
        view_3011 = permute_1610.view(4, 4, 512, 512, 64) ;  permute_1610 = None
        unbind_int_137 = torch.unbind(view_3011) ;  view_3011 = None
        getitem_2887 = unbind_int_137[0]
        getitem_2888 = unbind_int_137[1]
        getitem_2889 = unbind_int_137[2]
        getitem_2890 = unbind_int_137[3];  unbind_int_137 = None
        expand_190 = select_78.expand(4, 512, 512, 512) ;  select_78 = None
        _scaled_dot_product_efficient_attention_default_109 = (torch.nn.functional.scaled_dot_product_attention(getitem_2887,getitem_2888,getitem_2889,expand_190,False),) ;  getitem_2887 = getitem_2888 = getitem_2889 = expand_190 = None
        getitem_2891 = _scaled_dot_product_efficient_attention_default_109[0]
        sigmoid_238 = torch.sigmoid(getitem_2890) ;  getitem_2890 = None
        mul_391 = torch.mul(getitem_2891,sigmoid_238) ;  getitem_2891 = sigmoid_238 = None
        view_3012 = mul_391.view(1, 4, 512, 512, 64) ;  mul_391 = None
        permute_1611 = view_3012.permute(0, 2, 3, 1, 4) ;  view_3012 = None
        clone_257 = torch.clone(permute_1611,memory_format = torch.contiguous_format) ;  permute_1611 = None
        _unsafe_view_217 = clone_257.view(1, 512, 512, 256) ;  clone_257 = None
        cat_44 = torch.cat([_unsafe_view_216,_unsafe_view_217],dim = -1) ;  _unsafe_view_216 = _unsafe_view_217 = None
        slice_237 = arg985_1[0:] ;  arg985_1 = None
        unsqueeze_980 = torch.unsqueeze(slice_237,1) ;  slice_237 = None
        mul_392 = torch.mul(arg989_1,unsqueeze_980) ;  arg989_1 = unsqueeze_980 = None
        _to_copy_1697 = mul_392.to(dtype = torch.bfloat16) ;  mul_392 = None
        t_630 = _to_copy_1697.t() ;  _to_copy_1697 = None
        view_3013 = cat_44.view(262144, 512) ;  cat_44 = None
        mm_587 = torch.mm(view_3013,t_630) ;  view_3013 = t_630 = None
        view_3014 = mm_587.view(1, 512, 512, 256) ;  mm_587 = None
        add_314 = torch.add(add_313,view_3014) ;  add_313 = view_3014 = None
        split_tensor_311 = torch.split(add_307,512,dim = -2) 
        getitem_2895 = split_tensor_311[0];  split_tensor_311 = None
        _to_copy_1698 = getitem_2895.to(dtype = torch.float32) ;  getitem_2895 = None
        native_layer_norm_default_350 = (torch.nn.functional.layer_norm(_to_copy_1698,[256],arg976_1,arg977_1,1e-05),) ;  _to_copy_1698 = arg976_1 = arg977_1 = None
        getitem_2896 = native_layer_norm_default_350[0]
        _to_copy_1699 = arg978_1.to(dtype = torch.bfloat16) ;  arg978_1 = None
        _to_copy_1700 = getitem_2896.to(dtype = torch.bfloat16) ;  getitem_2896 = None
        t_631 = _to_copy_1699.t() ;  _to_copy_1699 = None
        view_3015 = _to_copy_1700.view(262144, 256) ;  _to_copy_1700 = None
        mm_588 = torch.mm(view_3015,t_631) ;  view_3015 = t_631 = None
        view_3016 = mm_588.view(1, 512, 512, 1024) ;  mm_588 = None
        split_tensor_312 = torch.split(view_3016,512,dim = -1) ;  view_3016 = None
        getitem_2899 = split_tensor_312[0]
        getitem_2900 = split_tensor_312[1];  split_tensor_312 = None
        silu_82 = torch.nn.functional.silu(getitem_2899) ;  getitem_2899 = None
        mul_393 = torch.mul(silu_82,getitem_2900) ;  silu_82 = getitem_2900 = None
        _to_copy_1701 = arg979_1.to(dtype = torch.bfloat16) ;  arg979_1 = None
        t_632 = _to_copy_1701.t() ;  _to_copy_1701 = None
        view_3018 = mul_393.view(262144, 512) ;  mul_393 = None
        mm_589 = torch.mm(view_3018,t_632) ;  view_3018 = t_632 = None
        view_3019 = mm_589.view(1, 512, 512, 256) ;  mm_589 = None
        add_315 = torch.add(add_314,view_3019) ;  add_314 = view_3019 = None
        _to_copy_1702 = add_311.to(dtype = torch.float32) 
        native_layer_norm_default_351 = (torch.nn.functional.layer_norm(_to_copy_1702,[384],arg994_1,arg995_1,1e-05),) ;  _to_copy_1702 = arg994_1 = arg995_1 = None
        getitem_2901 = native_layer_norm_default_351[0]
        _to_copy_1703 = add_307.to(dtype = torch.float32) ;  add_307 = None
        native_layer_norm_default_352 = (torch.nn.functional.layer_norm(_to_copy_1703,[256],arg996_1,arg997_1,1e-05),) ;  _to_copy_1703 = arg996_1 = arg997_1 = None
        getitem_2904 = native_layer_norm_default_352[0]
        _to_copy_1704 = arg998_1.to(dtype = torch.bfloat16) ;  arg998_1 = None
        _to_copy_1705 = getitem_2904.to(dtype = torch.bfloat16) ;  getitem_2904 = None
        t_633 = _to_copy_1704.t() ;  _to_copy_1704 = None
        view_3020 = _to_copy_1705.view(262144, 256) ;  _to_copy_1705 = None
        mm_590 = torch.mm(view_3020,t_633) ;  view_3020 = t_633 = None
        view_3021 = mm_590.view(1, 512, 512, 16) ;  mm_590 = None
        permute_1612 = view_3021.permute(0, 3, 1, 2) ;  view_3021 = None
        view_3022 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_189 = torch.bitwise_not(view_3022) ;  view_3022 = None
        masked_fill_189 = permute_1612.masked_fill(bitwise_not_189,-10000) ;  permute_1612 = bitwise_not_189 = None
        _to_copy_1706 = getitem_2901.to(dtype = torch.bfloat16) ;  getitem_2901 = None
        _to_copy_1707 = arg1000_1.to(dtype = torch.bfloat16) ;  arg1000_1 = None
        unsqueeze_981 = torch.unsqueeze(_to_copy_1706,3) ;  _to_copy_1706 = None
        unsqueeze_982 = torch.unsqueeze(unsqueeze_981,4) ;  unsqueeze_981 = None
        unsqueeze_983 = torch.unsqueeze(unsqueeze_982,5) ;  unsqueeze_982 = None
        permute_1613 = unsqueeze_983.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_983 = None
        unsqueeze_984 = torch.unsqueeze(_to_copy_1707,4) ;  _to_copy_1707 = None
        unsqueeze_985 = torch.unsqueeze(unsqueeze_984,5) ;  unsqueeze_984 = None
        permute_1614 = unsqueeze_985.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_985 = None
        permute_1615 = permute_1613.permute(3, 5, 0, 1, 2, 4) ;  permute_1613 = None
        view_3023 = permute_1615.view(1, 512, 384) ;  permute_1615 = None
        permute_1616 = permute_1614.permute(5, 0, 1, 2, 4, 3) ;  permute_1614 = None
        view_3024 = permute_1616.view(1, 384, 1536) ;  permute_1616 = None
        bmm_241 = torch.bmm(view_3023,view_3024) ;  view_3023 = view_3024 = None
        view_3025 = bmm_241.view(512, 1, 4, 1, 16, 24) ;  bmm_241 = None
        permute_1617 = view_3025.permute(2, 3, 4, 0, 5, 1) ;  view_3025 = None
        view_3026 = permute_1617.view(4, 1, 16, 512, 24) ;  permute_1617 = None
        unbind_int_138 = torch.unbind(view_3026) ;  view_3026 = None
        getitem_2907 = unbind_int_138[0]
        getitem_2908 = unbind_int_138[1]
        getitem_2909 = unbind_int_138[2]
        getitem_2910 = unbind_int_138[3];  unbind_int_138 = None
        view_3027 = arg999_1.view(1, 16, 1, 24) ;  arg999_1 = None
        add_316 = torch.add(getitem_2907,view_3027) ;  getitem_2907 = view_3027 = None
        _to_copy_1708 = add_316.to(dtype = torch.bfloat16) ;  add_316 = None
        expand_191 = masked_fill_189.expand(1, 16, 512, 512) ;  masked_fill_189 = None
        _scaled_dot_product_efficient_attention_default_110 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1708,getitem_2908,getitem_2909,expand_191,False),) ;  _to_copy_1708 = getitem_2908 = getitem_2909 = expand_191 = None
        getitem_2911 = _scaled_dot_product_efficient_attention_default_110[0]
        add_317 = torch.add(getitem_2910,1) ;  getitem_2910 = None
        sigmoid_239 = torch.sigmoid(add_317) ;  add_317 = None
        mul_394 = torch.mul(getitem_2911,sigmoid_239) ;  getitem_2911 = sigmoid_239 = None
        _to_copy_1709 = arg1001_1.to(dtype = torch.bfloat16) ;  arg1001_1 = None
        unsqueeze_986 = torch.unsqueeze(mul_394,4) ;  mul_394 = None
        permute_1618 = unsqueeze_986.permute(0, 2, 4, 3, 1) ;  unsqueeze_986 = None
        unsqueeze_987 = torch.unsqueeze(_to_copy_1709,3) ;  _to_copy_1709 = None
        unsqueeze_988 = torch.unsqueeze(unsqueeze_987,4) ;  unsqueeze_987 = None
        permute_1619 = unsqueeze_988.permute(3, 4, 2, 1, 0) ;  unsqueeze_988 = None
        permute_1620 = permute_1618.permute(1, 3, 4, 0, 2) ;  permute_1618 = None
        clone_258 = torch.clone(permute_1620,memory_format = torch.contiguous_format) ;  permute_1620 = None
        _unsafe_view_218 = clone_258.view(1, 512, 384) ;  clone_258 = None
        permute_1621 = permute_1619.permute(3, 4, 0, 2, 1) ;  permute_1619 = None
        clone_259 = torch.clone(permute_1621,memory_format = torch.contiguous_format) ;  permute_1621 = None
        _unsafe_view_219 = clone_259.view(1, 384, 384) ;  clone_259 = None
        bmm_242 = torch.bmm(_unsafe_view_218,_unsafe_view_219) ;  _unsafe_view_218 = _unsafe_view_219 = None
        view_3028 = bmm_242.view(512, 1, 1, 1, 384) ;  bmm_242 = None
        permute_1622 = view_3028.permute(3, 0, 4, 1, 2) ;  view_3028 = None
        view_3029 = permute_1622.view(1, 512, 384) ;  permute_1622 = None
        unsqueeze_989 = torch.unsqueeze(arg1406_1,-1) 
        mul_395 = torch.mul(view_3029,unsqueeze_989) ;  view_3029 = unsqueeze_989 = None
        add_318 = torch.add(add_311,mul_395) ;  mul_395 = None
        split_tensor_313 = torch.split(add_311,512,dim = -2) ;  add_311 = None
        getitem_2915 = split_tensor_313[0];  split_tensor_313 = None
        _to_copy_1710 = getitem_2915.to(dtype = torch.float32) ;  getitem_2915 = None
        native_layer_norm_default_353 = (torch.nn.functional.layer_norm(_to_copy_1710,[384],arg990_1,arg991_1,1e-05),) ;  _to_copy_1710 = arg990_1 = arg991_1 = None
        getitem_2916 = native_layer_norm_default_353[0]
        _to_copy_1711 = arg992_1.to(dtype = torch.bfloat16) ;  arg992_1 = None
        _to_copy_1712 = getitem_2916.to(dtype = torch.bfloat16) ;  getitem_2916 = None
        t_634 = _to_copy_1711.t() ;  _to_copy_1711 = None
        view_3030 = _to_copy_1712.view(512, 384) ;  _to_copy_1712 = None
        mm_591 = torch.mm(view_3030,t_634) ;  view_3030 = t_634 = None
        view_3031 = mm_591.view(1, 512, 1536) ;  mm_591 = None
        split_tensor_314 = torch.split(view_3031,768,dim = -1) ;  view_3031 = None
        getitem_2919 = split_tensor_314[0]
        getitem_2920 = split_tensor_314[1];  split_tensor_314 = None
        silu_83 = torch.nn.functional.silu(getitem_2919) ;  getitem_2919 = None
        mul_396 = torch.mul(silu_83,getitem_2920) ;  silu_83 = getitem_2920 = None
        _to_copy_1713 = arg993_1.to(dtype = torch.bfloat16) ;  arg993_1 = None
        t_635 = _to_copy_1713.t() ;  _to_copy_1713 = None
        view_3033 = mul_396.view(512, 768) ;  mul_396 = None
        mm_592 = torch.mm(view_3033,t_635) ;  view_3033 = t_635 = None
        view_3034 = mm_592.view(1, 512, 384) ;  mm_592 = None
        add_319 = torch.add(add_318,view_3034) ;  add_318 = view_3034 = None
        _to_copy_1714 = add_315.to(dtype = torch.float32) 
        native_layer_norm_default_354 = (torch.nn.functional.layer_norm(_to_copy_1714,[256],arg1006_1,arg1007_1,1e-05),) ;  _to_copy_1714 = arg1006_1 = arg1007_1 = None
        getitem_2921 = native_layer_norm_default_354[0]
        split_with_sizes_default_78 = torch.split(arg1009_1,[512,512]) ;  arg1009_1 = None
        getitem_2924 = split_with_sizes_default_78[0]
        getitem_2925 = split_with_sizes_default_78[1];  split_with_sizes_default_78 = None
        split_with_sizes_default_79 = torch.split(arg1010_1,[512,512,256]) ;  arg1010_1 = None
        getitem_2926 = split_with_sizes_default_79[0]
        getitem_2927 = split_with_sizes_default_79[1]
        getitem_2928 = split_with_sizes_default_79[2];  split_with_sizes_default_79 = None
        _to_copy_1715 = getitem_2924.to(dtype = torch.bfloat16) ;  getitem_2924 = None
        _to_copy_1716 = getitem_2921.to(dtype = torch.bfloat16) 
        t_636 = _to_copy_1715.t() ;  _to_copy_1715 = None
        view_3035 = _to_copy_1716.view(262144, 256) ;  _to_copy_1716 = None
        mm_593 = torch.mm(view_3035,t_636) ;  view_3035 = t_636 = None
        view_3036 = mm_593.view(1, 512, 512, 512) ;  mm_593 = None
        _to_copy_1717 = getitem_2926.to(dtype = torch.bfloat16) ;  getitem_2926 = None
        _to_copy_1718 = getitem_2921.to(dtype = torch.bfloat16) 
        t_637 = _to_copy_1717.t() ;  _to_copy_1717 = None
        view_3037 = _to_copy_1718.view(262144, 256) ;  _to_copy_1718 = None
        mm_594 = torch.mm(view_3037,t_637) ;  view_3037 = t_637 = None
        view_3038 = mm_594.view(1, 512, 512, 512) ;  mm_594 = None
        sigmoid_240 = torch.sigmoid(view_3038) ;  view_3038 = None
        mul_397 = torch.mul(view_3036,sigmoid_240) ;  view_3036 = sigmoid_240 = None
        unsqueeze_990 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_190 = torch.bitwise_not(unsqueeze_990) ;  unsqueeze_990 = None
        masked_fill_190 = mul_397.masked_fill(bitwise_not_190,0) ;  mul_397 = bitwise_not_190 = None
        split_tensor_315 = torch.split(masked_fill_190,256,dim = -1) 
        getitem_2931 = split_tensor_315[0]
        unsqueeze_993 = torch.unsqueeze(getitem_2931,4) ;  getitem_2931 = None
        permute_1627 = unsqueeze_993.permute(0, 1, 4, 3, 2) ;  unsqueeze_993 = None
        permute_1628 = permute_1627.permute(3, 1, 4, 0, 2) ;  permute_1627 = None
        view_3041 = permute_1628.view(256, 512, 512) ;  permute_1628 = None
        split_tensor_316 = torch.split(masked_fill_190,256,dim = -1) ;  masked_fill_190 = None
        getitem_2934 = split_tensor_316[1];  split_tensor_316 = None
        unsqueeze_994 = torch.unsqueeze(getitem_2934,4) ;  getitem_2934 = None
        permute_1629 = unsqueeze_994.permute(0, 4, 1, 3, 2) ;  unsqueeze_994 = None
        permute_1630 = permute_1629.permute(3, 4, 0, 2, 1) ;  permute_1629 = None
        view_3042 = permute_1630.view(256, 512, 512) ;  permute_1630 = None
        bmm_243 = torch.bmm(view_3041,view_3042) ;  view_3041 = view_3042 = None
        view_3043 = bmm_243.view(256, 512, 1, 1, 512) ;  bmm_243 = None
        permute_1631 = view_3043.permute(3, 1, 4, 0, 2) ;  view_3043 = None
        view_3044 = permute_1631.view(1, 512, 512, 256) ;  permute_1631 = None
        _to_copy_1719 = getitem_2925.to(dtype = torch.bfloat16) ;  getitem_2925 = None
        _to_copy_1720 = getitem_2921.to(dtype = torch.bfloat16) 
        t_638 = _to_copy_1719.t() ;  _to_copy_1719 = None
        view_3045 = _to_copy_1720.view(262144, 256) ;  _to_copy_1720 = None
        mm_595 = torch.mm(view_3045,t_638) ;  view_3045 = t_638 = None
        view_3046 = mm_595.view(1, 512, 512, 512) ;  mm_595 = None
        _to_copy_1721 = getitem_2927.to(dtype = torch.bfloat16) ;  getitem_2927 = None
        _to_copy_1722 = getitem_2921.to(dtype = torch.bfloat16) 
        t_639 = _to_copy_1721.t() ;  _to_copy_1721 = None
        view_3047 = _to_copy_1722.view(262144, 256) ;  _to_copy_1722 = None
        mm_596 = torch.mm(view_3047,t_639) ;  view_3047 = t_639 = None
        view_3048 = mm_596.view(1, 512, 512, 512) ;  mm_596 = None
        sigmoid_241 = torch.sigmoid(view_3048) ;  view_3048 = None
        mul_398 = torch.mul(view_3046,sigmoid_241) ;  view_3046 = sigmoid_241 = None
        view_3049 = mul_398.view(262144, 512) ;  mul_398 = None
        view_3050 = view_3049.view(1, 512, 512, 512) ;  view_3049 = None
        transpose_78 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_995 = torch.unsqueeze(transpose_78,3) ;  transpose_78 = None
        clone_260 = torch.clone(unsqueeze_995,memory_format = torch.contiguous_format) ;  unsqueeze_995 = None
        bitwise_not_191 = torch.bitwise_not(clone_260) ;  clone_260 = None
        masked_fill_191 = view_3050.masked_fill(bitwise_not_191,0) ;  view_3050 = bitwise_not_191 = None
        view_3051 = masked_fill_191.view(262144, 512) ;  masked_fill_191 = None
        view_3055 = view_3051.view(1, 512, 512, 512) 
        split_tensor_317 = torch.split(view_3055,256,dim = -1) ;  view_3055 = None
        getitem_2937 = split_tensor_317[0]
        unsqueeze_998 = torch.unsqueeze(getitem_2937,4) ;  getitem_2937 = None
        permute_1636 = unsqueeze_998.permute(0, 2, 4, 3, 1) ;  unsqueeze_998 = None
        permute_1637 = permute_1636.permute(3, 1, 4, 0, 2) ;  permute_1636 = None
        view_3056 = permute_1637.view(256, 512, 512) ;  permute_1637 = None
        view_3057 = view_3051.view(1, 512, 512, 512) ;  view_3051 = None
        split_tensor_318 = torch.split(view_3057,256,dim = -1) ;  view_3057 = None
        getitem_2940 = split_tensor_318[1];  split_tensor_318 = None
        unsqueeze_999 = torch.unsqueeze(getitem_2940,4) ;  getitem_2940 = None
        permute_1638 = unsqueeze_999.permute(0, 4, 2, 3, 1) ;  unsqueeze_999 = None
        permute_1639 = permute_1638.permute(3, 4, 0, 2, 1) ;  permute_1638 = None
        view_3058 = permute_1639.view(256, 512, 512) ;  permute_1639 = None
        bmm_244 = torch.bmm(view_3056,view_3058) ;  view_3056 = view_3058 = None
        view_3059 = bmm_244.view(256, 512, 1, 1, 512) ;  bmm_244 = None
        permute_1640 = view_3059.permute(3, 1, 4, 0, 2) ;  view_3059 = None
        view_3060 = permute_1640.view(1, 512, 512, 256) ;  permute_1640 = None
        _to_copy_1723 = view_3044.to(dtype = torch.float32) ;  view_3044 = None
        native_layer_norm_default_355 = (torch.nn.functional.layer_norm(_to_copy_1723,[256],None,None,1e-05),) ;  _to_copy_1723 = None
        getitem_2941 = native_layer_norm_default_355[0]
        _to_copy_1724 = view_3060.to(dtype = torch.float32) ;  view_3060 = None
        native_layer_norm_default_356 = (torch.nn.functional.layer_norm(_to_copy_1724,[256],None,None,1e-05),) ;  _to_copy_1724 = None
        getitem_2944 = native_layer_norm_default_356[0]
        add_320 = torch.add(getitem_2941,getitem_2944) ;  getitem_2941 = getitem_2944 = None
        _to_copy_1725 = arg1008_1.to(dtype = torch.bfloat16) ;  arg1008_1 = None
        _to_copy_1726 = add_320.to(dtype = torch.bfloat16) ;  add_320 = None
        t_640 = _to_copy_1725.t() ;  _to_copy_1725 = None
        view_3061 = _to_copy_1726.view(262144, 256) ;  _to_copy_1726 = None
        mm_597 = torch.mm(view_3061,t_640) ;  view_3061 = t_640 = None
        view_3062 = mm_597.view(1, 512, 512, 256) ;  mm_597 = None
        _to_copy_1727 = getitem_2928.to(dtype = torch.bfloat16) ;  getitem_2928 = None
        _to_copy_1728 = getitem_2921.to(dtype = torch.bfloat16) ;  getitem_2921 = None
        t_641 = _to_copy_1727.t() ;  _to_copy_1727 = None
        view_3063 = _to_copy_1728.view(262144, 256) ;  _to_copy_1728 = None
        mm_598 = torch.mm(view_3063,t_641) ;  view_3063 = t_641 = None
        view_3064 = mm_598.view(1, 512, 512, 256) ;  mm_598 = None
        sigmoid_242 = torch.sigmoid(view_3064) ;  view_3064 = None
        mul_399 = torch.mul(view_3062,sigmoid_242) ;  view_3062 = sigmoid_242 = None
        add_321 = torch.add(add_315,mul_399) ;  mul_399 = None
        _to_copy_1729 = add_315.to(dtype = torch.float32) 
        native_layer_norm_default_357 = (torch.nn.functional.layer_norm(_to_copy_1729,[256],None,None,1e-05),) ;  _to_copy_1729 = None
        getitem_2947 = native_layer_norm_default_357[0]
        _to_copy_1730 = arg1012_1.to(dtype = torch.bfloat16) ;  arg1012_1 = None
        _to_copy_1731 = getitem_2947.to(dtype = torch.bfloat16) 
        t_642 = _to_copy_1730.t() ;  _to_copy_1730 = None
        view_3065 = _to_copy_1731.view(262144, 256) ;  _to_copy_1731 = None
        mm_599 = torch.mm(view_3065,t_642) ;  view_3065 = t_642 = None
        view_3066 = mm_599.view(1, 512, 512, 8) ;  mm_599 = None
        view_3067 = view_3066.view(1, 512, 512, 2, 4) ;  view_3066 = None
        permute_1641 = view_3067.permute(0, 3, 4, 1, 2) ;  view_3067 = None
        view_3068 = permute_1641.view(1, 2, 4, 1, 512, 512) ;  permute_1641 = None
        view_3069 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_192 = torch.bitwise_not(view_3069) ;  view_3069 = None
        masked_fill_192 = view_3068.masked_fill(bitwise_not_192,-10000) ;  view_3068 = bitwise_not_192 = None
        view_3070 = masked_fill_192.view(1, 2, 4, 512, 512) ;  masked_fill_192 = None
        permute_1642 = view_3070.permute(1, 0, 2, 3, 4) ;  view_3070 = None
        view_3071 = permute_1642.view(2, 4, 1, 512, 512) ;  permute_1642 = None
        _to_copy_1732 = arg1013_1.to(dtype = torch.bfloat16) ;  arg1013_1 = None
        _to_copy_1733 = getitem_2947.to(dtype = torch.bfloat16) 
        t_643 = _to_copy_1732.t() ;  _to_copy_1732 = None
        view_3072 = _to_copy_1733.view(262144, 256) ;  _to_copy_1733 = None
        mm_600 = torch.mm(view_3072,t_643) ;  view_3072 = t_643 = None
        view_3073 = mm_600.view(1, 512, 512, 1024) ;  mm_600 = None
        select_79 = torch.select(view_3071,0,0) 
        view_3074 = view_3073.view(1, 512, 512, 4, 4, 64) ;  view_3073 = None
        permute_1643 = view_3074.permute(4, 0, 3, 1, 2, 5) ;  view_3074 = None
        view_3075 = permute_1643.view(4, 4, 512, 512, 64) ;  permute_1643 = None
        unbind_int_139 = torch.unbind(view_3075) ;  view_3075 = None
        getitem_2950 = unbind_int_139[0]
        getitem_2951 = unbind_int_139[1]
        getitem_2952 = unbind_int_139[2]
        getitem_2953 = unbind_int_139[3];  unbind_int_139 = None
        expand_192 = select_79.expand(4, 512, 512, 512) ;  select_79 = None
        _scaled_dot_product_efficient_attention_default_111 = (torch.nn.functional.scaled_dot_product_attention(getitem_2950,getitem_2951,getitem_2952,expand_192,False),) ;  getitem_2950 = getitem_2951 = getitem_2952 = expand_192 = None
        getitem_2954 = _scaled_dot_product_efficient_attention_default_111[0]
        sigmoid_243 = torch.sigmoid(getitem_2953) ;  getitem_2953 = None
        mul_400 = torch.mul(getitem_2954,sigmoid_243) ;  getitem_2954 = sigmoid_243 = None
        view_3076 = mul_400.view(1, 4, 512, 512, 64) ;  mul_400 = None
        permute_1644 = view_3076.permute(0, 2, 3, 1, 4) ;  view_3076 = None
        clone_261 = torch.clone(permute_1644,memory_format = torch.contiguous_format) ;  permute_1644 = None
        _unsafe_view_220 = clone_261.view(1, 512, 512, 256) ;  clone_261 = None
        transpose_79 = torch.transpose(getitem_2947,1,2) ;  getitem_2947 = None
        _to_copy_1734 = arg1014_1.to(dtype = torch.bfloat16) ;  arg1014_1 = None
        _to_copy_1735 = transpose_79.to(dtype = torch.bfloat16) ;  transpose_79 = None
        t_644 = _to_copy_1734.t() ;  _to_copy_1734 = None
        expand_193 = _to_copy_1735.expand(1, 512, 512, 256) ;  _to_copy_1735 = None
        view_3077 = expand_193.view(512, 512, 256) ;  expand_193 = None
        expand_194 = t_644.expand(1, 512, 256, 1024) ;  t_644 = None
        view_3078 = expand_194.view(512, 256, 1024) ;  expand_194 = None
        bmm_245 = torch.bmm(view_3077,view_3078) ;  view_3077 = view_3078 = None
        view_3079 = bmm_245.view(1, 512, 512, 1024) ;  bmm_245 = None
        select_80 = torch.select(view_3071,0,1) ;  view_3071 = None
        view_3080 = view_3079.view(1, 512, 512, 4, 4, 64) ;  view_3079 = None
        permute_1645 = view_3080.permute(4, 0, 3, 1, 2, 5) ;  view_3080 = None
        view_3081 = permute_1645.view(4, 4, 512, 512, 64) ;  permute_1645 = None
        unbind_int_140 = torch.unbind(view_3081) ;  view_3081 = None
        getitem_2958 = unbind_int_140[0]
        getitem_2959 = unbind_int_140[1]
        getitem_2960 = unbind_int_140[2]
        getitem_2961 = unbind_int_140[3];  unbind_int_140 = None
        expand_195 = select_80.expand(4, 512, 512, 512) ;  select_80 = None
        _scaled_dot_product_efficient_attention_default_112 = (torch.nn.functional.scaled_dot_product_attention(getitem_2958,getitem_2959,getitem_2960,expand_195,False),) ;  getitem_2958 = getitem_2959 = getitem_2960 = expand_195 = None
        getitem_2962 = _scaled_dot_product_efficient_attention_default_112[0]
        sigmoid_244 = torch.sigmoid(getitem_2961) ;  getitem_2961 = None
        mul_401 = torch.mul(getitem_2962,sigmoid_244) ;  getitem_2962 = sigmoid_244 = None
        view_3082 = mul_401.view(1, 4, 512, 512, 64) ;  mul_401 = None
        permute_1646 = view_3082.permute(0, 2, 3, 1, 4) ;  view_3082 = None
        clone_262 = torch.clone(permute_1646,memory_format = torch.contiguous_format) ;  permute_1646 = None
        _unsafe_view_221 = clone_262.view(1, 512, 512, 256) ;  clone_262 = None
        cat_45 = torch.cat([_unsafe_view_220,_unsafe_view_221],dim = -1) ;  _unsafe_view_220 = _unsafe_view_221 = None
        slice_238 = arg1011_1[0:] ;  arg1011_1 = None
        unsqueeze_1000 = torch.unsqueeze(slice_238,1) ;  slice_238 = None
        mul_402 = torch.mul(arg1015_1,unsqueeze_1000) ;  arg1015_1 = unsqueeze_1000 = None
        _to_copy_1736 = mul_402.to(dtype = torch.bfloat16) ;  mul_402 = None
        t_645 = _to_copy_1736.t() ;  _to_copy_1736 = None
        view_3083 = cat_45.view(262144, 512) ;  cat_45 = None
        mm_601 = torch.mm(view_3083,t_645) ;  view_3083 = t_645 = None
        view_3084 = mm_601.view(1, 512, 512, 256) ;  mm_601 = None
        add_322 = torch.add(add_321,view_3084) ;  add_321 = view_3084 = None
        split_tensor_319 = torch.split(add_315,512,dim = -2) 
        getitem_2966 = split_tensor_319[0];  split_tensor_319 = None
        _to_copy_1737 = getitem_2966.to(dtype = torch.float32) ;  getitem_2966 = None
        native_layer_norm_default_358 = (torch.nn.functional.layer_norm(_to_copy_1737,[256],arg1002_1,arg1003_1,1e-05),) ;  _to_copy_1737 = arg1002_1 = arg1003_1 = None
        getitem_2967 = native_layer_norm_default_358[0]
        _to_copy_1738 = arg1004_1.to(dtype = torch.bfloat16) ;  arg1004_1 = None
        _to_copy_1739 = getitem_2967.to(dtype = torch.bfloat16) ;  getitem_2967 = None
        t_646 = _to_copy_1738.t() ;  _to_copy_1738 = None
        view_3085 = _to_copy_1739.view(262144, 256) ;  _to_copy_1739 = None
        mm_602 = torch.mm(view_3085,t_646) ;  view_3085 = t_646 = None
        view_3086 = mm_602.view(1, 512, 512, 1024) ;  mm_602 = None
        split_tensor_320 = torch.split(view_3086,512,dim = -1) ;  view_3086 = None
        getitem_2970 = split_tensor_320[0]
        getitem_2971 = split_tensor_320[1];  split_tensor_320 = None
        silu_84 = torch.nn.functional.silu(getitem_2970) ;  getitem_2970 = None
        mul_403 = torch.mul(silu_84,getitem_2971) ;  silu_84 = getitem_2971 = None
        _to_copy_1740 = arg1005_1.to(dtype = torch.bfloat16) ;  arg1005_1 = None
        t_647 = _to_copy_1740.t() ;  _to_copy_1740 = None
        view_3088 = mul_403.view(262144, 512) ;  mul_403 = None
        mm_603 = torch.mm(view_3088,t_647) ;  view_3088 = t_647 = None
        view_3089 = mm_603.view(1, 512, 512, 256) ;  mm_603 = None
        add_323 = torch.add(add_322,view_3089) ;  add_322 = view_3089 = None
        _to_copy_1741 = add_319.to(dtype = torch.float32) 
        native_layer_norm_default_359 = (torch.nn.functional.layer_norm(_to_copy_1741,[384],arg1020_1,arg1021_1,1e-05),) ;  _to_copy_1741 = arg1020_1 = arg1021_1 = None
        getitem_2972 = native_layer_norm_default_359[0]
        _to_copy_1742 = add_315.to(dtype = torch.float32) ;  add_315 = None
        native_layer_norm_default_360 = (torch.nn.functional.layer_norm(_to_copy_1742,[256],arg1022_1,arg1023_1,1e-05),) ;  _to_copy_1742 = arg1022_1 = arg1023_1 = None
        getitem_2975 = native_layer_norm_default_360[0]
        _to_copy_1743 = arg1024_1.to(dtype = torch.bfloat16) ;  arg1024_1 = None
        _to_copy_1744 = getitem_2975.to(dtype = torch.bfloat16) ;  getitem_2975 = None
        t_648 = _to_copy_1743.t() ;  _to_copy_1743 = None
        view_3090 = _to_copy_1744.view(262144, 256) ;  _to_copy_1744 = None
        mm_604 = torch.mm(view_3090,t_648) ;  view_3090 = t_648 = None
        view_3091 = mm_604.view(1, 512, 512, 16) ;  mm_604 = None
        permute_1647 = view_3091.permute(0, 3, 1, 2) ;  view_3091 = None
        view_3092 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_193 = torch.bitwise_not(view_3092) ;  view_3092 = None
        masked_fill_193 = permute_1647.masked_fill(bitwise_not_193,-10000) ;  permute_1647 = bitwise_not_193 = None
        _to_copy_1745 = getitem_2972.to(dtype = torch.bfloat16) ;  getitem_2972 = None
        _to_copy_1746 = arg1026_1.to(dtype = torch.bfloat16) ;  arg1026_1 = None
        unsqueeze_1001 = torch.unsqueeze(_to_copy_1745,3) ;  _to_copy_1745 = None
        unsqueeze_1002 = torch.unsqueeze(unsqueeze_1001,4) ;  unsqueeze_1001 = None
        unsqueeze_1003 = torch.unsqueeze(unsqueeze_1002,5) ;  unsqueeze_1002 = None
        permute_1648 = unsqueeze_1003.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_1003 = None
        unsqueeze_1004 = torch.unsqueeze(_to_copy_1746,4) ;  _to_copy_1746 = None
        unsqueeze_1005 = torch.unsqueeze(unsqueeze_1004,5) ;  unsqueeze_1004 = None
        permute_1649 = unsqueeze_1005.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_1005 = None
        permute_1650 = permute_1648.permute(3, 5, 0, 1, 2, 4) ;  permute_1648 = None
        view_3093 = permute_1650.view(1, 512, 384) ;  permute_1650 = None
        permute_1651 = permute_1649.permute(5, 0, 1, 2, 4, 3) ;  permute_1649 = None
        view_3094 = permute_1651.view(1, 384, 1536) ;  permute_1651 = None
        bmm_246 = torch.bmm(view_3093,view_3094) ;  view_3093 = view_3094 = None
        view_3095 = bmm_246.view(512, 1, 4, 1, 16, 24) ;  bmm_246 = None
        permute_1652 = view_3095.permute(2, 3, 4, 0, 5, 1) ;  view_3095 = None
        view_3096 = permute_1652.view(4, 1, 16, 512, 24) ;  permute_1652 = None
        unbind_int_141 = torch.unbind(view_3096) ;  view_3096 = None
        getitem_2978 = unbind_int_141[0]
        getitem_2979 = unbind_int_141[1]
        getitem_2980 = unbind_int_141[2]
        getitem_2981 = unbind_int_141[3];  unbind_int_141 = None
        view_3097 = arg1025_1.view(1, 16, 1, 24) ;  arg1025_1 = None
        add_324 = torch.add(getitem_2978,view_3097) ;  getitem_2978 = view_3097 = None
        _to_copy_1747 = add_324.to(dtype = torch.bfloat16) ;  add_324 = None
        expand_196 = masked_fill_193.expand(1, 16, 512, 512) ;  masked_fill_193 = None
        _scaled_dot_product_efficient_attention_default_113 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1747,getitem_2979,getitem_2980,expand_196,False),) ;  _to_copy_1747 = getitem_2979 = getitem_2980 = expand_196 = None
        getitem_2982 = _scaled_dot_product_efficient_attention_default_113[0]
        add_325 = torch.add(getitem_2981,1) ;  getitem_2981 = None
        sigmoid_245 = torch.sigmoid(add_325) ;  add_325 = None
        mul_404 = torch.mul(getitem_2982,sigmoid_245) ;  getitem_2982 = sigmoid_245 = None
        _to_copy_1748 = arg1027_1.to(dtype = torch.bfloat16) ;  arg1027_1 = None
        unsqueeze_1006 = torch.unsqueeze(mul_404,4) ;  mul_404 = None
        permute_1653 = unsqueeze_1006.permute(0, 2, 4, 3, 1) ;  unsqueeze_1006 = None
        unsqueeze_1007 = torch.unsqueeze(_to_copy_1748,3) ;  _to_copy_1748 = None
        unsqueeze_1008 = torch.unsqueeze(unsqueeze_1007,4) ;  unsqueeze_1007 = None
        permute_1654 = unsqueeze_1008.permute(3, 4, 2, 1, 0) ;  unsqueeze_1008 = None
        permute_1655 = permute_1653.permute(1, 3, 4, 0, 2) ;  permute_1653 = None
        clone_263 = torch.clone(permute_1655,memory_format = torch.contiguous_format) ;  permute_1655 = None
        _unsafe_view_222 = clone_263.view(1, 512, 384) ;  clone_263 = None
        permute_1656 = permute_1654.permute(3, 4, 0, 2, 1) ;  permute_1654 = None
        clone_264 = torch.clone(permute_1656,memory_format = torch.contiguous_format) ;  permute_1656 = None
        _unsafe_view_223 = clone_264.view(1, 384, 384) ;  clone_264 = None
        bmm_247 = torch.bmm(_unsafe_view_222,_unsafe_view_223) ;  _unsafe_view_222 = _unsafe_view_223 = None
        view_3098 = bmm_247.view(512, 1, 1, 1, 384) ;  bmm_247 = None
        permute_1657 = view_3098.permute(3, 0, 4, 1, 2) ;  view_3098 = None
        view_3099 = permute_1657.view(1, 512, 384) ;  permute_1657 = None
        unsqueeze_1009 = torch.unsqueeze(arg1406_1,-1) 
        mul_405 = torch.mul(view_3099,unsqueeze_1009) ;  view_3099 = unsqueeze_1009 = None
        add_326 = torch.add(add_319,mul_405) ;  mul_405 = None
        split_tensor_321 = torch.split(add_319,512,dim = -2) ;  add_319 = None
        getitem_2986 = split_tensor_321[0];  split_tensor_321 = None
        _to_copy_1749 = getitem_2986.to(dtype = torch.float32) ;  getitem_2986 = None
        native_layer_norm_default_361 = (torch.nn.functional.layer_norm(_to_copy_1749,[384],arg1016_1,arg1017_1,1e-05),) ;  _to_copy_1749 = arg1016_1 = arg1017_1 = None
        getitem_2987 = native_layer_norm_default_361[0]
        _to_copy_1750 = arg1018_1.to(dtype = torch.bfloat16) ;  arg1018_1 = None
        _to_copy_1751 = getitem_2987.to(dtype = torch.bfloat16) ;  getitem_2987 = None
        t_649 = _to_copy_1750.t() ;  _to_copy_1750 = None
        view_3100 = _to_copy_1751.view(512, 384) ;  _to_copy_1751 = None
        mm_605 = torch.mm(view_3100,t_649) ;  view_3100 = t_649 = None
        view_3101 = mm_605.view(1, 512, 1536) ;  mm_605 = None
        split_tensor_322 = torch.split(view_3101,768,dim = -1) ;  view_3101 = None
        getitem_2990 = split_tensor_322[0]
        getitem_2991 = split_tensor_322[1];  split_tensor_322 = None
        silu_85 = torch.nn.functional.silu(getitem_2990) ;  getitem_2990 = None
        mul_406 = torch.mul(silu_85,getitem_2991) ;  silu_85 = getitem_2991 = None
        _to_copy_1752 = arg1019_1.to(dtype = torch.bfloat16) ;  arg1019_1 = None
        t_650 = _to_copy_1752.t() ;  _to_copy_1752 = None
        view_3103 = mul_406.view(512, 768) ;  mul_406 = None
        mm_606 = torch.mm(view_3103,t_650) ;  view_3103 = t_650 = None
        view_3104 = mm_606.view(1, 512, 384) ;  mm_606 = None
        add_327 = torch.add(add_326,view_3104) ;  add_326 = view_3104 = None
        _to_copy_1753 = add_323.to(dtype = torch.float32) 
        native_layer_norm_default_362 = (torch.nn.functional.layer_norm(_to_copy_1753,[256],arg1032_1,arg1033_1,1e-05),) ;  _to_copy_1753 = arg1032_1 = arg1033_1 = None
        getitem_2992 = native_layer_norm_default_362[0]
        split_with_sizes_default_80 = torch.split(arg1035_1,[512,512]) ;  arg1035_1 = None
        getitem_2995 = split_with_sizes_default_80[0]
        getitem_2996 = split_with_sizes_default_80[1];  split_with_sizes_default_80 = None
        split_with_sizes_default_81 = torch.split(arg1036_1,[512,512,256]) ;  arg1036_1 = None
        getitem_2997 = split_with_sizes_default_81[0]
        getitem_2998 = split_with_sizes_default_81[1]
        getitem_2999 = split_with_sizes_default_81[2];  split_with_sizes_default_81 = None
        _to_copy_1754 = getitem_2995.to(dtype = torch.bfloat16) ;  getitem_2995 = None
        _to_copy_1755 = getitem_2992.to(dtype = torch.bfloat16) 
        t_651 = _to_copy_1754.t() ;  _to_copy_1754 = None
        view_3105 = _to_copy_1755.view(262144, 256) ;  _to_copy_1755 = None
        mm_607 = torch.mm(view_3105,t_651) ;  view_3105 = t_651 = None
        view_3106 = mm_607.view(1, 512, 512, 512) ;  mm_607 = None
        _to_copy_1756 = getitem_2997.to(dtype = torch.bfloat16) ;  getitem_2997 = None
        _to_copy_1757 = getitem_2992.to(dtype = torch.bfloat16) 
        t_652 = _to_copy_1756.t() ;  _to_copy_1756 = None
        view_3107 = _to_copy_1757.view(262144, 256) ;  _to_copy_1757 = None
        mm_608 = torch.mm(view_3107,t_652) ;  view_3107 = t_652 = None
        view_3108 = mm_608.view(1, 512, 512, 512) ;  mm_608 = None
        sigmoid_246 = torch.sigmoid(view_3108) ;  view_3108 = None
        mul_407 = torch.mul(view_3106,sigmoid_246) ;  view_3106 = sigmoid_246 = None
        unsqueeze_1010 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_194 = torch.bitwise_not(unsqueeze_1010) ;  unsqueeze_1010 = None
        masked_fill_194 = mul_407.masked_fill(bitwise_not_194,0) ;  mul_407 = bitwise_not_194 = None
        split_tensor_323 = torch.split(masked_fill_194,256,dim = -1) 
        getitem_3002 = split_tensor_323[0]
        unsqueeze_1013 = torch.unsqueeze(getitem_3002,4) ;  getitem_3002 = None
        permute_1662 = unsqueeze_1013.permute(0, 1, 4, 3, 2) ;  unsqueeze_1013 = None
        permute_1663 = permute_1662.permute(3, 1, 4, 0, 2) ;  permute_1662 = None
        view_3111 = permute_1663.view(256, 512, 512) ;  permute_1663 = None
        split_tensor_324 = torch.split(masked_fill_194,256,dim = -1) ;  masked_fill_194 = None
        getitem_3005 = split_tensor_324[1];  split_tensor_324 = None
        unsqueeze_1014 = torch.unsqueeze(getitem_3005,4) ;  getitem_3005 = None
        permute_1664 = unsqueeze_1014.permute(0, 4, 1, 3, 2) ;  unsqueeze_1014 = None
        permute_1665 = permute_1664.permute(3, 4, 0, 2, 1) ;  permute_1664 = None
        view_3112 = permute_1665.view(256, 512, 512) ;  permute_1665 = None
        bmm_248 = torch.bmm(view_3111,view_3112) ;  view_3111 = view_3112 = None
        view_3113 = bmm_248.view(256, 512, 1, 1, 512) ;  bmm_248 = None
        permute_1666 = view_3113.permute(3, 1, 4, 0, 2) ;  view_3113 = None
        view_3114 = permute_1666.view(1, 512, 512, 256) ;  permute_1666 = None
        _to_copy_1758 = getitem_2996.to(dtype = torch.bfloat16) ;  getitem_2996 = None
        _to_copy_1759 = getitem_2992.to(dtype = torch.bfloat16) 
        t_653 = _to_copy_1758.t() ;  _to_copy_1758 = None
        view_3115 = _to_copy_1759.view(262144, 256) ;  _to_copy_1759 = None
        mm_609 = torch.mm(view_3115,t_653) ;  view_3115 = t_653 = None
        view_3116 = mm_609.view(1, 512, 512, 512) ;  mm_609 = None
        _to_copy_1760 = getitem_2998.to(dtype = torch.bfloat16) ;  getitem_2998 = None
        _to_copy_1761 = getitem_2992.to(dtype = torch.bfloat16) 
        t_654 = _to_copy_1760.t() ;  _to_copy_1760 = None
        view_3117 = _to_copy_1761.view(262144, 256) ;  _to_copy_1761 = None
        mm_610 = torch.mm(view_3117,t_654) ;  view_3117 = t_654 = None
        view_3118 = mm_610.view(1, 512, 512, 512) ;  mm_610 = None
        sigmoid_247 = torch.sigmoid(view_3118) ;  view_3118 = None
        mul_408 = torch.mul(view_3116,sigmoid_247) ;  view_3116 = sigmoid_247 = None
        view_3119 = mul_408.view(262144, 512) ;  mul_408 = None
        view_3120 = view_3119.view(1, 512, 512, 512) ;  view_3119 = None
        transpose_80 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_1015 = torch.unsqueeze(transpose_80,3) ;  transpose_80 = None
        clone_265 = torch.clone(unsqueeze_1015,memory_format = torch.contiguous_format) ;  unsqueeze_1015 = None
        bitwise_not_195 = torch.bitwise_not(clone_265) ;  clone_265 = None
        masked_fill_195 = view_3120.masked_fill(bitwise_not_195,0) ;  view_3120 = bitwise_not_195 = None
        view_3121 = masked_fill_195.view(262144, 512) ;  masked_fill_195 = None
        view_3125 = view_3121.view(1, 512, 512, 512) 
        split_tensor_325 = torch.split(view_3125,256,dim = -1) ;  view_3125 = None
        getitem_3008 = split_tensor_325[0]
        unsqueeze_1018 = torch.unsqueeze(getitem_3008,4) ;  getitem_3008 = None
        permute_1671 = unsqueeze_1018.permute(0, 2, 4, 3, 1) ;  unsqueeze_1018 = None
        permute_1672 = permute_1671.permute(3, 1, 4, 0, 2) ;  permute_1671 = None
        view_3126 = permute_1672.view(256, 512, 512) ;  permute_1672 = None
        view_3127 = view_3121.view(1, 512, 512, 512) ;  view_3121 = None
        split_tensor_326 = torch.split(view_3127,256,dim = -1) ;  view_3127 = None
        getitem_3011 = split_tensor_326[1];  split_tensor_326 = None
        unsqueeze_1019 = torch.unsqueeze(getitem_3011,4) ;  getitem_3011 = None
        permute_1673 = unsqueeze_1019.permute(0, 4, 2, 3, 1) ;  unsqueeze_1019 = None
        permute_1674 = permute_1673.permute(3, 4, 0, 2, 1) ;  permute_1673 = None
        view_3128 = permute_1674.view(256, 512, 512) ;  permute_1674 = None
        bmm_249 = torch.bmm(view_3126,view_3128) ;  view_3126 = view_3128 = None
        view_3129 = bmm_249.view(256, 512, 1, 1, 512) ;  bmm_249 = None
        permute_1675 = view_3129.permute(3, 1, 4, 0, 2) ;  view_3129 = None
        view_3130 = permute_1675.view(1, 512, 512, 256) ;  permute_1675 = None
        _to_copy_1762 = view_3114.to(dtype = torch.float32) ;  view_3114 = None
        native_layer_norm_default_363 = (torch.nn.functional.layer_norm(_to_copy_1762,[256],None,None,1e-05),) ;  _to_copy_1762 = None
        getitem_3012 = native_layer_norm_default_363[0]
        _to_copy_1763 = view_3130.to(dtype = torch.float32) ;  view_3130 = None
        native_layer_norm_default_364 = (torch.nn.functional.layer_norm(_to_copy_1763,[256],None,None,1e-05),) ;  _to_copy_1763 = None
        getitem_3015 = native_layer_norm_default_364[0]
        add_328 = torch.add(getitem_3012,getitem_3015) ;  getitem_3012 = getitem_3015 = None
        _to_copy_1764 = arg1034_1.to(dtype = torch.bfloat16) ;  arg1034_1 = None
        _to_copy_1765 = add_328.to(dtype = torch.bfloat16) ;  add_328 = None
        t_655 = _to_copy_1764.t() ;  _to_copy_1764 = None
        view_3131 = _to_copy_1765.view(262144, 256) ;  _to_copy_1765 = None
        mm_611 = torch.mm(view_3131,t_655) ;  view_3131 = t_655 = None
        view_3132 = mm_611.view(1, 512, 512, 256) ;  mm_611 = None
        _to_copy_1766 = getitem_2999.to(dtype = torch.bfloat16) ;  getitem_2999 = None
        _to_copy_1767 = getitem_2992.to(dtype = torch.bfloat16) ;  getitem_2992 = None
        t_656 = _to_copy_1766.t() ;  _to_copy_1766 = None
        view_3133 = _to_copy_1767.view(262144, 256) ;  _to_copy_1767 = None
        mm_612 = torch.mm(view_3133,t_656) ;  view_3133 = t_656 = None
        view_3134 = mm_612.view(1, 512, 512, 256) ;  mm_612 = None
        sigmoid_248 = torch.sigmoid(view_3134) ;  view_3134 = None
        mul_409 = torch.mul(view_3132,sigmoid_248) ;  view_3132 = sigmoid_248 = None
        add_329 = torch.add(add_323,mul_409) ;  mul_409 = None
        _to_copy_1768 = add_323.to(dtype = torch.float32) 
        native_layer_norm_default_365 = (torch.nn.functional.layer_norm(_to_copy_1768,[256],None,None,1e-05),) ;  _to_copy_1768 = None
        getitem_3018 = native_layer_norm_default_365[0]
        _to_copy_1769 = arg1038_1.to(dtype = torch.bfloat16) ;  arg1038_1 = None
        _to_copy_1770 = getitem_3018.to(dtype = torch.bfloat16) 
        t_657 = _to_copy_1769.t() ;  _to_copy_1769 = None
        view_3135 = _to_copy_1770.view(262144, 256) ;  _to_copy_1770 = None
        mm_613 = torch.mm(view_3135,t_657) ;  view_3135 = t_657 = None
        view_3136 = mm_613.view(1, 512, 512, 8) ;  mm_613 = None
        view_3137 = view_3136.view(1, 512, 512, 2, 4) ;  view_3136 = None
        permute_1676 = view_3137.permute(0, 3, 4, 1, 2) ;  view_3137 = None
        view_3138 = permute_1676.view(1, 2, 4, 1, 512, 512) ;  permute_1676 = None
        view_3139 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_196 = torch.bitwise_not(view_3139) ;  view_3139 = None
        masked_fill_196 = view_3138.masked_fill(bitwise_not_196,-10000) ;  view_3138 = bitwise_not_196 = None
        view_3140 = masked_fill_196.view(1, 2, 4, 512, 512) ;  masked_fill_196 = None
        permute_1677 = view_3140.permute(1, 0, 2, 3, 4) ;  view_3140 = None
        view_3141 = permute_1677.view(2, 4, 1, 512, 512) ;  permute_1677 = None
        _to_copy_1771 = arg1039_1.to(dtype = torch.bfloat16) ;  arg1039_1 = None
        _to_copy_1772 = getitem_3018.to(dtype = torch.bfloat16) 
        t_658 = _to_copy_1771.t() ;  _to_copy_1771 = None
        view_3142 = _to_copy_1772.view(262144, 256) ;  _to_copy_1772 = None
        mm_614 = torch.mm(view_3142,t_658) ;  view_3142 = t_658 = None
        view_3143 = mm_614.view(1, 512, 512, 1024) ;  mm_614 = None
        select_81 = torch.select(view_3141,0,0) 
        view_3144 = view_3143.view(1, 512, 512, 4, 4, 64) ;  view_3143 = None
        permute_1678 = view_3144.permute(4, 0, 3, 1, 2, 5) ;  view_3144 = None
        view_3145 = permute_1678.view(4, 4, 512, 512, 64) ;  permute_1678 = None
        unbind_int_142 = torch.unbind(view_3145) ;  view_3145 = None
        getitem_3021 = unbind_int_142[0]
        getitem_3022 = unbind_int_142[1]
        getitem_3023 = unbind_int_142[2]
        getitem_3024 = unbind_int_142[3];  unbind_int_142 = None
        expand_197 = select_81.expand(4, 512, 512, 512) ;  select_81 = None
        _scaled_dot_product_efficient_attention_default_114 = (torch.nn.functional.scaled_dot_product_attention(getitem_3021,getitem_3022,getitem_3023,expand_197,False),) ;  getitem_3021 = getitem_3022 = getitem_3023 = expand_197 = None
        getitem_3025 = _scaled_dot_product_efficient_attention_default_114[0]
        sigmoid_249 = torch.sigmoid(getitem_3024) ;  getitem_3024 = None
        mul_410 = torch.mul(getitem_3025,sigmoid_249) ;  getitem_3025 = sigmoid_249 = None
        view_3146 = mul_410.view(1, 4, 512, 512, 64) ;  mul_410 = None
        permute_1679 = view_3146.permute(0, 2, 3, 1, 4) ;  view_3146 = None
        clone_266 = torch.clone(permute_1679,memory_format = torch.contiguous_format) ;  permute_1679 = None
        _unsafe_view_224 = clone_266.view(1, 512, 512, 256) ;  clone_266 = None
        transpose_81 = torch.transpose(getitem_3018,1,2) ;  getitem_3018 = None
        _to_copy_1773 = arg1040_1.to(dtype = torch.bfloat16) ;  arg1040_1 = None
        _to_copy_1774 = transpose_81.to(dtype = torch.bfloat16) ;  transpose_81 = None
        t_659 = _to_copy_1773.t() ;  _to_copy_1773 = None
        expand_198 = _to_copy_1774.expand(1, 512, 512, 256) ;  _to_copy_1774 = None
        view_3147 = expand_198.view(512, 512, 256) ;  expand_198 = None
        expand_199 = t_659.expand(1, 512, 256, 1024) ;  t_659 = None
        view_3148 = expand_199.view(512, 256, 1024) ;  expand_199 = None
        bmm_250 = torch.bmm(view_3147,view_3148) ;  view_3147 = view_3148 = None
        view_3149 = bmm_250.view(1, 512, 512, 1024) ;  bmm_250 = None
        select_82 = torch.select(view_3141,0,1) ;  view_3141 = None
        view_3150 = view_3149.view(1, 512, 512, 4, 4, 64) ;  view_3149 = None
        permute_1680 = view_3150.permute(4, 0, 3, 1, 2, 5) ;  view_3150 = None
        view_3151 = permute_1680.view(4, 4, 512, 512, 64) ;  permute_1680 = None
        unbind_int_143 = torch.unbind(view_3151) ;  view_3151 = None
        getitem_3029 = unbind_int_143[0]
        getitem_3030 = unbind_int_143[1]
        getitem_3031 = unbind_int_143[2]
        getitem_3032 = unbind_int_143[3];  unbind_int_143 = None
        expand_200 = select_82.expand(4, 512, 512, 512) ;  select_82 = None
        _scaled_dot_product_efficient_attention_default_115 = (torch.nn.functional.scaled_dot_product_attention(getitem_3029,getitem_3030,getitem_3031,expand_200,False),) ;  getitem_3029 = getitem_3030 = getitem_3031 = expand_200 = None
        getitem_3033 = _scaled_dot_product_efficient_attention_default_115[0]
        sigmoid_250 = torch.sigmoid(getitem_3032) ;  getitem_3032 = None
        mul_411 = torch.mul(getitem_3033,sigmoid_250) ;  getitem_3033 = sigmoid_250 = None
        view_3152 = mul_411.view(1, 4, 512, 512, 64) ;  mul_411 = None
        permute_1681 = view_3152.permute(0, 2, 3, 1, 4) ;  view_3152 = None
        clone_267 = torch.clone(permute_1681,memory_format = torch.contiguous_format) ;  permute_1681 = None
        _unsafe_view_225 = clone_267.view(1, 512, 512, 256) ;  clone_267 = None
        cat_46 = torch.cat([_unsafe_view_224,_unsafe_view_225],dim = -1) ;  _unsafe_view_224 = _unsafe_view_225 = None
        slice_239 = arg1037_1[0:] ;  arg1037_1 = None
        unsqueeze_1020 = torch.unsqueeze(slice_239,1) ;  slice_239 = None
        mul_412 = torch.mul(arg1041_1,unsqueeze_1020) ;  arg1041_1 = unsqueeze_1020 = None
        _to_copy_1775 = mul_412.to(dtype = torch.bfloat16) ;  mul_412 = None
        t_660 = _to_copy_1775.t() ;  _to_copy_1775 = None
        view_3153 = cat_46.view(262144, 512) ;  cat_46 = None
        mm_615 = torch.mm(view_3153,t_660) ;  view_3153 = t_660 = None
        view_3154 = mm_615.view(1, 512, 512, 256) ;  mm_615 = None
        add_330 = torch.add(add_329,view_3154) ;  add_329 = view_3154 = None
        split_tensor_327 = torch.split(add_323,512,dim = -2) 
        getitem_3037 = split_tensor_327[0];  split_tensor_327 = None
        _to_copy_1776 = getitem_3037.to(dtype = torch.float32) ;  getitem_3037 = None
        native_layer_norm_default_366 = (torch.nn.functional.layer_norm(_to_copy_1776,[256],arg1028_1,arg1029_1,1e-05),) ;  _to_copy_1776 = arg1028_1 = arg1029_1 = None
        getitem_3038 = native_layer_norm_default_366[0]
        _to_copy_1777 = arg1030_1.to(dtype = torch.bfloat16) ;  arg1030_1 = None
        _to_copy_1778 = getitem_3038.to(dtype = torch.bfloat16) ;  getitem_3038 = None
        t_661 = _to_copy_1777.t() ;  _to_copy_1777 = None
        view_3155 = _to_copy_1778.view(262144, 256) ;  _to_copy_1778 = None
        mm_616 = torch.mm(view_3155,t_661) ;  view_3155 = t_661 = None
        view_3156 = mm_616.view(1, 512, 512, 1024) ;  mm_616 = None
        split_tensor_328 = torch.split(view_3156,512,dim = -1) ;  view_3156 = None
        getitem_3041 = split_tensor_328[0]
        getitem_3042 = split_tensor_328[1];  split_tensor_328 = None
        silu_86 = torch.nn.functional.silu(getitem_3041) ;  getitem_3041 = None
        mul_413 = torch.mul(silu_86,getitem_3042) ;  silu_86 = getitem_3042 = None
        _to_copy_1779 = arg1031_1.to(dtype = torch.bfloat16) ;  arg1031_1 = None
        t_662 = _to_copy_1779.t() ;  _to_copy_1779 = None
        view_3158 = mul_413.view(262144, 512) ;  mul_413 = None
        mm_617 = torch.mm(view_3158,t_662) ;  view_3158 = t_662 = None
        view_3159 = mm_617.view(1, 512, 512, 256) ;  mm_617 = None
        add_331 = torch.add(add_330,view_3159) ;  add_330 = view_3159 = None
        _to_copy_1780 = add_327.to(dtype = torch.float32) 
        native_layer_norm_default_367 = (torch.nn.functional.layer_norm(_to_copy_1780,[384],arg1046_1,arg1047_1,1e-05),) ;  _to_copy_1780 = arg1046_1 = arg1047_1 = None
        getitem_3043 = native_layer_norm_default_367[0]
        _to_copy_1781 = add_323.to(dtype = torch.float32) ;  add_323 = None
        native_layer_norm_default_368 = (torch.nn.functional.layer_norm(_to_copy_1781,[256],arg1048_1,arg1049_1,1e-05),) ;  _to_copy_1781 = arg1048_1 = arg1049_1 = None
        getitem_3046 = native_layer_norm_default_368[0]
        _to_copy_1782 = arg1050_1.to(dtype = torch.bfloat16) ;  arg1050_1 = None
        _to_copy_1783 = getitem_3046.to(dtype = torch.bfloat16) ;  getitem_3046 = None
        t_663 = _to_copy_1782.t() ;  _to_copy_1782 = None
        view_3160 = _to_copy_1783.view(262144, 256) ;  _to_copy_1783 = None
        mm_618 = torch.mm(view_3160,t_663) ;  view_3160 = t_663 = None
        view_3161 = mm_618.view(1, 512, 512, 16) ;  mm_618 = None
        permute_1682 = view_3161.permute(0, 3, 1, 2) ;  view_3161 = None
        view_3162 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_197 = torch.bitwise_not(view_3162) ;  view_3162 = None
        masked_fill_197 = permute_1682.masked_fill(bitwise_not_197,-10000) ;  permute_1682 = bitwise_not_197 = None
        _to_copy_1784 = getitem_3043.to(dtype = torch.bfloat16) ;  getitem_3043 = None
        _to_copy_1785 = arg1052_1.to(dtype = torch.bfloat16) ;  arg1052_1 = None
        unsqueeze_1021 = torch.unsqueeze(_to_copy_1784,3) ;  _to_copy_1784 = None
        unsqueeze_1022 = torch.unsqueeze(unsqueeze_1021,4) ;  unsqueeze_1021 = None
        unsqueeze_1023 = torch.unsqueeze(unsqueeze_1022,5) ;  unsqueeze_1022 = None
        permute_1683 = unsqueeze_1023.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_1023 = None
        unsqueeze_1024 = torch.unsqueeze(_to_copy_1785,4) ;  _to_copy_1785 = None
        unsqueeze_1025 = torch.unsqueeze(unsqueeze_1024,5) ;  unsqueeze_1024 = None
        permute_1684 = unsqueeze_1025.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_1025 = None
        permute_1685 = permute_1683.permute(3, 5, 0, 1, 2, 4) ;  permute_1683 = None
        view_3163 = permute_1685.view(1, 512, 384) ;  permute_1685 = None
        permute_1686 = permute_1684.permute(5, 0, 1, 2, 4, 3) ;  permute_1684 = None
        view_3164 = permute_1686.view(1, 384, 1536) ;  permute_1686 = None
        bmm_251 = torch.bmm(view_3163,view_3164) ;  view_3163 = view_3164 = None
        view_3165 = bmm_251.view(512, 1, 4, 1, 16, 24) ;  bmm_251 = None
        permute_1687 = view_3165.permute(2, 3, 4, 0, 5, 1) ;  view_3165 = None
        view_3166 = permute_1687.view(4, 1, 16, 512, 24) ;  permute_1687 = None
        unbind_int_144 = torch.unbind(view_3166) ;  view_3166 = None
        getitem_3049 = unbind_int_144[0]
        getitem_3050 = unbind_int_144[1]
        getitem_3051 = unbind_int_144[2]
        getitem_3052 = unbind_int_144[3];  unbind_int_144 = None
        view_3167 = arg1051_1.view(1, 16, 1, 24) ;  arg1051_1 = None
        add_332 = torch.add(getitem_3049,view_3167) ;  getitem_3049 = view_3167 = None
        _to_copy_1786 = add_332.to(dtype = torch.bfloat16) ;  add_332 = None
        expand_201 = masked_fill_197.expand(1, 16, 512, 512) ;  masked_fill_197 = None
        _scaled_dot_product_efficient_attention_default_116 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1786,getitem_3050,getitem_3051,expand_201,False),) ;  _to_copy_1786 = getitem_3050 = getitem_3051 = expand_201 = None
        getitem_3053 = _scaled_dot_product_efficient_attention_default_116[0]
        add_333 = torch.add(getitem_3052,1) ;  getitem_3052 = None
        sigmoid_251 = torch.sigmoid(add_333) ;  add_333 = None
        mul_414 = torch.mul(getitem_3053,sigmoid_251) ;  getitem_3053 = sigmoid_251 = None
        _to_copy_1787 = arg1053_1.to(dtype = torch.bfloat16) ;  arg1053_1 = None
        unsqueeze_1026 = torch.unsqueeze(mul_414,4) ;  mul_414 = None
        permute_1688 = unsqueeze_1026.permute(0, 2, 4, 3, 1) ;  unsqueeze_1026 = None
        unsqueeze_1027 = torch.unsqueeze(_to_copy_1787,3) ;  _to_copy_1787 = None
        unsqueeze_1028 = torch.unsqueeze(unsqueeze_1027,4) ;  unsqueeze_1027 = None
        permute_1689 = unsqueeze_1028.permute(3, 4, 2, 1, 0) ;  unsqueeze_1028 = None
        permute_1690 = permute_1688.permute(1, 3, 4, 0, 2) ;  permute_1688 = None
        clone_268 = torch.clone(permute_1690,memory_format = torch.contiguous_format) ;  permute_1690 = None
        _unsafe_view_226 = clone_268.view(1, 512, 384) ;  clone_268 = None
        permute_1691 = permute_1689.permute(3, 4, 0, 2, 1) ;  permute_1689 = None
        clone_269 = torch.clone(permute_1691,memory_format = torch.contiguous_format) ;  permute_1691 = None
        _unsafe_view_227 = clone_269.view(1, 384, 384) ;  clone_269 = None
        bmm_252 = torch.bmm(_unsafe_view_226,_unsafe_view_227) ;  _unsafe_view_226 = _unsafe_view_227 = None
        view_3168 = bmm_252.view(512, 1, 1, 1, 384) ;  bmm_252 = None
        permute_1692 = view_3168.permute(3, 0, 4, 1, 2) ;  view_3168 = None
        view_3169 = permute_1692.view(1, 512, 384) ;  permute_1692 = None
        unsqueeze_1029 = torch.unsqueeze(arg1406_1,-1) 
        mul_415 = torch.mul(view_3169,unsqueeze_1029) ;  view_3169 = unsqueeze_1029 = None
        add_334 = torch.add(add_327,mul_415) ;  mul_415 = None
        split_tensor_329 = torch.split(add_327,512,dim = -2) ;  add_327 = None
        getitem_3057 = split_tensor_329[0];  split_tensor_329 = None
        _to_copy_1788 = getitem_3057.to(dtype = torch.float32) ;  getitem_3057 = None
        native_layer_norm_default_369 = (torch.nn.functional.layer_norm(_to_copy_1788,[384],arg1042_1,arg1043_1,1e-05),) ;  _to_copy_1788 = arg1042_1 = arg1043_1 = None
        getitem_3058 = native_layer_norm_default_369[0]
        _to_copy_1789 = arg1044_1.to(dtype = torch.bfloat16) ;  arg1044_1 = None
        _to_copy_1790 = getitem_3058.to(dtype = torch.bfloat16) ;  getitem_3058 = None
        t_664 = _to_copy_1789.t() ;  _to_copy_1789 = None
        view_3170 = _to_copy_1790.view(512, 384) ;  _to_copy_1790 = None
        mm_619 = torch.mm(view_3170,t_664) ;  view_3170 = t_664 = None
        view_3171 = mm_619.view(1, 512, 1536) ;  mm_619 = None
        split_tensor_330 = torch.split(view_3171,768,dim = -1) ;  view_3171 = None
        getitem_3061 = split_tensor_330[0]
        getitem_3062 = split_tensor_330[1];  split_tensor_330 = None
        silu_87 = torch.nn.functional.silu(getitem_3061) ;  getitem_3061 = None
        mul_416 = torch.mul(silu_87,getitem_3062) ;  silu_87 = getitem_3062 = None
        _to_copy_1791 = arg1045_1.to(dtype = torch.bfloat16) ;  arg1045_1 = None
        t_665 = _to_copy_1791.t() ;  _to_copy_1791 = None
        view_3173 = mul_416.view(512, 768) ;  mul_416 = None
        mm_620 = torch.mm(view_3173,t_665) ;  view_3173 = t_665 = None
        view_3174 = mm_620.view(1, 512, 384) ;  mm_620 = None
        add_335 = torch.add(add_334,view_3174) ;  add_334 = view_3174 = None
        _to_copy_1792 = add_331.to(dtype = torch.float32) 
        native_layer_norm_default_370 = (torch.nn.functional.layer_norm(_to_copy_1792,[256],arg1058_1,arg1059_1,1e-05),) ;  _to_copy_1792 = arg1058_1 = arg1059_1 = None
        getitem_3063 = native_layer_norm_default_370[0]
        split_with_sizes_default_82 = torch.split(arg1061_1,[512,512]) ;  arg1061_1 = None
        getitem_3066 = split_with_sizes_default_82[0]
        getitem_3067 = split_with_sizes_default_82[1];  split_with_sizes_default_82 = None
        split_with_sizes_default_83 = torch.split(arg1062_1,[512,512,256]) ;  arg1062_1 = None
        getitem_3068 = split_with_sizes_default_83[0]
        getitem_3069 = split_with_sizes_default_83[1]
        getitem_3070 = split_with_sizes_default_83[2];  split_with_sizes_default_83 = None
        _to_copy_1793 = getitem_3066.to(dtype = torch.bfloat16) ;  getitem_3066 = None
        _to_copy_1794 = getitem_3063.to(dtype = torch.bfloat16) 
        t_666 = _to_copy_1793.t() ;  _to_copy_1793 = None
        view_3175 = _to_copy_1794.view(262144, 256) ;  _to_copy_1794 = None
        mm_621 = torch.mm(view_3175,t_666) ;  view_3175 = t_666 = None
        view_3176 = mm_621.view(1, 512, 512, 512) ;  mm_621 = None
        _to_copy_1795 = getitem_3068.to(dtype = torch.bfloat16) ;  getitem_3068 = None
        _to_copy_1796 = getitem_3063.to(dtype = torch.bfloat16) 
        t_667 = _to_copy_1795.t() ;  _to_copy_1795 = None
        view_3177 = _to_copy_1796.view(262144, 256) ;  _to_copy_1796 = None
        mm_622 = torch.mm(view_3177,t_667) ;  view_3177 = t_667 = None
        view_3178 = mm_622.view(1, 512, 512, 512) ;  mm_622 = None
        sigmoid_252 = torch.sigmoid(view_3178) ;  view_3178 = None
        mul_417 = torch.mul(view_3176,sigmoid_252) ;  view_3176 = sigmoid_252 = None
        unsqueeze_1030 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_198 = torch.bitwise_not(unsqueeze_1030) ;  unsqueeze_1030 = None
        masked_fill_198 = mul_417.masked_fill(bitwise_not_198,0) ;  mul_417 = bitwise_not_198 = None
        split_tensor_331 = torch.split(masked_fill_198,256,dim = -1) 
        getitem_3073 = split_tensor_331[0]
        unsqueeze_1033 = torch.unsqueeze(getitem_3073,4) ;  getitem_3073 = None
        permute_1697 = unsqueeze_1033.permute(0, 1, 4, 3, 2) ;  unsqueeze_1033 = None
        permute_1698 = permute_1697.permute(3, 1, 4, 0, 2) ;  permute_1697 = None
        view_3181 = permute_1698.view(256, 512, 512) ;  permute_1698 = None
        split_tensor_332 = torch.split(masked_fill_198,256,dim = -1) ;  masked_fill_198 = None
        getitem_3076 = split_tensor_332[1];  split_tensor_332 = None
        unsqueeze_1034 = torch.unsqueeze(getitem_3076,4) ;  getitem_3076 = None
        permute_1699 = unsqueeze_1034.permute(0, 4, 1, 3, 2) ;  unsqueeze_1034 = None
        permute_1700 = permute_1699.permute(3, 4, 0, 2, 1) ;  permute_1699 = None
        view_3182 = permute_1700.view(256, 512, 512) ;  permute_1700 = None
        bmm_253 = torch.bmm(view_3181,view_3182) ;  view_3181 = view_3182 = None
        view_3183 = bmm_253.view(256, 512, 1, 1, 512) ;  bmm_253 = None
        permute_1701 = view_3183.permute(3, 1, 4, 0, 2) ;  view_3183 = None
        view_3184 = permute_1701.view(1, 512, 512, 256) ;  permute_1701 = None
        _to_copy_1797 = getitem_3067.to(dtype = torch.bfloat16) ;  getitem_3067 = None
        _to_copy_1798 = getitem_3063.to(dtype = torch.bfloat16) 
        t_668 = _to_copy_1797.t() ;  _to_copy_1797 = None
        view_3185 = _to_copy_1798.view(262144, 256) ;  _to_copy_1798 = None
        mm_623 = torch.mm(view_3185,t_668) ;  view_3185 = t_668 = None
        view_3186 = mm_623.view(1, 512, 512, 512) ;  mm_623 = None
        _to_copy_1799 = getitem_3069.to(dtype = torch.bfloat16) ;  getitem_3069 = None
        _to_copy_1800 = getitem_3063.to(dtype = torch.bfloat16) 
        t_669 = _to_copy_1799.t() ;  _to_copy_1799 = None
        view_3187 = _to_copy_1800.view(262144, 256) ;  _to_copy_1800 = None
        mm_624 = torch.mm(view_3187,t_669) ;  view_3187 = t_669 = None
        view_3188 = mm_624.view(1, 512, 512, 512) ;  mm_624 = None
        sigmoid_253 = torch.sigmoid(view_3188) ;  view_3188 = None
        mul_418 = torch.mul(view_3186,sigmoid_253) ;  view_3186 = sigmoid_253 = None
        view_3189 = mul_418.view(262144, 512) ;  mul_418 = None
        view_3190 = view_3189.view(1, 512, 512, 512) ;  view_3189 = None
        transpose_82 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_1035 = torch.unsqueeze(transpose_82,3) ;  transpose_82 = None
        clone_270 = torch.clone(unsqueeze_1035,memory_format = torch.contiguous_format) ;  unsqueeze_1035 = None
        bitwise_not_199 = torch.bitwise_not(clone_270) ;  clone_270 = None
        masked_fill_199 = view_3190.masked_fill(bitwise_not_199,0) ;  view_3190 = bitwise_not_199 = None
        view_3191 = masked_fill_199.view(262144, 512) ;  masked_fill_199 = None
        view_3195 = view_3191.view(1, 512, 512, 512) 
        split_tensor_333 = torch.split(view_3195,256,dim = -1) ;  view_3195 = None
        getitem_3079 = split_tensor_333[0]
        unsqueeze_1038 = torch.unsqueeze(getitem_3079,4) ;  getitem_3079 = None
        permute_1706 = unsqueeze_1038.permute(0, 2, 4, 3, 1) ;  unsqueeze_1038 = None
        permute_1707 = permute_1706.permute(3, 1, 4, 0, 2) ;  permute_1706 = None
        view_3196 = permute_1707.view(256, 512, 512) ;  permute_1707 = None
        view_3197 = view_3191.view(1, 512, 512, 512) ;  view_3191 = None
        split_tensor_334 = torch.split(view_3197,256,dim = -1) ;  view_3197 = None
        getitem_3082 = split_tensor_334[1];  split_tensor_334 = None
        unsqueeze_1039 = torch.unsqueeze(getitem_3082,4) ;  getitem_3082 = None
        permute_1708 = unsqueeze_1039.permute(0, 4, 2, 3, 1) ;  unsqueeze_1039 = None
        permute_1709 = permute_1708.permute(3, 4, 0, 2, 1) ;  permute_1708 = None
        view_3198 = permute_1709.view(256, 512, 512) ;  permute_1709 = None
        bmm_254 = torch.bmm(view_3196,view_3198) ;  view_3196 = view_3198 = None
        view_3199 = bmm_254.view(256, 512, 1, 1, 512) ;  bmm_254 = None
        permute_1710 = view_3199.permute(3, 1, 4, 0, 2) ;  view_3199 = None
        view_3200 = permute_1710.view(1, 512, 512, 256) ;  permute_1710 = None
        _to_copy_1801 = view_3184.to(dtype = torch.float32) ;  view_3184 = None
        native_layer_norm_default_371 = (torch.nn.functional.layer_norm(_to_copy_1801,[256],None,None,1e-05),) ;  _to_copy_1801 = None
        getitem_3083 = native_layer_norm_default_371[0]
        _to_copy_1802 = view_3200.to(dtype = torch.float32) ;  view_3200 = None
        native_layer_norm_default_372 = (torch.nn.functional.layer_norm(_to_copy_1802,[256],None,None,1e-05),) ;  _to_copy_1802 = None
        getitem_3086 = native_layer_norm_default_372[0]
        add_336 = torch.add(getitem_3083,getitem_3086) ;  getitem_3083 = getitem_3086 = None
        _to_copy_1803 = arg1060_1.to(dtype = torch.bfloat16) ;  arg1060_1 = None
        _to_copy_1804 = add_336.to(dtype = torch.bfloat16) ;  add_336 = None
        t_670 = _to_copy_1803.t() ;  _to_copy_1803 = None
        view_3201 = _to_copy_1804.view(262144, 256) ;  _to_copy_1804 = None
        mm_625 = torch.mm(view_3201,t_670) ;  view_3201 = t_670 = None
        view_3202 = mm_625.view(1, 512, 512, 256) ;  mm_625 = None
        _to_copy_1805 = getitem_3070.to(dtype = torch.bfloat16) ;  getitem_3070 = None
        _to_copy_1806 = getitem_3063.to(dtype = torch.bfloat16) ;  getitem_3063 = None
        t_671 = _to_copy_1805.t() ;  _to_copy_1805 = None
        view_3203 = _to_copy_1806.view(262144, 256) ;  _to_copy_1806 = None
        mm_626 = torch.mm(view_3203,t_671) ;  view_3203 = t_671 = None
        view_3204 = mm_626.view(1, 512, 512, 256) ;  mm_626 = None
        sigmoid_254 = torch.sigmoid(view_3204) ;  view_3204 = None
        mul_419 = torch.mul(view_3202,sigmoid_254) ;  view_3202 = sigmoid_254 = None
        add_337 = torch.add(add_331,mul_419) ;  mul_419 = None
        _to_copy_1807 = add_331.to(dtype = torch.float32) 
        native_layer_norm_default_373 = (torch.nn.functional.layer_norm(_to_copy_1807,[256],None,None,1e-05),) ;  _to_copy_1807 = None
        getitem_3089 = native_layer_norm_default_373[0]
        _to_copy_1808 = arg1064_1.to(dtype = torch.bfloat16) ;  arg1064_1 = None
        _to_copy_1809 = getitem_3089.to(dtype = torch.bfloat16) 
        t_672 = _to_copy_1808.t() ;  _to_copy_1808 = None
        view_3205 = _to_copy_1809.view(262144, 256) ;  _to_copy_1809 = None
        mm_627 = torch.mm(view_3205,t_672) ;  view_3205 = t_672 = None
        view_3206 = mm_627.view(1, 512, 512, 8) ;  mm_627 = None
        view_3207 = view_3206.view(1, 512, 512, 2, 4) ;  view_3206 = None
        permute_1711 = view_3207.permute(0, 3, 4, 1, 2) ;  view_3207 = None
        view_3208 = permute_1711.view(1, 2, 4, 1, 512, 512) ;  permute_1711 = None
        view_3209 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_200 = torch.bitwise_not(view_3209) ;  view_3209 = None
        masked_fill_200 = view_3208.masked_fill(bitwise_not_200,-10000) ;  view_3208 = bitwise_not_200 = None
        view_3210 = masked_fill_200.view(1, 2, 4, 512, 512) ;  masked_fill_200 = None
        permute_1712 = view_3210.permute(1, 0, 2, 3, 4) ;  view_3210 = None
        view_3211 = permute_1712.view(2, 4, 1, 512, 512) ;  permute_1712 = None
        _to_copy_1810 = arg1065_1.to(dtype = torch.bfloat16) ;  arg1065_1 = None
        _to_copy_1811 = getitem_3089.to(dtype = torch.bfloat16) 
        t_673 = _to_copy_1810.t() ;  _to_copy_1810 = None
        view_3212 = _to_copy_1811.view(262144, 256) ;  _to_copy_1811 = None
        mm_628 = torch.mm(view_3212,t_673) ;  view_3212 = t_673 = None
        view_3213 = mm_628.view(1, 512, 512, 1024) ;  mm_628 = None
        select_83 = torch.select(view_3211,0,0) 
        view_3214 = view_3213.view(1, 512, 512, 4, 4, 64) ;  view_3213 = None
        permute_1713 = view_3214.permute(4, 0, 3, 1, 2, 5) ;  view_3214 = None
        view_3215 = permute_1713.view(4, 4, 512, 512, 64) ;  permute_1713 = None
        unbind_int_145 = torch.unbind(view_3215) ;  view_3215 = None
        getitem_3092 = unbind_int_145[0]
        getitem_3093 = unbind_int_145[1]
        getitem_3094 = unbind_int_145[2]
        getitem_3095 = unbind_int_145[3];  unbind_int_145 = None
        expand_202 = select_83.expand(4, 512, 512, 512) ;  select_83 = None
        _scaled_dot_product_efficient_attention_default_117 = (torch.nn.functional.scaled_dot_product_attention(getitem_3092,getitem_3093,getitem_3094,expand_202,False),) ;  getitem_3092 = getitem_3093 = getitem_3094 = expand_202 = None
        getitem_3096 = _scaled_dot_product_efficient_attention_default_117[0]
        sigmoid_255 = torch.sigmoid(getitem_3095) ;  getitem_3095 = None
        mul_420 = torch.mul(getitem_3096,sigmoid_255) ;  getitem_3096 = sigmoid_255 = None
        view_3216 = mul_420.view(1, 4, 512, 512, 64) ;  mul_420 = None
        permute_1714 = view_3216.permute(0, 2, 3, 1, 4) ;  view_3216 = None
        clone_271 = torch.clone(permute_1714,memory_format = torch.contiguous_format) ;  permute_1714 = None
        _unsafe_view_228 = clone_271.view(1, 512, 512, 256) ;  clone_271 = None
        transpose_83 = torch.transpose(getitem_3089,1,2) ;  getitem_3089 = None
        _to_copy_1812 = arg1066_1.to(dtype = torch.bfloat16) ;  arg1066_1 = None
        _to_copy_1813 = transpose_83.to(dtype = torch.bfloat16) ;  transpose_83 = None
        t_674 = _to_copy_1812.t() ;  _to_copy_1812 = None
        expand_203 = _to_copy_1813.expand(1, 512, 512, 256) ;  _to_copy_1813 = None
        view_3217 = expand_203.view(512, 512, 256) ;  expand_203 = None
        expand_204 = t_674.expand(1, 512, 256, 1024) ;  t_674 = None
        view_3218 = expand_204.view(512, 256, 1024) ;  expand_204 = None
        bmm_255 = torch.bmm(view_3217,view_3218) ;  view_3217 = view_3218 = None
        view_3219 = bmm_255.view(1, 512, 512, 1024) ;  bmm_255 = None
        select_84 = torch.select(view_3211,0,1) ;  view_3211 = None
        view_3220 = view_3219.view(1, 512, 512, 4, 4, 64) ;  view_3219 = None
        permute_1715 = view_3220.permute(4, 0, 3, 1, 2, 5) ;  view_3220 = None
        view_3221 = permute_1715.view(4, 4, 512, 512, 64) ;  permute_1715 = None
        unbind_int_146 = torch.unbind(view_3221) ;  view_3221 = None
        getitem_3100 = unbind_int_146[0]
        getitem_3101 = unbind_int_146[1]
        getitem_3102 = unbind_int_146[2]
        getitem_3103 = unbind_int_146[3];  unbind_int_146 = None
        expand_205 = select_84.expand(4, 512, 512, 512) ;  select_84 = None
        _scaled_dot_product_efficient_attention_default_118 = (torch.nn.functional.scaled_dot_product_attention(getitem_3100,getitem_3101,getitem_3102,expand_205,False),) ;  getitem_3100 = getitem_3101 = getitem_3102 = expand_205 = None
        getitem_3104 = _scaled_dot_product_efficient_attention_default_118[0]
        sigmoid_256 = torch.sigmoid(getitem_3103) ;  getitem_3103 = None
        mul_421 = torch.mul(getitem_3104,sigmoid_256) ;  getitem_3104 = sigmoid_256 = None
        view_3222 = mul_421.view(1, 4, 512, 512, 64) ;  mul_421 = None
        permute_1716 = view_3222.permute(0, 2, 3, 1, 4) ;  view_3222 = None
        clone_272 = torch.clone(permute_1716,memory_format = torch.contiguous_format) ;  permute_1716 = None
        _unsafe_view_229 = clone_272.view(1, 512, 512, 256) ;  clone_272 = None
        cat_47 = torch.cat([_unsafe_view_228,_unsafe_view_229],dim = -1) ;  _unsafe_view_228 = _unsafe_view_229 = None
        slice_240 = arg1063_1[0:] ;  arg1063_1 = None
        unsqueeze_1040 = torch.unsqueeze(slice_240,1) ;  slice_240 = None
        mul_422 = torch.mul(arg1067_1,unsqueeze_1040) ;  arg1067_1 = unsqueeze_1040 = None
        _to_copy_1814 = mul_422.to(dtype = torch.bfloat16) ;  mul_422 = None
        t_675 = _to_copy_1814.t() ;  _to_copy_1814 = None
        view_3223 = cat_47.view(262144, 512) ;  cat_47 = None
        mm_629 = torch.mm(view_3223,t_675) ;  view_3223 = t_675 = None
        view_3224 = mm_629.view(1, 512, 512, 256) ;  mm_629 = None
        add_338 = torch.add(add_337,view_3224) ;  add_337 = view_3224 = None
        split_tensor_335 = torch.split(add_331,512,dim = -2) 
        getitem_3108 = split_tensor_335[0];  split_tensor_335 = None
        _to_copy_1815 = getitem_3108.to(dtype = torch.float32) ;  getitem_3108 = None
        native_layer_norm_default_374 = (torch.nn.functional.layer_norm(_to_copy_1815,[256],arg1054_1,arg1055_1,1e-05),) ;  _to_copy_1815 = arg1054_1 = arg1055_1 = None
        getitem_3109 = native_layer_norm_default_374[0]
        _to_copy_1816 = arg1056_1.to(dtype = torch.bfloat16) ;  arg1056_1 = None
        _to_copy_1817 = getitem_3109.to(dtype = torch.bfloat16) ;  getitem_3109 = None
        t_676 = _to_copy_1816.t() ;  _to_copy_1816 = None
        view_3225 = _to_copy_1817.view(262144, 256) ;  _to_copy_1817 = None
        mm_630 = torch.mm(view_3225,t_676) ;  view_3225 = t_676 = None
        view_3226 = mm_630.view(1, 512, 512, 1024) ;  mm_630 = None
        split_tensor_336 = torch.split(view_3226,512,dim = -1) ;  view_3226 = None
        getitem_3112 = split_tensor_336[0]
        getitem_3113 = split_tensor_336[1];  split_tensor_336 = None
        silu_88 = torch.nn.functional.silu(getitem_3112) ;  getitem_3112 = None
        mul_423 = torch.mul(silu_88,getitem_3113) ;  silu_88 = getitem_3113 = None
        _to_copy_1818 = arg1057_1.to(dtype = torch.bfloat16) ;  arg1057_1 = None
        t_677 = _to_copy_1818.t() ;  _to_copy_1818 = None
        view_3228 = mul_423.view(262144, 512) ;  mul_423 = None
        mm_631 = torch.mm(view_3228,t_677) ;  view_3228 = t_677 = None
        view_3229 = mm_631.view(1, 512, 512, 256) ;  mm_631 = None
        add_339 = torch.add(add_338,view_3229) ;  add_338 = view_3229 = None
        _to_copy_1819 = add_335.to(dtype = torch.float32) 
        native_layer_norm_default_375 = (torch.nn.functional.layer_norm(_to_copy_1819,[384],arg1072_1,arg1073_1,1e-05),) ;  _to_copy_1819 = arg1072_1 = arg1073_1 = None
        getitem_3114 = native_layer_norm_default_375[0]
        _to_copy_1820 = add_331.to(dtype = torch.float32) ;  add_331 = None
        native_layer_norm_default_376 = (torch.nn.functional.layer_norm(_to_copy_1820,[256],arg1074_1,arg1075_1,1e-05),) ;  _to_copy_1820 = arg1074_1 = arg1075_1 = None
        getitem_3117 = native_layer_norm_default_376[0]
        _to_copy_1821 = arg1076_1.to(dtype = torch.bfloat16) ;  arg1076_1 = None
        _to_copy_1822 = getitem_3117.to(dtype = torch.bfloat16) ;  getitem_3117 = None
        t_678 = _to_copy_1821.t() ;  _to_copy_1821 = None
        view_3230 = _to_copy_1822.view(262144, 256) ;  _to_copy_1822 = None
        mm_632 = torch.mm(view_3230,t_678) ;  view_3230 = t_678 = None
        view_3231 = mm_632.view(1, 512, 512, 16) ;  mm_632 = None
        permute_1717 = view_3231.permute(0, 3, 1, 2) ;  view_3231 = None
        view_3232 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_201 = torch.bitwise_not(view_3232) ;  view_3232 = None
        masked_fill_201 = permute_1717.masked_fill(bitwise_not_201,-10000) ;  permute_1717 = bitwise_not_201 = None
        _to_copy_1823 = getitem_3114.to(dtype = torch.bfloat16) ;  getitem_3114 = None
        _to_copy_1824 = arg1078_1.to(dtype = torch.bfloat16) ;  arg1078_1 = None
        unsqueeze_1041 = torch.unsqueeze(_to_copy_1823,3) ;  _to_copy_1823 = None
        unsqueeze_1042 = torch.unsqueeze(unsqueeze_1041,4) ;  unsqueeze_1041 = None
        unsqueeze_1043 = torch.unsqueeze(unsqueeze_1042,5) ;  unsqueeze_1042 = None
        permute_1718 = unsqueeze_1043.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_1043 = None
        unsqueeze_1044 = torch.unsqueeze(_to_copy_1824,4) ;  _to_copy_1824 = None
        unsqueeze_1045 = torch.unsqueeze(unsqueeze_1044,5) ;  unsqueeze_1044 = None
        permute_1719 = unsqueeze_1045.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_1045 = None
        permute_1720 = permute_1718.permute(3, 5, 0, 1, 2, 4) ;  permute_1718 = None
        view_3233 = permute_1720.view(1, 512, 384) ;  permute_1720 = None
        permute_1721 = permute_1719.permute(5, 0, 1, 2, 4, 3) ;  permute_1719 = None
        view_3234 = permute_1721.view(1, 384, 1536) ;  permute_1721 = None
        bmm_256 = torch.bmm(view_3233,view_3234) ;  view_3233 = view_3234 = None
        view_3235 = bmm_256.view(512, 1, 4, 1, 16, 24) ;  bmm_256 = None
        permute_1722 = view_3235.permute(2, 3, 4, 0, 5, 1) ;  view_3235 = None
        view_3236 = permute_1722.view(4, 1, 16, 512, 24) ;  permute_1722 = None
        unbind_int_147 = torch.unbind(view_3236) ;  view_3236 = None
        getitem_3120 = unbind_int_147[0]
        getitem_3121 = unbind_int_147[1]
        getitem_3122 = unbind_int_147[2]
        getitem_3123 = unbind_int_147[3];  unbind_int_147 = None
        view_3237 = arg1077_1.view(1, 16, 1, 24) ;  arg1077_1 = None
        add_340 = torch.add(getitem_3120,view_3237) ;  getitem_3120 = view_3237 = None
        _to_copy_1825 = add_340.to(dtype = torch.bfloat16) ;  add_340 = None
        expand_206 = masked_fill_201.expand(1, 16, 512, 512) ;  masked_fill_201 = None
        _scaled_dot_product_efficient_attention_default_119 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1825,getitem_3121,getitem_3122,expand_206,False),) ;  _to_copy_1825 = getitem_3121 = getitem_3122 = expand_206 = None
        getitem_3124 = _scaled_dot_product_efficient_attention_default_119[0]
        add_341 = torch.add(getitem_3123,1) ;  getitem_3123 = None
        sigmoid_257 = torch.sigmoid(add_341) ;  add_341 = None
        mul_424 = torch.mul(getitem_3124,sigmoid_257) ;  getitem_3124 = sigmoid_257 = None
        _to_copy_1826 = arg1079_1.to(dtype = torch.bfloat16) ;  arg1079_1 = None
        unsqueeze_1046 = torch.unsqueeze(mul_424,4) ;  mul_424 = None
        permute_1723 = unsqueeze_1046.permute(0, 2, 4, 3, 1) ;  unsqueeze_1046 = None
        unsqueeze_1047 = torch.unsqueeze(_to_copy_1826,3) ;  _to_copy_1826 = None
        unsqueeze_1048 = torch.unsqueeze(unsqueeze_1047,4) ;  unsqueeze_1047 = None
        permute_1724 = unsqueeze_1048.permute(3, 4, 2, 1, 0) ;  unsqueeze_1048 = None
        permute_1725 = permute_1723.permute(1, 3, 4, 0, 2) ;  permute_1723 = None
        clone_273 = torch.clone(permute_1725,memory_format = torch.contiguous_format) ;  permute_1725 = None
        _unsafe_view_230 = clone_273.view(1, 512, 384) ;  clone_273 = None
        permute_1726 = permute_1724.permute(3, 4, 0, 2, 1) ;  permute_1724 = None
        clone_274 = torch.clone(permute_1726,memory_format = torch.contiguous_format) ;  permute_1726 = None
        _unsafe_view_231 = clone_274.view(1, 384, 384) ;  clone_274 = None
        bmm_257 = torch.bmm(_unsafe_view_230,_unsafe_view_231) ;  _unsafe_view_230 = _unsafe_view_231 = None
        view_3238 = bmm_257.view(512, 1, 1, 1, 384) ;  bmm_257 = None
        permute_1727 = view_3238.permute(3, 0, 4, 1, 2) ;  view_3238 = None
        view_3239 = permute_1727.view(1, 512, 384) ;  permute_1727 = None
        unsqueeze_1049 = torch.unsqueeze(arg1406_1,-1) 
        mul_425 = torch.mul(view_3239,unsqueeze_1049) ;  view_3239 = unsqueeze_1049 = None
        add_342 = torch.add(add_335,mul_425) ;  mul_425 = None
        split_tensor_337 = torch.split(add_335,512,dim = -2) ;  add_335 = None
        getitem_3128 = split_tensor_337[0];  split_tensor_337 = None
        _to_copy_1827 = getitem_3128.to(dtype = torch.float32) ;  getitem_3128 = None
        native_layer_norm_default_377 = (torch.nn.functional.layer_norm(_to_copy_1827,[384],arg1068_1,arg1069_1,1e-05),) ;  _to_copy_1827 = arg1068_1 = arg1069_1 = None
        getitem_3129 = native_layer_norm_default_377[0]
        _to_copy_1828 = arg1070_1.to(dtype = torch.bfloat16) ;  arg1070_1 = None
        _to_copy_1829 = getitem_3129.to(dtype = torch.bfloat16) ;  getitem_3129 = None
        t_679 = _to_copy_1828.t() ;  _to_copy_1828 = None
        view_3240 = _to_copy_1829.view(512, 384) ;  _to_copy_1829 = None
        mm_633 = torch.mm(view_3240,t_679) ;  view_3240 = t_679 = None
        view_3241 = mm_633.view(1, 512, 1536) ;  mm_633 = None
        split_tensor_338 = torch.split(view_3241,768,dim = -1) ;  view_3241 = None
        getitem_3132 = split_tensor_338[0]
        getitem_3133 = split_tensor_338[1];  split_tensor_338 = None
        silu_89 = torch.nn.functional.silu(getitem_3132) ;  getitem_3132 = None
        mul_426 = torch.mul(silu_89,getitem_3133) ;  silu_89 = getitem_3133 = None
        _to_copy_1830 = arg1071_1.to(dtype = torch.bfloat16) ;  arg1071_1 = None
        t_680 = _to_copy_1830.t() ;  _to_copy_1830 = None
        view_3243 = mul_426.view(512, 768) ;  mul_426 = None
        mm_634 = torch.mm(view_3243,t_680) ;  view_3243 = t_680 = None
        view_3244 = mm_634.view(1, 512, 384) ;  mm_634 = None
        add_343 = torch.add(add_342,view_3244) ;  add_342 = view_3244 = None
        _to_copy_1831 = add_339.to(dtype = torch.float32) 
        native_layer_norm_default_378 = (torch.nn.functional.layer_norm(_to_copy_1831,[256],arg1084_1,arg1085_1,1e-05),) ;  _to_copy_1831 = arg1084_1 = arg1085_1 = None
        getitem_3134 = native_layer_norm_default_378[0]
        split_with_sizes_default_84 = torch.split(arg1087_1,[512,512]) ;  arg1087_1 = None
        getitem_3137 = split_with_sizes_default_84[0]
        getitem_3138 = split_with_sizes_default_84[1];  split_with_sizes_default_84 = None
        split_with_sizes_default_85 = torch.split(arg1088_1,[512,512,256]) ;  arg1088_1 = None
        getitem_3139 = split_with_sizes_default_85[0]
        getitem_3140 = split_with_sizes_default_85[1]
        getitem_3141 = split_with_sizes_default_85[2];  split_with_sizes_default_85 = None
        _to_copy_1832 = getitem_3137.to(dtype = torch.bfloat16) ;  getitem_3137 = None
        _to_copy_1833 = getitem_3134.to(dtype = torch.bfloat16) 
        t_681 = _to_copy_1832.t() ;  _to_copy_1832 = None
        view_3245 = _to_copy_1833.view(262144, 256) ;  _to_copy_1833 = None
        mm_635 = torch.mm(view_3245,t_681) ;  view_3245 = t_681 = None
        view_3246 = mm_635.view(1, 512, 512, 512) ;  mm_635 = None
        _to_copy_1834 = getitem_3139.to(dtype = torch.bfloat16) ;  getitem_3139 = None
        _to_copy_1835 = getitem_3134.to(dtype = torch.bfloat16) 
        t_682 = _to_copy_1834.t() ;  _to_copy_1834 = None
        view_3247 = _to_copy_1835.view(262144, 256) ;  _to_copy_1835 = None
        mm_636 = torch.mm(view_3247,t_682) ;  view_3247 = t_682 = None
        view_3248 = mm_636.view(1, 512, 512, 512) ;  mm_636 = None
        sigmoid_258 = torch.sigmoid(view_3248) ;  view_3248 = None
        mul_427 = torch.mul(view_3246,sigmoid_258) ;  view_3246 = sigmoid_258 = None
        unsqueeze_1050 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_202 = torch.bitwise_not(unsqueeze_1050) ;  unsqueeze_1050 = None
        masked_fill_202 = mul_427.masked_fill(bitwise_not_202,0) ;  mul_427 = bitwise_not_202 = None
        split_tensor_339 = torch.split(masked_fill_202,256,dim = -1) 
        getitem_3144 = split_tensor_339[0]
        unsqueeze_1053 = torch.unsqueeze(getitem_3144,4) ;  getitem_3144 = None
        permute_1732 = unsqueeze_1053.permute(0, 1, 4, 3, 2) ;  unsqueeze_1053 = None
        permute_1733 = permute_1732.permute(3, 1, 4, 0, 2) ;  permute_1732 = None
        view_3251 = permute_1733.view(256, 512, 512) ;  permute_1733 = None
        split_tensor_340 = torch.split(masked_fill_202,256,dim = -1) ;  masked_fill_202 = None
        getitem_3147 = split_tensor_340[1];  split_tensor_340 = None
        unsqueeze_1054 = torch.unsqueeze(getitem_3147,4) ;  getitem_3147 = None
        permute_1734 = unsqueeze_1054.permute(0, 4, 1, 3, 2) ;  unsqueeze_1054 = None
        permute_1735 = permute_1734.permute(3, 4, 0, 2, 1) ;  permute_1734 = None
        view_3252 = permute_1735.view(256, 512, 512) ;  permute_1735 = None
        bmm_258 = torch.bmm(view_3251,view_3252) ;  view_3251 = view_3252 = None
        view_3253 = bmm_258.view(256, 512, 1, 1, 512) ;  bmm_258 = None
        permute_1736 = view_3253.permute(3, 1, 4, 0, 2) ;  view_3253 = None
        view_3254 = permute_1736.view(1, 512, 512, 256) ;  permute_1736 = None
        _to_copy_1836 = getitem_3138.to(dtype = torch.bfloat16) ;  getitem_3138 = None
        _to_copy_1837 = getitem_3134.to(dtype = torch.bfloat16) 
        t_683 = _to_copy_1836.t() ;  _to_copy_1836 = None
        view_3255 = _to_copy_1837.view(262144, 256) ;  _to_copy_1837 = None
        mm_637 = torch.mm(view_3255,t_683) ;  view_3255 = t_683 = None
        view_3256 = mm_637.view(1, 512, 512, 512) ;  mm_637 = None
        _to_copy_1838 = getitem_3140.to(dtype = torch.bfloat16) ;  getitem_3140 = None
        _to_copy_1839 = getitem_3134.to(dtype = torch.bfloat16) 
        t_684 = _to_copy_1838.t() ;  _to_copy_1838 = None
        view_3257 = _to_copy_1839.view(262144, 256) ;  _to_copy_1839 = None
        mm_638 = torch.mm(view_3257,t_684) ;  view_3257 = t_684 = None
        view_3258 = mm_638.view(1, 512, 512, 512) ;  mm_638 = None
        sigmoid_259 = torch.sigmoid(view_3258) ;  view_3258 = None
        mul_428 = torch.mul(view_3256,sigmoid_259) ;  view_3256 = sigmoid_259 = None
        view_3259 = mul_428.view(262144, 512) ;  mul_428 = None
        view_3260 = view_3259.view(1, 512, 512, 512) ;  view_3259 = None
        transpose_84 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_1055 = torch.unsqueeze(transpose_84,3) ;  transpose_84 = None
        clone_275 = torch.clone(unsqueeze_1055,memory_format = torch.contiguous_format) ;  unsqueeze_1055 = None
        bitwise_not_203 = torch.bitwise_not(clone_275) ;  clone_275 = None
        masked_fill_203 = view_3260.masked_fill(bitwise_not_203,0) ;  view_3260 = bitwise_not_203 = None
        view_3261 = masked_fill_203.view(262144, 512) ;  masked_fill_203 = None
        view_3265 = view_3261.view(1, 512, 512, 512) 
        split_tensor_341 = torch.split(view_3265,256,dim = -1) ;  view_3265 = None
        getitem_3150 = split_tensor_341[0]
        unsqueeze_1058 = torch.unsqueeze(getitem_3150,4) ;  getitem_3150 = None
        permute_1741 = unsqueeze_1058.permute(0, 2, 4, 3, 1) ;  unsqueeze_1058 = None
        permute_1742 = permute_1741.permute(3, 1, 4, 0, 2) ;  permute_1741 = None
        view_3266 = permute_1742.view(256, 512, 512) ;  permute_1742 = None
        view_3267 = view_3261.view(1, 512, 512, 512) ;  view_3261 = None
        split_tensor_342 = torch.split(view_3267,256,dim = -1) ;  view_3267 = None
        getitem_3153 = split_tensor_342[1];  split_tensor_342 = None
        unsqueeze_1059 = torch.unsqueeze(getitem_3153,4) ;  getitem_3153 = None
        permute_1743 = unsqueeze_1059.permute(0, 4, 2, 3, 1) ;  unsqueeze_1059 = None
        permute_1744 = permute_1743.permute(3, 4, 0, 2, 1) ;  permute_1743 = None
        view_3268 = permute_1744.view(256, 512, 512) ;  permute_1744 = None
        bmm_259 = torch.bmm(view_3266,view_3268) ;  view_3266 = view_3268 = None
        view_3269 = bmm_259.view(256, 512, 1, 1, 512) ;  bmm_259 = None
        permute_1745 = view_3269.permute(3, 1, 4, 0, 2) ;  view_3269 = None
        view_3270 = permute_1745.view(1, 512, 512, 256) ;  permute_1745 = None
        _to_copy_1840 = view_3254.to(dtype = torch.float32) ;  view_3254 = None
        native_layer_norm_default_379 = (torch.nn.functional.layer_norm(_to_copy_1840,[256],None,None,1e-05),) ;  _to_copy_1840 = None
        getitem_3154 = native_layer_norm_default_379[0]
        _to_copy_1841 = view_3270.to(dtype = torch.float32) ;  view_3270 = None
        native_layer_norm_default_380 = (torch.nn.functional.layer_norm(_to_copy_1841,[256],None,None,1e-05),) ;  _to_copy_1841 = None
        getitem_3157 = native_layer_norm_default_380[0]
        add_344 = torch.add(getitem_3154,getitem_3157) ;  getitem_3154 = getitem_3157 = None
        _to_copy_1842 = arg1086_1.to(dtype = torch.bfloat16) ;  arg1086_1 = None
        _to_copy_1843 = add_344.to(dtype = torch.bfloat16) ;  add_344 = None
        t_685 = _to_copy_1842.t() ;  _to_copy_1842 = None
        view_3271 = _to_copy_1843.view(262144, 256) ;  _to_copy_1843 = None
        mm_639 = torch.mm(view_3271,t_685) ;  view_3271 = t_685 = None
        view_3272 = mm_639.view(1, 512, 512, 256) ;  mm_639 = None
        _to_copy_1844 = getitem_3141.to(dtype = torch.bfloat16) ;  getitem_3141 = None
        _to_copy_1845 = getitem_3134.to(dtype = torch.bfloat16) ;  getitem_3134 = None
        t_686 = _to_copy_1844.t() ;  _to_copy_1844 = None
        view_3273 = _to_copy_1845.view(262144, 256) ;  _to_copy_1845 = None
        mm_640 = torch.mm(view_3273,t_686) ;  view_3273 = t_686 = None
        view_3274 = mm_640.view(1, 512, 512, 256) ;  mm_640 = None
        sigmoid_260 = torch.sigmoid(view_3274) ;  view_3274 = None
        mul_429 = torch.mul(view_3272,sigmoid_260) ;  view_3272 = sigmoid_260 = None
        add_345 = torch.add(add_339,mul_429) ;  mul_429 = None
        _to_copy_1846 = add_339.to(dtype = torch.float32) 
        native_layer_norm_default_381 = (torch.nn.functional.layer_norm(_to_copy_1846,[256],None,None,1e-05),) ;  _to_copy_1846 = None
        getitem_3160 = native_layer_norm_default_381[0]
        _to_copy_1847 = arg1090_1.to(dtype = torch.bfloat16) ;  arg1090_1 = None
        _to_copy_1848 = getitem_3160.to(dtype = torch.bfloat16) 
        t_687 = _to_copy_1847.t() ;  _to_copy_1847 = None
        view_3275 = _to_copy_1848.view(262144, 256) ;  _to_copy_1848 = None
        mm_641 = torch.mm(view_3275,t_687) ;  view_3275 = t_687 = None
        view_3276 = mm_641.view(1, 512, 512, 8) ;  mm_641 = None
        view_3277 = view_3276.view(1, 512, 512, 2, 4) ;  view_3276 = None
        permute_1746 = view_3277.permute(0, 3, 4, 1, 2) ;  view_3277 = None
        view_3278 = permute_1746.view(1, 2, 4, 1, 512, 512) ;  permute_1746 = None
        view_3279 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_204 = torch.bitwise_not(view_3279) ;  view_3279 = None
        masked_fill_204 = view_3278.masked_fill(bitwise_not_204,-10000) ;  view_3278 = bitwise_not_204 = None
        view_3280 = masked_fill_204.view(1, 2, 4, 512, 512) ;  masked_fill_204 = None
        permute_1747 = view_3280.permute(1, 0, 2, 3, 4) ;  view_3280 = None
        view_3281 = permute_1747.view(2, 4, 1, 512, 512) ;  permute_1747 = None
        _to_copy_1849 = arg1091_1.to(dtype = torch.bfloat16) ;  arg1091_1 = None
        _to_copy_1850 = getitem_3160.to(dtype = torch.bfloat16) 
        t_688 = _to_copy_1849.t() ;  _to_copy_1849 = None
        view_3282 = _to_copy_1850.view(262144, 256) ;  _to_copy_1850 = None
        mm_642 = torch.mm(view_3282,t_688) ;  view_3282 = t_688 = None
        view_3283 = mm_642.view(1, 512, 512, 1024) ;  mm_642 = None
        select_85 = torch.select(view_3281,0,0) 
        view_3284 = view_3283.view(1, 512, 512, 4, 4, 64) ;  view_3283 = None
        permute_1748 = view_3284.permute(4, 0, 3, 1, 2, 5) ;  view_3284 = None
        view_3285 = permute_1748.view(4, 4, 512, 512, 64) ;  permute_1748 = None
        unbind_int_148 = torch.unbind(view_3285) ;  view_3285 = None
        getitem_3163 = unbind_int_148[0]
        getitem_3164 = unbind_int_148[1]
        getitem_3165 = unbind_int_148[2]
        getitem_3166 = unbind_int_148[3];  unbind_int_148 = None
        expand_207 = select_85.expand(4, 512, 512, 512) ;  select_85 = None
        _scaled_dot_product_efficient_attention_default_120 = (torch.nn.functional.scaled_dot_product_attention(getitem_3163,getitem_3164,getitem_3165,expand_207,False),) ;  getitem_3163 = getitem_3164 = getitem_3165 = expand_207 = None
        getitem_3167 = _scaled_dot_product_efficient_attention_default_120[0]
        sigmoid_261 = torch.sigmoid(getitem_3166) ;  getitem_3166 = None
        mul_430 = torch.mul(getitem_3167,sigmoid_261) ;  getitem_3167 = sigmoid_261 = None
        view_3286 = mul_430.view(1, 4, 512, 512, 64) ;  mul_430 = None
        permute_1749 = view_3286.permute(0, 2, 3, 1, 4) ;  view_3286 = None
        clone_276 = torch.clone(permute_1749,memory_format = torch.contiguous_format) ;  permute_1749 = None
        _unsafe_view_232 = clone_276.view(1, 512, 512, 256) ;  clone_276 = None
        transpose_85 = torch.transpose(getitem_3160,1,2) ;  getitem_3160 = None
        _to_copy_1851 = arg1092_1.to(dtype = torch.bfloat16) ;  arg1092_1 = None
        _to_copy_1852 = transpose_85.to(dtype = torch.bfloat16) ;  transpose_85 = None
        t_689 = _to_copy_1851.t() ;  _to_copy_1851 = None
        expand_208 = _to_copy_1852.expand(1, 512, 512, 256) ;  _to_copy_1852 = None
        view_3287 = expand_208.view(512, 512, 256) ;  expand_208 = None
        expand_209 = t_689.expand(1, 512, 256, 1024) ;  t_689 = None
        view_3288 = expand_209.view(512, 256, 1024) ;  expand_209 = None
        bmm_260 = torch.bmm(view_3287,view_3288) ;  view_3287 = view_3288 = None
        view_3289 = bmm_260.view(1, 512, 512, 1024) ;  bmm_260 = None
        select_86 = torch.select(view_3281,0,1) ;  view_3281 = None
        view_3290 = view_3289.view(1, 512, 512, 4, 4, 64) ;  view_3289 = None
        permute_1750 = view_3290.permute(4, 0, 3, 1, 2, 5) ;  view_3290 = None
        view_3291 = permute_1750.view(4, 4, 512, 512, 64) ;  permute_1750 = None
        unbind_int_149 = torch.unbind(view_3291) ;  view_3291 = None
        getitem_3171 = unbind_int_149[0]
        getitem_3172 = unbind_int_149[1]
        getitem_3173 = unbind_int_149[2]
        getitem_3174 = unbind_int_149[3];  unbind_int_149 = None
        expand_210 = select_86.expand(4, 512, 512, 512) ;  select_86 = None
        _scaled_dot_product_efficient_attention_default_121 = (torch.nn.functional.scaled_dot_product_attention(getitem_3171,getitem_3172,getitem_3173,expand_210,False),) ;  getitem_3171 = getitem_3172 = getitem_3173 = expand_210 = None
        getitem_3175 = _scaled_dot_product_efficient_attention_default_121[0]
        sigmoid_262 = torch.sigmoid(getitem_3174) ;  getitem_3174 = None
        mul_431 = torch.mul(getitem_3175,sigmoid_262) ;  getitem_3175 = sigmoid_262 = None
        view_3292 = mul_431.view(1, 4, 512, 512, 64) ;  mul_431 = None
        permute_1751 = view_3292.permute(0, 2, 3, 1, 4) ;  view_3292 = None
        clone_277 = torch.clone(permute_1751,memory_format = torch.contiguous_format) ;  permute_1751 = None
        _unsafe_view_233 = clone_277.view(1, 512, 512, 256) ;  clone_277 = None
        cat_48 = torch.cat([_unsafe_view_232,_unsafe_view_233],dim = -1) ;  _unsafe_view_232 = _unsafe_view_233 = None
        slice_241 = arg1089_1[0:] ;  arg1089_1 = None
        unsqueeze_1060 = torch.unsqueeze(slice_241,1) ;  slice_241 = None
        mul_432 = torch.mul(arg1093_1,unsqueeze_1060) ;  arg1093_1 = unsqueeze_1060 = None
        _to_copy_1853 = mul_432.to(dtype = torch.bfloat16) ;  mul_432 = None
        t_690 = _to_copy_1853.t() ;  _to_copy_1853 = None
        view_3293 = cat_48.view(262144, 512) ;  cat_48 = None
        mm_643 = torch.mm(view_3293,t_690) ;  view_3293 = t_690 = None
        view_3294 = mm_643.view(1, 512, 512, 256) ;  mm_643 = None
        add_346 = torch.add(add_345,view_3294) ;  add_345 = view_3294 = None
        split_tensor_343 = torch.split(add_339,512,dim = -2) 
        getitem_3179 = split_tensor_343[0];  split_tensor_343 = None
        _to_copy_1854 = getitem_3179.to(dtype = torch.float32) ;  getitem_3179 = None
        native_layer_norm_default_382 = (torch.nn.functional.layer_norm(_to_copy_1854,[256],arg1080_1,arg1081_1,1e-05),) ;  _to_copy_1854 = arg1080_1 = arg1081_1 = None
        getitem_3180 = native_layer_norm_default_382[0]
        _to_copy_1855 = arg1082_1.to(dtype = torch.bfloat16) ;  arg1082_1 = None
        _to_copy_1856 = getitem_3180.to(dtype = torch.bfloat16) ;  getitem_3180 = None
        t_691 = _to_copy_1855.t() ;  _to_copy_1855 = None
        view_3295 = _to_copy_1856.view(262144, 256) ;  _to_copy_1856 = None
        mm_644 = torch.mm(view_3295,t_691) ;  view_3295 = t_691 = None
        view_3296 = mm_644.view(1, 512, 512, 1024) ;  mm_644 = None
        split_tensor_344 = torch.split(view_3296,512,dim = -1) ;  view_3296 = None
        getitem_3183 = split_tensor_344[0]
        getitem_3184 = split_tensor_344[1];  split_tensor_344 = None
        silu_90 = torch.nn.functional.silu(getitem_3183) ;  getitem_3183 = None
        mul_433 = torch.mul(silu_90,getitem_3184) ;  silu_90 = getitem_3184 = None
        _to_copy_1857 = arg1083_1.to(dtype = torch.bfloat16) ;  arg1083_1 = None
        t_692 = _to_copy_1857.t() ;  _to_copy_1857 = None
        view_3298 = mul_433.view(262144, 512) ;  mul_433 = None
        mm_645 = torch.mm(view_3298,t_692) ;  view_3298 = t_692 = None
        view_3299 = mm_645.view(1, 512, 512, 256) ;  mm_645 = None
        add_347 = torch.add(add_346,view_3299) ;  add_346 = view_3299 = None
        _to_copy_1858 = add_343.to(dtype = torch.float32) 
        native_layer_norm_default_383 = (torch.nn.functional.layer_norm(_to_copy_1858,[384],arg1098_1,arg1099_1,1e-05),) ;  _to_copy_1858 = arg1098_1 = arg1099_1 = None
        getitem_3185 = native_layer_norm_default_383[0]
        _to_copy_1859 = add_339.to(dtype = torch.float32) ;  add_339 = None
        native_layer_norm_default_384 = (torch.nn.functional.layer_norm(_to_copy_1859,[256],arg1100_1,arg1101_1,1e-05),) ;  _to_copy_1859 = arg1100_1 = arg1101_1 = None
        getitem_3188 = native_layer_norm_default_384[0]
        _to_copy_1860 = arg1102_1.to(dtype = torch.bfloat16) ;  arg1102_1 = None
        _to_copy_1861 = getitem_3188.to(dtype = torch.bfloat16) ;  getitem_3188 = None
        t_693 = _to_copy_1860.t() ;  _to_copy_1860 = None
        view_3300 = _to_copy_1861.view(262144, 256) ;  _to_copy_1861 = None
        mm_646 = torch.mm(view_3300,t_693) ;  view_3300 = t_693 = None
        view_3301 = mm_646.view(1, 512, 512, 16) ;  mm_646 = None
        permute_1752 = view_3301.permute(0, 3, 1, 2) ;  view_3301 = None
        view_3302 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_205 = torch.bitwise_not(view_3302) ;  view_3302 = None
        masked_fill_205 = permute_1752.masked_fill(bitwise_not_205,-10000) ;  permute_1752 = bitwise_not_205 = None
        _to_copy_1862 = getitem_3185.to(dtype = torch.bfloat16) ;  getitem_3185 = None
        _to_copy_1863 = arg1104_1.to(dtype = torch.bfloat16) ;  arg1104_1 = None
        unsqueeze_1061 = torch.unsqueeze(_to_copy_1862,3) ;  _to_copy_1862 = None
        unsqueeze_1062 = torch.unsqueeze(unsqueeze_1061,4) ;  unsqueeze_1061 = None
        unsqueeze_1063 = torch.unsqueeze(unsqueeze_1062,5) ;  unsqueeze_1062 = None
        permute_1753 = unsqueeze_1063.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_1063 = None
        unsqueeze_1064 = torch.unsqueeze(_to_copy_1863,4) ;  _to_copy_1863 = None
        unsqueeze_1065 = torch.unsqueeze(unsqueeze_1064,5) ;  unsqueeze_1064 = None
        permute_1754 = unsqueeze_1065.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_1065 = None
        permute_1755 = permute_1753.permute(3, 5, 0, 1, 2, 4) ;  permute_1753 = None
        view_3303 = permute_1755.view(1, 512, 384) ;  permute_1755 = None
        permute_1756 = permute_1754.permute(5, 0, 1, 2, 4, 3) ;  permute_1754 = None
        view_3304 = permute_1756.view(1, 384, 1536) ;  permute_1756 = None
        bmm_261 = torch.bmm(view_3303,view_3304) ;  view_3303 = view_3304 = None
        view_3305 = bmm_261.view(512, 1, 4, 1, 16, 24) ;  bmm_261 = None
        permute_1757 = view_3305.permute(2, 3, 4, 0, 5, 1) ;  view_3305 = None
        view_3306 = permute_1757.view(4, 1, 16, 512, 24) ;  permute_1757 = None
        unbind_int_150 = torch.unbind(view_3306) ;  view_3306 = None
        getitem_3191 = unbind_int_150[0]
        getitem_3192 = unbind_int_150[1]
        getitem_3193 = unbind_int_150[2]
        getitem_3194 = unbind_int_150[3];  unbind_int_150 = None
        view_3307 = arg1103_1.view(1, 16, 1, 24) ;  arg1103_1 = None
        add_348 = torch.add(getitem_3191,view_3307) ;  getitem_3191 = view_3307 = None
        _to_copy_1864 = add_348.to(dtype = torch.bfloat16) ;  add_348 = None
        expand_211 = masked_fill_205.expand(1, 16, 512, 512) ;  masked_fill_205 = None
        _scaled_dot_product_efficient_attention_default_122 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1864,getitem_3192,getitem_3193,expand_211,False),) ;  _to_copy_1864 = getitem_3192 = getitem_3193 = expand_211 = None
        getitem_3195 = _scaled_dot_product_efficient_attention_default_122[0]
        add_349 = torch.add(getitem_3194,1) ;  getitem_3194 = None
        sigmoid_263 = torch.sigmoid(add_349) ;  add_349 = None
        mul_434 = torch.mul(getitem_3195,sigmoid_263) ;  getitem_3195 = sigmoid_263 = None
        _to_copy_1865 = arg1105_1.to(dtype = torch.bfloat16) ;  arg1105_1 = None
        unsqueeze_1066 = torch.unsqueeze(mul_434,4) ;  mul_434 = None
        permute_1758 = unsqueeze_1066.permute(0, 2, 4, 3, 1) ;  unsqueeze_1066 = None
        unsqueeze_1067 = torch.unsqueeze(_to_copy_1865,3) ;  _to_copy_1865 = None
        unsqueeze_1068 = torch.unsqueeze(unsqueeze_1067,4) ;  unsqueeze_1067 = None
        permute_1759 = unsqueeze_1068.permute(3, 4, 2, 1, 0) ;  unsqueeze_1068 = None
        permute_1760 = permute_1758.permute(1, 3, 4, 0, 2) ;  permute_1758 = None
        clone_278 = torch.clone(permute_1760,memory_format = torch.contiguous_format) ;  permute_1760 = None
        _unsafe_view_234 = clone_278.view(1, 512, 384) ;  clone_278 = None
        permute_1761 = permute_1759.permute(3, 4, 0, 2, 1) ;  permute_1759 = None
        clone_279 = torch.clone(permute_1761,memory_format = torch.contiguous_format) ;  permute_1761 = None
        _unsafe_view_235 = clone_279.view(1, 384, 384) ;  clone_279 = None
        bmm_262 = torch.bmm(_unsafe_view_234,_unsafe_view_235) ;  _unsafe_view_234 = _unsafe_view_235 = None
        view_3308 = bmm_262.view(512, 1, 1, 1, 384) ;  bmm_262 = None
        permute_1762 = view_3308.permute(3, 0, 4, 1, 2) ;  view_3308 = None
        view_3309 = permute_1762.view(1, 512, 384) ;  permute_1762 = None
        unsqueeze_1069 = torch.unsqueeze(arg1406_1,-1) 
        mul_435 = torch.mul(view_3309,unsqueeze_1069) ;  view_3309 = unsqueeze_1069 = None
        add_350 = torch.add(add_343,mul_435) ;  mul_435 = None
        split_tensor_345 = torch.split(add_343,512,dim = -2) ;  add_343 = None
        getitem_3199 = split_tensor_345[0];  split_tensor_345 = None
        _to_copy_1866 = getitem_3199.to(dtype = torch.float32) ;  getitem_3199 = None
        native_layer_norm_default_385 = (torch.nn.functional.layer_norm(_to_copy_1866,[384],arg1094_1,arg1095_1,1e-05),) ;  _to_copy_1866 = arg1094_1 = arg1095_1 = None
        getitem_3200 = native_layer_norm_default_385[0]
        _to_copy_1867 = arg1096_1.to(dtype = torch.bfloat16) ;  arg1096_1 = None
        _to_copy_1868 = getitem_3200.to(dtype = torch.bfloat16) ;  getitem_3200 = None
        t_694 = _to_copy_1867.t() ;  _to_copy_1867 = None
        view_3310 = _to_copy_1868.view(512, 384) ;  _to_copy_1868 = None
        mm_647 = torch.mm(view_3310,t_694) ;  view_3310 = t_694 = None
        view_3311 = mm_647.view(1, 512, 1536) ;  mm_647 = None
        split_tensor_346 = torch.split(view_3311,768,dim = -1) ;  view_3311 = None
        getitem_3203 = split_tensor_346[0]
        getitem_3204 = split_tensor_346[1];  split_tensor_346 = None
        silu_91 = torch.nn.functional.silu(getitem_3203) ;  getitem_3203 = None
        mul_436 = torch.mul(silu_91,getitem_3204) ;  silu_91 = getitem_3204 = None
        _to_copy_1869 = arg1097_1.to(dtype = torch.bfloat16) ;  arg1097_1 = None
        t_695 = _to_copy_1869.t() ;  _to_copy_1869 = None
        view_3313 = mul_436.view(512, 768) ;  mul_436 = None
        mm_648 = torch.mm(view_3313,t_695) ;  view_3313 = t_695 = None
        view_3314 = mm_648.view(1, 512, 384) ;  mm_648 = None
        add_351 = torch.add(add_350,view_3314) ;  add_350 = view_3314 = None
        _to_copy_1870 = add_347.to(dtype = torch.float32) 
        native_layer_norm_default_386 = (torch.nn.functional.layer_norm(_to_copy_1870,[256],arg1110_1,arg1111_1,1e-05),) ;  _to_copy_1870 = arg1110_1 = arg1111_1 = None
        getitem_3205 = native_layer_norm_default_386[0]
        split_with_sizes_default_86 = torch.split(arg1113_1,[512,512]) ;  arg1113_1 = None
        getitem_3208 = split_with_sizes_default_86[0]
        getitem_3209 = split_with_sizes_default_86[1];  split_with_sizes_default_86 = None
        split_with_sizes_default_87 = torch.split(arg1114_1,[512,512,256]) ;  arg1114_1 = None
        getitem_3210 = split_with_sizes_default_87[0]
        getitem_3211 = split_with_sizes_default_87[1]
        getitem_3212 = split_with_sizes_default_87[2];  split_with_sizes_default_87 = None
        _to_copy_1871 = getitem_3208.to(dtype = torch.bfloat16) ;  getitem_3208 = None
        _to_copy_1872 = getitem_3205.to(dtype = torch.bfloat16) 
        t_696 = _to_copy_1871.t() ;  _to_copy_1871 = None
        view_3315 = _to_copy_1872.view(262144, 256) ;  _to_copy_1872 = None
        mm_649 = torch.mm(view_3315,t_696) ;  view_3315 = t_696 = None
        view_3316 = mm_649.view(1, 512, 512, 512) ;  mm_649 = None
        _to_copy_1873 = getitem_3210.to(dtype = torch.bfloat16) ;  getitem_3210 = None
        _to_copy_1874 = getitem_3205.to(dtype = torch.bfloat16) 
        t_697 = _to_copy_1873.t() ;  _to_copy_1873 = None
        view_3317 = _to_copy_1874.view(262144, 256) ;  _to_copy_1874 = None
        mm_650 = torch.mm(view_3317,t_697) ;  view_3317 = t_697 = None
        view_3318 = mm_650.view(1, 512, 512, 512) ;  mm_650 = None
        sigmoid_264 = torch.sigmoid(view_3318) ;  view_3318 = None
        mul_437 = torch.mul(view_3316,sigmoid_264) ;  view_3316 = sigmoid_264 = None
        unsqueeze_1070 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_206 = torch.bitwise_not(unsqueeze_1070) ;  unsqueeze_1070 = None
        masked_fill_206 = mul_437.masked_fill(bitwise_not_206,0) ;  mul_437 = bitwise_not_206 = None
        split_tensor_347 = torch.split(masked_fill_206,256,dim = -1) 
        getitem_3215 = split_tensor_347[0]
        unsqueeze_1073 = torch.unsqueeze(getitem_3215,4) ;  getitem_3215 = None
        permute_1767 = unsqueeze_1073.permute(0, 1, 4, 3, 2) ;  unsqueeze_1073 = None
        permute_1768 = permute_1767.permute(3, 1, 4, 0, 2) ;  permute_1767 = None
        view_3321 = permute_1768.view(256, 512, 512) ;  permute_1768 = None
        split_tensor_348 = torch.split(masked_fill_206,256,dim = -1) ;  masked_fill_206 = None
        getitem_3218 = split_tensor_348[1];  split_tensor_348 = None
        unsqueeze_1074 = torch.unsqueeze(getitem_3218,4) ;  getitem_3218 = None
        permute_1769 = unsqueeze_1074.permute(0, 4, 1, 3, 2) ;  unsqueeze_1074 = None
        permute_1770 = permute_1769.permute(3, 4, 0, 2, 1) ;  permute_1769 = None
        view_3322 = permute_1770.view(256, 512, 512) ;  permute_1770 = None
        bmm_263 = torch.bmm(view_3321,view_3322) ;  view_3321 = view_3322 = None
        view_3323 = bmm_263.view(256, 512, 1, 1, 512) ;  bmm_263 = None
        permute_1771 = view_3323.permute(3, 1, 4, 0, 2) ;  view_3323 = None
        view_3324 = permute_1771.view(1, 512, 512, 256) ;  permute_1771 = None
        _to_copy_1875 = getitem_3209.to(dtype = torch.bfloat16) ;  getitem_3209 = None
        _to_copy_1876 = getitem_3205.to(dtype = torch.bfloat16) 
        t_698 = _to_copy_1875.t() ;  _to_copy_1875 = None
        view_3325 = _to_copy_1876.view(262144, 256) ;  _to_copy_1876 = None
        mm_651 = torch.mm(view_3325,t_698) ;  view_3325 = t_698 = None
        view_3326 = mm_651.view(1, 512, 512, 512) ;  mm_651 = None
        _to_copy_1877 = getitem_3211.to(dtype = torch.bfloat16) ;  getitem_3211 = None
        _to_copy_1878 = getitem_3205.to(dtype = torch.bfloat16) 
        t_699 = _to_copy_1877.t() ;  _to_copy_1877 = None
        view_3327 = _to_copy_1878.view(262144, 256) ;  _to_copy_1878 = None
        mm_652 = torch.mm(view_3327,t_699) ;  view_3327 = t_699 = None
        view_3328 = mm_652.view(1, 512, 512, 512) ;  mm_652 = None
        sigmoid_265 = torch.sigmoid(view_3328) ;  view_3328 = None
        mul_438 = torch.mul(view_3326,sigmoid_265) ;  view_3326 = sigmoid_265 = None
        view_3329 = mul_438.view(262144, 512) ;  mul_438 = None
        view_3330 = view_3329.view(1, 512, 512, 512) ;  view_3329 = None
        transpose_86 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_1075 = torch.unsqueeze(transpose_86,3) ;  transpose_86 = None
        clone_280 = torch.clone(unsqueeze_1075,memory_format = torch.contiguous_format) ;  unsqueeze_1075 = None
        bitwise_not_207 = torch.bitwise_not(clone_280) ;  clone_280 = None
        masked_fill_207 = view_3330.masked_fill(bitwise_not_207,0) ;  view_3330 = bitwise_not_207 = None
        view_3331 = masked_fill_207.view(262144, 512) ;  masked_fill_207 = None
        view_3335 = view_3331.view(1, 512, 512, 512) 
        split_tensor_349 = torch.split(view_3335,256,dim = -1) ;  view_3335 = None
        getitem_3221 = split_tensor_349[0]
        unsqueeze_1078 = torch.unsqueeze(getitem_3221,4) ;  getitem_3221 = None
        permute_1776 = unsqueeze_1078.permute(0, 2, 4, 3, 1) ;  unsqueeze_1078 = None
        permute_1777 = permute_1776.permute(3, 1, 4, 0, 2) ;  permute_1776 = None
        view_3336 = permute_1777.view(256, 512, 512) ;  permute_1777 = None
        view_3337 = view_3331.view(1, 512, 512, 512) ;  view_3331 = None
        split_tensor_350 = torch.split(view_3337,256,dim = -1) ;  view_3337 = None
        getitem_3224 = split_tensor_350[1];  split_tensor_350 = None
        unsqueeze_1079 = torch.unsqueeze(getitem_3224,4) ;  getitem_3224 = None
        permute_1778 = unsqueeze_1079.permute(0, 4, 2, 3, 1) ;  unsqueeze_1079 = None
        permute_1779 = permute_1778.permute(3, 4, 0, 2, 1) ;  permute_1778 = None
        view_3338 = permute_1779.view(256, 512, 512) ;  permute_1779 = None
        bmm_264 = torch.bmm(view_3336,view_3338) ;  view_3336 = view_3338 = None
        view_3339 = bmm_264.view(256, 512, 1, 1, 512) ;  bmm_264 = None
        permute_1780 = view_3339.permute(3, 1, 4, 0, 2) ;  view_3339 = None
        view_3340 = permute_1780.view(1, 512, 512, 256) ;  permute_1780 = None
        _to_copy_1879 = view_3324.to(dtype = torch.float32) ;  view_3324 = None
        native_layer_norm_default_387 = (torch.nn.functional.layer_norm(_to_copy_1879,[256],None,None,1e-05),) ;  _to_copy_1879 = None
        getitem_3225 = native_layer_norm_default_387[0]
        _to_copy_1880 = view_3340.to(dtype = torch.float32) ;  view_3340 = None
        native_layer_norm_default_388 = (torch.nn.functional.layer_norm(_to_copy_1880,[256],None,None,1e-05),) ;  _to_copy_1880 = None
        getitem_3228 = native_layer_norm_default_388[0]
        add_352 = torch.add(getitem_3225,getitem_3228) ;  getitem_3225 = getitem_3228 = None
        _to_copy_1881 = arg1112_1.to(dtype = torch.bfloat16) ;  arg1112_1 = None
        _to_copy_1882 = add_352.to(dtype = torch.bfloat16) ;  add_352 = None
        t_700 = _to_copy_1881.t() ;  _to_copy_1881 = None
        view_3341 = _to_copy_1882.view(262144, 256) ;  _to_copy_1882 = None
        mm_653 = torch.mm(view_3341,t_700) ;  view_3341 = t_700 = None
        view_3342 = mm_653.view(1, 512, 512, 256) ;  mm_653 = None
        _to_copy_1883 = getitem_3212.to(dtype = torch.bfloat16) ;  getitem_3212 = None
        _to_copy_1884 = getitem_3205.to(dtype = torch.bfloat16) ;  getitem_3205 = None
        t_701 = _to_copy_1883.t() ;  _to_copy_1883 = None
        view_3343 = _to_copy_1884.view(262144, 256) ;  _to_copy_1884 = None
        mm_654 = torch.mm(view_3343,t_701) ;  view_3343 = t_701 = None
        view_3344 = mm_654.view(1, 512, 512, 256) ;  mm_654 = None
        sigmoid_266 = torch.sigmoid(view_3344) ;  view_3344 = None
        mul_439 = torch.mul(view_3342,sigmoid_266) ;  view_3342 = sigmoid_266 = None
        add_353 = torch.add(add_347,mul_439) ;  mul_439 = None
        _to_copy_1885 = add_347.to(dtype = torch.float32) 
        native_layer_norm_default_389 = (torch.nn.functional.layer_norm(_to_copy_1885,[256],None,None,1e-05),) ;  _to_copy_1885 = None
        getitem_3231 = native_layer_norm_default_389[0]
        _to_copy_1886 = arg1116_1.to(dtype = torch.bfloat16) ;  arg1116_1 = None
        _to_copy_1887 = getitem_3231.to(dtype = torch.bfloat16) 
        t_702 = _to_copy_1886.t() ;  _to_copy_1886 = None
        view_3345 = _to_copy_1887.view(262144, 256) ;  _to_copy_1887 = None
        mm_655 = torch.mm(view_3345,t_702) ;  view_3345 = t_702 = None
        view_3346 = mm_655.view(1, 512, 512, 8) ;  mm_655 = None
        view_3347 = view_3346.view(1, 512, 512, 2, 4) ;  view_3346 = None
        permute_1781 = view_3347.permute(0, 3, 4, 1, 2) ;  view_3347 = None
        view_3348 = permute_1781.view(1, 2, 4, 1, 512, 512) ;  permute_1781 = None
        view_3349 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_208 = torch.bitwise_not(view_3349) ;  view_3349 = None
        masked_fill_208 = view_3348.masked_fill(bitwise_not_208,-10000) ;  view_3348 = bitwise_not_208 = None
        view_3350 = masked_fill_208.view(1, 2, 4, 512, 512) ;  masked_fill_208 = None
        permute_1782 = view_3350.permute(1, 0, 2, 3, 4) ;  view_3350 = None
        view_3351 = permute_1782.view(2, 4, 1, 512, 512) ;  permute_1782 = None
        _to_copy_1888 = arg1117_1.to(dtype = torch.bfloat16) ;  arg1117_1 = None
        _to_copy_1889 = getitem_3231.to(dtype = torch.bfloat16) 
        t_703 = _to_copy_1888.t() ;  _to_copy_1888 = None
        view_3352 = _to_copy_1889.view(262144, 256) ;  _to_copy_1889 = None
        mm_656 = torch.mm(view_3352,t_703) ;  view_3352 = t_703 = None
        view_3353 = mm_656.view(1, 512, 512, 1024) ;  mm_656 = None
        select_87 = torch.select(view_3351,0,0) 
        view_3354 = view_3353.view(1, 512, 512, 4, 4, 64) ;  view_3353 = None
        permute_1783 = view_3354.permute(4, 0, 3, 1, 2, 5) ;  view_3354 = None
        view_3355 = permute_1783.view(4, 4, 512, 512, 64) ;  permute_1783 = None
        unbind_int_151 = torch.unbind(view_3355) ;  view_3355 = None
        getitem_3234 = unbind_int_151[0]
        getitem_3235 = unbind_int_151[1]
        getitem_3236 = unbind_int_151[2]
        getitem_3237 = unbind_int_151[3];  unbind_int_151 = None
        expand_212 = select_87.expand(4, 512, 512, 512) ;  select_87 = None
        _scaled_dot_product_efficient_attention_default_123 = (torch.nn.functional.scaled_dot_product_attention(getitem_3234,getitem_3235,getitem_3236,expand_212,False),) ;  getitem_3234 = getitem_3235 = getitem_3236 = expand_212 = None
        getitem_3238 = _scaled_dot_product_efficient_attention_default_123[0]
        sigmoid_267 = torch.sigmoid(getitem_3237) ;  getitem_3237 = None
        mul_440 = torch.mul(getitem_3238,sigmoid_267) ;  getitem_3238 = sigmoid_267 = None
        view_3356 = mul_440.view(1, 4, 512, 512, 64) ;  mul_440 = None
        permute_1784 = view_3356.permute(0, 2, 3, 1, 4) ;  view_3356 = None
        clone_281 = torch.clone(permute_1784,memory_format = torch.contiguous_format) ;  permute_1784 = None
        _unsafe_view_236 = clone_281.view(1, 512, 512, 256) ;  clone_281 = None
        transpose_87 = torch.transpose(getitem_3231,1,2) ;  getitem_3231 = None
        _to_copy_1890 = arg1118_1.to(dtype = torch.bfloat16) ;  arg1118_1 = None
        _to_copy_1891 = transpose_87.to(dtype = torch.bfloat16) ;  transpose_87 = None
        t_704 = _to_copy_1890.t() ;  _to_copy_1890 = None
        expand_213 = _to_copy_1891.expand(1, 512, 512, 256) ;  _to_copy_1891 = None
        view_3357 = expand_213.view(512, 512, 256) ;  expand_213 = None
        expand_214 = t_704.expand(1, 512, 256, 1024) ;  t_704 = None
        view_3358 = expand_214.view(512, 256, 1024) ;  expand_214 = None
        bmm_265 = torch.bmm(view_3357,view_3358) ;  view_3357 = view_3358 = None
        view_3359 = bmm_265.view(1, 512, 512, 1024) ;  bmm_265 = None
        select_88 = torch.select(view_3351,0,1) ;  view_3351 = None
        view_3360 = view_3359.view(1, 512, 512, 4, 4, 64) ;  view_3359 = None
        permute_1785 = view_3360.permute(4, 0, 3, 1, 2, 5) ;  view_3360 = None
        view_3361 = permute_1785.view(4, 4, 512, 512, 64) ;  permute_1785 = None
        unbind_int_152 = torch.unbind(view_3361) ;  view_3361 = None
        getitem_3242 = unbind_int_152[0]
        getitem_3243 = unbind_int_152[1]
        getitem_3244 = unbind_int_152[2]
        getitem_3245 = unbind_int_152[3];  unbind_int_152 = None
        expand_215 = select_88.expand(4, 512, 512, 512) ;  select_88 = None
        _scaled_dot_product_efficient_attention_default_124 = (torch.nn.functional.scaled_dot_product_attention(getitem_3242,getitem_3243,getitem_3244,expand_215,False),) ;  getitem_3242 = getitem_3243 = getitem_3244 = expand_215 = None
        getitem_3246 = _scaled_dot_product_efficient_attention_default_124[0]
        sigmoid_268 = torch.sigmoid(getitem_3245) ;  getitem_3245 = None
        mul_441 = torch.mul(getitem_3246,sigmoid_268) ;  getitem_3246 = sigmoid_268 = None
        view_3362 = mul_441.view(1, 4, 512, 512, 64) ;  mul_441 = None
        permute_1786 = view_3362.permute(0, 2, 3, 1, 4) ;  view_3362 = None
        clone_282 = torch.clone(permute_1786,memory_format = torch.contiguous_format) ;  permute_1786 = None
        _unsafe_view_237 = clone_282.view(1, 512, 512, 256) ;  clone_282 = None
        cat_49 = torch.cat([_unsafe_view_236,_unsafe_view_237],dim = -1) ;  _unsafe_view_236 = _unsafe_view_237 = None
        slice_242 = arg1115_1[0:] ;  arg1115_1 = None
        unsqueeze_1080 = torch.unsqueeze(slice_242,1) ;  slice_242 = None
        mul_442 = torch.mul(arg1119_1,unsqueeze_1080) ;  arg1119_1 = unsqueeze_1080 = None
        _to_copy_1892 = mul_442.to(dtype = torch.bfloat16) ;  mul_442 = None
        t_705 = _to_copy_1892.t() ;  _to_copy_1892 = None
        view_3363 = cat_49.view(262144, 512) ;  cat_49 = None
        mm_657 = torch.mm(view_3363,t_705) ;  view_3363 = t_705 = None
        view_3364 = mm_657.view(1, 512, 512, 256) ;  mm_657 = None
        add_354 = torch.add(add_353,view_3364) ;  add_353 = view_3364 = None
        split_tensor_351 = torch.split(add_347,512,dim = -2) 
        getitem_3250 = split_tensor_351[0];  split_tensor_351 = None
        _to_copy_1893 = getitem_3250.to(dtype = torch.float32) ;  getitem_3250 = None
        native_layer_norm_default_390 = (torch.nn.functional.layer_norm(_to_copy_1893,[256],arg1106_1,arg1107_1,1e-05),) ;  _to_copy_1893 = arg1106_1 = arg1107_1 = None
        getitem_3251 = native_layer_norm_default_390[0]
        _to_copy_1894 = arg1108_1.to(dtype = torch.bfloat16) ;  arg1108_1 = None
        _to_copy_1895 = getitem_3251.to(dtype = torch.bfloat16) ;  getitem_3251 = None
        t_706 = _to_copy_1894.t() ;  _to_copy_1894 = None
        view_3365 = _to_copy_1895.view(262144, 256) ;  _to_copy_1895 = None
        mm_658 = torch.mm(view_3365,t_706) ;  view_3365 = t_706 = None
        view_3366 = mm_658.view(1, 512, 512, 1024) ;  mm_658 = None
        split_tensor_352 = torch.split(view_3366,512,dim = -1) ;  view_3366 = None
        getitem_3254 = split_tensor_352[0]
        getitem_3255 = split_tensor_352[1];  split_tensor_352 = None
        silu_92 = torch.nn.functional.silu(getitem_3254) ;  getitem_3254 = None
        mul_443 = torch.mul(silu_92,getitem_3255) ;  silu_92 = getitem_3255 = None
        _to_copy_1896 = arg1109_1.to(dtype = torch.bfloat16) ;  arg1109_1 = None
        t_707 = _to_copy_1896.t() ;  _to_copy_1896 = None
        view_3368 = mul_443.view(262144, 512) ;  mul_443 = None
        mm_659 = torch.mm(view_3368,t_707) ;  view_3368 = t_707 = None
        view_3369 = mm_659.view(1, 512, 512, 256) ;  mm_659 = None
        add_355 = torch.add(add_354,view_3369) ;  add_354 = view_3369 = None
        _to_copy_1897 = add_351.to(dtype = torch.float32) 
        native_layer_norm_default_391 = (torch.nn.functional.layer_norm(_to_copy_1897,[384],arg1124_1,arg1125_1,1e-05),) ;  _to_copy_1897 = arg1124_1 = arg1125_1 = None
        getitem_3256 = native_layer_norm_default_391[0]
        _to_copy_1898 = add_347.to(dtype = torch.float32) ;  add_347 = None
        native_layer_norm_default_392 = (torch.nn.functional.layer_norm(_to_copy_1898,[256],arg1126_1,arg1127_1,1e-05),) ;  _to_copy_1898 = arg1126_1 = arg1127_1 = None
        getitem_3259 = native_layer_norm_default_392[0]
        _to_copy_1899 = arg1128_1.to(dtype = torch.bfloat16) ;  arg1128_1 = None
        _to_copy_1900 = getitem_3259.to(dtype = torch.bfloat16) ;  getitem_3259 = None
        t_708 = _to_copy_1899.t() ;  _to_copy_1899 = None
        view_3370 = _to_copy_1900.view(262144, 256) ;  _to_copy_1900 = None
        mm_660 = torch.mm(view_3370,t_708) ;  view_3370 = t_708 = None
        view_3371 = mm_660.view(1, 512, 512, 16) ;  mm_660 = None
        permute_1787 = view_3371.permute(0, 3, 1, 2) ;  view_3371 = None
        view_3372 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_209 = torch.bitwise_not(view_3372) ;  view_3372 = None
        masked_fill_209 = permute_1787.masked_fill(bitwise_not_209,-10000) ;  permute_1787 = bitwise_not_209 = None
        _to_copy_1901 = getitem_3256.to(dtype = torch.bfloat16) ;  getitem_3256 = None
        _to_copy_1902 = arg1130_1.to(dtype = torch.bfloat16) ;  arg1130_1 = None
        unsqueeze_1081 = torch.unsqueeze(_to_copy_1901,3) ;  _to_copy_1901 = None
        unsqueeze_1082 = torch.unsqueeze(unsqueeze_1081,4) ;  unsqueeze_1081 = None
        unsqueeze_1083 = torch.unsqueeze(unsqueeze_1082,5) ;  unsqueeze_1082 = None
        permute_1788 = unsqueeze_1083.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_1083 = None
        unsqueeze_1084 = torch.unsqueeze(_to_copy_1902,4) ;  _to_copy_1902 = None
        unsqueeze_1085 = torch.unsqueeze(unsqueeze_1084,5) ;  unsqueeze_1084 = None
        permute_1789 = unsqueeze_1085.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_1085 = None
        permute_1790 = permute_1788.permute(3, 5, 0, 1, 2, 4) ;  permute_1788 = None
        view_3373 = permute_1790.view(1, 512, 384) ;  permute_1790 = None
        permute_1791 = permute_1789.permute(5, 0, 1, 2, 4, 3) ;  permute_1789 = None
        view_3374 = permute_1791.view(1, 384, 1536) ;  permute_1791 = None
        bmm_266 = torch.bmm(view_3373,view_3374) ;  view_3373 = view_3374 = None
        view_3375 = bmm_266.view(512, 1, 4, 1, 16, 24) ;  bmm_266 = None
        permute_1792 = view_3375.permute(2, 3, 4, 0, 5, 1) ;  view_3375 = None
        view_3376 = permute_1792.view(4, 1, 16, 512, 24) ;  permute_1792 = None
        unbind_int_153 = torch.unbind(view_3376) ;  view_3376 = None
        getitem_3262 = unbind_int_153[0]
        getitem_3263 = unbind_int_153[1]
        getitem_3264 = unbind_int_153[2]
        getitem_3265 = unbind_int_153[3];  unbind_int_153 = None
        view_3377 = arg1129_1.view(1, 16, 1, 24) ;  arg1129_1 = None
        add_356 = torch.add(getitem_3262,view_3377) ;  getitem_3262 = view_3377 = None
        _to_copy_1903 = add_356.to(dtype = torch.bfloat16) ;  add_356 = None
        expand_216 = masked_fill_209.expand(1, 16, 512, 512) ;  masked_fill_209 = None
        _scaled_dot_product_efficient_attention_default_125 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1903,getitem_3263,getitem_3264,expand_216,False),) ;  _to_copy_1903 = getitem_3263 = getitem_3264 = expand_216 = None
        getitem_3266 = _scaled_dot_product_efficient_attention_default_125[0]
        add_357 = torch.add(getitem_3265,1) ;  getitem_3265 = None
        sigmoid_269 = torch.sigmoid(add_357) ;  add_357 = None
        mul_444 = torch.mul(getitem_3266,sigmoid_269) ;  getitem_3266 = sigmoid_269 = None
        _to_copy_1904 = arg1131_1.to(dtype = torch.bfloat16) ;  arg1131_1 = None
        unsqueeze_1086 = torch.unsqueeze(mul_444,4) ;  mul_444 = None
        permute_1793 = unsqueeze_1086.permute(0, 2, 4, 3, 1) ;  unsqueeze_1086 = None
        unsqueeze_1087 = torch.unsqueeze(_to_copy_1904,3) ;  _to_copy_1904 = None
        unsqueeze_1088 = torch.unsqueeze(unsqueeze_1087,4) ;  unsqueeze_1087 = None
        permute_1794 = unsqueeze_1088.permute(3, 4, 2, 1, 0) ;  unsqueeze_1088 = None
        permute_1795 = permute_1793.permute(1, 3, 4, 0, 2) ;  permute_1793 = None
        clone_283 = torch.clone(permute_1795,memory_format = torch.contiguous_format) ;  permute_1795 = None
        _unsafe_view_238 = clone_283.view(1, 512, 384) ;  clone_283 = None
        permute_1796 = permute_1794.permute(3, 4, 0, 2, 1) ;  permute_1794 = None
        clone_284 = torch.clone(permute_1796,memory_format = torch.contiguous_format) ;  permute_1796 = None
        _unsafe_view_239 = clone_284.view(1, 384, 384) ;  clone_284 = None
        bmm_267 = torch.bmm(_unsafe_view_238,_unsafe_view_239) ;  _unsafe_view_238 = _unsafe_view_239 = None
        view_3378 = bmm_267.view(512, 1, 1, 1, 384) ;  bmm_267 = None
        permute_1797 = view_3378.permute(3, 0, 4, 1, 2) ;  view_3378 = None
        view_3379 = permute_1797.view(1, 512, 384) ;  permute_1797 = None
        unsqueeze_1089 = torch.unsqueeze(arg1406_1,-1) 
        mul_445 = torch.mul(view_3379,unsqueeze_1089) ;  view_3379 = unsqueeze_1089 = None
        add_358 = torch.add(add_351,mul_445) ;  mul_445 = None
        split_tensor_353 = torch.split(add_351,512,dim = -2) ;  add_351 = None
        getitem_3270 = split_tensor_353[0];  split_tensor_353 = None
        _to_copy_1905 = getitem_3270.to(dtype = torch.float32) ;  getitem_3270 = None
        native_layer_norm_default_393 = (torch.nn.functional.layer_norm(_to_copy_1905,[384],arg1120_1,arg1121_1,1e-05),) ;  _to_copy_1905 = arg1120_1 = arg1121_1 = None
        getitem_3271 = native_layer_norm_default_393[0]
        _to_copy_1906 = arg1122_1.to(dtype = torch.bfloat16) ;  arg1122_1 = None
        _to_copy_1907 = getitem_3271.to(dtype = torch.bfloat16) ;  getitem_3271 = None
        t_709 = _to_copy_1906.t() ;  _to_copy_1906 = None
        view_3380 = _to_copy_1907.view(512, 384) ;  _to_copy_1907 = None
        mm_661 = torch.mm(view_3380,t_709) ;  view_3380 = t_709 = None
        view_3381 = mm_661.view(1, 512, 1536) ;  mm_661 = None
        split_tensor_354 = torch.split(view_3381,768,dim = -1) ;  view_3381 = None
        getitem_3274 = split_tensor_354[0]
        getitem_3275 = split_tensor_354[1];  split_tensor_354 = None
        silu_93 = torch.nn.functional.silu(getitem_3274) ;  getitem_3274 = None
        mul_446 = torch.mul(silu_93,getitem_3275) ;  silu_93 = getitem_3275 = None
        _to_copy_1908 = arg1123_1.to(dtype = torch.bfloat16) ;  arg1123_1 = None
        t_710 = _to_copy_1908.t() ;  _to_copy_1908 = None
        view_3383 = mul_446.view(512, 768) ;  mul_446 = None
        mm_662 = torch.mm(view_3383,t_710) ;  view_3383 = t_710 = None
        view_3384 = mm_662.view(1, 512, 384) ;  mm_662 = None
        add_359 = torch.add(add_358,view_3384) ;  add_358 = view_3384 = None
        _to_copy_1909 = add_355.to(dtype = torch.float32) 
        native_layer_norm_default_394 = (torch.nn.functional.layer_norm(_to_copy_1909,[256],arg1136_1,arg1137_1,1e-05),) ;  _to_copy_1909 = arg1136_1 = arg1137_1 = None
        getitem_3276 = native_layer_norm_default_394[0]
        split_with_sizes_default_88 = torch.split(arg1139_1,[512,512]) ;  arg1139_1 = None
        getitem_3279 = split_with_sizes_default_88[0]
        getitem_3280 = split_with_sizes_default_88[1];  split_with_sizes_default_88 = None
        split_with_sizes_default_89 = torch.split(arg1140_1,[512,512,256]) ;  arg1140_1 = None
        getitem_3281 = split_with_sizes_default_89[0]
        getitem_3282 = split_with_sizes_default_89[1]
        getitem_3283 = split_with_sizes_default_89[2];  split_with_sizes_default_89 = None
        _to_copy_1910 = getitem_3279.to(dtype = torch.bfloat16) ;  getitem_3279 = None
        _to_copy_1911 = getitem_3276.to(dtype = torch.bfloat16) 
        t_711 = _to_copy_1910.t() ;  _to_copy_1910 = None
        view_3385 = _to_copy_1911.view(262144, 256) ;  _to_copy_1911 = None
        mm_663 = torch.mm(view_3385,t_711) ;  view_3385 = t_711 = None
        view_3386 = mm_663.view(1, 512, 512, 512) ;  mm_663 = None
        _to_copy_1912 = getitem_3281.to(dtype = torch.bfloat16) ;  getitem_3281 = None
        _to_copy_1913 = getitem_3276.to(dtype = torch.bfloat16) 
        t_712 = _to_copy_1912.t() ;  _to_copy_1912 = None
        view_3387 = _to_copy_1913.view(262144, 256) ;  _to_copy_1913 = None
        mm_664 = torch.mm(view_3387,t_712) ;  view_3387 = t_712 = None
        view_3388 = mm_664.view(1, 512, 512, 512) ;  mm_664 = None
        sigmoid_270 = torch.sigmoid(view_3388) ;  view_3388 = None
        mul_447 = torch.mul(view_3386,sigmoid_270) ;  view_3386 = sigmoid_270 = None
        unsqueeze_1090 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_210 = torch.bitwise_not(unsqueeze_1090) ;  unsqueeze_1090 = None
        masked_fill_210 = mul_447.masked_fill(bitwise_not_210,0) ;  mul_447 = bitwise_not_210 = None
        split_tensor_355 = torch.split(masked_fill_210,256,dim = -1) 
        getitem_3286 = split_tensor_355[0]
        unsqueeze_1093 = torch.unsqueeze(getitem_3286,4) ;  getitem_3286 = None
        permute_1802 = unsqueeze_1093.permute(0, 1, 4, 3, 2) ;  unsqueeze_1093 = None
        permute_1803 = permute_1802.permute(3, 1, 4, 0, 2) ;  permute_1802 = None
        view_3391 = permute_1803.view(256, 512, 512) ;  permute_1803 = None
        split_tensor_356 = torch.split(masked_fill_210,256,dim = -1) ;  masked_fill_210 = None
        getitem_3289 = split_tensor_356[1];  split_tensor_356 = None
        unsqueeze_1094 = torch.unsqueeze(getitem_3289,4) ;  getitem_3289 = None
        permute_1804 = unsqueeze_1094.permute(0, 4, 1, 3, 2) ;  unsqueeze_1094 = None
        permute_1805 = permute_1804.permute(3, 4, 0, 2, 1) ;  permute_1804 = None
        view_3392 = permute_1805.view(256, 512, 512) ;  permute_1805 = None
        bmm_268 = torch.bmm(view_3391,view_3392) ;  view_3391 = view_3392 = None
        view_3393 = bmm_268.view(256, 512, 1, 1, 512) ;  bmm_268 = None
        permute_1806 = view_3393.permute(3, 1, 4, 0, 2) ;  view_3393 = None
        view_3394 = permute_1806.view(1, 512, 512, 256) ;  permute_1806 = None
        _to_copy_1914 = getitem_3280.to(dtype = torch.bfloat16) ;  getitem_3280 = None
        _to_copy_1915 = getitem_3276.to(dtype = torch.bfloat16) 
        t_713 = _to_copy_1914.t() ;  _to_copy_1914 = None
        view_3395 = _to_copy_1915.view(262144, 256) ;  _to_copy_1915 = None
        mm_665 = torch.mm(view_3395,t_713) ;  view_3395 = t_713 = None
        view_3396 = mm_665.view(1, 512, 512, 512) ;  mm_665 = None
        _to_copy_1916 = getitem_3282.to(dtype = torch.bfloat16) ;  getitem_3282 = None
        _to_copy_1917 = getitem_3276.to(dtype = torch.bfloat16) 
        t_714 = _to_copy_1916.t() ;  _to_copy_1916 = None
        view_3397 = _to_copy_1917.view(262144, 256) ;  _to_copy_1917 = None
        mm_666 = torch.mm(view_3397,t_714) ;  view_3397 = t_714 = None
        view_3398 = mm_666.view(1, 512, 512, 512) ;  mm_666 = None
        sigmoid_271 = torch.sigmoid(view_3398) ;  view_3398 = None
        mul_448 = torch.mul(view_3396,sigmoid_271) ;  view_3396 = sigmoid_271 = None
        view_3399 = mul_448.view(262144, 512) ;  mul_448 = None
        view_3400 = view_3399.view(1, 512, 512, 512) ;  view_3399 = None
        transpose_88 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_1095 = torch.unsqueeze(transpose_88,3) ;  transpose_88 = None
        clone_285 = torch.clone(unsqueeze_1095,memory_format = torch.contiguous_format) ;  unsqueeze_1095 = None
        bitwise_not_211 = torch.bitwise_not(clone_285) ;  clone_285 = None
        masked_fill_211 = view_3400.masked_fill(bitwise_not_211,0) ;  view_3400 = bitwise_not_211 = None
        view_3401 = masked_fill_211.view(262144, 512) ;  masked_fill_211 = None
        view_3405 = view_3401.view(1, 512, 512, 512) 
        split_tensor_357 = torch.split(view_3405,256,dim = -1) ;  view_3405 = None
        getitem_3292 = split_tensor_357[0]
        unsqueeze_1098 = torch.unsqueeze(getitem_3292,4) ;  getitem_3292 = None
        permute_1811 = unsqueeze_1098.permute(0, 2, 4, 3, 1) ;  unsqueeze_1098 = None
        permute_1812 = permute_1811.permute(3, 1, 4, 0, 2) ;  permute_1811 = None
        view_3406 = permute_1812.view(256, 512, 512) ;  permute_1812 = None
        view_3407 = view_3401.view(1, 512, 512, 512) ;  view_3401 = None
        split_tensor_358 = torch.split(view_3407,256,dim = -1) ;  view_3407 = None
        getitem_3295 = split_tensor_358[1];  split_tensor_358 = None
        unsqueeze_1099 = torch.unsqueeze(getitem_3295,4) ;  getitem_3295 = None
        permute_1813 = unsqueeze_1099.permute(0, 4, 2, 3, 1) ;  unsqueeze_1099 = None
        permute_1814 = permute_1813.permute(3, 4, 0, 2, 1) ;  permute_1813 = None
        view_3408 = permute_1814.view(256, 512, 512) ;  permute_1814 = None
        bmm_269 = torch.bmm(view_3406,view_3408) ;  view_3406 = view_3408 = None
        view_3409 = bmm_269.view(256, 512, 1, 1, 512) ;  bmm_269 = None
        permute_1815 = view_3409.permute(3, 1, 4, 0, 2) ;  view_3409 = None
        view_3410 = permute_1815.view(1, 512, 512, 256) ;  permute_1815 = None
        _to_copy_1918 = view_3394.to(dtype = torch.float32) ;  view_3394 = None
        native_layer_norm_default_395 = (torch.nn.functional.layer_norm(_to_copy_1918,[256],None,None,1e-05),) ;  _to_copy_1918 = None
        getitem_3296 = native_layer_norm_default_395[0]
        _to_copy_1919 = view_3410.to(dtype = torch.float32) ;  view_3410 = None
        native_layer_norm_default_396 = (torch.nn.functional.layer_norm(_to_copy_1919,[256],None,None,1e-05),) ;  _to_copy_1919 = None
        getitem_3299 = native_layer_norm_default_396[0]
        add_360 = torch.add(getitem_3296,getitem_3299) ;  getitem_3296 = getitem_3299 = None
        _to_copy_1920 = arg1138_1.to(dtype = torch.bfloat16) ;  arg1138_1 = None
        _to_copy_1921 = add_360.to(dtype = torch.bfloat16) ;  add_360 = None
        t_715 = _to_copy_1920.t() ;  _to_copy_1920 = None
        view_3411 = _to_copy_1921.view(262144, 256) ;  _to_copy_1921 = None
        mm_667 = torch.mm(view_3411,t_715) ;  view_3411 = t_715 = None
        view_3412 = mm_667.view(1, 512, 512, 256) ;  mm_667 = None
        _to_copy_1922 = getitem_3283.to(dtype = torch.bfloat16) ;  getitem_3283 = None
        _to_copy_1923 = getitem_3276.to(dtype = torch.bfloat16) ;  getitem_3276 = None
        t_716 = _to_copy_1922.t() ;  _to_copy_1922 = None
        view_3413 = _to_copy_1923.view(262144, 256) ;  _to_copy_1923 = None
        mm_668 = torch.mm(view_3413,t_716) ;  view_3413 = t_716 = None
        view_3414 = mm_668.view(1, 512, 512, 256) ;  mm_668 = None
        sigmoid_272 = torch.sigmoid(view_3414) ;  view_3414 = None
        mul_449 = torch.mul(view_3412,sigmoid_272) ;  view_3412 = sigmoid_272 = None
        add_361 = torch.add(add_355,mul_449) ;  mul_449 = None
        _to_copy_1924 = add_355.to(dtype = torch.float32) 
        native_layer_norm_default_397 = (torch.nn.functional.layer_norm(_to_copy_1924,[256],None,None,1e-05),) ;  _to_copy_1924 = None
        getitem_3302 = native_layer_norm_default_397[0]
        _to_copy_1925 = arg1142_1.to(dtype = torch.bfloat16) ;  arg1142_1 = None
        _to_copy_1926 = getitem_3302.to(dtype = torch.bfloat16) 
        t_717 = _to_copy_1925.t() ;  _to_copy_1925 = None
        view_3415 = _to_copy_1926.view(262144, 256) ;  _to_copy_1926 = None
        mm_669 = torch.mm(view_3415,t_717) ;  view_3415 = t_717 = None
        view_3416 = mm_669.view(1, 512, 512, 8) ;  mm_669 = None
        view_3417 = view_3416.view(1, 512, 512, 2, 4) ;  view_3416 = None
        permute_1816 = view_3417.permute(0, 3, 4, 1, 2) ;  view_3417 = None
        view_3418 = permute_1816.view(1, 2, 4, 1, 512, 512) ;  permute_1816 = None
        view_3419 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_212 = torch.bitwise_not(view_3419) ;  view_3419 = None
        masked_fill_212 = view_3418.masked_fill(bitwise_not_212,-10000) ;  view_3418 = bitwise_not_212 = None
        view_3420 = masked_fill_212.view(1, 2, 4, 512, 512) ;  masked_fill_212 = None
        permute_1817 = view_3420.permute(1, 0, 2, 3, 4) ;  view_3420 = None
        view_3421 = permute_1817.view(2, 4, 1, 512, 512) ;  permute_1817 = None
        _to_copy_1927 = arg1143_1.to(dtype = torch.bfloat16) ;  arg1143_1 = None
        _to_copy_1928 = getitem_3302.to(dtype = torch.bfloat16) 
        t_718 = _to_copy_1927.t() ;  _to_copy_1927 = None
        view_3422 = _to_copy_1928.view(262144, 256) ;  _to_copy_1928 = None
        mm_670 = torch.mm(view_3422,t_718) ;  view_3422 = t_718 = None
        view_3423 = mm_670.view(1, 512, 512, 1024) ;  mm_670 = None
        select_89 = torch.select(view_3421,0,0) 
        view_3424 = view_3423.view(1, 512, 512, 4, 4, 64) ;  view_3423 = None
        permute_1818 = view_3424.permute(4, 0, 3, 1, 2, 5) ;  view_3424 = None
        view_3425 = permute_1818.view(4, 4, 512, 512, 64) ;  permute_1818 = None
        unbind_int_154 = torch.unbind(view_3425) ;  view_3425 = None
        getitem_3305 = unbind_int_154[0]
        getitem_3306 = unbind_int_154[1]
        getitem_3307 = unbind_int_154[2]
        getitem_3308 = unbind_int_154[3];  unbind_int_154 = None
        expand_217 = select_89.expand(4, 512, 512, 512) ;  select_89 = None
        _scaled_dot_product_efficient_attention_default_126 = (torch.nn.functional.scaled_dot_product_attention(getitem_3305,getitem_3306,getitem_3307,expand_217,False),) ;  getitem_3305 = getitem_3306 = getitem_3307 = expand_217 = None
        getitem_3309 = _scaled_dot_product_efficient_attention_default_126[0]
        sigmoid_273 = torch.sigmoid(getitem_3308) ;  getitem_3308 = None
        mul_450 = torch.mul(getitem_3309,sigmoid_273) ;  getitem_3309 = sigmoid_273 = None
        view_3426 = mul_450.view(1, 4, 512, 512, 64) ;  mul_450 = None
        permute_1819 = view_3426.permute(0, 2, 3, 1, 4) ;  view_3426 = None
        clone_286 = torch.clone(permute_1819,memory_format = torch.contiguous_format) ;  permute_1819 = None
        _unsafe_view_240 = clone_286.view(1, 512, 512, 256) ;  clone_286 = None
        transpose_89 = torch.transpose(getitem_3302,1,2) ;  getitem_3302 = None
        _to_copy_1929 = arg1144_1.to(dtype = torch.bfloat16) ;  arg1144_1 = None
        _to_copy_1930 = transpose_89.to(dtype = torch.bfloat16) ;  transpose_89 = None
        t_719 = _to_copy_1929.t() ;  _to_copy_1929 = None
        expand_218 = _to_copy_1930.expand(1, 512, 512, 256) ;  _to_copy_1930 = None
        view_3427 = expand_218.view(512, 512, 256) ;  expand_218 = None
        expand_219 = t_719.expand(1, 512, 256, 1024) ;  t_719 = None
        view_3428 = expand_219.view(512, 256, 1024) ;  expand_219 = None
        bmm_270 = torch.bmm(view_3427,view_3428) ;  view_3427 = view_3428 = None
        view_3429 = bmm_270.view(1, 512, 512, 1024) ;  bmm_270 = None
        select_90 = torch.select(view_3421,0,1) ;  view_3421 = None
        view_3430 = view_3429.view(1, 512, 512, 4, 4, 64) ;  view_3429 = None
        permute_1820 = view_3430.permute(4, 0, 3, 1, 2, 5) ;  view_3430 = None
        view_3431 = permute_1820.view(4, 4, 512, 512, 64) ;  permute_1820 = None
        unbind_int_155 = torch.unbind(view_3431) ;  view_3431 = None
        getitem_3313 = unbind_int_155[0]
        getitem_3314 = unbind_int_155[1]
        getitem_3315 = unbind_int_155[2]
        getitem_3316 = unbind_int_155[3];  unbind_int_155 = None
        expand_220 = select_90.expand(4, 512, 512, 512) ;  select_90 = None
        _scaled_dot_product_efficient_attention_default_127 = (torch.nn.functional.scaled_dot_product_attention(getitem_3313,getitem_3314,getitem_3315,expand_220,False),) ;  getitem_3313 = getitem_3314 = getitem_3315 = expand_220 = None
        getitem_3317 = _scaled_dot_product_efficient_attention_default_127[0]
        sigmoid_274 = torch.sigmoid(getitem_3316) ;  getitem_3316 = None
        mul_451 = torch.mul(getitem_3317,sigmoid_274) ;  getitem_3317 = sigmoid_274 = None
        view_3432 = mul_451.view(1, 4, 512, 512, 64) ;  mul_451 = None
        permute_1821 = view_3432.permute(0, 2, 3, 1, 4) ;  view_3432 = None
        clone_287 = torch.clone(permute_1821,memory_format = torch.contiguous_format) ;  permute_1821 = None
        _unsafe_view_241 = clone_287.view(1, 512, 512, 256) ;  clone_287 = None
        cat_50 = torch.cat([_unsafe_view_240,_unsafe_view_241],dim = -1) ;  _unsafe_view_240 = _unsafe_view_241 = None
        slice_243 = arg1141_1[0:] ;  arg1141_1 = None
        unsqueeze_1100 = torch.unsqueeze(slice_243,1) ;  slice_243 = None
        mul_452 = torch.mul(arg1145_1,unsqueeze_1100) ;  arg1145_1 = unsqueeze_1100 = None
        _to_copy_1931 = mul_452.to(dtype = torch.bfloat16) ;  mul_452 = None
        t_720 = _to_copy_1931.t() ;  _to_copy_1931 = None
        view_3433 = cat_50.view(262144, 512) ;  cat_50 = None
        mm_671 = torch.mm(view_3433,t_720) ;  view_3433 = t_720 = None
        view_3434 = mm_671.view(1, 512, 512, 256) ;  mm_671 = None
        add_362 = torch.add(add_361,view_3434) ;  add_361 = view_3434 = None
        split_tensor_359 = torch.split(add_355,512,dim = -2) 
        getitem_3321 = split_tensor_359[0];  split_tensor_359 = None
        _to_copy_1932 = getitem_3321.to(dtype = torch.float32) ;  getitem_3321 = None
        native_layer_norm_default_398 = (torch.nn.functional.layer_norm(_to_copy_1932,[256],arg1132_1,arg1133_1,1e-05),) ;  _to_copy_1932 = arg1132_1 = arg1133_1 = None
        getitem_3322 = native_layer_norm_default_398[0]
        _to_copy_1933 = arg1134_1.to(dtype = torch.bfloat16) ;  arg1134_1 = None
        _to_copy_1934 = getitem_3322.to(dtype = torch.bfloat16) ;  getitem_3322 = None
        t_721 = _to_copy_1933.t() ;  _to_copy_1933 = None
        view_3435 = _to_copy_1934.view(262144, 256) ;  _to_copy_1934 = None
        mm_672 = torch.mm(view_3435,t_721) ;  view_3435 = t_721 = None
        view_3436 = mm_672.view(1, 512, 512, 1024) ;  mm_672 = None
        split_tensor_360 = torch.split(view_3436,512,dim = -1) ;  view_3436 = None
        getitem_3325 = split_tensor_360[0]
        getitem_3326 = split_tensor_360[1];  split_tensor_360 = None
        silu_94 = torch.nn.functional.silu(getitem_3325) ;  getitem_3325 = None
        mul_453 = torch.mul(silu_94,getitem_3326) ;  silu_94 = getitem_3326 = None
        _to_copy_1935 = arg1135_1.to(dtype = torch.bfloat16) ;  arg1135_1 = None
        t_722 = _to_copy_1935.t() ;  _to_copy_1935 = None
        view_3438 = mul_453.view(262144, 512) ;  mul_453 = None
        mm_673 = torch.mm(view_3438,t_722) ;  view_3438 = t_722 = None
        view_3439 = mm_673.view(1, 512, 512, 256) ;  mm_673 = None
        add_363 = torch.add(add_362,view_3439) ;  add_362 = view_3439 = None
        _to_copy_1936 = add_359.to(dtype = torch.float32) 
        native_layer_norm_default_399 = (torch.nn.functional.layer_norm(_to_copy_1936,[384],arg1150_1,arg1151_1,1e-05),) ;  _to_copy_1936 = arg1150_1 = arg1151_1 = None
        getitem_3327 = native_layer_norm_default_399[0]
        _to_copy_1937 = add_355.to(dtype = torch.float32) ;  add_355 = None
        native_layer_norm_default_400 = (torch.nn.functional.layer_norm(_to_copy_1937,[256],arg1152_1,arg1153_1,1e-05),) ;  _to_copy_1937 = arg1152_1 = arg1153_1 = None
        getitem_3330 = native_layer_norm_default_400[0]
        _to_copy_1938 = arg1154_1.to(dtype = torch.bfloat16) ;  arg1154_1 = None
        _to_copy_1939 = getitem_3330.to(dtype = torch.bfloat16) ;  getitem_3330 = None
        t_723 = _to_copy_1938.t() ;  _to_copy_1938 = None
        view_3440 = _to_copy_1939.view(262144, 256) ;  _to_copy_1939 = None
        mm_674 = torch.mm(view_3440,t_723) ;  view_3440 = t_723 = None
        view_3441 = mm_674.view(1, 512, 512, 16) ;  mm_674 = None
        permute_1822 = view_3441.permute(0, 3, 1, 2) ;  view_3441 = None
        view_3442 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_213 = torch.bitwise_not(view_3442) ;  view_3442 = None
        masked_fill_213 = permute_1822.masked_fill(bitwise_not_213,-10000) ;  permute_1822 = bitwise_not_213 = None
        _to_copy_1940 = getitem_3327.to(dtype = torch.bfloat16) ;  getitem_3327 = None
        _to_copy_1941 = arg1156_1.to(dtype = torch.bfloat16) ;  arg1156_1 = None
        unsqueeze_1101 = torch.unsqueeze(_to_copy_1940,3) ;  _to_copy_1940 = None
        unsqueeze_1102 = torch.unsqueeze(unsqueeze_1101,4) ;  unsqueeze_1101 = None
        unsqueeze_1103 = torch.unsqueeze(unsqueeze_1102,5) ;  unsqueeze_1102 = None
        permute_1823 = unsqueeze_1103.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_1103 = None
        unsqueeze_1104 = torch.unsqueeze(_to_copy_1941,4) ;  _to_copy_1941 = None
        unsqueeze_1105 = torch.unsqueeze(unsqueeze_1104,5) ;  unsqueeze_1104 = None
        permute_1824 = unsqueeze_1105.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_1105 = None
        permute_1825 = permute_1823.permute(3, 5, 0, 1, 2, 4) ;  permute_1823 = None
        view_3443 = permute_1825.view(1, 512, 384) ;  permute_1825 = None
        permute_1826 = permute_1824.permute(5, 0, 1, 2, 4, 3) ;  permute_1824 = None
        view_3444 = permute_1826.view(1, 384, 1536) ;  permute_1826 = None
        bmm_271 = torch.bmm(view_3443,view_3444) ;  view_3443 = view_3444 = None
        view_3445 = bmm_271.view(512, 1, 4, 1, 16, 24) ;  bmm_271 = None
        permute_1827 = view_3445.permute(2, 3, 4, 0, 5, 1) ;  view_3445 = None
        view_3446 = permute_1827.view(4, 1, 16, 512, 24) ;  permute_1827 = None
        unbind_int_156 = torch.unbind(view_3446) ;  view_3446 = None
        getitem_3333 = unbind_int_156[0]
        getitem_3334 = unbind_int_156[1]
        getitem_3335 = unbind_int_156[2]
        getitem_3336 = unbind_int_156[3];  unbind_int_156 = None
        view_3447 = arg1155_1.view(1, 16, 1, 24) ;  arg1155_1 = None
        add_364 = torch.add(getitem_3333,view_3447) ;  getitem_3333 = view_3447 = None
        _to_copy_1942 = add_364.to(dtype = torch.bfloat16) ;  add_364 = None
        expand_221 = masked_fill_213.expand(1, 16, 512, 512) ;  masked_fill_213 = None
        _scaled_dot_product_efficient_attention_default_128 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1942,getitem_3334,getitem_3335,expand_221,False),) ;  _to_copy_1942 = getitem_3334 = getitem_3335 = expand_221 = None
        getitem_3337 = _scaled_dot_product_efficient_attention_default_128[0]
        add_365 = torch.add(getitem_3336,1) ;  getitem_3336 = None
        sigmoid_275 = torch.sigmoid(add_365) ;  add_365 = None
        mul_454 = torch.mul(getitem_3337,sigmoid_275) ;  getitem_3337 = sigmoid_275 = None
        _to_copy_1943 = arg1157_1.to(dtype = torch.bfloat16) ;  arg1157_1 = None
        unsqueeze_1106 = torch.unsqueeze(mul_454,4) ;  mul_454 = None
        permute_1828 = unsqueeze_1106.permute(0, 2, 4, 3, 1) ;  unsqueeze_1106 = None
        unsqueeze_1107 = torch.unsqueeze(_to_copy_1943,3) ;  _to_copy_1943 = None
        unsqueeze_1108 = torch.unsqueeze(unsqueeze_1107,4) ;  unsqueeze_1107 = None
        permute_1829 = unsqueeze_1108.permute(3, 4, 2, 1, 0) ;  unsqueeze_1108 = None
        permute_1830 = permute_1828.permute(1, 3, 4, 0, 2) ;  permute_1828 = None
        clone_288 = torch.clone(permute_1830,memory_format = torch.contiguous_format) ;  permute_1830 = None
        _unsafe_view_242 = clone_288.view(1, 512, 384) ;  clone_288 = None
        permute_1831 = permute_1829.permute(3, 4, 0, 2, 1) ;  permute_1829 = None
        clone_289 = torch.clone(permute_1831,memory_format = torch.contiguous_format) ;  permute_1831 = None
        _unsafe_view_243 = clone_289.view(1, 384, 384) ;  clone_289 = None
        bmm_272 = torch.bmm(_unsafe_view_242,_unsafe_view_243) ;  _unsafe_view_242 = _unsafe_view_243 = None
        view_3448 = bmm_272.view(512, 1, 1, 1, 384) ;  bmm_272 = None
        permute_1832 = view_3448.permute(3, 0, 4, 1, 2) ;  view_3448 = None
        view_3449 = permute_1832.view(1, 512, 384) ;  permute_1832 = None
        unsqueeze_1109 = torch.unsqueeze(arg1406_1,-1) 
        mul_455 = torch.mul(view_3449,unsqueeze_1109) ;  view_3449 = unsqueeze_1109 = None
        add_366 = torch.add(add_359,mul_455) ;  mul_455 = None
        split_tensor_361 = torch.split(add_359,512,dim = -2) ;  add_359 = None
        getitem_3341 = split_tensor_361[0];  split_tensor_361 = None
        _to_copy_1944 = getitem_3341.to(dtype = torch.float32) ;  getitem_3341 = None
        native_layer_norm_default_401 = (torch.nn.functional.layer_norm(_to_copy_1944,[384],arg1146_1,arg1147_1,1e-05),) ;  _to_copy_1944 = arg1146_1 = arg1147_1 = None
        getitem_3342 = native_layer_norm_default_401[0]
        _to_copy_1945 = arg1148_1.to(dtype = torch.bfloat16) ;  arg1148_1 = None
        _to_copy_1946 = getitem_3342.to(dtype = torch.bfloat16) ;  getitem_3342 = None
        t_724 = _to_copy_1945.t() ;  _to_copy_1945 = None
        view_3450 = _to_copy_1946.view(512, 384) ;  _to_copy_1946 = None
        mm_675 = torch.mm(view_3450,t_724) ;  view_3450 = t_724 = None
        view_3451 = mm_675.view(1, 512, 1536) ;  mm_675 = None
        split_tensor_362 = torch.split(view_3451,768,dim = -1) ;  view_3451 = None
        getitem_3345 = split_tensor_362[0]
        getitem_3346 = split_tensor_362[1];  split_tensor_362 = None
        silu_95 = torch.nn.functional.silu(getitem_3345) ;  getitem_3345 = None
        mul_456 = torch.mul(silu_95,getitem_3346) ;  silu_95 = getitem_3346 = None
        _to_copy_1947 = arg1149_1.to(dtype = torch.bfloat16) ;  arg1149_1 = None
        t_725 = _to_copy_1947.t() ;  _to_copy_1947 = None
        view_3453 = mul_456.view(512, 768) ;  mul_456 = None
        mm_676 = torch.mm(view_3453,t_725) ;  view_3453 = t_725 = None
        view_3454 = mm_676.view(1, 512, 384) ;  mm_676 = None
        add_367 = torch.add(add_366,view_3454) ;  add_366 = view_3454 = None
        _to_copy_1948 = add_363.to(dtype = torch.float32) 
        native_layer_norm_default_402 = (torch.nn.functional.layer_norm(_to_copy_1948,[256],arg1162_1,arg1163_1,1e-05),) ;  _to_copy_1948 = arg1162_1 = arg1163_1 = None
        getitem_3347 = native_layer_norm_default_402[0]
        split_with_sizes_default_90 = torch.split(arg1165_1,[512,512]) ;  arg1165_1 = None
        getitem_3350 = split_with_sizes_default_90[0]
        getitem_3351 = split_with_sizes_default_90[1];  split_with_sizes_default_90 = None
        split_with_sizes_default_91 = torch.split(arg1166_1,[512,512,256]) ;  arg1166_1 = None
        getitem_3352 = split_with_sizes_default_91[0]
        getitem_3353 = split_with_sizes_default_91[1]
        getitem_3354 = split_with_sizes_default_91[2];  split_with_sizes_default_91 = None
        _to_copy_1949 = getitem_3350.to(dtype = torch.bfloat16) ;  getitem_3350 = None
        _to_copy_1950 = getitem_3347.to(dtype = torch.bfloat16) 
        t_726 = _to_copy_1949.t() ;  _to_copy_1949 = None
        view_3455 = _to_copy_1950.view(262144, 256) ;  _to_copy_1950 = None
        mm_677 = torch.mm(view_3455,t_726) ;  view_3455 = t_726 = None
        view_3456 = mm_677.view(1, 512, 512, 512) ;  mm_677 = None
        _to_copy_1951 = getitem_3352.to(dtype = torch.bfloat16) ;  getitem_3352 = None
        _to_copy_1952 = getitem_3347.to(dtype = torch.bfloat16) 
        t_727 = _to_copy_1951.t() ;  _to_copy_1951 = None
        view_3457 = _to_copy_1952.view(262144, 256) ;  _to_copy_1952 = None
        mm_678 = torch.mm(view_3457,t_727) ;  view_3457 = t_727 = None
        view_3458 = mm_678.view(1, 512, 512, 512) ;  mm_678 = None
        sigmoid_276 = torch.sigmoid(view_3458) ;  view_3458 = None
        mul_457 = torch.mul(view_3456,sigmoid_276) ;  view_3456 = sigmoid_276 = None
        unsqueeze_1110 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_214 = torch.bitwise_not(unsqueeze_1110) ;  unsqueeze_1110 = None
        masked_fill_214 = mul_457.masked_fill(bitwise_not_214,0) ;  mul_457 = bitwise_not_214 = None
        split_tensor_363 = torch.split(masked_fill_214,256,dim = -1) 
        getitem_3357 = split_tensor_363[0]
        unsqueeze_1113 = torch.unsqueeze(getitem_3357,4) ;  getitem_3357 = None
        permute_1837 = unsqueeze_1113.permute(0, 1, 4, 3, 2) ;  unsqueeze_1113 = None
        permute_1838 = permute_1837.permute(3, 1, 4, 0, 2) ;  permute_1837 = None
        view_3461 = permute_1838.view(256, 512, 512) ;  permute_1838 = None
        split_tensor_364 = torch.split(masked_fill_214,256,dim = -1) ;  masked_fill_214 = None
        getitem_3360 = split_tensor_364[1];  split_tensor_364 = None
        unsqueeze_1114 = torch.unsqueeze(getitem_3360,4) ;  getitem_3360 = None
        permute_1839 = unsqueeze_1114.permute(0, 4, 1, 3, 2) ;  unsqueeze_1114 = None
        permute_1840 = permute_1839.permute(3, 4, 0, 2, 1) ;  permute_1839 = None
        view_3462 = permute_1840.view(256, 512, 512) ;  permute_1840 = None
        bmm_273 = torch.bmm(view_3461,view_3462) ;  view_3461 = view_3462 = None
        view_3463 = bmm_273.view(256, 512, 1, 1, 512) ;  bmm_273 = None
        permute_1841 = view_3463.permute(3, 1, 4, 0, 2) ;  view_3463 = None
        view_3464 = permute_1841.view(1, 512, 512, 256) ;  permute_1841 = None
        _to_copy_1953 = getitem_3351.to(dtype = torch.bfloat16) ;  getitem_3351 = None
        _to_copy_1954 = getitem_3347.to(dtype = torch.bfloat16) 
        t_728 = _to_copy_1953.t() ;  _to_copy_1953 = None
        view_3465 = _to_copy_1954.view(262144, 256) ;  _to_copy_1954 = None
        mm_679 = torch.mm(view_3465,t_728) ;  view_3465 = t_728 = None
        view_3466 = mm_679.view(1, 512, 512, 512) ;  mm_679 = None
        _to_copy_1955 = getitem_3353.to(dtype = torch.bfloat16) ;  getitem_3353 = None
        _to_copy_1956 = getitem_3347.to(dtype = torch.bfloat16) 
        t_729 = _to_copy_1955.t() ;  _to_copy_1955 = None
        view_3467 = _to_copy_1956.view(262144, 256) ;  _to_copy_1956 = None
        mm_680 = torch.mm(view_3467,t_729) ;  view_3467 = t_729 = None
        view_3468 = mm_680.view(1, 512, 512, 512) ;  mm_680 = None
        sigmoid_277 = torch.sigmoid(view_3468) ;  view_3468 = None
        mul_458 = torch.mul(view_3466,sigmoid_277) ;  view_3466 = sigmoid_277 = None
        view_3469 = mul_458.view(262144, 512) ;  mul_458 = None
        view_3470 = view_3469.view(1, 512, 512, 512) ;  view_3469 = None
        transpose_90 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_1115 = torch.unsqueeze(transpose_90,3) ;  transpose_90 = None
        clone_290 = torch.clone(unsqueeze_1115,memory_format = torch.contiguous_format) ;  unsqueeze_1115 = None
        bitwise_not_215 = torch.bitwise_not(clone_290) ;  clone_290 = None
        masked_fill_215 = view_3470.masked_fill(bitwise_not_215,0) ;  view_3470 = bitwise_not_215 = None
        view_3471 = masked_fill_215.view(262144, 512) ;  masked_fill_215 = None
        view_3475 = view_3471.view(1, 512, 512, 512) 
        split_tensor_365 = torch.split(view_3475,256,dim = -1) ;  view_3475 = None
        getitem_3363 = split_tensor_365[0]
        unsqueeze_1118 = torch.unsqueeze(getitem_3363,4) ;  getitem_3363 = None
        permute_1846 = unsqueeze_1118.permute(0, 2, 4, 3, 1) ;  unsqueeze_1118 = None
        permute_1847 = permute_1846.permute(3, 1, 4, 0, 2) ;  permute_1846 = None
        view_3476 = permute_1847.view(256, 512, 512) ;  permute_1847 = None
        view_3477 = view_3471.view(1, 512, 512, 512) ;  view_3471 = None
        split_tensor_366 = torch.split(view_3477,256,dim = -1) ;  view_3477 = None
        getitem_3366 = split_tensor_366[1];  split_tensor_366 = None
        unsqueeze_1119 = torch.unsqueeze(getitem_3366,4) ;  getitem_3366 = None
        permute_1848 = unsqueeze_1119.permute(0, 4, 2, 3, 1) ;  unsqueeze_1119 = None
        permute_1849 = permute_1848.permute(3, 4, 0, 2, 1) ;  permute_1848 = None
        view_3478 = permute_1849.view(256, 512, 512) ;  permute_1849 = None
        bmm_274 = torch.bmm(view_3476,view_3478) ;  view_3476 = view_3478 = None
        view_3479 = bmm_274.view(256, 512, 1, 1, 512) ;  bmm_274 = None
        permute_1850 = view_3479.permute(3, 1, 4, 0, 2) ;  view_3479 = None
        view_3480 = permute_1850.view(1, 512, 512, 256) ;  permute_1850 = None
        _to_copy_1957 = view_3464.to(dtype = torch.float32) ;  view_3464 = None
        native_layer_norm_default_403 = (torch.nn.functional.layer_norm(_to_copy_1957,[256],None,None,1e-05),) ;  _to_copy_1957 = None
        getitem_3367 = native_layer_norm_default_403[0]
        _to_copy_1958 = view_3480.to(dtype = torch.float32) ;  view_3480 = None
        native_layer_norm_default_404 = (torch.nn.functional.layer_norm(_to_copy_1958,[256],None,None,1e-05),) ;  _to_copy_1958 = None
        getitem_3370 = native_layer_norm_default_404[0]
        add_368 = torch.add(getitem_3367,getitem_3370) ;  getitem_3367 = getitem_3370 = None
        _to_copy_1959 = arg1164_1.to(dtype = torch.bfloat16) ;  arg1164_1 = None
        _to_copy_1960 = add_368.to(dtype = torch.bfloat16) ;  add_368 = None
        t_730 = _to_copy_1959.t() ;  _to_copy_1959 = None
        view_3481 = _to_copy_1960.view(262144, 256) ;  _to_copy_1960 = None
        mm_681 = torch.mm(view_3481,t_730) ;  view_3481 = t_730 = None
        view_3482 = mm_681.view(1, 512, 512, 256) ;  mm_681 = None
        _to_copy_1961 = getitem_3354.to(dtype = torch.bfloat16) ;  getitem_3354 = None
        _to_copy_1962 = getitem_3347.to(dtype = torch.bfloat16) ;  getitem_3347 = None
        t_731 = _to_copy_1961.t() ;  _to_copy_1961 = None
        view_3483 = _to_copy_1962.view(262144, 256) ;  _to_copy_1962 = None
        mm_682 = torch.mm(view_3483,t_731) ;  view_3483 = t_731 = None
        view_3484 = mm_682.view(1, 512, 512, 256) ;  mm_682 = None
        sigmoid_278 = torch.sigmoid(view_3484) ;  view_3484 = None
        mul_459 = torch.mul(view_3482,sigmoid_278) ;  view_3482 = sigmoid_278 = None
        add_369 = torch.add(add_363,mul_459) ;  mul_459 = None
        _to_copy_1963 = add_363.to(dtype = torch.float32) 
        native_layer_norm_default_405 = (torch.nn.functional.layer_norm(_to_copy_1963,[256],None,None,1e-05),) ;  _to_copy_1963 = None
        getitem_3373 = native_layer_norm_default_405[0]
        _to_copy_1964 = arg1168_1.to(dtype = torch.bfloat16) ;  arg1168_1 = None
        _to_copy_1965 = getitem_3373.to(dtype = torch.bfloat16) 
        t_732 = _to_copy_1964.t() ;  _to_copy_1964 = None
        view_3485 = _to_copy_1965.view(262144, 256) ;  _to_copy_1965 = None
        mm_683 = torch.mm(view_3485,t_732) ;  view_3485 = t_732 = None
        view_3486 = mm_683.view(1, 512, 512, 8) ;  mm_683 = None
        view_3487 = view_3486.view(1, 512, 512, 2, 4) ;  view_3486 = None
        permute_1851 = view_3487.permute(0, 3, 4, 1, 2) ;  view_3487 = None
        view_3488 = permute_1851.view(1, 2, 4, 1, 512, 512) ;  permute_1851 = None
        view_3489 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_216 = torch.bitwise_not(view_3489) ;  view_3489 = None
        masked_fill_216 = view_3488.masked_fill(bitwise_not_216,-10000) ;  view_3488 = bitwise_not_216 = None
        view_3490 = masked_fill_216.view(1, 2, 4, 512, 512) ;  masked_fill_216 = None
        permute_1852 = view_3490.permute(1, 0, 2, 3, 4) ;  view_3490 = None
        view_3491 = permute_1852.view(2, 4, 1, 512, 512) ;  permute_1852 = None
        _to_copy_1966 = arg1169_1.to(dtype = torch.bfloat16) ;  arg1169_1 = None
        _to_copy_1967 = getitem_3373.to(dtype = torch.bfloat16) 
        t_733 = _to_copy_1966.t() ;  _to_copy_1966 = None
        view_3492 = _to_copy_1967.view(262144, 256) ;  _to_copy_1967 = None
        mm_684 = torch.mm(view_3492,t_733) ;  view_3492 = t_733 = None
        view_3493 = mm_684.view(1, 512, 512, 1024) ;  mm_684 = None
        select_91 = torch.select(view_3491,0,0) 
        view_3494 = view_3493.view(1, 512, 512, 4, 4, 64) ;  view_3493 = None
        permute_1853 = view_3494.permute(4, 0, 3, 1, 2, 5) ;  view_3494 = None
        view_3495 = permute_1853.view(4, 4, 512, 512, 64) ;  permute_1853 = None
        unbind_int_157 = torch.unbind(view_3495) ;  view_3495 = None
        getitem_3376 = unbind_int_157[0]
        getitem_3377 = unbind_int_157[1]
        getitem_3378 = unbind_int_157[2]
        getitem_3379 = unbind_int_157[3];  unbind_int_157 = None
        expand_222 = select_91.expand(4, 512, 512, 512) ;  select_91 = None
        _scaled_dot_product_efficient_attention_default_129 = (torch.nn.functional.scaled_dot_product_attention(getitem_3376,getitem_3377,getitem_3378,expand_222,False),) ;  getitem_3376 = getitem_3377 = getitem_3378 = expand_222 = None
        getitem_3380 = _scaled_dot_product_efficient_attention_default_129[0]
        sigmoid_279 = torch.sigmoid(getitem_3379) ;  getitem_3379 = None
        mul_460 = torch.mul(getitem_3380,sigmoid_279) ;  getitem_3380 = sigmoid_279 = None
        view_3496 = mul_460.view(1, 4, 512, 512, 64) ;  mul_460 = None
        permute_1854 = view_3496.permute(0, 2, 3, 1, 4) ;  view_3496 = None
        clone_291 = torch.clone(permute_1854,memory_format = torch.contiguous_format) ;  permute_1854 = None
        _unsafe_view_244 = clone_291.view(1, 512, 512, 256) ;  clone_291 = None
        transpose_91 = torch.transpose(getitem_3373,1,2) ;  getitem_3373 = None
        _to_copy_1968 = arg1170_1.to(dtype = torch.bfloat16) ;  arg1170_1 = None
        _to_copy_1969 = transpose_91.to(dtype = torch.bfloat16) ;  transpose_91 = None
        t_734 = _to_copy_1968.t() ;  _to_copy_1968 = None
        expand_223 = _to_copy_1969.expand(1, 512, 512, 256) ;  _to_copy_1969 = None
        view_3497 = expand_223.view(512, 512, 256) ;  expand_223 = None
        expand_224 = t_734.expand(1, 512, 256, 1024) ;  t_734 = None
        view_3498 = expand_224.view(512, 256, 1024) ;  expand_224 = None
        bmm_275 = torch.bmm(view_3497,view_3498) ;  view_3497 = view_3498 = None
        view_3499 = bmm_275.view(1, 512, 512, 1024) ;  bmm_275 = None
        select_92 = torch.select(view_3491,0,1) ;  view_3491 = None
        view_3500 = view_3499.view(1, 512, 512, 4, 4, 64) ;  view_3499 = None
        permute_1855 = view_3500.permute(4, 0, 3, 1, 2, 5) ;  view_3500 = None
        view_3501 = permute_1855.view(4, 4, 512, 512, 64) ;  permute_1855 = None
        unbind_int_158 = torch.unbind(view_3501) ;  view_3501 = None
        getitem_3384 = unbind_int_158[0]
        getitem_3385 = unbind_int_158[1]
        getitem_3386 = unbind_int_158[2]
        getitem_3387 = unbind_int_158[3];  unbind_int_158 = None
        expand_225 = select_92.expand(4, 512, 512, 512) ;  select_92 = None
        _scaled_dot_product_efficient_attention_default_130 = (torch.nn.functional.scaled_dot_product_attention(getitem_3384,getitem_3385,getitem_3386,expand_225,False),) ;  getitem_3384 = getitem_3385 = getitem_3386 = expand_225 = None
        getitem_3388 = _scaled_dot_product_efficient_attention_default_130[0]
        sigmoid_280 = torch.sigmoid(getitem_3387) ;  getitem_3387 = None
        mul_461 = torch.mul(getitem_3388,sigmoid_280) ;  getitem_3388 = sigmoid_280 = None
        view_3502 = mul_461.view(1, 4, 512, 512, 64) ;  mul_461 = None
        permute_1856 = view_3502.permute(0, 2, 3, 1, 4) ;  view_3502 = None
        clone_292 = torch.clone(permute_1856,memory_format = torch.contiguous_format) ;  permute_1856 = None
        _unsafe_view_245 = clone_292.view(1, 512, 512, 256) ;  clone_292 = None
        cat_51 = torch.cat([_unsafe_view_244,_unsafe_view_245],dim = -1) ;  _unsafe_view_244 = _unsafe_view_245 = None
        slice_244 = arg1167_1[0:] ;  arg1167_1 = None
        unsqueeze_1120 = torch.unsqueeze(slice_244,1) ;  slice_244 = None
        mul_462 = torch.mul(arg1171_1,unsqueeze_1120) ;  arg1171_1 = unsqueeze_1120 = None
        _to_copy_1970 = mul_462.to(dtype = torch.bfloat16) ;  mul_462 = None
        t_735 = _to_copy_1970.t() ;  _to_copy_1970 = None
        view_3503 = cat_51.view(262144, 512) ;  cat_51 = None
        mm_685 = torch.mm(view_3503,t_735) ;  view_3503 = t_735 = None
        view_3504 = mm_685.view(1, 512, 512, 256) ;  mm_685 = None
        add_370 = torch.add(add_369,view_3504) ;  add_369 = view_3504 = None
        split_tensor_367 = torch.split(add_363,512,dim = -2) 
        getitem_3392 = split_tensor_367[0];  split_tensor_367 = None
        _to_copy_1971 = getitem_3392.to(dtype = torch.float32) ;  getitem_3392 = None
        native_layer_norm_default_406 = (torch.nn.functional.layer_norm(_to_copy_1971,[256],arg1158_1,arg1159_1,1e-05),) ;  _to_copy_1971 = arg1158_1 = arg1159_1 = None
        getitem_3393 = native_layer_norm_default_406[0]
        _to_copy_1972 = arg1160_1.to(dtype = torch.bfloat16) ;  arg1160_1 = None
        _to_copy_1973 = getitem_3393.to(dtype = torch.bfloat16) ;  getitem_3393 = None
        t_736 = _to_copy_1972.t() ;  _to_copy_1972 = None
        view_3505 = _to_copy_1973.view(262144, 256) ;  _to_copy_1973 = None
        mm_686 = torch.mm(view_3505,t_736) ;  view_3505 = t_736 = None
        view_3506 = mm_686.view(1, 512, 512, 1024) ;  mm_686 = None
        split_tensor_368 = torch.split(view_3506,512,dim = -1) ;  view_3506 = None
        getitem_3396 = split_tensor_368[0]
        getitem_3397 = split_tensor_368[1];  split_tensor_368 = None
        silu_96 = torch.nn.functional.silu(getitem_3396) ;  getitem_3396 = None
        mul_463 = torch.mul(silu_96,getitem_3397) ;  silu_96 = getitem_3397 = None
        _to_copy_1974 = arg1161_1.to(dtype = torch.bfloat16) ;  arg1161_1 = None
        t_737 = _to_copy_1974.t() ;  _to_copy_1974 = None
        view_3508 = mul_463.view(262144, 512) ;  mul_463 = None
        mm_687 = torch.mm(view_3508,t_737) ;  view_3508 = t_737 = None
        view_3509 = mm_687.view(1, 512, 512, 256) ;  mm_687 = None
        add_371 = torch.add(add_370,view_3509) ;  add_370 = view_3509 = None
        _to_copy_1975 = add_367.to(dtype = torch.float32) 
        native_layer_norm_default_407 = (torch.nn.functional.layer_norm(_to_copy_1975,[384],arg1176_1,arg1177_1,1e-05),) ;  _to_copy_1975 = arg1176_1 = arg1177_1 = None
        getitem_3398 = native_layer_norm_default_407[0]
        _to_copy_1976 = add_363.to(dtype = torch.float32) ;  add_363 = None
        native_layer_norm_default_408 = (torch.nn.functional.layer_norm(_to_copy_1976,[256],arg1178_1,arg1179_1,1e-05),) ;  _to_copy_1976 = arg1178_1 = arg1179_1 = None
        getitem_3401 = native_layer_norm_default_408[0]
        _to_copy_1977 = arg1180_1.to(dtype = torch.bfloat16) ;  arg1180_1 = None
        _to_copy_1978 = getitem_3401.to(dtype = torch.bfloat16) ;  getitem_3401 = None
        t_738 = _to_copy_1977.t() ;  _to_copy_1977 = None
        view_3510 = _to_copy_1978.view(262144, 256) ;  _to_copy_1978 = None
        mm_688 = torch.mm(view_3510,t_738) ;  view_3510 = t_738 = None
        view_3511 = mm_688.view(1, 512, 512, 16) ;  mm_688 = None
        permute_1857 = view_3511.permute(0, 3, 1, 2) ;  view_3511 = None
        view_3512 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_217 = torch.bitwise_not(view_3512) ;  view_3512 = None
        masked_fill_217 = permute_1857.masked_fill(bitwise_not_217,-10000) ;  permute_1857 = bitwise_not_217 = None
        _to_copy_1979 = getitem_3398.to(dtype = torch.bfloat16) ;  getitem_3398 = None
        _to_copy_1980 = arg1182_1.to(dtype = torch.bfloat16) ;  arg1182_1 = None
        unsqueeze_1121 = torch.unsqueeze(_to_copy_1979,3) ;  _to_copy_1979 = None
        unsqueeze_1122 = torch.unsqueeze(unsqueeze_1121,4) ;  unsqueeze_1121 = None
        unsqueeze_1123 = torch.unsqueeze(unsqueeze_1122,5) ;  unsqueeze_1122 = None
        permute_1858 = unsqueeze_1123.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_1123 = None
        unsqueeze_1124 = torch.unsqueeze(_to_copy_1980,4) ;  _to_copy_1980 = None
        unsqueeze_1125 = torch.unsqueeze(unsqueeze_1124,5) ;  unsqueeze_1124 = None
        permute_1859 = unsqueeze_1125.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_1125 = None
        permute_1860 = permute_1858.permute(3, 5, 0, 1, 2, 4) ;  permute_1858 = None
        view_3513 = permute_1860.view(1, 512, 384) ;  permute_1860 = None
        permute_1861 = permute_1859.permute(5, 0, 1, 2, 4, 3) ;  permute_1859 = None
        view_3514 = permute_1861.view(1, 384, 1536) ;  permute_1861 = None
        bmm_276 = torch.bmm(view_3513,view_3514) ;  view_3513 = view_3514 = None
        view_3515 = bmm_276.view(512, 1, 4, 1, 16, 24) ;  bmm_276 = None
        permute_1862 = view_3515.permute(2, 3, 4, 0, 5, 1) ;  view_3515 = None
        view_3516 = permute_1862.view(4, 1, 16, 512, 24) ;  permute_1862 = None
        unbind_int_159 = torch.unbind(view_3516) ;  view_3516 = None
        getitem_3404 = unbind_int_159[0]
        getitem_3405 = unbind_int_159[1]
        getitem_3406 = unbind_int_159[2]
        getitem_3407 = unbind_int_159[3];  unbind_int_159 = None
        view_3517 = arg1181_1.view(1, 16, 1, 24) ;  arg1181_1 = None
        add_372 = torch.add(getitem_3404,view_3517) ;  getitem_3404 = view_3517 = None
        _to_copy_1981 = add_372.to(dtype = torch.bfloat16) ;  add_372 = None
        expand_226 = masked_fill_217.expand(1, 16, 512, 512) ;  masked_fill_217 = None
        _scaled_dot_product_efficient_attention_default_131 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_1981,getitem_3405,getitem_3406,expand_226,False),) ;  _to_copy_1981 = getitem_3405 = getitem_3406 = expand_226 = None
        getitem_3408 = _scaled_dot_product_efficient_attention_default_131[0]
        add_373 = torch.add(getitem_3407,1) ;  getitem_3407 = None
        sigmoid_281 = torch.sigmoid(add_373) ;  add_373 = None
        mul_464 = torch.mul(getitem_3408,sigmoid_281) ;  getitem_3408 = sigmoid_281 = None
        _to_copy_1982 = arg1183_1.to(dtype = torch.bfloat16) ;  arg1183_1 = None
        unsqueeze_1126 = torch.unsqueeze(mul_464,4) ;  mul_464 = None
        permute_1863 = unsqueeze_1126.permute(0, 2, 4, 3, 1) ;  unsqueeze_1126 = None
        unsqueeze_1127 = torch.unsqueeze(_to_copy_1982,3) ;  _to_copy_1982 = None
        unsqueeze_1128 = torch.unsqueeze(unsqueeze_1127,4) ;  unsqueeze_1127 = None
        permute_1864 = unsqueeze_1128.permute(3, 4, 2, 1, 0) ;  unsqueeze_1128 = None
        permute_1865 = permute_1863.permute(1, 3, 4, 0, 2) ;  permute_1863 = None
        clone_293 = torch.clone(permute_1865,memory_format = torch.contiguous_format) ;  permute_1865 = None
        _unsafe_view_246 = clone_293.view(1, 512, 384) ;  clone_293 = None
        permute_1866 = permute_1864.permute(3, 4, 0, 2, 1) ;  permute_1864 = None
        clone_294 = torch.clone(permute_1866,memory_format = torch.contiguous_format) ;  permute_1866 = None
        _unsafe_view_247 = clone_294.view(1, 384, 384) ;  clone_294 = None
        bmm_277 = torch.bmm(_unsafe_view_246,_unsafe_view_247) ;  _unsafe_view_246 = _unsafe_view_247 = None
        view_3518 = bmm_277.view(512, 1, 1, 1, 384) ;  bmm_277 = None
        permute_1867 = view_3518.permute(3, 0, 4, 1, 2) ;  view_3518 = None
        view_3519 = permute_1867.view(1, 512, 384) ;  permute_1867 = None
        unsqueeze_1129 = torch.unsqueeze(arg1406_1,-1) 
        mul_465 = torch.mul(view_3519,unsqueeze_1129) ;  view_3519 = unsqueeze_1129 = None
        add_374 = torch.add(add_367,mul_465) ;  mul_465 = None
        split_tensor_369 = torch.split(add_367,512,dim = -2) ;  add_367 = None
        getitem_3412 = split_tensor_369[0];  split_tensor_369 = None
        _to_copy_1983 = getitem_3412.to(dtype = torch.float32) ;  getitem_3412 = None
        native_layer_norm_default_409 = (torch.nn.functional.layer_norm(_to_copy_1983,[384],arg1172_1,arg1173_1,1e-05),) ;  _to_copy_1983 = arg1172_1 = arg1173_1 = None
        getitem_3413 = native_layer_norm_default_409[0]
        _to_copy_1984 = arg1174_1.to(dtype = torch.bfloat16) ;  arg1174_1 = None
        _to_copy_1985 = getitem_3413.to(dtype = torch.bfloat16) ;  getitem_3413 = None
        t_739 = _to_copy_1984.t() ;  _to_copy_1984 = None
        view_3520 = _to_copy_1985.view(512, 384) ;  _to_copy_1985 = None
        mm_689 = torch.mm(view_3520,t_739) ;  view_3520 = t_739 = None
        view_3521 = mm_689.view(1, 512, 1536) ;  mm_689 = None
        split_tensor_370 = torch.split(view_3521,768,dim = -1) ;  view_3521 = None
        getitem_3416 = split_tensor_370[0]
        getitem_3417 = split_tensor_370[1];  split_tensor_370 = None
        silu_97 = torch.nn.functional.silu(getitem_3416) ;  getitem_3416 = None
        mul_466 = torch.mul(silu_97,getitem_3417) ;  silu_97 = getitem_3417 = None
        _to_copy_1986 = arg1175_1.to(dtype = torch.bfloat16) ;  arg1175_1 = None
        t_740 = _to_copy_1986.t() ;  _to_copy_1986 = None
        view_3523 = mul_466.view(512, 768) ;  mul_466 = None
        mm_690 = torch.mm(view_3523,t_740) ;  view_3523 = t_740 = None
        view_3524 = mm_690.view(1, 512, 384) ;  mm_690 = None
        add_375 = torch.add(add_374,view_3524) ;  add_374 = view_3524 = None
        _to_copy_1987 = add_371.to(dtype = torch.float32) 
        native_layer_norm_default_410 = (torch.nn.functional.layer_norm(_to_copy_1987,[256],arg1188_1,arg1189_1,1e-05),) ;  _to_copy_1987 = arg1188_1 = arg1189_1 = None
        getitem_3418 = native_layer_norm_default_410[0]
        split_with_sizes_default_92 = torch.split(arg1191_1,[512,512]) ;  arg1191_1 = None
        getitem_3421 = split_with_sizes_default_92[0]
        getitem_3422 = split_with_sizes_default_92[1];  split_with_sizes_default_92 = None
        split_with_sizes_default_93 = torch.split(arg1192_1,[512,512,256]) ;  arg1192_1 = None
        getitem_3423 = split_with_sizes_default_93[0]
        getitem_3424 = split_with_sizes_default_93[1]
        getitem_3425 = split_with_sizes_default_93[2];  split_with_sizes_default_93 = None
        _to_copy_1988 = getitem_3421.to(dtype = torch.bfloat16) ;  getitem_3421 = None
        _to_copy_1989 = getitem_3418.to(dtype = torch.bfloat16) 
        t_741 = _to_copy_1988.t() ;  _to_copy_1988 = None
        view_3525 = _to_copy_1989.view(262144, 256) ;  _to_copy_1989 = None
        mm_691 = torch.mm(view_3525,t_741) ;  view_3525 = t_741 = None
        view_3526 = mm_691.view(1, 512, 512, 512) ;  mm_691 = None
        _to_copy_1990 = getitem_3423.to(dtype = torch.bfloat16) ;  getitem_3423 = None
        _to_copy_1991 = getitem_3418.to(dtype = torch.bfloat16) 
        t_742 = _to_copy_1990.t() ;  _to_copy_1990 = None
        view_3527 = _to_copy_1991.view(262144, 256) ;  _to_copy_1991 = None
        mm_692 = torch.mm(view_3527,t_742) ;  view_3527 = t_742 = None
        view_3528 = mm_692.view(1, 512, 512, 512) ;  mm_692 = None
        sigmoid_282 = torch.sigmoid(view_3528) ;  view_3528 = None
        mul_467 = torch.mul(view_3526,sigmoid_282) ;  view_3526 = sigmoid_282 = None
        unsqueeze_1130 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_218 = torch.bitwise_not(unsqueeze_1130) ;  unsqueeze_1130 = None
        masked_fill_218 = mul_467.masked_fill(bitwise_not_218,0) ;  mul_467 = bitwise_not_218 = None
        split_tensor_371 = torch.split(masked_fill_218,256,dim = -1) 
        getitem_3428 = split_tensor_371[0]
        unsqueeze_1133 = torch.unsqueeze(getitem_3428,4) ;  getitem_3428 = None
        permute_1872 = unsqueeze_1133.permute(0, 1, 4, 3, 2) ;  unsqueeze_1133 = None
        permute_1873 = permute_1872.permute(3, 1, 4, 0, 2) ;  permute_1872 = None
        view_3531 = permute_1873.view(256, 512, 512) ;  permute_1873 = None
        split_tensor_372 = torch.split(masked_fill_218,256,dim = -1) ;  masked_fill_218 = None
        getitem_3431 = split_tensor_372[1];  split_tensor_372 = None
        unsqueeze_1134 = torch.unsqueeze(getitem_3431,4) ;  getitem_3431 = None
        permute_1874 = unsqueeze_1134.permute(0, 4, 1, 3, 2) ;  unsqueeze_1134 = None
        permute_1875 = permute_1874.permute(3, 4, 0, 2, 1) ;  permute_1874 = None
        view_3532 = permute_1875.view(256, 512, 512) ;  permute_1875 = None
        bmm_278 = torch.bmm(view_3531,view_3532) ;  view_3531 = view_3532 = None
        view_3533 = bmm_278.view(256, 512, 1, 1, 512) ;  bmm_278 = None
        permute_1876 = view_3533.permute(3, 1, 4, 0, 2) ;  view_3533 = None
        view_3534 = permute_1876.view(1, 512, 512, 256) ;  permute_1876 = None
        _to_copy_1992 = getitem_3422.to(dtype = torch.bfloat16) ;  getitem_3422 = None
        _to_copy_1993 = getitem_3418.to(dtype = torch.bfloat16) 
        t_743 = _to_copy_1992.t() ;  _to_copy_1992 = None
        view_3535 = _to_copy_1993.view(262144, 256) ;  _to_copy_1993 = None
        mm_693 = torch.mm(view_3535,t_743) ;  view_3535 = t_743 = None
        view_3536 = mm_693.view(1, 512, 512, 512) ;  mm_693 = None
        _to_copy_1994 = getitem_3424.to(dtype = torch.bfloat16) ;  getitem_3424 = None
        _to_copy_1995 = getitem_3418.to(dtype = torch.bfloat16) 
        t_744 = _to_copy_1994.t() ;  _to_copy_1994 = None
        view_3537 = _to_copy_1995.view(262144, 256) ;  _to_copy_1995 = None
        mm_694 = torch.mm(view_3537,t_744) ;  view_3537 = t_744 = None
        view_3538 = mm_694.view(1, 512, 512, 512) ;  mm_694 = None
        sigmoid_283 = torch.sigmoid(view_3538) ;  view_3538 = None
        mul_468 = torch.mul(view_3536,sigmoid_283) ;  view_3536 = sigmoid_283 = None
        view_3539 = mul_468.view(262144, 512) ;  mul_468 = None
        view_3540 = view_3539.view(1, 512, 512, 512) ;  view_3539 = None
        transpose_92 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_1135 = torch.unsqueeze(transpose_92,3) ;  transpose_92 = None
        clone_295 = torch.clone(unsqueeze_1135,memory_format = torch.contiguous_format) ;  unsqueeze_1135 = None
        bitwise_not_219 = torch.bitwise_not(clone_295) ;  clone_295 = None
        masked_fill_219 = view_3540.masked_fill(bitwise_not_219,0) ;  view_3540 = bitwise_not_219 = None
        view_3541 = masked_fill_219.view(262144, 512) ;  masked_fill_219 = None
        view_3545 = view_3541.view(1, 512, 512, 512) 
        split_tensor_373 = torch.split(view_3545,256,dim = -1) ;  view_3545 = None
        getitem_3434 = split_tensor_373[0]
        unsqueeze_1138 = torch.unsqueeze(getitem_3434,4) ;  getitem_3434 = None
        permute_1881 = unsqueeze_1138.permute(0, 2, 4, 3, 1) ;  unsqueeze_1138 = None
        permute_1882 = permute_1881.permute(3, 1, 4, 0, 2) ;  permute_1881 = None
        view_3546 = permute_1882.view(256, 512, 512) ;  permute_1882 = None
        view_3547 = view_3541.view(1, 512, 512, 512) ;  view_3541 = None
        split_tensor_374 = torch.split(view_3547,256,dim = -1) ;  view_3547 = None
        getitem_3437 = split_tensor_374[1];  split_tensor_374 = None
        unsqueeze_1139 = torch.unsqueeze(getitem_3437,4) ;  getitem_3437 = None
        permute_1883 = unsqueeze_1139.permute(0, 4, 2, 3, 1) ;  unsqueeze_1139 = None
        permute_1884 = permute_1883.permute(3, 4, 0, 2, 1) ;  permute_1883 = None
        view_3548 = permute_1884.view(256, 512, 512) ;  permute_1884 = None
        bmm_279 = torch.bmm(view_3546,view_3548) ;  view_3546 = view_3548 = None
        view_3549 = bmm_279.view(256, 512, 1, 1, 512) ;  bmm_279 = None
        permute_1885 = view_3549.permute(3, 1, 4, 0, 2) ;  view_3549 = None
        view_3550 = permute_1885.view(1, 512, 512, 256) ;  permute_1885 = None
        _to_copy_1996 = view_3534.to(dtype = torch.float32) ;  view_3534 = None
        native_layer_norm_default_411 = (torch.nn.functional.layer_norm(_to_copy_1996,[256],None,None,1e-05),) ;  _to_copy_1996 = None
        getitem_3438 = native_layer_norm_default_411[0]
        _to_copy_1997 = view_3550.to(dtype = torch.float32) ;  view_3550 = None
        native_layer_norm_default_412 = (torch.nn.functional.layer_norm(_to_copy_1997,[256],None,None,1e-05),) ;  _to_copy_1997 = None
        getitem_3441 = native_layer_norm_default_412[0]
        add_376 = torch.add(getitem_3438,getitem_3441) ;  getitem_3438 = getitem_3441 = None
        _to_copy_1998 = arg1190_1.to(dtype = torch.bfloat16) ;  arg1190_1 = None
        _to_copy_1999 = add_376.to(dtype = torch.bfloat16) ;  add_376 = None
        t_745 = _to_copy_1998.t() ;  _to_copy_1998 = None
        view_3551 = _to_copy_1999.view(262144, 256) ;  _to_copy_1999 = None
        mm_695 = torch.mm(view_3551,t_745) ;  view_3551 = t_745 = None
        view_3552 = mm_695.view(1, 512, 512, 256) ;  mm_695 = None
        _to_copy_2000 = getitem_3425.to(dtype = torch.bfloat16) ;  getitem_3425 = None
        _to_copy_2001 = getitem_3418.to(dtype = torch.bfloat16) ;  getitem_3418 = None
        t_746 = _to_copy_2000.t() ;  _to_copy_2000 = None
        view_3553 = _to_copy_2001.view(262144, 256) ;  _to_copy_2001 = None
        mm_696 = torch.mm(view_3553,t_746) ;  view_3553 = t_746 = None
        view_3554 = mm_696.view(1, 512, 512, 256) ;  mm_696 = None
        sigmoid_284 = torch.sigmoid(view_3554) ;  view_3554 = None
        mul_469 = torch.mul(view_3552,sigmoid_284) ;  view_3552 = sigmoid_284 = None
        add_377 = torch.add(add_371,mul_469) ;  mul_469 = None
        _to_copy_2002 = add_371.to(dtype = torch.float32) 
        native_layer_norm_default_413 = (torch.nn.functional.layer_norm(_to_copy_2002,[256],None,None,1e-05),) ;  _to_copy_2002 = None
        getitem_3444 = native_layer_norm_default_413[0]
        _to_copy_2003 = arg1194_1.to(dtype = torch.bfloat16) ;  arg1194_1 = None
        _to_copy_2004 = getitem_3444.to(dtype = torch.bfloat16) 
        t_747 = _to_copy_2003.t() ;  _to_copy_2003 = None
        view_3555 = _to_copy_2004.view(262144, 256) ;  _to_copy_2004 = None
        mm_697 = torch.mm(view_3555,t_747) ;  view_3555 = t_747 = None
        view_3556 = mm_697.view(1, 512, 512, 8) ;  mm_697 = None
        view_3557 = view_3556.view(1, 512, 512, 2, 4) ;  view_3556 = None
        permute_1886 = view_3557.permute(0, 3, 4, 1, 2) ;  view_3557 = None
        view_3558 = permute_1886.view(1, 2, 4, 1, 512, 512) ;  permute_1886 = None
        view_3559 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_220 = torch.bitwise_not(view_3559) ;  view_3559 = None
        masked_fill_220 = view_3558.masked_fill(bitwise_not_220,-10000) ;  view_3558 = bitwise_not_220 = None
        view_3560 = masked_fill_220.view(1, 2, 4, 512, 512) ;  masked_fill_220 = None
        permute_1887 = view_3560.permute(1, 0, 2, 3, 4) ;  view_3560 = None
        view_3561 = permute_1887.view(2, 4, 1, 512, 512) ;  permute_1887 = None
        _to_copy_2005 = arg1195_1.to(dtype = torch.bfloat16) ;  arg1195_1 = None
        _to_copy_2006 = getitem_3444.to(dtype = torch.bfloat16) 
        t_748 = _to_copy_2005.t() ;  _to_copy_2005 = None
        view_3562 = _to_copy_2006.view(262144, 256) ;  _to_copy_2006 = None
        mm_698 = torch.mm(view_3562,t_748) ;  view_3562 = t_748 = None
        view_3563 = mm_698.view(1, 512, 512, 1024) ;  mm_698 = None
        select_93 = torch.select(view_3561,0,0) 
        view_3564 = view_3563.view(1, 512, 512, 4, 4, 64) ;  view_3563 = None
        permute_1888 = view_3564.permute(4, 0, 3, 1, 2, 5) ;  view_3564 = None
        view_3565 = permute_1888.view(4, 4, 512, 512, 64) ;  permute_1888 = None
        unbind_int_160 = torch.unbind(view_3565) ;  view_3565 = None
        getitem_3447 = unbind_int_160[0]
        getitem_3448 = unbind_int_160[1]
        getitem_3449 = unbind_int_160[2]
        getitem_3450 = unbind_int_160[3];  unbind_int_160 = None
        expand_227 = select_93.expand(4, 512, 512, 512) ;  select_93 = None
        _scaled_dot_product_efficient_attention_default_132 = (torch.nn.functional.scaled_dot_product_attention(getitem_3447,getitem_3448,getitem_3449,expand_227,False),) ;  getitem_3447 = getitem_3448 = getitem_3449 = expand_227 = None
        getitem_3451 = _scaled_dot_product_efficient_attention_default_132[0]
        sigmoid_285 = torch.sigmoid(getitem_3450) ;  getitem_3450 = None
        mul_470 = torch.mul(getitem_3451,sigmoid_285) ;  getitem_3451 = sigmoid_285 = None
        view_3566 = mul_470.view(1, 4, 512, 512, 64) ;  mul_470 = None
        permute_1889 = view_3566.permute(0, 2, 3, 1, 4) ;  view_3566 = None
        clone_296 = torch.clone(permute_1889,memory_format = torch.contiguous_format) ;  permute_1889 = None
        _unsafe_view_248 = clone_296.view(1, 512, 512, 256) ;  clone_296 = None
        transpose_93 = torch.transpose(getitem_3444,1,2) ;  getitem_3444 = None
        _to_copy_2007 = arg1196_1.to(dtype = torch.bfloat16) ;  arg1196_1 = None
        _to_copy_2008 = transpose_93.to(dtype = torch.bfloat16) ;  transpose_93 = None
        t_749 = _to_copy_2007.t() ;  _to_copy_2007 = None
        expand_228 = _to_copy_2008.expand(1, 512, 512, 256) ;  _to_copy_2008 = None
        view_3567 = expand_228.view(512, 512, 256) ;  expand_228 = None
        expand_229 = t_749.expand(1, 512, 256, 1024) ;  t_749 = None
        view_3568 = expand_229.view(512, 256, 1024) ;  expand_229 = None
        bmm_280 = torch.bmm(view_3567,view_3568) ;  view_3567 = view_3568 = None
        view_3569 = bmm_280.view(1, 512, 512, 1024) ;  bmm_280 = None
        select_94 = torch.select(view_3561,0,1) ;  view_3561 = None
        view_3570 = view_3569.view(1, 512, 512, 4, 4, 64) ;  view_3569 = None
        permute_1890 = view_3570.permute(4, 0, 3, 1, 2, 5) ;  view_3570 = None
        view_3571 = permute_1890.view(4, 4, 512, 512, 64) ;  permute_1890 = None
        unbind_int_161 = torch.unbind(view_3571) ;  view_3571 = None
        getitem_3455 = unbind_int_161[0]
        getitem_3456 = unbind_int_161[1]
        getitem_3457 = unbind_int_161[2]
        getitem_3458 = unbind_int_161[3];  unbind_int_161 = None
        expand_230 = select_94.expand(4, 512, 512, 512) ;  select_94 = None
        _scaled_dot_product_efficient_attention_default_133 = (torch.nn.functional.scaled_dot_product_attention(getitem_3455,getitem_3456,getitem_3457,expand_230,False),) ;  getitem_3455 = getitem_3456 = getitem_3457 = expand_230 = None
        getitem_3459 = _scaled_dot_product_efficient_attention_default_133[0]
        sigmoid_286 = torch.sigmoid(getitem_3458) ;  getitem_3458 = None
        mul_471 = torch.mul(getitem_3459,sigmoid_286) ;  getitem_3459 = sigmoid_286 = None
        view_3572 = mul_471.view(1, 4, 512, 512, 64) ;  mul_471 = None
        permute_1891 = view_3572.permute(0, 2, 3, 1, 4) ;  view_3572 = None
        clone_297 = torch.clone(permute_1891,memory_format = torch.contiguous_format) ;  permute_1891 = None
        _unsafe_view_249 = clone_297.view(1, 512, 512, 256) ;  clone_297 = None
        cat_52 = torch.cat([_unsafe_view_248,_unsafe_view_249],dim = -1) ;  _unsafe_view_248 = _unsafe_view_249 = None
        slice_245 = arg1193_1[0:] ;  arg1193_1 = None
        unsqueeze_1140 = torch.unsqueeze(slice_245,1) ;  slice_245 = None
        mul_472 = torch.mul(arg1197_1,unsqueeze_1140) ;  arg1197_1 = unsqueeze_1140 = None
        _to_copy_2009 = mul_472.to(dtype = torch.bfloat16) ;  mul_472 = None
        t_750 = _to_copy_2009.t() ;  _to_copy_2009 = None
        view_3573 = cat_52.view(262144, 512) ;  cat_52 = None
        mm_699 = torch.mm(view_3573,t_750) ;  view_3573 = t_750 = None
        view_3574 = mm_699.view(1, 512, 512, 256) ;  mm_699 = None
        add_378 = torch.add(add_377,view_3574) ;  add_377 = view_3574 = None
        split_tensor_375 = torch.split(add_371,512,dim = -2) 
        getitem_3463 = split_tensor_375[0];  split_tensor_375 = None
        _to_copy_2010 = getitem_3463.to(dtype = torch.float32) ;  getitem_3463 = None
        native_layer_norm_default_414 = (torch.nn.functional.layer_norm(_to_copy_2010,[256],arg1184_1,arg1185_1,1e-05),) ;  _to_copy_2010 = arg1184_1 = arg1185_1 = None
        getitem_3464 = native_layer_norm_default_414[0]
        _to_copy_2011 = arg1186_1.to(dtype = torch.bfloat16) ;  arg1186_1 = None
        _to_copy_2012 = getitem_3464.to(dtype = torch.bfloat16) ;  getitem_3464 = None
        t_751 = _to_copy_2011.t() ;  _to_copy_2011 = None
        view_3575 = _to_copy_2012.view(262144, 256) ;  _to_copy_2012 = None
        mm_700 = torch.mm(view_3575,t_751) ;  view_3575 = t_751 = None
        view_3576 = mm_700.view(1, 512, 512, 1024) ;  mm_700 = None
        split_tensor_376 = torch.split(view_3576,512,dim = -1) ;  view_3576 = None
        getitem_3467 = split_tensor_376[0]
        getitem_3468 = split_tensor_376[1];  split_tensor_376 = None
        silu_98 = torch.nn.functional.silu(getitem_3467) ;  getitem_3467 = None
        mul_473 = torch.mul(silu_98,getitem_3468) ;  silu_98 = getitem_3468 = None
        _to_copy_2013 = arg1187_1.to(dtype = torch.bfloat16) ;  arg1187_1 = None
        t_752 = _to_copy_2013.t() ;  _to_copy_2013 = None
        view_3578 = mul_473.view(262144, 512) ;  mul_473 = None
        mm_701 = torch.mm(view_3578,t_752) ;  view_3578 = t_752 = None
        view_3579 = mm_701.view(1, 512, 512, 256) ;  mm_701 = None
        add_379 = torch.add(add_378,view_3579) ;  add_378 = view_3579 = None
        _to_copy_2014 = add_375.to(dtype = torch.float32) 
        native_layer_norm_default_415 = (torch.nn.functional.layer_norm(_to_copy_2014,[384],arg1202_1,arg1203_1,1e-05),) ;  _to_copy_2014 = arg1202_1 = arg1203_1 = None
        getitem_3469 = native_layer_norm_default_415[0]
        _to_copy_2015 = add_371.to(dtype = torch.float32) ;  add_371 = None
        native_layer_norm_default_416 = (torch.nn.functional.layer_norm(_to_copy_2015,[256],arg1204_1,arg1205_1,1e-05),) ;  _to_copy_2015 = arg1204_1 = arg1205_1 = None
        getitem_3472 = native_layer_norm_default_416[0]
        _to_copy_2016 = arg1206_1.to(dtype = torch.bfloat16) ;  arg1206_1 = None
        _to_copy_2017 = getitem_3472.to(dtype = torch.bfloat16) ;  getitem_3472 = None
        t_753 = _to_copy_2016.t() ;  _to_copy_2016 = None
        view_3580 = _to_copy_2017.view(262144, 256) ;  _to_copy_2017 = None
        mm_702 = torch.mm(view_3580,t_753) ;  view_3580 = t_753 = None
        view_3581 = mm_702.view(1, 512, 512, 16) ;  mm_702 = None
        permute_1892 = view_3581.permute(0, 3, 1, 2) ;  view_3581 = None
        view_3582 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_221 = torch.bitwise_not(view_3582) ;  view_3582 = None
        masked_fill_221 = permute_1892.masked_fill(bitwise_not_221,-10000) ;  permute_1892 = bitwise_not_221 = None
        _to_copy_2018 = getitem_3469.to(dtype = torch.bfloat16) ;  getitem_3469 = None
        _to_copy_2019 = arg1208_1.to(dtype = torch.bfloat16) ;  arg1208_1 = None
        unsqueeze_1141 = torch.unsqueeze(_to_copy_2018,3) ;  _to_copy_2018 = None
        unsqueeze_1142 = torch.unsqueeze(unsqueeze_1141,4) ;  unsqueeze_1141 = None
        unsqueeze_1143 = torch.unsqueeze(unsqueeze_1142,5) ;  unsqueeze_1142 = None
        permute_1893 = unsqueeze_1143.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_1143 = None
        unsqueeze_1144 = torch.unsqueeze(_to_copy_2019,4) ;  _to_copy_2019 = None
        unsqueeze_1145 = torch.unsqueeze(unsqueeze_1144,5) ;  unsqueeze_1144 = None
        permute_1894 = unsqueeze_1145.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_1145 = None
        permute_1895 = permute_1893.permute(3, 5, 0, 1, 2, 4) ;  permute_1893 = None
        view_3583 = permute_1895.view(1, 512, 384) ;  permute_1895 = None
        permute_1896 = permute_1894.permute(5, 0, 1, 2, 4, 3) ;  permute_1894 = None
        view_3584 = permute_1896.view(1, 384, 1536) ;  permute_1896 = None
        bmm_281 = torch.bmm(view_3583,view_3584) ;  view_3583 = view_3584 = None
        view_3585 = bmm_281.view(512, 1, 4, 1, 16, 24) ;  bmm_281 = None
        permute_1897 = view_3585.permute(2, 3, 4, 0, 5, 1) ;  view_3585 = None
        view_3586 = permute_1897.view(4, 1, 16, 512, 24) ;  permute_1897 = None
        unbind_int_162 = torch.unbind(view_3586) ;  view_3586 = None
        getitem_3475 = unbind_int_162[0]
        getitem_3476 = unbind_int_162[1]
        getitem_3477 = unbind_int_162[2]
        getitem_3478 = unbind_int_162[3];  unbind_int_162 = None
        view_3587 = arg1207_1.view(1, 16, 1, 24) ;  arg1207_1 = None
        add_380 = torch.add(getitem_3475,view_3587) ;  getitem_3475 = view_3587 = None
        _to_copy_2020 = add_380.to(dtype = torch.bfloat16) ;  add_380 = None
        expand_231 = masked_fill_221.expand(1, 16, 512, 512) ;  masked_fill_221 = None
        _scaled_dot_product_efficient_attention_default_134 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_2020,getitem_3476,getitem_3477,expand_231,False),) ;  _to_copy_2020 = getitem_3476 = getitem_3477 = expand_231 = None
        getitem_3479 = _scaled_dot_product_efficient_attention_default_134[0]
        add_381 = torch.add(getitem_3478,1) ;  getitem_3478 = None
        sigmoid_287 = torch.sigmoid(add_381) ;  add_381 = None
        mul_474 = torch.mul(getitem_3479,sigmoid_287) ;  getitem_3479 = sigmoid_287 = None
        _to_copy_2021 = arg1209_1.to(dtype = torch.bfloat16) ;  arg1209_1 = None
        unsqueeze_1146 = torch.unsqueeze(mul_474,4) ;  mul_474 = None
        permute_1898 = unsqueeze_1146.permute(0, 2, 4, 3, 1) ;  unsqueeze_1146 = None
        unsqueeze_1147 = torch.unsqueeze(_to_copy_2021,3) ;  _to_copy_2021 = None
        unsqueeze_1148 = torch.unsqueeze(unsqueeze_1147,4) ;  unsqueeze_1147 = None
        permute_1899 = unsqueeze_1148.permute(3, 4, 2, 1, 0) ;  unsqueeze_1148 = None
        permute_1900 = permute_1898.permute(1, 3, 4, 0, 2) ;  permute_1898 = None
        clone_298 = torch.clone(permute_1900,memory_format = torch.contiguous_format) ;  permute_1900 = None
        _unsafe_view_250 = clone_298.view(1, 512, 384) ;  clone_298 = None
        permute_1901 = permute_1899.permute(3, 4, 0, 2, 1) ;  permute_1899 = None
        clone_299 = torch.clone(permute_1901,memory_format = torch.contiguous_format) ;  permute_1901 = None
        _unsafe_view_251 = clone_299.view(1, 384, 384) ;  clone_299 = None
        bmm_282 = torch.bmm(_unsafe_view_250,_unsafe_view_251) ;  _unsafe_view_250 = _unsafe_view_251 = None
        view_3588 = bmm_282.view(512, 1, 1, 1, 384) ;  bmm_282 = None
        permute_1902 = view_3588.permute(3, 0, 4, 1, 2) ;  view_3588 = None
        view_3589 = permute_1902.view(1, 512, 384) ;  permute_1902 = None
        unsqueeze_1149 = torch.unsqueeze(arg1406_1,-1) 
        mul_475 = torch.mul(view_3589,unsqueeze_1149) ;  view_3589 = unsqueeze_1149 = None
        add_382 = torch.add(add_375,mul_475) ;  mul_475 = None
        split_tensor_377 = torch.split(add_375,512,dim = -2) ;  add_375 = None
        getitem_3483 = split_tensor_377[0];  split_tensor_377 = None
        _to_copy_2022 = getitem_3483.to(dtype = torch.float32) ;  getitem_3483 = None
        native_layer_norm_default_417 = (torch.nn.functional.layer_norm(_to_copy_2022,[384],arg1198_1,arg1199_1,1e-05),) ;  _to_copy_2022 = arg1198_1 = arg1199_1 = None
        getitem_3484 = native_layer_norm_default_417[0]
        _to_copy_2023 = arg1200_1.to(dtype = torch.bfloat16) ;  arg1200_1 = None
        _to_copy_2024 = getitem_3484.to(dtype = torch.bfloat16) ;  getitem_3484 = None
        t_754 = _to_copy_2023.t() ;  _to_copy_2023 = None
        view_3590 = _to_copy_2024.view(512, 384) ;  _to_copy_2024 = None
        mm_703 = torch.mm(view_3590,t_754) ;  view_3590 = t_754 = None
        view_3591 = mm_703.view(1, 512, 1536) ;  mm_703 = None
        split_tensor_378 = torch.split(view_3591,768,dim = -1) ;  view_3591 = None
        getitem_3487 = split_tensor_378[0]
        getitem_3488 = split_tensor_378[1];  split_tensor_378 = None
        silu_99 = torch.nn.functional.silu(getitem_3487) ;  getitem_3487 = None
        mul_476 = torch.mul(silu_99,getitem_3488) ;  silu_99 = getitem_3488 = None
        _to_copy_2025 = arg1201_1.to(dtype = torch.bfloat16) ;  arg1201_1 = None
        t_755 = _to_copy_2025.t() ;  _to_copy_2025 = None
        view_3593 = mul_476.view(512, 768) ;  mul_476 = None
        mm_704 = torch.mm(view_3593,t_755) ;  view_3593 = t_755 = None
        view_3594 = mm_704.view(1, 512, 384) ;  mm_704 = None
        add_383 = torch.add(add_382,view_3594) ;  add_382 = view_3594 = None
        _to_copy_2026 = add_379.to(dtype = torch.float32) 
        native_layer_norm_default_418 = (torch.nn.functional.layer_norm(_to_copy_2026,[256],arg1214_1,arg1215_1,1e-05),) ;  _to_copy_2026 = arg1214_1 = arg1215_1 = None
        getitem_3489 = native_layer_norm_default_418[0]
        split_with_sizes_default_94 = torch.split(arg1217_1,[512,512]) ;  arg1217_1 = None
        getitem_3492 = split_with_sizes_default_94[0]
        getitem_3493 = split_with_sizes_default_94[1];  split_with_sizes_default_94 = None
        split_with_sizes_default_95 = torch.split(arg1218_1,[512,512,256]) ;  arg1218_1 = None
        getitem_3494 = split_with_sizes_default_95[0]
        getitem_3495 = split_with_sizes_default_95[1]
        getitem_3496 = split_with_sizes_default_95[2];  split_with_sizes_default_95 = None
        _to_copy_2027 = getitem_3492.to(dtype = torch.bfloat16) ;  getitem_3492 = None
        _to_copy_2028 = getitem_3489.to(dtype = torch.bfloat16) 
        t_756 = _to_copy_2027.t() ;  _to_copy_2027 = None
        view_3595 = _to_copy_2028.view(262144, 256) ;  _to_copy_2028 = None
        mm_705 = torch.mm(view_3595,t_756) ;  view_3595 = t_756 = None
        view_3596 = mm_705.view(1, 512, 512, 512) ;  mm_705 = None
        _to_copy_2029 = getitem_3494.to(dtype = torch.bfloat16) ;  getitem_3494 = None
        _to_copy_2030 = getitem_3489.to(dtype = torch.bfloat16) 
        t_757 = _to_copy_2029.t() ;  _to_copy_2029 = None
        view_3597 = _to_copy_2030.view(262144, 256) ;  _to_copy_2030 = None
        mm_706 = torch.mm(view_3597,t_757) ;  view_3597 = t_757 = None
        view_3598 = mm_706.view(1, 512, 512, 512) ;  mm_706 = None
        sigmoid_288 = torch.sigmoid(view_3598) ;  view_3598 = None
        mul_477 = torch.mul(view_3596,sigmoid_288) ;  view_3596 = sigmoid_288 = None
        unsqueeze_1150 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_222 = torch.bitwise_not(unsqueeze_1150) ;  unsqueeze_1150 = None
        masked_fill_222 = mul_477.masked_fill(bitwise_not_222,0) ;  mul_477 = bitwise_not_222 = None
        split_tensor_379 = torch.split(masked_fill_222,256,dim = -1) 
        getitem_3499 = split_tensor_379[0]
        unsqueeze_1153 = torch.unsqueeze(getitem_3499,4) ;  getitem_3499 = None
        permute_1907 = unsqueeze_1153.permute(0, 1, 4, 3, 2) ;  unsqueeze_1153 = None
        permute_1908 = permute_1907.permute(3, 1, 4, 0, 2) ;  permute_1907 = None
        view_3601 = permute_1908.view(256, 512, 512) ;  permute_1908 = None
        split_tensor_380 = torch.split(masked_fill_222,256,dim = -1) ;  masked_fill_222 = None
        getitem_3502 = split_tensor_380[1];  split_tensor_380 = None
        unsqueeze_1154 = torch.unsqueeze(getitem_3502,4) ;  getitem_3502 = None
        permute_1909 = unsqueeze_1154.permute(0, 4, 1, 3, 2) ;  unsqueeze_1154 = None
        permute_1910 = permute_1909.permute(3, 4, 0, 2, 1) ;  permute_1909 = None
        view_3602 = permute_1910.view(256, 512, 512) ;  permute_1910 = None
        bmm_283 = torch.bmm(view_3601,view_3602) ;  view_3601 = view_3602 = None
        view_3603 = bmm_283.view(256, 512, 1, 1, 512) ;  bmm_283 = None
        permute_1911 = view_3603.permute(3, 1, 4, 0, 2) ;  view_3603 = None
        view_3604 = permute_1911.view(1, 512, 512, 256) ;  permute_1911 = None
        _to_copy_2031 = getitem_3493.to(dtype = torch.bfloat16) ;  getitem_3493 = None
        _to_copy_2032 = getitem_3489.to(dtype = torch.bfloat16) 
        t_758 = _to_copy_2031.t() ;  _to_copy_2031 = None
        view_3605 = _to_copy_2032.view(262144, 256) ;  _to_copy_2032 = None
        mm_707 = torch.mm(view_3605,t_758) ;  view_3605 = t_758 = None
        view_3606 = mm_707.view(1, 512, 512, 512) ;  mm_707 = None
        _to_copy_2033 = getitem_3495.to(dtype = torch.bfloat16) ;  getitem_3495 = None
        _to_copy_2034 = getitem_3489.to(dtype = torch.bfloat16) 
        t_759 = _to_copy_2033.t() ;  _to_copy_2033 = None
        view_3607 = _to_copy_2034.view(262144, 256) ;  _to_copy_2034 = None
        mm_708 = torch.mm(view_3607,t_759) ;  view_3607 = t_759 = None
        view_3608 = mm_708.view(1, 512, 512, 512) ;  mm_708 = None
        sigmoid_289 = torch.sigmoid(view_3608) ;  view_3608 = None
        mul_478 = torch.mul(view_3606,sigmoid_289) ;  view_3606 = sigmoid_289 = None
        view_3609 = mul_478.view(262144, 512) ;  mul_478 = None
        view_3610 = view_3609.view(1, 512, 512, 512) ;  view_3609 = None
        transpose_94 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_1155 = torch.unsqueeze(transpose_94,3) ;  transpose_94 = None
        clone_300 = torch.clone(unsqueeze_1155,memory_format = torch.contiguous_format) ;  unsqueeze_1155 = None
        bitwise_not_223 = torch.bitwise_not(clone_300) ;  clone_300 = None
        masked_fill_223 = view_3610.masked_fill(bitwise_not_223,0) ;  view_3610 = bitwise_not_223 = None
        view_3611 = masked_fill_223.view(262144, 512) ;  masked_fill_223 = None
        view_3615 = view_3611.view(1, 512, 512, 512) 
        split_tensor_381 = torch.split(view_3615,256,dim = -1) ;  view_3615 = None
        getitem_3505 = split_tensor_381[0]
        unsqueeze_1158 = torch.unsqueeze(getitem_3505,4) ;  getitem_3505 = None
        permute_1916 = unsqueeze_1158.permute(0, 2, 4, 3, 1) ;  unsqueeze_1158 = None
        permute_1917 = permute_1916.permute(3, 1, 4, 0, 2) ;  permute_1916 = None
        view_3616 = permute_1917.view(256, 512, 512) ;  permute_1917 = None
        view_3617 = view_3611.view(1, 512, 512, 512) ;  view_3611 = None
        split_tensor_382 = torch.split(view_3617,256,dim = -1) ;  view_3617 = None
        getitem_3508 = split_tensor_382[1];  split_tensor_382 = None
        unsqueeze_1159 = torch.unsqueeze(getitem_3508,4) ;  getitem_3508 = None
        permute_1918 = unsqueeze_1159.permute(0, 4, 2, 3, 1) ;  unsqueeze_1159 = None
        permute_1919 = permute_1918.permute(3, 4, 0, 2, 1) ;  permute_1918 = None
        view_3618 = permute_1919.view(256, 512, 512) ;  permute_1919 = None
        bmm_284 = torch.bmm(view_3616,view_3618) ;  view_3616 = view_3618 = None
        view_3619 = bmm_284.view(256, 512, 1, 1, 512) ;  bmm_284 = None
        permute_1920 = view_3619.permute(3, 1, 4, 0, 2) ;  view_3619 = None
        view_3620 = permute_1920.view(1, 512, 512, 256) ;  permute_1920 = None
        _to_copy_2035 = view_3604.to(dtype = torch.float32) ;  view_3604 = None
        native_layer_norm_default_419 = (torch.nn.functional.layer_norm(_to_copy_2035,[256],None,None,1e-05),) ;  _to_copy_2035 = None
        getitem_3509 = native_layer_norm_default_419[0]
        _to_copy_2036 = view_3620.to(dtype = torch.float32) ;  view_3620 = None
        native_layer_norm_default_420 = (torch.nn.functional.layer_norm(_to_copy_2036,[256],None,None,1e-05),) ;  _to_copy_2036 = None
        getitem_3512 = native_layer_norm_default_420[0]
        add_384 = torch.add(getitem_3509,getitem_3512) ;  getitem_3509 = getitem_3512 = None
        _to_copy_2037 = arg1216_1.to(dtype = torch.bfloat16) ;  arg1216_1 = None
        _to_copy_2038 = add_384.to(dtype = torch.bfloat16) ;  add_384 = None
        t_760 = _to_copy_2037.t() ;  _to_copy_2037 = None
        view_3621 = _to_copy_2038.view(262144, 256) ;  _to_copy_2038 = None
        mm_709 = torch.mm(view_3621,t_760) ;  view_3621 = t_760 = None
        view_3622 = mm_709.view(1, 512, 512, 256) ;  mm_709 = None
        _to_copy_2039 = getitem_3496.to(dtype = torch.bfloat16) ;  getitem_3496 = None
        _to_copy_2040 = getitem_3489.to(dtype = torch.bfloat16) ;  getitem_3489 = None
        t_761 = _to_copy_2039.t() ;  _to_copy_2039 = None
        view_3623 = _to_copy_2040.view(262144, 256) ;  _to_copy_2040 = None
        mm_710 = torch.mm(view_3623,t_761) ;  view_3623 = t_761 = None
        view_3624 = mm_710.view(1, 512, 512, 256) ;  mm_710 = None
        sigmoid_290 = torch.sigmoid(view_3624) ;  view_3624 = None
        mul_479 = torch.mul(view_3622,sigmoid_290) ;  view_3622 = sigmoid_290 = None
        add_385 = torch.add(add_379,mul_479) ;  mul_479 = None
        _to_copy_2041 = add_379.to(dtype = torch.float32) 
        native_layer_norm_default_421 = (torch.nn.functional.layer_norm(_to_copy_2041,[256],None,None,1e-05),) ;  _to_copy_2041 = None
        getitem_3515 = native_layer_norm_default_421[0]
        _to_copy_2042 = arg1220_1.to(dtype = torch.bfloat16) ;  arg1220_1 = None
        _to_copy_2043 = getitem_3515.to(dtype = torch.bfloat16) 
        t_762 = _to_copy_2042.t() ;  _to_copy_2042 = None
        view_3625 = _to_copy_2043.view(262144, 256) ;  _to_copy_2043 = None
        mm_711 = torch.mm(view_3625,t_762) ;  view_3625 = t_762 = None
        view_3626 = mm_711.view(1, 512, 512, 8) ;  mm_711 = None
        view_3627 = view_3626.view(1, 512, 512, 2, 4) ;  view_3626 = None
        permute_1921 = view_3627.permute(0, 3, 4, 1, 2) ;  view_3627 = None
        view_3628 = permute_1921.view(1, 2, 4, 1, 512, 512) ;  permute_1921 = None
        view_3629 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_224 = torch.bitwise_not(view_3629) ;  view_3629 = None
        masked_fill_224 = view_3628.masked_fill(bitwise_not_224,-10000) ;  view_3628 = bitwise_not_224 = None
        view_3630 = masked_fill_224.view(1, 2, 4, 512, 512) ;  masked_fill_224 = None
        permute_1922 = view_3630.permute(1, 0, 2, 3, 4) ;  view_3630 = None
        view_3631 = permute_1922.view(2, 4, 1, 512, 512) ;  permute_1922 = None
        _to_copy_2044 = arg1221_1.to(dtype = torch.bfloat16) ;  arg1221_1 = None
        _to_copy_2045 = getitem_3515.to(dtype = torch.bfloat16) 
        t_763 = _to_copy_2044.t() ;  _to_copy_2044 = None
        view_3632 = _to_copy_2045.view(262144, 256) ;  _to_copy_2045 = None
        mm_712 = torch.mm(view_3632,t_763) ;  view_3632 = t_763 = None
        view_3633 = mm_712.view(1, 512, 512, 1024) ;  mm_712 = None
        select_95 = torch.select(view_3631,0,0) 
        view_3634 = view_3633.view(1, 512, 512, 4, 4, 64) ;  view_3633 = None
        permute_1923 = view_3634.permute(4, 0, 3, 1, 2, 5) ;  view_3634 = None
        view_3635 = permute_1923.view(4, 4, 512, 512, 64) ;  permute_1923 = None
        unbind_int_163 = torch.unbind(view_3635) ;  view_3635 = None
        getitem_3518 = unbind_int_163[0]
        getitem_3519 = unbind_int_163[1]
        getitem_3520 = unbind_int_163[2]
        getitem_3521 = unbind_int_163[3];  unbind_int_163 = None
        expand_232 = select_95.expand(4, 512, 512, 512) ;  select_95 = None
        _scaled_dot_product_efficient_attention_default_135 = (torch.nn.functional.scaled_dot_product_attention(getitem_3518,getitem_3519,getitem_3520,expand_232,False),) ;  getitem_3518 = getitem_3519 = getitem_3520 = expand_232 = None
        getitem_3522 = _scaled_dot_product_efficient_attention_default_135[0]
        sigmoid_291 = torch.sigmoid(getitem_3521) ;  getitem_3521 = None
        mul_480 = torch.mul(getitem_3522,sigmoid_291) ;  getitem_3522 = sigmoid_291 = None
        view_3636 = mul_480.view(1, 4, 512, 512, 64) ;  mul_480 = None
        permute_1924 = view_3636.permute(0, 2, 3, 1, 4) ;  view_3636 = None
        clone_301 = torch.clone(permute_1924,memory_format = torch.contiguous_format) ;  permute_1924 = None
        _unsafe_view_252 = clone_301.view(1, 512, 512, 256) ;  clone_301 = None
        transpose_95 = torch.transpose(getitem_3515,1,2) ;  getitem_3515 = None
        _to_copy_2046 = arg1222_1.to(dtype = torch.bfloat16) ;  arg1222_1 = None
        _to_copy_2047 = transpose_95.to(dtype = torch.bfloat16) ;  transpose_95 = None
        t_764 = _to_copy_2046.t() ;  _to_copy_2046 = None
        expand_233 = _to_copy_2047.expand(1, 512, 512, 256) ;  _to_copy_2047 = None
        view_3637 = expand_233.view(512, 512, 256) ;  expand_233 = None
        expand_234 = t_764.expand(1, 512, 256, 1024) ;  t_764 = None
        view_3638 = expand_234.view(512, 256, 1024) ;  expand_234 = None
        bmm_285 = torch.bmm(view_3637,view_3638) ;  view_3637 = view_3638 = None
        view_3639 = bmm_285.view(1, 512, 512, 1024) ;  bmm_285 = None
        select_96 = torch.select(view_3631,0,1) ;  view_3631 = None
        view_3640 = view_3639.view(1, 512, 512, 4, 4, 64) ;  view_3639 = None
        permute_1925 = view_3640.permute(4, 0, 3, 1, 2, 5) ;  view_3640 = None
        view_3641 = permute_1925.view(4, 4, 512, 512, 64) ;  permute_1925 = None
        unbind_int_164 = torch.unbind(view_3641) ;  view_3641 = None
        getitem_3526 = unbind_int_164[0]
        getitem_3527 = unbind_int_164[1]
        getitem_3528 = unbind_int_164[2]
        getitem_3529 = unbind_int_164[3];  unbind_int_164 = None
        expand_235 = select_96.expand(4, 512, 512, 512) ;  select_96 = None
        _scaled_dot_product_efficient_attention_default_136 = (torch.nn.functional.scaled_dot_product_attention(getitem_3526,getitem_3527,getitem_3528,expand_235,False),) ;  getitem_3526 = getitem_3527 = getitem_3528 = expand_235 = None
        getitem_3530 = _scaled_dot_product_efficient_attention_default_136[0]
        sigmoid_292 = torch.sigmoid(getitem_3529) ;  getitem_3529 = None
        mul_481 = torch.mul(getitem_3530,sigmoid_292) ;  getitem_3530 = sigmoid_292 = None
        view_3642 = mul_481.view(1, 4, 512, 512, 64) ;  mul_481 = None
        permute_1926 = view_3642.permute(0, 2, 3, 1, 4) ;  view_3642 = None
        clone_302 = torch.clone(permute_1926,memory_format = torch.contiguous_format) ;  permute_1926 = None
        _unsafe_view_253 = clone_302.view(1, 512, 512, 256) ;  clone_302 = None
        cat_53 = torch.cat([_unsafe_view_252,_unsafe_view_253],dim = -1) ;  _unsafe_view_252 = _unsafe_view_253 = None
        slice_246 = arg1219_1[0:] ;  arg1219_1 = None
        unsqueeze_1160 = torch.unsqueeze(slice_246,1) ;  slice_246 = None
        mul_482 = torch.mul(arg1223_1,unsqueeze_1160) ;  arg1223_1 = unsqueeze_1160 = None
        _to_copy_2048 = mul_482.to(dtype = torch.bfloat16) ;  mul_482 = None
        t_765 = _to_copy_2048.t() ;  _to_copy_2048 = None
        view_3643 = cat_53.view(262144, 512) ;  cat_53 = None
        mm_713 = torch.mm(view_3643,t_765) ;  view_3643 = t_765 = None
        view_3644 = mm_713.view(1, 512, 512, 256) ;  mm_713 = None
        add_386 = torch.add(add_385,view_3644) ;  add_385 = view_3644 = None
        split_tensor_383 = torch.split(add_379,512,dim = -2) 
        getitem_3534 = split_tensor_383[0];  split_tensor_383 = None
        _to_copy_2049 = getitem_3534.to(dtype = torch.float32) ;  getitem_3534 = None
        native_layer_norm_default_422 = (torch.nn.functional.layer_norm(_to_copy_2049,[256],arg1210_1,arg1211_1,1e-05),) ;  _to_copy_2049 = arg1210_1 = arg1211_1 = None
        getitem_3535 = native_layer_norm_default_422[0]
        _to_copy_2050 = arg1212_1.to(dtype = torch.bfloat16) ;  arg1212_1 = None
        _to_copy_2051 = getitem_3535.to(dtype = torch.bfloat16) ;  getitem_3535 = None
        t_766 = _to_copy_2050.t() ;  _to_copy_2050 = None
        view_3645 = _to_copy_2051.view(262144, 256) ;  _to_copy_2051 = None
        mm_714 = torch.mm(view_3645,t_766) ;  view_3645 = t_766 = None
        view_3646 = mm_714.view(1, 512, 512, 1024) ;  mm_714 = None
        split_tensor_384 = torch.split(view_3646,512,dim = -1) ;  view_3646 = None
        getitem_3538 = split_tensor_384[0]
        getitem_3539 = split_tensor_384[1];  split_tensor_384 = None
        silu_100 = torch.nn.functional.silu(getitem_3538) ;  getitem_3538 = None
        mul_483 = torch.mul(silu_100,getitem_3539) ;  silu_100 = getitem_3539 = None
        _to_copy_2052 = arg1213_1.to(dtype = torch.bfloat16) ;  arg1213_1 = None
        t_767 = _to_copy_2052.t() ;  _to_copy_2052 = None
        view_3648 = mul_483.view(262144, 512) ;  mul_483 = None
        mm_715 = torch.mm(view_3648,t_767) ;  view_3648 = t_767 = None
        view_3649 = mm_715.view(1, 512, 512, 256) ;  mm_715 = None
        add_387 = torch.add(add_386,view_3649) ;  add_386 = view_3649 = None
        _to_copy_2053 = add_383.to(dtype = torch.float32) 
        native_layer_norm_default_423 = (torch.nn.functional.layer_norm(_to_copy_2053,[384],arg1228_1,arg1229_1,1e-05),) ;  _to_copy_2053 = arg1228_1 = arg1229_1 = None
        getitem_3540 = native_layer_norm_default_423[0]
        _to_copy_2054 = add_379.to(dtype = torch.float32) ;  add_379 = None
        native_layer_norm_default_424 = (torch.nn.functional.layer_norm(_to_copy_2054,[256],arg1230_1,arg1231_1,1e-05),) ;  _to_copy_2054 = arg1230_1 = arg1231_1 = None
        getitem_3543 = native_layer_norm_default_424[0]
        _to_copy_2055 = arg1232_1.to(dtype = torch.bfloat16) ;  arg1232_1 = None
        _to_copy_2056 = getitem_3543.to(dtype = torch.bfloat16) ;  getitem_3543 = None
        t_768 = _to_copy_2055.t() ;  _to_copy_2055 = None
        view_3650 = _to_copy_2056.view(262144, 256) ;  _to_copy_2056 = None
        mm_716 = torch.mm(view_3650,t_768) ;  view_3650 = t_768 = None
        view_3651 = mm_716.view(1, 512, 512, 16) ;  mm_716 = None
        permute_1927 = view_3651.permute(0, 3, 1, 2) ;  view_3651 = None
        view_3652 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_225 = torch.bitwise_not(view_3652) ;  view_3652 = None
        masked_fill_225 = permute_1927.masked_fill(bitwise_not_225,-10000) ;  permute_1927 = bitwise_not_225 = None
        _to_copy_2057 = getitem_3540.to(dtype = torch.bfloat16) ;  getitem_3540 = None
        _to_copy_2058 = arg1234_1.to(dtype = torch.bfloat16) ;  arg1234_1 = None
        unsqueeze_1161 = torch.unsqueeze(_to_copy_2057,3) ;  _to_copy_2057 = None
        unsqueeze_1162 = torch.unsqueeze(unsqueeze_1161,4) ;  unsqueeze_1161 = None
        unsqueeze_1163 = torch.unsqueeze(unsqueeze_1162,5) ;  unsqueeze_1162 = None
        permute_1928 = unsqueeze_1163.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_1163 = None
        unsqueeze_1164 = torch.unsqueeze(_to_copy_2058,4) ;  _to_copy_2058 = None
        unsqueeze_1165 = torch.unsqueeze(unsqueeze_1164,5) ;  unsqueeze_1164 = None
        permute_1929 = unsqueeze_1165.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_1165 = None
        permute_1930 = permute_1928.permute(3, 5, 0, 1, 2, 4) ;  permute_1928 = None
        view_3653 = permute_1930.view(1, 512, 384) ;  permute_1930 = None
        permute_1931 = permute_1929.permute(5, 0, 1, 2, 4, 3) ;  permute_1929 = None
        view_3654 = permute_1931.view(1, 384, 1536) ;  permute_1931 = None
        bmm_286 = torch.bmm(view_3653,view_3654) ;  view_3653 = view_3654 = None
        view_3655 = bmm_286.view(512, 1, 4, 1, 16, 24) ;  bmm_286 = None
        permute_1932 = view_3655.permute(2, 3, 4, 0, 5, 1) ;  view_3655 = None
        view_3656 = permute_1932.view(4, 1, 16, 512, 24) ;  permute_1932 = None
        unbind_int_165 = torch.unbind(view_3656) ;  view_3656 = None
        getitem_3546 = unbind_int_165[0]
        getitem_3547 = unbind_int_165[1]
        getitem_3548 = unbind_int_165[2]
        getitem_3549 = unbind_int_165[3];  unbind_int_165 = None
        view_3657 = arg1233_1.view(1, 16, 1, 24) ;  arg1233_1 = None
        add_388 = torch.add(getitem_3546,view_3657) ;  getitem_3546 = view_3657 = None
        _to_copy_2059 = add_388.to(dtype = torch.bfloat16) ;  add_388 = None
        expand_236 = masked_fill_225.expand(1, 16, 512, 512) ;  masked_fill_225 = None
        _scaled_dot_product_efficient_attention_default_137 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_2059,getitem_3547,getitem_3548,expand_236,False),) ;  _to_copy_2059 = getitem_3547 = getitem_3548 = expand_236 = None
        getitem_3550 = _scaled_dot_product_efficient_attention_default_137[0]
        add_389 = torch.add(getitem_3549,1) ;  getitem_3549 = None
        sigmoid_293 = torch.sigmoid(add_389) ;  add_389 = None
        mul_484 = torch.mul(getitem_3550,sigmoid_293) ;  getitem_3550 = sigmoid_293 = None
        _to_copy_2060 = arg1235_1.to(dtype = torch.bfloat16) ;  arg1235_1 = None
        unsqueeze_1166 = torch.unsqueeze(mul_484,4) ;  mul_484 = None
        permute_1933 = unsqueeze_1166.permute(0, 2, 4, 3, 1) ;  unsqueeze_1166 = None
        unsqueeze_1167 = torch.unsqueeze(_to_copy_2060,3) ;  _to_copy_2060 = None
        unsqueeze_1168 = torch.unsqueeze(unsqueeze_1167,4) ;  unsqueeze_1167 = None
        permute_1934 = unsqueeze_1168.permute(3, 4, 2, 1, 0) ;  unsqueeze_1168 = None
        permute_1935 = permute_1933.permute(1, 3, 4, 0, 2) ;  permute_1933 = None
        clone_303 = torch.clone(permute_1935,memory_format = torch.contiguous_format) ;  permute_1935 = None
        _unsafe_view_254 = clone_303.view(1, 512, 384) ;  clone_303 = None
        permute_1936 = permute_1934.permute(3, 4, 0, 2, 1) ;  permute_1934 = None
        clone_304 = torch.clone(permute_1936,memory_format = torch.contiguous_format) ;  permute_1936 = None
        _unsafe_view_255 = clone_304.view(1, 384, 384) ;  clone_304 = None
        bmm_287 = torch.bmm(_unsafe_view_254,_unsafe_view_255) ;  _unsafe_view_254 = _unsafe_view_255 = None
        view_3658 = bmm_287.view(512, 1, 1, 1, 384) ;  bmm_287 = None
        permute_1937 = view_3658.permute(3, 0, 4, 1, 2) ;  view_3658 = None
        view_3659 = permute_1937.view(1, 512, 384) ;  permute_1937 = None
        unsqueeze_1169 = torch.unsqueeze(arg1406_1,-1) 
        mul_485 = torch.mul(view_3659,unsqueeze_1169) ;  view_3659 = unsqueeze_1169 = None
        add_390 = torch.add(add_383,mul_485) ;  mul_485 = None
        split_tensor_385 = torch.split(add_383,512,dim = -2) ;  add_383 = None
        getitem_3554 = split_tensor_385[0];  split_tensor_385 = None
        _to_copy_2061 = getitem_3554.to(dtype = torch.float32) ;  getitem_3554 = None
        native_layer_norm_default_425 = (torch.nn.functional.layer_norm(_to_copy_2061,[384],arg1224_1,arg1225_1,1e-05),) ;  _to_copy_2061 = arg1224_1 = arg1225_1 = None
        getitem_3555 = native_layer_norm_default_425[0]
        _to_copy_2062 = arg1226_1.to(dtype = torch.bfloat16) ;  arg1226_1 = None
        _to_copy_2063 = getitem_3555.to(dtype = torch.bfloat16) ;  getitem_3555 = None
        t_769 = _to_copy_2062.t() ;  _to_copy_2062 = None
        view_3660 = _to_copy_2063.view(512, 384) ;  _to_copy_2063 = None
        mm_717 = torch.mm(view_3660,t_769) ;  view_3660 = t_769 = None
        view_3661 = mm_717.view(1, 512, 1536) ;  mm_717 = None
        split_tensor_386 = torch.split(view_3661,768,dim = -1) ;  view_3661 = None
        getitem_3558 = split_tensor_386[0]
        getitem_3559 = split_tensor_386[1];  split_tensor_386 = None
        silu_101 = torch.nn.functional.silu(getitem_3558) ;  getitem_3558 = None
        mul_486 = torch.mul(silu_101,getitem_3559) ;  silu_101 = getitem_3559 = None
        _to_copy_2064 = arg1227_1.to(dtype = torch.bfloat16) ;  arg1227_1 = None
        t_770 = _to_copy_2064.t() ;  _to_copy_2064 = None
        view_3663 = mul_486.view(512, 768) ;  mul_486 = None
        mm_718 = torch.mm(view_3663,t_770) ;  view_3663 = t_770 = None
        view_3664 = mm_718.view(1, 512, 384) ;  mm_718 = None
        add_391 = torch.add(add_390,view_3664) ;  add_390 = view_3664 = None
        _to_copy_2065 = add_387.to(dtype = torch.float32) 
        native_layer_norm_default_426 = (torch.nn.functional.layer_norm(_to_copy_2065,[256],arg1240_1,arg1241_1,1e-05),) ;  _to_copy_2065 = arg1240_1 = arg1241_1 = None
        getitem_3560 = native_layer_norm_default_426[0]
        split_with_sizes_default_96 = torch.split(arg1243_1,[512,512]) ;  arg1243_1 = None
        getitem_3563 = split_with_sizes_default_96[0]
        getitem_3564 = split_with_sizes_default_96[1];  split_with_sizes_default_96 = None
        split_with_sizes_default_97 = torch.split(arg1244_1,[512,512,256]) ;  arg1244_1 = None
        getitem_3565 = split_with_sizes_default_97[0]
        getitem_3566 = split_with_sizes_default_97[1]
        getitem_3567 = split_with_sizes_default_97[2];  split_with_sizes_default_97 = None
        _to_copy_2066 = getitem_3563.to(dtype = torch.bfloat16) ;  getitem_3563 = None
        _to_copy_2067 = getitem_3560.to(dtype = torch.bfloat16) 
        t_771 = _to_copy_2066.t() ;  _to_copy_2066 = None
        view_3665 = _to_copy_2067.view(262144, 256) ;  _to_copy_2067 = None
        mm_719 = torch.mm(view_3665,t_771) ;  view_3665 = t_771 = None
        view_3666 = mm_719.view(1, 512, 512, 512) ;  mm_719 = None
        _to_copy_2068 = getitem_3565.to(dtype = torch.bfloat16) ;  getitem_3565 = None
        _to_copy_2069 = getitem_3560.to(dtype = torch.bfloat16) 
        t_772 = _to_copy_2068.t() ;  _to_copy_2068 = None
        view_3667 = _to_copy_2069.view(262144, 256) ;  _to_copy_2069 = None
        mm_720 = torch.mm(view_3667,t_772) ;  view_3667 = t_772 = None
        view_3668 = mm_720.view(1, 512, 512, 512) ;  mm_720 = None
        sigmoid_294 = torch.sigmoid(view_3668) ;  view_3668 = None
        mul_487 = torch.mul(view_3666,sigmoid_294) ;  view_3666 = sigmoid_294 = None
        unsqueeze_1170 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_226 = torch.bitwise_not(unsqueeze_1170) ;  unsqueeze_1170 = None
        masked_fill_226 = mul_487.masked_fill(bitwise_not_226,0) ;  mul_487 = bitwise_not_226 = None
        split_tensor_387 = torch.split(masked_fill_226,256,dim = -1) 
        getitem_3570 = split_tensor_387[0]
        unsqueeze_1173 = torch.unsqueeze(getitem_3570,4) ;  getitem_3570 = None
        permute_1942 = unsqueeze_1173.permute(0, 1, 4, 3, 2) ;  unsqueeze_1173 = None
        permute_1943 = permute_1942.permute(3, 1, 4, 0, 2) ;  permute_1942 = None
        view_3671 = permute_1943.view(256, 512, 512) ;  permute_1943 = None
        split_tensor_388 = torch.split(masked_fill_226,256,dim = -1) ;  masked_fill_226 = None
        getitem_3573 = split_tensor_388[1];  split_tensor_388 = None
        unsqueeze_1174 = torch.unsqueeze(getitem_3573,4) ;  getitem_3573 = None
        permute_1944 = unsqueeze_1174.permute(0, 4, 1, 3, 2) ;  unsqueeze_1174 = None
        permute_1945 = permute_1944.permute(3, 4, 0, 2, 1) ;  permute_1944 = None
        view_3672 = permute_1945.view(256, 512, 512) ;  permute_1945 = None
        bmm_288 = torch.bmm(view_3671,view_3672) ;  view_3671 = view_3672 = None
        view_3673 = bmm_288.view(256, 512, 1, 1, 512) ;  bmm_288 = None
        permute_1946 = view_3673.permute(3, 1, 4, 0, 2) ;  view_3673 = None
        view_3674 = permute_1946.view(1, 512, 512, 256) ;  permute_1946 = None
        _to_copy_2070 = getitem_3564.to(dtype = torch.bfloat16) ;  getitem_3564 = None
        _to_copy_2071 = getitem_3560.to(dtype = torch.bfloat16) 
        t_773 = _to_copy_2070.t() ;  _to_copy_2070 = None
        view_3675 = _to_copy_2071.view(262144, 256) ;  _to_copy_2071 = None
        mm_721 = torch.mm(view_3675,t_773) ;  view_3675 = t_773 = None
        view_3676 = mm_721.view(1, 512, 512, 512) ;  mm_721 = None
        _to_copy_2072 = getitem_3566.to(dtype = torch.bfloat16) ;  getitem_3566 = None
        _to_copy_2073 = getitem_3560.to(dtype = torch.bfloat16) 
        t_774 = _to_copy_2072.t() ;  _to_copy_2072 = None
        view_3677 = _to_copy_2073.view(262144, 256) ;  _to_copy_2073 = None
        mm_722 = torch.mm(view_3677,t_774) ;  view_3677 = t_774 = None
        view_3678 = mm_722.view(1, 512, 512, 512) ;  mm_722 = None
        sigmoid_295 = torch.sigmoid(view_3678) ;  view_3678 = None
        mul_488 = torch.mul(view_3676,sigmoid_295) ;  view_3676 = sigmoid_295 = None
        view_3679 = mul_488.view(262144, 512) ;  mul_488 = None
        view_3680 = view_3679.view(1, 512, 512, 512) ;  view_3679 = None
        transpose_96 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_1175 = torch.unsqueeze(transpose_96,3) ;  transpose_96 = None
        clone_305 = torch.clone(unsqueeze_1175,memory_format = torch.contiguous_format) ;  unsqueeze_1175 = None
        bitwise_not_227 = torch.bitwise_not(clone_305) ;  clone_305 = None
        masked_fill_227 = view_3680.masked_fill(bitwise_not_227,0) ;  view_3680 = bitwise_not_227 = None
        view_3681 = masked_fill_227.view(262144, 512) ;  masked_fill_227 = None
        view_3685 = view_3681.view(1, 512, 512, 512) 
        split_tensor_389 = torch.split(view_3685,256,dim = -1) ;  view_3685 = None
        getitem_3576 = split_tensor_389[0]
        unsqueeze_1178 = torch.unsqueeze(getitem_3576,4) ;  getitem_3576 = None
        permute_1951 = unsqueeze_1178.permute(0, 2, 4, 3, 1) ;  unsqueeze_1178 = None
        permute_1952 = permute_1951.permute(3, 1, 4, 0, 2) ;  permute_1951 = None
        view_3686 = permute_1952.view(256, 512, 512) ;  permute_1952 = None
        view_3687 = view_3681.view(1, 512, 512, 512) ;  view_3681 = None
        split_tensor_390 = torch.split(view_3687,256,dim = -1) ;  view_3687 = None
        getitem_3579 = split_tensor_390[1];  split_tensor_390 = None
        unsqueeze_1179 = torch.unsqueeze(getitem_3579,4) ;  getitem_3579 = None
        permute_1953 = unsqueeze_1179.permute(0, 4, 2, 3, 1) ;  unsqueeze_1179 = None
        permute_1954 = permute_1953.permute(3, 4, 0, 2, 1) ;  permute_1953 = None
        view_3688 = permute_1954.view(256, 512, 512) ;  permute_1954 = None
        bmm_289 = torch.bmm(view_3686,view_3688) ;  view_3686 = view_3688 = None
        view_3689 = bmm_289.view(256, 512, 1, 1, 512) ;  bmm_289 = None
        permute_1955 = view_3689.permute(3, 1, 4, 0, 2) ;  view_3689 = None
        view_3690 = permute_1955.view(1, 512, 512, 256) ;  permute_1955 = None
        _to_copy_2074 = view_3674.to(dtype = torch.float32) ;  view_3674 = None
        native_layer_norm_default_427 = (torch.nn.functional.layer_norm(_to_copy_2074,[256],None,None,1e-05),) ;  _to_copy_2074 = None
        getitem_3580 = native_layer_norm_default_427[0]
        _to_copy_2075 = view_3690.to(dtype = torch.float32) ;  view_3690 = None
        native_layer_norm_default_428 = (torch.nn.functional.layer_norm(_to_copy_2075,[256],None,None,1e-05),) ;  _to_copy_2075 = None
        getitem_3583 = native_layer_norm_default_428[0]
        add_392 = torch.add(getitem_3580,getitem_3583) ;  getitem_3580 = getitem_3583 = None
        _to_copy_2076 = arg1242_1.to(dtype = torch.bfloat16) ;  arg1242_1 = None
        _to_copy_2077 = add_392.to(dtype = torch.bfloat16) ;  add_392 = None
        t_775 = _to_copy_2076.t() ;  _to_copy_2076 = None
        view_3691 = _to_copy_2077.view(262144, 256) ;  _to_copy_2077 = None
        mm_723 = torch.mm(view_3691,t_775) ;  view_3691 = t_775 = None
        view_3692 = mm_723.view(1, 512, 512, 256) ;  mm_723 = None
        _to_copy_2078 = getitem_3567.to(dtype = torch.bfloat16) ;  getitem_3567 = None
        _to_copy_2079 = getitem_3560.to(dtype = torch.bfloat16) ;  getitem_3560 = None
        t_776 = _to_copy_2078.t() ;  _to_copy_2078 = None
        view_3693 = _to_copy_2079.view(262144, 256) ;  _to_copy_2079 = None
        mm_724 = torch.mm(view_3693,t_776) ;  view_3693 = t_776 = None
        view_3694 = mm_724.view(1, 512, 512, 256) ;  mm_724 = None
        sigmoid_296 = torch.sigmoid(view_3694) ;  view_3694 = None
        mul_489 = torch.mul(view_3692,sigmoid_296) ;  view_3692 = sigmoid_296 = None
        add_393 = torch.add(add_387,mul_489) ;  mul_489 = None
        _to_copy_2080 = add_387.to(dtype = torch.float32) 
        native_layer_norm_default_429 = (torch.nn.functional.layer_norm(_to_copy_2080,[256],None,None,1e-05),) ;  _to_copy_2080 = None
        getitem_3586 = native_layer_norm_default_429[0]
        _to_copy_2081 = arg1246_1.to(dtype = torch.bfloat16) ;  arg1246_1 = None
        _to_copy_2082 = getitem_3586.to(dtype = torch.bfloat16) 
        t_777 = _to_copy_2081.t() ;  _to_copy_2081 = None
        view_3695 = _to_copy_2082.view(262144, 256) ;  _to_copy_2082 = None
        mm_725 = torch.mm(view_3695,t_777) ;  view_3695 = t_777 = None
        view_3696 = mm_725.view(1, 512, 512, 8) ;  mm_725 = None
        view_3697 = view_3696.view(1, 512, 512, 2, 4) ;  view_3696 = None
        permute_1956 = view_3697.permute(0, 3, 4, 1, 2) ;  view_3697 = None
        view_3698 = permute_1956.view(1, 2, 4, 1, 512, 512) ;  permute_1956 = None
        view_3699 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_228 = torch.bitwise_not(view_3699) ;  view_3699 = None
        masked_fill_228 = view_3698.masked_fill(bitwise_not_228,-10000) ;  view_3698 = bitwise_not_228 = None
        view_3700 = masked_fill_228.view(1, 2, 4, 512, 512) ;  masked_fill_228 = None
        permute_1957 = view_3700.permute(1, 0, 2, 3, 4) ;  view_3700 = None
        view_3701 = permute_1957.view(2, 4, 1, 512, 512) ;  permute_1957 = None
        _to_copy_2083 = arg1247_1.to(dtype = torch.bfloat16) ;  arg1247_1 = None
        _to_copy_2084 = getitem_3586.to(dtype = torch.bfloat16) 
        t_778 = _to_copy_2083.t() ;  _to_copy_2083 = None
        view_3702 = _to_copy_2084.view(262144, 256) ;  _to_copy_2084 = None
        mm_726 = torch.mm(view_3702,t_778) ;  view_3702 = t_778 = None
        view_3703 = mm_726.view(1, 512, 512, 1024) ;  mm_726 = None
        select_97 = torch.select(view_3701,0,0) 
        view_3704 = view_3703.view(1, 512, 512, 4, 4, 64) ;  view_3703 = None
        permute_1958 = view_3704.permute(4, 0, 3, 1, 2, 5) ;  view_3704 = None
        view_3705 = permute_1958.view(4, 4, 512, 512, 64) ;  permute_1958 = None
        unbind_int_166 = torch.unbind(view_3705) ;  view_3705 = None
        getitem_3589 = unbind_int_166[0]
        getitem_3590 = unbind_int_166[1]
        getitem_3591 = unbind_int_166[2]
        getitem_3592 = unbind_int_166[3];  unbind_int_166 = None
        expand_237 = select_97.expand(4, 512, 512, 512) ;  select_97 = None
        _scaled_dot_product_efficient_attention_default_138 = (torch.nn.functional.scaled_dot_product_attention(getitem_3589,getitem_3590,getitem_3591,expand_237,False),) ;  getitem_3589 = getitem_3590 = getitem_3591 = expand_237 = None
        getitem_3593 = _scaled_dot_product_efficient_attention_default_138[0]
        sigmoid_297 = torch.sigmoid(getitem_3592) ;  getitem_3592 = None
        mul_490 = torch.mul(getitem_3593,sigmoid_297) ;  getitem_3593 = sigmoid_297 = None
        view_3706 = mul_490.view(1, 4, 512, 512, 64) ;  mul_490 = None
        permute_1959 = view_3706.permute(0, 2, 3, 1, 4) ;  view_3706 = None
        clone_306 = torch.clone(permute_1959,memory_format = torch.contiguous_format) ;  permute_1959 = None
        _unsafe_view_256 = clone_306.view(1, 512, 512, 256) ;  clone_306 = None
        transpose_97 = torch.transpose(getitem_3586,1,2) ;  getitem_3586 = None
        _to_copy_2085 = arg1248_1.to(dtype = torch.bfloat16) ;  arg1248_1 = None
        _to_copy_2086 = transpose_97.to(dtype = torch.bfloat16) ;  transpose_97 = None
        t_779 = _to_copy_2085.t() ;  _to_copy_2085 = None
        expand_238 = _to_copy_2086.expand(1, 512, 512, 256) ;  _to_copy_2086 = None
        view_3707 = expand_238.view(512, 512, 256) ;  expand_238 = None
        expand_239 = t_779.expand(1, 512, 256, 1024) ;  t_779 = None
        view_3708 = expand_239.view(512, 256, 1024) ;  expand_239 = None
        bmm_290 = torch.bmm(view_3707,view_3708) ;  view_3707 = view_3708 = None
        view_3709 = bmm_290.view(1, 512, 512, 1024) ;  bmm_290 = None
        select_98 = torch.select(view_3701,0,1) ;  view_3701 = None
        view_3710 = view_3709.view(1, 512, 512, 4, 4, 64) ;  view_3709 = None
        permute_1960 = view_3710.permute(4, 0, 3, 1, 2, 5) ;  view_3710 = None
        view_3711 = permute_1960.view(4, 4, 512, 512, 64) ;  permute_1960 = None
        unbind_int_167 = torch.unbind(view_3711) ;  view_3711 = None
        getitem_3597 = unbind_int_167[0]
        getitem_3598 = unbind_int_167[1]
        getitem_3599 = unbind_int_167[2]
        getitem_3600 = unbind_int_167[3];  unbind_int_167 = None
        expand_240 = select_98.expand(4, 512, 512, 512) ;  select_98 = None
        _scaled_dot_product_efficient_attention_default_139 = (torch.nn.functional.scaled_dot_product_attention(getitem_3597,getitem_3598,getitem_3599,expand_240,False),) ;  getitem_3597 = getitem_3598 = getitem_3599 = expand_240 = None
        getitem_3601 = _scaled_dot_product_efficient_attention_default_139[0]
        sigmoid_298 = torch.sigmoid(getitem_3600) ;  getitem_3600 = None
        mul_491 = torch.mul(getitem_3601,sigmoid_298) ;  getitem_3601 = sigmoid_298 = None
        view_3712 = mul_491.view(1, 4, 512, 512, 64) ;  mul_491 = None
        permute_1961 = view_3712.permute(0, 2, 3, 1, 4) ;  view_3712 = None
        clone_307 = torch.clone(permute_1961,memory_format = torch.contiguous_format) ;  permute_1961 = None
        _unsafe_view_257 = clone_307.view(1, 512, 512, 256) ;  clone_307 = None
        cat_54 = torch.cat([_unsafe_view_256,_unsafe_view_257],dim = -1) ;  _unsafe_view_256 = _unsafe_view_257 = None
        slice_247 = arg1245_1[0:] ;  arg1245_1 = None
        unsqueeze_1180 = torch.unsqueeze(slice_247,1) ;  slice_247 = None
        mul_492 = torch.mul(arg1249_1,unsqueeze_1180) ;  arg1249_1 = unsqueeze_1180 = None
        _to_copy_2087 = mul_492.to(dtype = torch.bfloat16) ;  mul_492 = None
        t_780 = _to_copy_2087.t() ;  _to_copy_2087 = None
        view_3713 = cat_54.view(262144, 512) ;  cat_54 = None
        mm_727 = torch.mm(view_3713,t_780) ;  view_3713 = t_780 = None
        view_3714 = mm_727.view(1, 512, 512, 256) ;  mm_727 = None
        add_394 = torch.add(add_393,view_3714) ;  add_393 = view_3714 = None
        split_tensor_391 = torch.split(add_387,512,dim = -2) 
        getitem_3605 = split_tensor_391[0];  split_tensor_391 = None
        _to_copy_2088 = getitem_3605.to(dtype = torch.float32) ;  getitem_3605 = None
        native_layer_norm_default_430 = (torch.nn.functional.layer_norm(_to_copy_2088,[256],arg1236_1,arg1237_1,1e-05),) ;  _to_copy_2088 = arg1236_1 = arg1237_1 = None
        getitem_3606 = native_layer_norm_default_430[0]
        _to_copy_2089 = arg1238_1.to(dtype = torch.bfloat16) ;  arg1238_1 = None
        _to_copy_2090 = getitem_3606.to(dtype = torch.bfloat16) ;  getitem_3606 = None
        t_781 = _to_copy_2089.t() ;  _to_copy_2089 = None
        view_3715 = _to_copy_2090.view(262144, 256) ;  _to_copy_2090 = None
        mm_728 = torch.mm(view_3715,t_781) ;  view_3715 = t_781 = None
        view_3716 = mm_728.view(1, 512, 512, 1024) ;  mm_728 = None
        split_tensor_392 = torch.split(view_3716,512,dim = -1) ;  view_3716 = None
        getitem_3609 = split_tensor_392[0]
        getitem_3610 = split_tensor_392[1];  split_tensor_392 = None
        silu_102 = torch.nn.functional.silu(getitem_3609) ;  getitem_3609 = None
        mul_493 = torch.mul(silu_102,getitem_3610) ;  silu_102 = getitem_3610 = None
        _to_copy_2091 = arg1239_1.to(dtype = torch.bfloat16) ;  arg1239_1 = None
        t_782 = _to_copy_2091.t() ;  _to_copy_2091 = None
        view_3718 = mul_493.view(262144, 512) ;  mul_493 = None
        mm_729 = torch.mm(view_3718,t_782) ;  view_3718 = t_782 = None
        view_3719 = mm_729.view(1, 512, 512, 256) ;  mm_729 = None
        add_395 = torch.add(add_394,view_3719) ;  add_394 = view_3719 = None
        _to_copy_2092 = add_391.to(dtype = torch.float32) 
        native_layer_norm_default_431 = (torch.nn.functional.layer_norm(_to_copy_2092,[384],arg1254_1,arg1255_1,1e-05),) ;  _to_copy_2092 = arg1254_1 = arg1255_1 = None
        getitem_3611 = native_layer_norm_default_431[0]
        _to_copy_2093 = add_387.to(dtype = torch.float32) ;  add_387 = None
        native_layer_norm_default_432 = (torch.nn.functional.layer_norm(_to_copy_2093,[256],arg1256_1,arg1257_1,1e-05),) ;  _to_copy_2093 = arg1256_1 = arg1257_1 = None
        getitem_3614 = native_layer_norm_default_432[0]
        _to_copy_2094 = arg1258_1.to(dtype = torch.bfloat16) ;  arg1258_1 = None
        _to_copy_2095 = getitem_3614.to(dtype = torch.bfloat16) ;  getitem_3614 = None
        t_783 = _to_copy_2094.t() ;  _to_copy_2094 = None
        view_3720 = _to_copy_2095.view(262144, 256) ;  _to_copy_2095 = None
        mm_730 = torch.mm(view_3720,t_783) ;  view_3720 = t_783 = None
        view_3721 = mm_730.view(1, 512, 512, 16) ;  mm_730 = None
        permute_1962 = view_3721.permute(0, 3, 1, 2) ;  view_3721 = None
        view_3722 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_229 = torch.bitwise_not(view_3722) ;  view_3722 = None
        masked_fill_229 = permute_1962.masked_fill(bitwise_not_229,-10000) ;  permute_1962 = bitwise_not_229 = None
        _to_copy_2096 = getitem_3611.to(dtype = torch.bfloat16) ;  getitem_3611 = None
        _to_copy_2097 = arg1260_1.to(dtype = torch.bfloat16) ;  arg1260_1 = None
        unsqueeze_1181 = torch.unsqueeze(_to_copy_2096,3) ;  _to_copy_2096 = None
        unsqueeze_1182 = torch.unsqueeze(unsqueeze_1181,4) ;  unsqueeze_1181 = None
        unsqueeze_1183 = torch.unsqueeze(unsqueeze_1182,5) ;  unsqueeze_1182 = None
        permute_1963 = unsqueeze_1183.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_1183 = None
        unsqueeze_1184 = torch.unsqueeze(_to_copy_2097,4) ;  _to_copy_2097 = None
        unsqueeze_1185 = torch.unsqueeze(unsqueeze_1184,5) ;  unsqueeze_1184 = None
        permute_1964 = unsqueeze_1185.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_1185 = None
        permute_1965 = permute_1963.permute(3, 5, 0, 1, 2, 4) ;  permute_1963 = None
        view_3723 = permute_1965.view(1, 512, 384) ;  permute_1965 = None
        permute_1966 = permute_1964.permute(5, 0, 1, 2, 4, 3) ;  permute_1964 = None
        view_3724 = permute_1966.view(1, 384, 1536) ;  permute_1966 = None
        bmm_291 = torch.bmm(view_3723,view_3724) ;  view_3723 = view_3724 = None
        view_3725 = bmm_291.view(512, 1, 4, 1, 16, 24) ;  bmm_291 = None
        permute_1967 = view_3725.permute(2, 3, 4, 0, 5, 1) ;  view_3725 = None
        view_3726 = permute_1967.view(4, 1, 16, 512, 24) ;  permute_1967 = None
        unbind_int_168 = torch.unbind(view_3726) ;  view_3726 = None
        getitem_3617 = unbind_int_168[0]
        getitem_3618 = unbind_int_168[1]
        getitem_3619 = unbind_int_168[2]
        getitem_3620 = unbind_int_168[3];  unbind_int_168 = None
        view_3727 = arg1259_1.view(1, 16, 1, 24) ;  arg1259_1 = None
        add_396 = torch.add(getitem_3617,view_3727) ;  getitem_3617 = view_3727 = None
        _to_copy_2098 = add_396.to(dtype = torch.bfloat16) ;  add_396 = None
        expand_241 = masked_fill_229.expand(1, 16, 512, 512) ;  masked_fill_229 = None
        _scaled_dot_product_efficient_attention_default_140 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_2098,getitem_3618,getitem_3619,expand_241,False),) ;  _to_copy_2098 = getitem_3618 = getitem_3619 = expand_241 = None
        getitem_3621 = _scaled_dot_product_efficient_attention_default_140[0]
        add_397 = torch.add(getitem_3620,1) ;  getitem_3620 = None
        sigmoid_299 = torch.sigmoid(add_397) ;  add_397 = None
        mul_494 = torch.mul(getitem_3621,sigmoid_299) ;  getitem_3621 = sigmoid_299 = None
        _to_copy_2099 = arg1261_1.to(dtype = torch.bfloat16) ;  arg1261_1 = None
        unsqueeze_1186 = torch.unsqueeze(mul_494,4) ;  mul_494 = None
        permute_1968 = unsqueeze_1186.permute(0, 2, 4, 3, 1) ;  unsqueeze_1186 = None
        unsqueeze_1187 = torch.unsqueeze(_to_copy_2099,3) ;  _to_copy_2099 = None
        unsqueeze_1188 = torch.unsqueeze(unsqueeze_1187,4) ;  unsqueeze_1187 = None
        permute_1969 = unsqueeze_1188.permute(3, 4, 2, 1, 0) ;  unsqueeze_1188 = None
        permute_1970 = permute_1968.permute(1, 3, 4, 0, 2) ;  permute_1968 = None
        clone_308 = torch.clone(permute_1970,memory_format = torch.contiguous_format) ;  permute_1970 = None
        _unsafe_view_258 = clone_308.view(1, 512, 384) ;  clone_308 = None
        permute_1971 = permute_1969.permute(3, 4, 0, 2, 1) ;  permute_1969 = None
        clone_309 = torch.clone(permute_1971,memory_format = torch.contiguous_format) ;  permute_1971 = None
        _unsafe_view_259 = clone_309.view(1, 384, 384) ;  clone_309 = None
        bmm_292 = torch.bmm(_unsafe_view_258,_unsafe_view_259) ;  _unsafe_view_258 = _unsafe_view_259 = None
        view_3728 = bmm_292.view(512, 1, 1, 1, 384) ;  bmm_292 = None
        permute_1972 = view_3728.permute(3, 0, 4, 1, 2) ;  view_3728 = None
        view_3729 = permute_1972.view(1, 512, 384) ;  permute_1972 = None
        unsqueeze_1189 = torch.unsqueeze(arg1406_1,-1) 
        mul_495 = torch.mul(view_3729,unsqueeze_1189) ;  view_3729 = unsqueeze_1189 = None
        add_398 = torch.add(add_391,mul_495) ;  mul_495 = None
        split_tensor_393 = torch.split(add_391,512,dim = -2) ;  add_391 = None
        getitem_3625 = split_tensor_393[0];  split_tensor_393 = None
        _to_copy_2100 = getitem_3625.to(dtype = torch.float32) ;  getitem_3625 = None
        native_layer_norm_default_433 = (torch.nn.functional.layer_norm(_to_copy_2100,[384],arg1250_1,arg1251_1,1e-05),) ;  _to_copy_2100 = arg1250_1 = arg1251_1 = None
        getitem_3626 = native_layer_norm_default_433[0]
        _to_copy_2101 = arg1252_1.to(dtype = torch.bfloat16) ;  arg1252_1 = None
        _to_copy_2102 = getitem_3626.to(dtype = torch.bfloat16) ;  getitem_3626 = None
        t_784 = _to_copy_2101.t() ;  _to_copy_2101 = None
        view_3730 = _to_copy_2102.view(512, 384) ;  _to_copy_2102 = None
        mm_731 = torch.mm(view_3730,t_784) ;  view_3730 = t_784 = None
        view_3731 = mm_731.view(1, 512, 1536) ;  mm_731 = None
        split_tensor_394 = torch.split(view_3731,768,dim = -1) ;  view_3731 = None
        getitem_3629 = split_tensor_394[0]
        getitem_3630 = split_tensor_394[1];  split_tensor_394 = None
        silu_103 = torch.nn.functional.silu(getitem_3629) ;  getitem_3629 = None
        mul_496 = torch.mul(silu_103,getitem_3630) ;  silu_103 = getitem_3630 = None
        _to_copy_2103 = arg1253_1.to(dtype = torch.bfloat16) ;  arg1253_1 = None
        t_785 = _to_copy_2103.t() ;  _to_copy_2103 = None
        view_3733 = mul_496.view(512, 768) ;  mul_496 = None
        mm_732 = torch.mm(view_3733,t_785) ;  view_3733 = t_785 = None
        view_3734 = mm_732.view(1, 512, 384) ;  mm_732 = None
        add_399 = torch.add(add_398,view_3734) ;  add_398 = view_3734 = None
        _to_copy_2104 = add_395.to(dtype = torch.float32) 
        native_layer_norm_default_434 = (torch.nn.functional.layer_norm(_to_copy_2104,[256],arg1266_1,arg1267_1,1e-05),) ;  _to_copy_2104 = arg1266_1 = arg1267_1 = None
        getitem_3631 = native_layer_norm_default_434[0]
        split_with_sizes_default_98 = torch.split(arg1269_1,[512,512]) ;  arg1269_1 = None
        getitem_3634 = split_with_sizes_default_98[0]
        getitem_3635 = split_with_sizes_default_98[1];  split_with_sizes_default_98 = None
        split_with_sizes_default_99 = torch.split(arg1270_1,[512,512,256]) ;  arg1270_1 = None
        getitem_3636 = split_with_sizes_default_99[0]
        getitem_3637 = split_with_sizes_default_99[1]
        getitem_3638 = split_with_sizes_default_99[2];  split_with_sizes_default_99 = None
        _to_copy_2105 = getitem_3634.to(dtype = torch.bfloat16) ;  getitem_3634 = None
        _to_copy_2106 = getitem_3631.to(dtype = torch.bfloat16) 
        t_786 = _to_copy_2105.t() ;  _to_copy_2105 = None
        view_3735 = _to_copy_2106.view(262144, 256) ;  _to_copy_2106 = None
        mm_733 = torch.mm(view_3735,t_786) ;  view_3735 = t_786 = None
        view_3736 = mm_733.view(1, 512, 512, 512) ;  mm_733 = None
        _to_copy_2107 = getitem_3636.to(dtype = torch.bfloat16) ;  getitem_3636 = None
        _to_copy_2108 = getitem_3631.to(dtype = torch.bfloat16) 
        t_787 = _to_copy_2107.t() ;  _to_copy_2107 = None
        view_3737 = _to_copy_2108.view(262144, 256) ;  _to_copy_2108 = None
        mm_734 = torch.mm(view_3737,t_787) ;  view_3737 = t_787 = None
        view_3738 = mm_734.view(1, 512, 512, 512) ;  mm_734 = None
        sigmoid_300 = torch.sigmoid(view_3738) ;  view_3738 = None
        mul_497 = torch.mul(view_3736,sigmoid_300) ;  view_3736 = sigmoid_300 = None
        unsqueeze_1190 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_230 = torch.bitwise_not(unsqueeze_1190) ;  unsqueeze_1190 = None
        masked_fill_230 = mul_497.masked_fill(bitwise_not_230,0) ;  mul_497 = bitwise_not_230 = None
        split_tensor_395 = torch.split(masked_fill_230,256,dim = -1) 
        getitem_3641 = split_tensor_395[0]
        unsqueeze_1193 = torch.unsqueeze(getitem_3641,4) ;  getitem_3641 = None
        permute_1977 = unsqueeze_1193.permute(0, 1, 4, 3, 2) ;  unsqueeze_1193 = None
        permute_1978 = permute_1977.permute(3, 1, 4, 0, 2) ;  permute_1977 = None
        view_3741 = permute_1978.view(256, 512, 512) ;  permute_1978 = None
        split_tensor_396 = torch.split(masked_fill_230,256,dim = -1) ;  masked_fill_230 = None
        getitem_3644 = split_tensor_396[1];  split_tensor_396 = None
        unsqueeze_1194 = torch.unsqueeze(getitem_3644,4) ;  getitem_3644 = None
        permute_1979 = unsqueeze_1194.permute(0, 4, 1, 3, 2) ;  unsqueeze_1194 = None
        permute_1980 = permute_1979.permute(3, 4, 0, 2, 1) ;  permute_1979 = None
        view_3742 = permute_1980.view(256, 512, 512) ;  permute_1980 = None
        bmm_293 = torch.bmm(view_3741,view_3742) ;  view_3741 = view_3742 = None
        view_3743 = bmm_293.view(256, 512, 1, 1, 512) ;  bmm_293 = None
        permute_1981 = view_3743.permute(3, 1, 4, 0, 2) ;  view_3743 = None
        view_3744 = permute_1981.view(1, 512, 512, 256) ;  permute_1981 = None
        _to_copy_2109 = getitem_3635.to(dtype = torch.bfloat16) ;  getitem_3635 = None
        _to_copy_2110 = getitem_3631.to(dtype = torch.bfloat16) 
        t_788 = _to_copy_2109.t() ;  _to_copy_2109 = None
        view_3745 = _to_copy_2110.view(262144, 256) ;  _to_copy_2110 = None
        mm_735 = torch.mm(view_3745,t_788) ;  view_3745 = t_788 = None
        view_3746 = mm_735.view(1, 512, 512, 512) ;  mm_735 = None
        _to_copy_2111 = getitem_3637.to(dtype = torch.bfloat16) ;  getitem_3637 = None
        _to_copy_2112 = getitem_3631.to(dtype = torch.bfloat16) 
        t_789 = _to_copy_2111.t() ;  _to_copy_2111 = None
        view_3747 = _to_copy_2112.view(262144, 256) ;  _to_copy_2112 = None
        mm_736 = torch.mm(view_3747,t_789) ;  view_3747 = t_789 = None
        view_3748 = mm_736.view(1, 512, 512, 512) ;  mm_736 = None
        sigmoid_301 = torch.sigmoid(view_3748) ;  view_3748 = None
        mul_498 = torch.mul(view_3746,sigmoid_301) ;  view_3746 = sigmoid_301 = None
        view_3749 = mul_498.view(262144, 512) ;  mul_498 = None
        view_3750 = view_3749.view(1, 512, 512, 512) ;  view_3749 = None
        transpose_98 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_1195 = torch.unsqueeze(transpose_98,3) ;  transpose_98 = None
        clone_310 = torch.clone(unsqueeze_1195,memory_format = torch.contiguous_format) ;  unsqueeze_1195 = None
        bitwise_not_231 = torch.bitwise_not(clone_310) ;  clone_310 = None
        masked_fill_231 = view_3750.masked_fill(bitwise_not_231,0) ;  view_3750 = bitwise_not_231 = None
        view_3751 = masked_fill_231.view(262144, 512) ;  masked_fill_231 = None
        view_3755 = view_3751.view(1, 512, 512, 512) 
        split_tensor_397 = torch.split(view_3755,256,dim = -1) ;  view_3755 = None
        getitem_3647 = split_tensor_397[0]
        unsqueeze_1198 = torch.unsqueeze(getitem_3647,4) ;  getitem_3647 = None
        permute_1986 = unsqueeze_1198.permute(0, 2, 4, 3, 1) ;  unsqueeze_1198 = None
        permute_1987 = permute_1986.permute(3, 1, 4, 0, 2) ;  permute_1986 = None
        view_3756 = permute_1987.view(256, 512, 512) ;  permute_1987 = None
        view_3757 = view_3751.view(1, 512, 512, 512) ;  view_3751 = None
        split_tensor_398 = torch.split(view_3757,256,dim = -1) ;  view_3757 = None
        getitem_3650 = split_tensor_398[1];  split_tensor_398 = None
        unsqueeze_1199 = torch.unsqueeze(getitem_3650,4) ;  getitem_3650 = None
        permute_1988 = unsqueeze_1199.permute(0, 4, 2, 3, 1) ;  unsqueeze_1199 = None
        permute_1989 = permute_1988.permute(3, 4, 0, 2, 1) ;  permute_1988 = None
        view_3758 = permute_1989.view(256, 512, 512) ;  permute_1989 = None
        bmm_294 = torch.bmm(view_3756,view_3758) ;  view_3756 = view_3758 = None
        view_3759 = bmm_294.view(256, 512, 1, 1, 512) ;  bmm_294 = None
        permute_1990 = view_3759.permute(3, 1, 4, 0, 2) ;  view_3759 = None
        view_3760 = permute_1990.view(1, 512, 512, 256) ;  permute_1990 = None
        _to_copy_2113 = view_3744.to(dtype = torch.float32) ;  view_3744 = None
        native_layer_norm_default_435 = (torch.nn.functional.layer_norm(_to_copy_2113,[256],None,None,1e-05),) ;  _to_copy_2113 = None
        getitem_3651 = native_layer_norm_default_435[0]
        _to_copy_2114 = view_3760.to(dtype = torch.float32) ;  view_3760 = None
        native_layer_norm_default_436 = (torch.nn.functional.layer_norm(_to_copy_2114,[256],None,None,1e-05),) ;  _to_copy_2114 = None
        getitem_3654 = native_layer_norm_default_436[0]
        add_400 = torch.add(getitem_3651,getitem_3654) ;  getitem_3651 = getitem_3654 = None
        _to_copy_2115 = arg1268_1.to(dtype = torch.bfloat16) ;  arg1268_1 = None
        _to_copy_2116 = add_400.to(dtype = torch.bfloat16) ;  add_400 = None
        t_790 = _to_copy_2115.t() ;  _to_copy_2115 = None
        view_3761 = _to_copy_2116.view(262144, 256) ;  _to_copy_2116 = None
        mm_737 = torch.mm(view_3761,t_790) ;  view_3761 = t_790 = None
        view_3762 = mm_737.view(1, 512, 512, 256) ;  mm_737 = None
        _to_copy_2117 = getitem_3638.to(dtype = torch.bfloat16) ;  getitem_3638 = None
        _to_copy_2118 = getitem_3631.to(dtype = torch.bfloat16) ;  getitem_3631 = None
        t_791 = _to_copy_2117.t() ;  _to_copy_2117 = None
        view_3763 = _to_copy_2118.view(262144, 256) ;  _to_copy_2118 = None
        mm_738 = torch.mm(view_3763,t_791) ;  view_3763 = t_791 = None
        view_3764 = mm_738.view(1, 512, 512, 256) ;  mm_738 = None
        sigmoid_302 = torch.sigmoid(view_3764) ;  view_3764 = None
        mul_499 = torch.mul(view_3762,sigmoid_302) ;  view_3762 = sigmoid_302 = None
        add_401 = torch.add(add_395,mul_499) ;  mul_499 = None
        _to_copy_2119 = add_395.to(dtype = torch.float32) 
        native_layer_norm_default_437 = (torch.nn.functional.layer_norm(_to_copy_2119,[256],None,None,1e-05),) ;  _to_copy_2119 = None
        getitem_3657 = native_layer_norm_default_437[0]
        _to_copy_2120 = arg1272_1.to(dtype = torch.bfloat16) ;  arg1272_1 = None
        _to_copy_2121 = getitem_3657.to(dtype = torch.bfloat16) 
        t_792 = _to_copy_2120.t() ;  _to_copy_2120 = None
        view_3765 = _to_copy_2121.view(262144, 256) ;  _to_copy_2121 = None
        mm_739 = torch.mm(view_3765,t_792) ;  view_3765 = t_792 = None
        view_3766 = mm_739.view(1, 512, 512, 8) ;  mm_739 = None
        view_3767 = view_3766.view(1, 512, 512, 2, 4) ;  view_3766 = None
        permute_1991 = view_3767.permute(0, 3, 4, 1, 2) ;  view_3767 = None
        view_3768 = permute_1991.view(1, 2, 4, 1, 512, 512) ;  permute_1991 = None
        view_3769 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_232 = torch.bitwise_not(view_3769) ;  view_3769 = None
        masked_fill_232 = view_3768.masked_fill(bitwise_not_232,-10000) ;  view_3768 = bitwise_not_232 = None
        view_3770 = masked_fill_232.view(1, 2, 4, 512, 512) ;  masked_fill_232 = None
        permute_1992 = view_3770.permute(1, 0, 2, 3, 4) ;  view_3770 = None
        view_3771 = permute_1992.view(2, 4, 1, 512, 512) ;  permute_1992 = None
        _to_copy_2122 = arg1273_1.to(dtype = torch.bfloat16) ;  arg1273_1 = None
        _to_copy_2123 = getitem_3657.to(dtype = torch.bfloat16) 
        t_793 = _to_copy_2122.t() ;  _to_copy_2122 = None
        view_3772 = _to_copy_2123.view(262144, 256) ;  _to_copy_2123 = None
        mm_740 = torch.mm(view_3772,t_793) ;  view_3772 = t_793 = None
        view_3773 = mm_740.view(1, 512, 512, 1024) ;  mm_740 = None
        select_99 = torch.select(view_3771,0,0) 
        view_3774 = view_3773.view(1, 512, 512, 4, 4, 64) ;  view_3773 = None
        permute_1993 = view_3774.permute(4, 0, 3, 1, 2, 5) ;  view_3774 = None
        view_3775 = permute_1993.view(4, 4, 512, 512, 64) ;  permute_1993 = None
        unbind_int_169 = torch.unbind(view_3775) ;  view_3775 = None
        getitem_3660 = unbind_int_169[0]
        getitem_3661 = unbind_int_169[1]
        getitem_3662 = unbind_int_169[2]
        getitem_3663 = unbind_int_169[3];  unbind_int_169 = None
        expand_242 = select_99.expand(4, 512, 512, 512) ;  select_99 = None
        _scaled_dot_product_efficient_attention_default_141 = (torch.nn.functional.scaled_dot_product_attention(getitem_3660,getitem_3661,getitem_3662,expand_242,False),) ;  getitem_3660 = getitem_3661 = getitem_3662 = expand_242 = None
        getitem_3664 = _scaled_dot_product_efficient_attention_default_141[0]
        sigmoid_303 = torch.sigmoid(getitem_3663) ;  getitem_3663 = None
        mul_500 = torch.mul(getitem_3664,sigmoid_303) ;  getitem_3664 = sigmoid_303 = None
        view_3776 = mul_500.view(1, 4, 512, 512, 64) ;  mul_500 = None
        permute_1994 = view_3776.permute(0, 2, 3, 1, 4) ;  view_3776 = None
        clone_311 = torch.clone(permute_1994,memory_format = torch.contiguous_format) ;  permute_1994 = None
        _unsafe_view_260 = clone_311.view(1, 512, 512, 256) ;  clone_311 = None
        transpose_99 = torch.transpose(getitem_3657,1,2) ;  getitem_3657 = None
        _to_copy_2124 = arg1274_1.to(dtype = torch.bfloat16) ;  arg1274_1 = None
        _to_copy_2125 = transpose_99.to(dtype = torch.bfloat16) ;  transpose_99 = None
        t_794 = _to_copy_2124.t() ;  _to_copy_2124 = None
        expand_243 = _to_copy_2125.expand(1, 512, 512, 256) ;  _to_copy_2125 = None
        view_3777 = expand_243.view(512, 512, 256) ;  expand_243 = None
        expand_244 = t_794.expand(1, 512, 256, 1024) ;  t_794 = None
        view_3778 = expand_244.view(512, 256, 1024) ;  expand_244 = None
        bmm_295 = torch.bmm(view_3777,view_3778) ;  view_3777 = view_3778 = None
        view_3779 = bmm_295.view(1, 512, 512, 1024) ;  bmm_295 = None
        select_100 = torch.select(view_3771,0,1) ;  view_3771 = None
        view_3780 = view_3779.view(1, 512, 512, 4, 4, 64) ;  view_3779 = None
        permute_1995 = view_3780.permute(4, 0, 3, 1, 2, 5) ;  view_3780 = None
        view_3781 = permute_1995.view(4, 4, 512, 512, 64) ;  permute_1995 = None
        unbind_int_170 = torch.unbind(view_3781) ;  view_3781 = None
        getitem_3668 = unbind_int_170[0]
        getitem_3669 = unbind_int_170[1]
        getitem_3670 = unbind_int_170[2]
        getitem_3671 = unbind_int_170[3];  unbind_int_170 = None
        expand_245 = select_100.expand(4, 512, 512, 512) ;  select_100 = None
        _scaled_dot_product_efficient_attention_default_142 = (torch.nn.functional.scaled_dot_product_attention(getitem_3668,getitem_3669,getitem_3670,expand_245,False),) ;  getitem_3668 = getitem_3669 = getitem_3670 = expand_245 = None
        getitem_3672 = _scaled_dot_product_efficient_attention_default_142[0]
        sigmoid_304 = torch.sigmoid(getitem_3671) ;  getitem_3671 = None
        mul_501 = torch.mul(getitem_3672,sigmoid_304) ;  getitem_3672 = sigmoid_304 = None
        view_3782 = mul_501.view(1, 4, 512, 512, 64) ;  mul_501 = None
        permute_1996 = view_3782.permute(0, 2, 3, 1, 4) ;  view_3782 = None
        clone_312 = torch.clone(permute_1996,memory_format = torch.contiguous_format) ;  permute_1996 = None
        _unsafe_view_261 = clone_312.view(1, 512, 512, 256) ;  clone_312 = None
        cat_55 = torch.cat([_unsafe_view_260,_unsafe_view_261],dim = -1) ;  _unsafe_view_260 = _unsafe_view_261 = None
        slice_248 = arg1271_1[0:] ;  arg1271_1 = None
        unsqueeze_1200 = torch.unsqueeze(slice_248,1) ;  slice_248 = None
        mul_502 = torch.mul(arg1275_1,unsqueeze_1200) ;  arg1275_1 = unsqueeze_1200 = None
        _to_copy_2126 = mul_502.to(dtype = torch.bfloat16) ;  mul_502 = None
        t_795 = _to_copy_2126.t() ;  _to_copy_2126 = None
        view_3783 = cat_55.view(262144, 512) ;  cat_55 = None
        mm_741 = torch.mm(view_3783,t_795) ;  view_3783 = t_795 = None
        view_3784 = mm_741.view(1, 512, 512, 256) ;  mm_741 = None
        add_402 = torch.add(add_401,view_3784) ;  add_401 = view_3784 = None
        split_tensor_399 = torch.split(add_395,512,dim = -2) 
        getitem_3676 = split_tensor_399[0];  split_tensor_399 = None
        _to_copy_2127 = getitem_3676.to(dtype = torch.float32) ;  getitem_3676 = None
        native_layer_norm_default_438 = (torch.nn.functional.layer_norm(_to_copy_2127,[256],arg1262_1,arg1263_1,1e-05),) ;  _to_copy_2127 = arg1262_1 = arg1263_1 = None
        getitem_3677 = native_layer_norm_default_438[0]
        _to_copy_2128 = arg1264_1.to(dtype = torch.bfloat16) ;  arg1264_1 = None
        _to_copy_2129 = getitem_3677.to(dtype = torch.bfloat16) ;  getitem_3677 = None
        t_796 = _to_copy_2128.t() ;  _to_copy_2128 = None
        view_3785 = _to_copy_2129.view(262144, 256) ;  _to_copy_2129 = None
        mm_742 = torch.mm(view_3785,t_796) ;  view_3785 = t_796 = None
        view_3786 = mm_742.view(1, 512, 512, 1024) ;  mm_742 = None
        split_tensor_400 = torch.split(view_3786,512,dim = -1) ;  view_3786 = None
        getitem_3680 = split_tensor_400[0]
        getitem_3681 = split_tensor_400[1];  split_tensor_400 = None
        silu_104 = torch.nn.functional.silu(getitem_3680) ;  getitem_3680 = None
        mul_503 = torch.mul(silu_104,getitem_3681) ;  silu_104 = getitem_3681 = None
        _to_copy_2130 = arg1265_1.to(dtype = torch.bfloat16) ;  arg1265_1 = None
        t_797 = _to_copy_2130.t() ;  _to_copy_2130 = None
        view_3788 = mul_503.view(262144, 512) ;  mul_503 = None
        mm_743 = torch.mm(view_3788,t_797) ;  view_3788 = t_797 = None
        view_3789 = mm_743.view(1, 512, 512, 256) ;  mm_743 = None
        add_403 = torch.add(add_402,view_3789) ;  add_402 = view_3789 = None
        _to_copy_2131 = add_399.to(dtype = torch.float32) 
        native_layer_norm_default_439 = (torch.nn.functional.layer_norm(_to_copy_2131,[384],arg1280_1,arg1281_1,1e-05),) ;  _to_copy_2131 = arg1280_1 = arg1281_1 = None
        getitem_3682 = native_layer_norm_default_439[0]
        _to_copy_2132 = add_395.to(dtype = torch.float32) ;  add_395 = None
        native_layer_norm_default_440 = (torch.nn.functional.layer_norm(_to_copy_2132,[256],arg1282_1,arg1283_1,1e-05),) ;  _to_copy_2132 = arg1282_1 = arg1283_1 = None
        getitem_3685 = native_layer_norm_default_440[0]
        _to_copy_2133 = arg1284_1.to(dtype = torch.bfloat16) ;  arg1284_1 = None
        _to_copy_2134 = getitem_3685.to(dtype = torch.bfloat16) ;  getitem_3685 = None
        t_798 = _to_copy_2133.t() ;  _to_copy_2133 = None
        view_3790 = _to_copy_2134.view(262144, 256) ;  _to_copy_2134 = None
        mm_744 = torch.mm(view_3790,t_798) ;  view_3790 = t_798 = None
        view_3791 = mm_744.view(1, 512, 512, 16) ;  mm_744 = None
        permute_1997 = view_3791.permute(0, 3, 1, 2) ;  view_3791 = None
        view_3792 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_233 = torch.bitwise_not(view_3792) ;  view_3792 = None
        masked_fill_233 = permute_1997.masked_fill(bitwise_not_233,-10000) ;  permute_1997 = bitwise_not_233 = None
        _to_copy_2135 = getitem_3682.to(dtype = torch.bfloat16) ;  getitem_3682 = None
        _to_copy_2136 = arg1286_1.to(dtype = torch.bfloat16) ;  arg1286_1 = None
        unsqueeze_1201 = torch.unsqueeze(_to_copy_2135,3) ;  _to_copy_2135 = None
        unsqueeze_1202 = torch.unsqueeze(unsqueeze_1201,4) ;  unsqueeze_1201 = None
        unsqueeze_1203 = torch.unsqueeze(unsqueeze_1202,5) ;  unsqueeze_1202 = None
        permute_1998 = unsqueeze_1203.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_1203 = None
        unsqueeze_1204 = torch.unsqueeze(_to_copy_2136,4) ;  _to_copy_2136 = None
        unsqueeze_1205 = torch.unsqueeze(unsqueeze_1204,5) ;  unsqueeze_1204 = None
        permute_1999 = unsqueeze_1205.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_1205 = None
        permute_2000 = permute_1998.permute(3, 5, 0, 1, 2, 4) ;  permute_1998 = None
        view_3793 = permute_2000.view(1, 512, 384) ;  permute_2000 = None
        permute_2001 = permute_1999.permute(5, 0, 1, 2, 4, 3) ;  permute_1999 = None
        view_3794 = permute_2001.view(1, 384, 1536) ;  permute_2001 = None
        bmm_296 = torch.bmm(view_3793,view_3794) ;  view_3793 = view_3794 = None
        view_3795 = bmm_296.view(512, 1, 4, 1, 16, 24) ;  bmm_296 = None
        permute_2002 = view_3795.permute(2, 3, 4, 0, 5, 1) ;  view_3795 = None
        view_3796 = permute_2002.view(4, 1, 16, 512, 24) ;  permute_2002 = None
        unbind_int_171 = torch.unbind(view_3796) ;  view_3796 = None
        getitem_3688 = unbind_int_171[0]
        getitem_3689 = unbind_int_171[1]
        getitem_3690 = unbind_int_171[2]
        getitem_3691 = unbind_int_171[3];  unbind_int_171 = None
        view_3797 = arg1285_1.view(1, 16, 1, 24) ;  arg1285_1 = None
        add_404 = torch.add(getitem_3688,view_3797) ;  getitem_3688 = view_3797 = None
        _to_copy_2137 = add_404.to(dtype = torch.bfloat16) ;  add_404 = None
        expand_246 = masked_fill_233.expand(1, 16, 512, 512) ;  masked_fill_233 = None
        _scaled_dot_product_efficient_attention_default_143 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_2137,getitem_3689,getitem_3690,expand_246,False),) ;  _to_copy_2137 = getitem_3689 = getitem_3690 = expand_246 = None
        getitem_3692 = _scaled_dot_product_efficient_attention_default_143[0]
        add_405 = torch.add(getitem_3691,1) ;  getitem_3691 = None
        sigmoid_305 = torch.sigmoid(add_405) ;  add_405 = None
        mul_504 = torch.mul(getitem_3692,sigmoid_305) ;  getitem_3692 = sigmoid_305 = None
        _to_copy_2138 = arg1287_1.to(dtype = torch.bfloat16) ;  arg1287_1 = None
        unsqueeze_1206 = torch.unsqueeze(mul_504,4) ;  mul_504 = None
        permute_2003 = unsqueeze_1206.permute(0, 2, 4, 3, 1) ;  unsqueeze_1206 = None
        unsqueeze_1207 = torch.unsqueeze(_to_copy_2138,3) ;  _to_copy_2138 = None
        unsqueeze_1208 = torch.unsqueeze(unsqueeze_1207,4) ;  unsqueeze_1207 = None
        permute_2004 = unsqueeze_1208.permute(3, 4, 2, 1, 0) ;  unsqueeze_1208 = None
        permute_2005 = permute_2003.permute(1, 3, 4, 0, 2) ;  permute_2003 = None
        clone_313 = torch.clone(permute_2005,memory_format = torch.contiguous_format) ;  permute_2005 = None
        _unsafe_view_262 = clone_313.view(1, 512, 384) ;  clone_313 = None
        permute_2006 = permute_2004.permute(3, 4, 0, 2, 1) ;  permute_2004 = None
        clone_314 = torch.clone(permute_2006,memory_format = torch.contiguous_format) ;  permute_2006 = None
        _unsafe_view_263 = clone_314.view(1, 384, 384) ;  clone_314 = None
        bmm_297 = torch.bmm(_unsafe_view_262,_unsafe_view_263) ;  _unsafe_view_262 = _unsafe_view_263 = None
        view_3798 = bmm_297.view(512, 1, 1, 1, 384) ;  bmm_297 = None
        permute_2007 = view_3798.permute(3, 0, 4, 1, 2) ;  view_3798 = None
        view_3799 = permute_2007.view(1, 512, 384) ;  permute_2007 = None
        unsqueeze_1209 = torch.unsqueeze(arg1406_1,-1) 
        mul_505 = torch.mul(view_3799,unsqueeze_1209) ;  view_3799 = unsqueeze_1209 = None
        add_406 = torch.add(add_399,mul_505) ;  mul_505 = None
        split_tensor_401 = torch.split(add_399,512,dim = -2) ;  add_399 = None
        getitem_3696 = split_tensor_401[0];  split_tensor_401 = None
        _to_copy_2139 = getitem_3696.to(dtype = torch.float32) ;  getitem_3696 = None
        native_layer_norm_default_441 = (torch.nn.functional.layer_norm(_to_copy_2139,[384],arg1276_1,arg1277_1,1e-05),) ;  _to_copy_2139 = arg1276_1 = arg1277_1 = None
        getitem_3697 = native_layer_norm_default_441[0]
        _to_copy_2140 = arg1278_1.to(dtype = torch.bfloat16) ;  arg1278_1 = None
        _to_copy_2141 = getitem_3697.to(dtype = torch.bfloat16) ;  getitem_3697 = None
        t_799 = _to_copy_2140.t() ;  _to_copy_2140 = None
        view_3800 = _to_copy_2141.view(512, 384) ;  _to_copy_2141 = None
        mm_745 = torch.mm(view_3800,t_799) ;  view_3800 = t_799 = None
        view_3801 = mm_745.view(1, 512, 1536) ;  mm_745 = None
        split_tensor_402 = torch.split(view_3801,768,dim = -1) ;  view_3801 = None
        getitem_3700 = split_tensor_402[0]
        getitem_3701 = split_tensor_402[1];  split_tensor_402 = None
        silu_105 = torch.nn.functional.silu(getitem_3700) ;  getitem_3700 = None
        mul_506 = torch.mul(silu_105,getitem_3701) ;  silu_105 = getitem_3701 = None
        _to_copy_2142 = arg1279_1.to(dtype = torch.bfloat16) ;  arg1279_1 = None
        t_800 = _to_copy_2142.t() ;  _to_copy_2142 = None
        view_3803 = mul_506.view(512, 768) ;  mul_506 = None
        mm_746 = torch.mm(view_3803,t_800) ;  view_3803 = t_800 = None
        view_3804 = mm_746.view(1, 512, 384) ;  mm_746 = None
        add_407 = torch.add(add_406,view_3804) ;  add_406 = view_3804 = None
        _to_copy_2143 = add_403.to(dtype = torch.float32) 
        native_layer_norm_default_442 = (torch.nn.functional.layer_norm(_to_copy_2143,[256],arg1292_1,arg1293_1,1e-05),) ;  _to_copy_2143 = arg1292_1 = arg1293_1 = None
        getitem_3702 = native_layer_norm_default_442[0]
        split_with_sizes_default_100 = torch.split(arg1295_1,[512,512]) ;  arg1295_1 = None
        getitem_3705 = split_with_sizes_default_100[0]
        getitem_3706 = split_with_sizes_default_100[1];  split_with_sizes_default_100 = None
        split_with_sizes_default_101 = torch.split(arg1296_1,[512,512,256]) ;  arg1296_1 = None
        getitem_3707 = split_with_sizes_default_101[0]
        getitem_3708 = split_with_sizes_default_101[1]
        getitem_3709 = split_with_sizes_default_101[2];  split_with_sizes_default_101 = None
        _to_copy_2144 = getitem_3705.to(dtype = torch.bfloat16) ;  getitem_3705 = None
        _to_copy_2145 = getitem_3702.to(dtype = torch.bfloat16) 
        t_801 = _to_copy_2144.t() ;  _to_copy_2144 = None
        view_3805 = _to_copy_2145.view(262144, 256) ;  _to_copy_2145 = None
        mm_747 = torch.mm(view_3805,t_801) ;  view_3805 = t_801 = None
        view_3806 = mm_747.view(1, 512, 512, 512) ;  mm_747 = None
        _to_copy_2146 = getitem_3707.to(dtype = torch.bfloat16) ;  getitem_3707 = None
        _to_copy_2147 = getitem_3702.to(dtype = torch.bfloat16) 
        t_802 = _to_copy_2146.t() ;  _to_copy_2146 = None
        view_3807 = _to_copy_2147.view(262144, 256) ;  _to_copy_2147 = None
        mm_748 = torch.mm(view_3807,t_802) ;  view_3807 = t_802 = None
        view_3808 = mm_748.view(1, 512, 512, 512) ;  mm_748 = None
        sigmoid_306 = torch.sigmoid(view_3808) ;  view_3808 = None
        mul_507 = torch.mul(view_3806,sigmoid_306) ;  view_3806 = sigmoid_306 = None
        unsqueeze_1210 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_234 = torch.bitwise_not(unsqueeze_1210) ;  unsqueeze_1210 = None
        masked_fill_234 = mul_507.masked_fill(bitwise_not_234,0) ;  mul_507 = bitwise_not_234 = None
        split_tensor_403 = torch.split(masked_fill_234,256,dim = -1) 
        getitem_3712 = split_tensor_403[0]
        unsqueeze_1213 = torch.unsqueeze(getitem_3712,4) ;  getitem_3712 = None
        permute_2012 = unsqueeze_1213.permute(0, 1, 4, 3, 2) ;  unsqueeze_1213 = None
        permute_2013 = permute_2012.permute(3, 1, 4, 0, 2) ;  permute_2012 = None
        view_3811 = permute_2013.view(256, 512, 512) ;  permute_2013 = None
        split_tensor_404 = torch.split(masked_fill_234,256,dim = -1) ;  masked_fill_234 = None
        getitem_3715 = split_tensor_404[1];  split_tensor_404 = None
        unsqueeze_1214 = torch.unsqueeze(getitem_3715,4) ;  getitem_3715 = None
        permute_2014 = unsqueeze_1214.permute(0, 4, 1, 3, 2) ;  unsqueeze_1214 = None
        permute_2015 = permute_2014.permute(3, 4, 0, 2, 1) ;  permute_2014 = None
        view_3812 = permute_2015.view(256, 512, 512) ;  permute_2015 = None
        bmm_298 = torch.bmm(view_3811,view_3812) ;  view_3811 = view_3812 = None
        view_3813 = bmm_298.view(256, 512, 1, 1, 512) ;  bmm_298 = None
        permute_2016 = view_3813.permute(3, 1, 4, 0, 2) ;  view_3813 = None
        view_3814 = permute_2016.view(1, 512, 512, 256) ;  permute_2016 = None
        _to_copy_2148 = getitem_3706.to(dtype = torch.bfloat16) ;  getitem_3706 = None
        _to_copy_2149 = getitem_3702.to(dtype = torch.bfloat16) 
        t_803 = _to_copy_2148.t() ;  _to_copy_2148 = None
        view_3815 = _to_copy_2149.view(262144, 256) ;  _to_copy_2149 = None
        mm_749 = torch.mm(view_3815,t_803) ;  view_3815 = t_803 = None
        view_3816 = mm_749.view(1, 512, 512, 512) ;  mm_749 = None
        _to_copy_2150 = getitem_3708.to(dtype = torch.bfloat16) ;  getitem_3708 = None
        _to_copy_2151 = getitem_3702.to(dtype = torch.bfloat16) 
        t_804 = _to_copy_2150.t() ;  _to_copy_2150 = None
        view_3817 = _to_copy_2151.view(262144, 256) ;  _to_copy_2151 = None
        mm_750 = torch.mm(view_3817,t_804) ;  view_3817 = t_804 = None
        view_3818 = mm_750.view(1, 512, 512, 512) ;  mm_750 = None
        sigmoid_307 = torch.sigmoid(view_3818) ;  view_3818 = None
        mul_508 = torch.mul(view_3816,sigmoid_307) ;  view_3816 = sigmoid_307 = None
        view_3819 = mul_508.view(262144, 512) ;  mul_508 = None
        view_3820 = view_3819.view(1, 512, 512, 512) ;  view_3819 = None
        transpose_100 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_1215 = torch.unsqueeze(transpose_100,3) ;  transpose_100 = None
        clone_315 = torch.clone(unsqueeze_1215,memory_format = torch.contiguous_format) ;  unsqueeze_1215 = None
        bitwise_not_235 = torch.bitwise_not(clone_315) ;  clone_315 = None
        masked_fill_235 = view_3820.masked_fill(bitwise_not_235,0) ;  view_3820 = bitwise_not_235 = None
        view_3821 = masked_fill_235.view(262144, 512) ;  masked_fill_235 = None
        view_3825 = view_3821.view(1, 512, 512, 512) 
        split_tensor_405 = torch.split(view_3825,256,dim = -1) ;  view_3825 = None
        getitem_3718 = split_tensor_405[0]
        unsqueeze_1218 = torch.unsqueeze(getitem_3718,4) ;  getitem_3718 = None
        permute_2021 = unsqueeze_1218.permute(0, 2, 4, 3, 1) ;  unsqueeze_1218 = None
        permute_2022 = permute_2021.permute(3, 1, 4, 0, 2) ;  permute_2021 = None
        view_3826 = permute_2022.view(256, 512, 512) ;  permute_2022 = None
        view_3827 = view_3821.view(1, 512, 512, 512) ;  view_3821 = None
        split_tensor_406 = torch.split(view_3827,256,dim = -1) ;  view_3827 = None
        getitem_3721 = split_tensor_406[1];  split_tensor_406 = None
        unsqueeze_1219 = torch.unsqueeze(getitem_3721,4) ;  getitem_3721 = None
        permute_2023 = unsqueeze_1219.permute(0, 4, 2, 3, 1) ;  unsqueeze_1219 = None
        permute_2024 = permute_2023.permute(3, 4, 0, 2, 1) ;  permute_2023 = None
        view_3828 = permute_2024.view(256, 512, 512) ;  permute_2024 = None
        bmm_299 = torch.bmm(view_3826,view_3828) ;  view_3826 = view_3828 = None
        view_3829 = bmm_299.view(256, 512, 1, 1, 512) ;  bmm_299 = None
        permute_2025 = view_3829.permute(3, 1, 4, 0, 2) ;  view_3829 = None
        view_3830 = permute_2025.view(1, 512, 512, 256) ;  permute_2025 = None
        _to_copy_2152 = view_3814.to(dtype = torch.float32) ;  view_3814 = None
        native_layer_norm_default_443 = (torch.nn.functional.layer_norm(_to_copy_2152,[256],None,None,1e-05),) ;  _to_copy_2152 = None
        getitem_3722 = native_layer_norm_default_443[0]
        _to_copy_2153 = view_3830.to(dtype = torch.float32) ;  view_3830 = None
        native_layer_norm_default_444 = (torch.nn.functional.layer_norm(_to_copy_2153,[256],None,None,1e-05),) ;  _to_copy_2153 = None
        getitem_3725 = native_layer_norm_default_444[0]
        add_408 = torch.add(getitem_3722,getitem_3725) ;  getitem_3722 = getitem_3725 = None
        _to_copy_2154 = arg1294_1.to(dtype = torch.bfloat16) ;  arg1294_1 = None
        _to_copy_2155 = add_408.to(dtype = torch.bfloat16) ;  add_408 = None
        t_805 = _to_copy_2154.t() ;  _to_copy_2154 = None
        view_3831 = _to_copy_2155.view(262144, 256) ;  _to_copy_2155 = None
        mm_751 = torch.mm(view_3831,t_805) ;  view_3831 = t_805 = None
        view_3832 = mm_751.view(1, 512, 512, 256) ;  mm_751 = None
        _to_copy_2156 = getitem_3709.to(dtype = torch.bfloat16) ;  getitem_3709 = None
        _to_copy_2157 = getitem_3702.to(dtype = torch.bfloat16) ;  getitem_3702 = None
        t_806 = _to_copy_2156.t() ;  _to_copy_2156 = None
        view_3833 = _to_copy_2157.view(262144, 256) ;  _to_copy_2157 = None
        mm_752 = torch.mm(view_3833,t_806) ;  view_3833 = t_806 = None
        view_3834 = mm_752.view(1, 512, 512, 256) ;  mm_752 = None
        sigmoid_308 = torch.sigmoid(view_3834) ;  view_3834 = None
        mul_509 = torch.mul(view_3832,sigmoid_308) ;  view_3832 = sigmoid_308 = None
        add_409 = torch.add(add_403,mul_509) ;  mul_509 = None
        _to_copy_2158 = add_403.to(dtype = torch.float32) 
        native_layer_norm_default_445 = (torch.nn.functional.layer_norm(_to_copy_2158,[256],None,None,1e-05),) ;  _to_copy_2158 = None
        getitem_3728 = native_layer_norm_default_445[0]
        _to_copy_2159 = arg1298_1.to(dtype = torch.bfloat16) ;  arg1298_1 = None
        _to_copy_2160 = getitem_3728.to(dtype = torch.bfloat16) 
        t_807 = _to_copy_2159.t() ;  _to_copy_2159 = None
        view_3835 = _to_copy_2160.view(262144, 256) ;  _to_copy_2160 = None
        mm_753 = torch.mm(view_3835,t_807) ;  view_3835 = t_807 = None
        view_3836 = mm_753.view(1, 512, 512, 8) ;  mm_753 = None
        view_3837 = view_3836.view(1, 512, 512, 2, 4) ;  view_3836 = None
        permute_2026 = view_3837.permute(0, 3, 4, 1, 2) ;  view_3837 = None
        view_3838 = permute_2026.view(1, 2, 4, 1, 512, 512) ;  permute_2026 = None
        view_3839 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_236 = torch.bitwise_not(view_3839) ;  view_3839 = None
        masked_fill_236 = view_3838.masked_fill(bitwise_not_236,-10000) ;  view_3838 = bitwise_not_236 = None
        view_3840 = masked_fill_236.view(1, 2, 4, 512, 512) ;  masked_fill_236 = None
        permute_2027 = view_3840.permute(1, 0, 2, 3, 4) ;  view_3840 = None
        view_3841 = permute_2027.view(2, 4, 1, 512, 512) ;  permute_2027 = None
        _to_copy_2161 = arg1299_1.to(dtype = torch.bfloat16) ;  arg1299_1 = None
        _to_copy_2162 = getitem_3728.to(dtype = torch.bfloat16) 
        t_808 = _to_copy_2161.t() ;  _to_copy_2161 = None
        view_3842 = _to_copy_2162.view(262144, 256) ;  _to_copy_2162 = None
        mm_754 = torch.mm(view_3842,t_808) ;  view_3842 = t_808 = None
        view_3843 = mm_754.view(1, 512, 512, 1024) ;  mm_754 = None
        select_101 = torch.select(view_3841,0,0) 
        view_3844 = view_3843.view(1, 512, 512, 4, 4, 64) ;  view_3843 = None
        permute_2028 = view_3844.permute(4, 0, 3, 1, 2, 5) ;  view_3844 = None
        view_3845 = permute_2028.view(4, 4, 512, 512, 64) ;  permute_2028 = None
        unbind_int_172 = torch.unbind(view_3845) ;  view_3845 = None
        getitem_3731 = unbind_int_172[0]
        getitem_3732 = unbind_int_172[1]
        getitem_3733 = unbind_int_172[2]
        getitem_3734 = unbind_int_172[3];  unbind_int_172 = None
        expand_247 = select_101.expand(4, 512, 512, 512) ;  select_101 = None
        _scaled_dot_product_efficient_attention_default_144 = (torch.nn.functional.scaled_dot_product_attention(getitem_3731,getitem_3732,getitem_3733,expand_247,False),) ;  getitem_3731 = getitem_3732 = getitem_3733 = expand_247 = None
        getitem_3735 = _scaled_dot_product_efficient_attention_default_144[0]
        sigmoid_309 = torch.sigmoid(getitem_3734) ;  getitem_3734 = None
        mul_510 = torch.mul(getitem_3735,sigmoid_309) ;  getitem_3735 = sigmoid_309 = None
        view_3846 = mul_510.view(1, 4, 512, 512, 64) ;  mul_510 = None
        permute_2029 = view_3846.permute(0, 2, 3, 1, 4) ;  view_3846 = None
        clone_316 = torch.clone(permute_2029,memory_format = torch.contiguous_format) ;  permute_2029 = None
        _unsafe_view_264 = clone_316.view(1, 512, 512, 256) ;  clone_316 = None
        transpose_101 = torch.transpose(getitem_3728,1,2) ;  getitem_3728 = None
        _to_copy_2163 = arg1300_1.to(dtype = torch.bfloat16) ;  arg1300_1 = None
        _to_copy_2164 = transpose_101.to(dtype = torch.bfloat16) ;  transpose_101 = None
        t_809 = _to_copy_2163.t() ;  _to_copy_2163 = None
        expand_248 = _to_copy_2164.expand(1, 512, 512, 256) ;  _to_copy_2164 = None
        view_3847 = expand_248.view(512, 512, 256) ;  expand_248 = None
        expand_249 = t_809.expand(1, 512, 256, 1024) ;  t_809 = None
        view_3848 = expand_249.view(512, 256, 1024) ;  expand_249 = None
        bmm_300 = torch.bmm(view_3847,view_3848) ;  view_3847 = view_3848 = None
        view_3849 = bmm_300.view(1, 512, 512, 1024) ;  bmm_300 = None
        select_102 = torch.select(view_3841,0,1) ;  view_3841 = None
        view_3850 = view_3849.view(1, 512, 512, 4, 4, 64) ;  view_3849 = None
        permute_2030 = view_3850.permute(4, 0, 3, 1, 2, 5) ;  view_3850 = None
        view_3851 = permute_2030.view(4, 4, 512, 512, 64) ;  permute_2030 = None
        unbind_int_173 = torch.unbind(view_3851) ;  view_3851 = None
        getitem_3739 = unbind_int_173[0]
        getitem_3740 = unbind_int_173[1]
        getitem_3741 = unbind_int_173[2]
        getitem_3742 = unbind_int_173[3];  unbind_int_173 = None
        expand_250 = select_102.expand(4, 512, 512, 512) ;  select_102 = None
        _scaled_dot_product_efficient_attention_default_145 = (torch.nn.functional.scaled_dot_product_attention(getitem_3739,getitem_3740,getitem_3741,expand_250,False),) ;  getitem_3739 = getitem_3740 = getitem_3741 = expand_250 = None
        getitem_3743 = _scaled_dot_product_efficient_attention_default_145[0]
        sigmoid_310 = torch.sigmoid(getitem_3742) ;  getitem_3742 = None
        mul_511 = torch.mul(getitem_3743,sigmoid_310) ;  getitem_3743 = sigmoid_310 = None
        view_3852 = mul_511.view(1, 4, 512, 512, 64) ;  mul_511 = None
        permute_2031 = view_3852.permute(0, 2, 3, 1, 4) ;  view_3852 = None
        clone_317 = torch.clone(permute_2031,memory_format = torch.contiguous_format) ;  permute_2031 = None
        _unsafe_view_265 = clone_317.view(1, 512, 512, 256) ;  clone_317 = None
        cat_56 = torch.cat([_unsafe_view_264,_unsafe_view_265],dim = -1) ;  _unsafe_view_264 = _unsafe_view_265 = None
        slice_249 = arg1297_1[0:] ;  arg1297_1 = None
        unsqueeze_1220 = torch.unsqueeze(slice_249,1) ;  slice_249 = None
        mul_512 = torch.mul(arg1301_1,unsqueeze_1220) ;  arg1301_1 = unsqueeze_1220 = None
        _to_copy_2165 = mul_512.to(dtype = torch.bfloat16) ;  mul_512 = None
        t_810 = _to_copy_2165.t() ;  _to_copy_2165 = None
        view_3853 = cat_56.view(262144, 512) ;  cat_56 = None
        mm_755 = torch.mm(view_3853,t_810) ;  view_3853 = t_810 = None
        view_3854 = mm_755.view(1, 512, 512, 256) ;  mm_755 = None
        add_410 = torch.add(add_409,view_3854) ;  add_409 = view_3854 = None
        split_tensor_407 = torch.split(add_403,512,dim = -2) 
        getitem_3747 = split_tensor_407[0];  split_tensor_407 = None
        _to_copy_2166 = getitem_3747.to(dtype = torch.float32) ;  getitem_3747 = None
        native_layer_norm_default_446 = (torch.nn.functional.layer_norm(_to_copy_2166,[256],arg1288_1,arg1289_1,1e-05),) ;  _to_copy_2166 = arg1288_1 = arg1289_1 = None
        getitem_3748 = native_layer_norm_default_446[0]
        _to_copy_2167 = arg1290_1.to(dtype = torch.bfloat16) ;  arg1290_1 = None
        _to_copy_2168 = getitem_3748.to(dtype = torch.bfloat16) ;  getitem_3748 = None
        t_811 = _to_copy_2167.t() ;  _to_copy_2167 = None
        view_3855 = _to_copy_2168.view(262144, 256) ;  _to_copy_2168 = None
        mm_756 = torch.mm(view_3855,t_811) ;  view_3855 = t_811 = None
        view_3856 = mm_756.view(1, 512, 512, 1024) ;  mm_756 = None
        split_tensor_408 = torch.split(view_3856,512,dim = -1) ;  view_3856 = None
        getitem_3751 = split_tensor_408[0]
        getitem_3752 = split_tensor_408[1];  split_tensor_408 = None
        silu_106 = torch.nn.functional.silu(getitem_3751) ;  getitem_3751 = None
        mul_513 = torch.mul(silu_106,getitem_3752) ;  silu_106 = getitem_3752 = None
        _to_copy_2169 = arg1291_1.to(dtype = torch.bfloat16) ;  arg1291_1 = None
        t_812 = _to_copy_2169.t() ;  _to_copy_2169 = None
        view_3858 = mul_513.view(262144, 512) ;  mul_513 = None
        mm_757 = torch.mm(view_3858,t_812) ;  view_3858 = t_812 = None
        view_3859 = mm_757.view(1, 512, 512, 256) ;  mm_757 = None
        add_411 = torch.add(add_410,view_3859) ;  add_410 = view_3859 = None
        _to_copy_2170 = add_407.to(dtype = torch.float32) 
        native_layer_norm_default_447 = (torch.nn.functional.layer_norm(_to_copy_2170,[384],arg1306_1,arg1307_1,1e-05),) ;  _to_copy_2170 = arg1306_1 = arg1307_1 = None
        getitem_3753 = native_layer_norm_default_447[0]
        _to_copy_2171 = add_403.to(dtype = torch.float32) ;  add_403 = None
        native_layer_norm_default_448 = (torch.nn.functional.layer_norm(_to_copy_2171,[256],arg1308_1,arg1309_1,1e-05),) ;  _to_copy_2171 = arg1308_1 = arg1309_1 = None
        getitem_3756 = native_layer_norm_default_448[0]
        _to_copy_2172 = arg1310_1.to(dtype = torch.bfloat16) ;  arg1310_1 = None
        _to_copy_2173 = getitem_3756.to(dtype = torch.bfloat16) ;  getitem_3756 = None
        t_813 = _to_copy_2172.t() ;  _to_copy_2172 = None
        view_3860 = _to_copy_2173.view(262144, 256) ;  _to_copy_2173 = None
        mm_758 = torch.mm(view_3860,t_813) ;  view_3860 = t_813 = None
        view_3861 = mm_758.view(1, 512, 512, 16) ;  mm_758 = None
        permute_2032 = view_3861.permute(0, 3, 1, 2) ;  view_3861 = None
        view_3862 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_237 = torch.bitwise_not(view_3862) ;  view_3862 = None
        masked_fill_237 = permute_2032.masked_fill(bitwise_not_237,-10000) ;  permute_2032 = bitwise_not_237 = None
        _to_copy_2174 = getitem_3753.to(dtype = torch.bfloat16) ;  getitem_3753 = None
        _to_copy_2175 = arg1312_1.to(dtype = torch.bfloat16) ;  arg1312_1 = None
        unsqueeze_1221 = torch.unsqueeze(_to_copy_2174,3) ;  _to_copy_2174 = None
        unsqueeze_1222 = torch.unsqueeze(unsqueeze_1221,4) ;  unsqueeze_1221 = None
        unsqueeze_1223 = torch.unsqueeze(unsqueeze_1222,5) ;  unsqueeze_1222 = None
        permute_2033 = unsqueeze_1223.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_1223 = None
        unsqueeze_1224 = torch.unsqueeze(_to_copy_2175,4) ;  _to_copy_2175 = None
        unsqueeze_1225 = torch.unsqueeze(unsqueeze_1224,5) ;  unsqueeze_1224 = None
        permute_2034 = unsqueeze_1225.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_1225 = None
        permute_2035 = permute_2033.permute(3, 5, 0, 1, 2, 4) ;  permute_2033 = None
        view_3863 = permute_2035.view(1, 512, 384) ;  permute_2035 = None
        permute_2036 = permute_2034.permute(5, 0, 1, 2, 4, 3) ;  permute_2034 = None
        view_3864 = permute_2036.view(1, 384, 1536) ;  permute_2036 = None
        bmm_301 = torch.bmm(view_3863,view_3864) ;  view_3863 = view_3864 = None
        view_3865 = bmm_301.view(512, 1, 4, 1, 16, 24) ;  bmm_301 = None
        permute_2037 = view_3865.permute(2, 3, 4, 0, 5, 1) ;  view_3865 = None
        view_3866 = permute_2037.view(4, 1, 16, 512, 24) ;  permute_2037 = None
        unbind_int_174 = torch.unbind(view_3866) ;  view_3866 = None
        getitem_3759 = unbind_int_174[0]
        getitem_3760 = unbind_int_174[1]
        getitem_3761 = unbind_int_174[2]
        getitem_3762 = unbind_int_174[3];  unbind_int_174 = None
        view_3867 = arg1311_1.view(1, 16, 1, 24) ;  arg1311_1 = None
        add_412 = torch.add(getitem_3759,view_3867) ;  getitem_3759 = view_3867 = None
        _to_copy_2176 = add_412.to(dtype = torch.bfloat16) ;  add_412 = None
        expand_251 = masked_fill_237.expand(1, 16, 512, 512) ;  masked_fill_237 = None
        _scaled_dot_product_efficient_attention_default_146 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_2176,getitem_3760,getitem_3761,expand_251,False),) ;  _to_copy_2176 = getitem_3760 = getitem_3761 = expand_251 = None
        getitem_3763 = _scaled_dot_product_efficient_attention_default_146[0]
        add_413 = torch.add(getitem_3762,1) ;  getitem_3762 = None
        sigmoid_311 = torch.sigmoid(add_413) ;  add_413 = None
        mul_514 = torch.mul(getitem_3763,sigmoid_311) ;  getitem_3763 = sigmoid_311 = None
        _to_copy_2177 = arg1313_1.to(dtype = torch.bfloat16) ;  arg1313_1 = None
        unsqueeze_1226 = torch.unsqueeze(mul_514,4) ;  mul_514 = None
        permute_2038 = unsqueeze_1226.permute(0, 2, 4, 3, 1) ;  unsqueeze_1226 = None
        unsqueeze_1227 = torch.unsqueeze(_to_copy_2177,3) ;  _to_copy_2177 = None
        unsqueeze_1228 = torch.unsqueeze(unsqueeze_1227,4) ;  unsqueeze_1227 = None
        permute_2039 = unsqueeze_1228.permute(3, 4, 2, 1, 0) ;  unsqueeze_1228 = None
        permute_2040 = permute_2038.permute(1, 3, 4, 0, 2) ;  permute_2038 = None
        clone_318 = torch.clone(permute_2040,memory_format = torch.contiguous_format) ;  permute_2040 = None
        _unsafe_view_266 = clone_318.view(1, 512, 384) ;  clone_318 = None
        permute_2041 = permute_2039.permute(3, 4, 0, 2, 1) ;  permute_2039 = None
        clone_319 = torch.clone(permute_2041,memory_format = torch.contiguous_format) ;  permute_2041 = None
        _unsafe_view_267 = clone_319.view(1, 384, 384) ;  clone_319 = None
        bmm_302 = torch.bmm(_unsafe_view_266,_unsafe_view_267) ;  _unsafe_view_266 = _unsafe_view_267 = None
        view_3868 = bmm_302.view(512, 1, 1, 1, 384) ;  bmm_302 = None
        permute_2042 = view_3868.permute(3, 0, 4, 1, 2) ;  view_3868 = None
        view_3869 = permute_2042.view(1, 512, 384) ;  permute_2042 = None
        unsqueeze_1229 = torch.unsqueeze(arg1406_1,-1) 
        mul_515 = torch.mul(view_3869,unsqueeze_1229) ;  view_3869 = unsqueeze_1229 = None
        add_414 = torch.add(add_407,mul_515) ;  mul_515 = None
        split_tensor_409 = torch.split(add_407,512,dim = -2) ;  add_407 = None
        getitem_3767 = split_tensor_409[0];  split_tensor_409 = None
        _to_copy_2178 = getitem_3767.to(dtype = torch.float32) ;  getitem_3767 = None
        native_layer_norm_default_449 = (torch.nn.functional.layer_norm(_to_copy_2178,[384],arg1302_1,arg1303_1,1e-05),) ;  _to_copy_2178 = arg1302_1 = arg1303_1 = None
        getitem_3768 = native_layer_norm_default_449[0]
        _to_copy_2179 = arg1304_1.to(dtype = torch.bfloat16) ;  arg1304_1 = None
        _to_copy_2180 = getitem_3768.to(dtype = torch.bfloat16) ;  getitem_3768 = None
        t_814 = _to_copy_2179.t() ;  _to_copy_2179 = None
        view_3870 = _to_copy_2180.view(512, 384) ;  _to_copy_2180 = None
        mm_759 = torch.mm(view_3870,t_814) ;  view_3870 = t_814 = None
        view_3871 = mm_759.view(1, 512, 1536) ;  mm_759 = None
        split_tensor_410 = torch.split(view_3871,768,dim = -1) ;  view_3871 = None
        getitem_3771 = split_tensor_410[0]
        getitem_3772 = split_tensor_410[1];  split_tensor_410 = None
        silu_107 = torch.nn.functional.silu(getitem_3771) ;  getitem_3771 = None
        mul_516 = torch.mul(silu_107,getitem_3772) ;  silu_107 = getitem_3772 = None
        _to_copy_2181 = arg1305_1.to(dtype = torch.bfloat16) ;  arg1305_1 = None
        t_815 = _to_copy_2181.t() ;  _to_copy_2181 = None
        view_3873 = mul_516.view(512, 768) ;  mul_516 = None
        mm_760 = torch.mm(view_3873,t_815) ;  view_3873 = t_815 = None
        view_3874 = mm_760.view(1, 512, 384) ;  mm_760 = None
        add_415 = torch.add(add_414,view_3874) ;  add_414 = view_3874 = None
        _to_copy_2182 = add_411.to(dtype = torch.float32) 
        native_layer_norm_default_450 = (torch.nn.functional.layer_norm(_to_copy_2182,[256],arg1318_1,arg1319_1,1e-05),) ;  _to_copy_2182 = arg1318_1 = arg1319_1 = None
        getitem_3773 = native_layer_norm_default_450[0]
        split_with_sizes_default_102 = torch.split(arg1321_1,[512,512]) ;  arg1321_1 = None
        getitem_3776 = split_with_sizes_default_102[0]
        getitem_3777 = split_with_sizes_default_102[1];  split_with_sizes_default_102 = None
        split_with_sizes_default_103 = torch.split(arg1322_1,[512,512,256]) ;  arg1322_1 = None
        getitem_3778 = split_with_sizes_default_103[0]
        getitem_3779 = split_with_sizes_default_103[1]
        getitem_3780 = split_with_sizes_default_103[2];  split_with_sizes_default_103 = None
        _to_copy_2183 = getitem_3776.to(dtype = torch.bfloat16) ;  getitem_3776 = None
        _to_copy_2184 = getitem_3773.to(dtype = torch.bfloat16) 
        t_816 = _to_copy_2183.t() ;  _to_copy_2183 = None
        view_3875 = _to_copy_2184.view(262144, 256) ;  _to_copy_2184 = None
        mm_761 = torch.mm(view_3875,t_816) ;  view_3875 = t_816 = None
        view_3876 = mm_761.view(1, 512, 512, 512) ;  mm_761 = None
        _to_copy_2185 = getitem_3778.to(dtype = torch.bfloat16) ;  getitem_3778 = None
        _to_copy_2186 = getitem_3773.to(dtype = torch.bfloat16) 
        t_817 = _to_copy_2185.t() ;  _to_copy_2185 = None
        view_3877 = _to_copy_2186.view(262144, 256) ;  _to_copy_2186 = None
        mm_762 = torch.mm(view_3877,t_817) ;  view_3877 = t_817 = None
        view_3878 = mm_762.view(1, 512, 512, 512) ;  mm_762 = None
        sigmoid_312 = torch.sigmoid(view_3878) ;  view_3878 = None
        mul_517 = torch.mul(view_3876,sigmoid_312) ;  view_3876 = sigmoid_312 = None
        unsqueeze_1230 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_238 = torch.bitwise_not(unsqueeze_1230) ;  unsqueeze_1230 = None
        masked_fill_238 = mul_517.masked_fill(bitwise_not_238,0) ;  mul_517 = bitwise_not_238 = None
        split_tensor_411 = torch.split(masked_fill_238,256,dim = -1) 
        getitem_3783 = split_tensor_411[0]
        unsqueeze_1233 = torch.unsqueeze(getitem_3783,4) ;  getitem_3783 = None
        permute_2047 = unsqueeze_1233.permute(0, 1, 4, 3, 2) ;  unsqueeze_1233 = None
        permute_2048 = permute_2047.permute(3, 1, 4, 0, 2) ;  permute_2047 = None
        view_3881 = permute_2048.view(256, 512, 512) ;  permute_2048 = None
        split_tensor_412 = torch.split(masked_fill_238,256,dim = -1) ;  masked_fill_238 = None
        getitem_3786 = split_tensor_412[1];  split_tensor_412 = None
        unsqueeze_1234 = torch.unsqueeze(getitem_3786,4) ;  getitem_3786 = None
        permute_2049 = unsqueeze_1234.permute(0, 4, 1, 3, 2) ;  unsqueeze_1234 = None
        permute_2050 = permute_2049.permute(3, 4, 0, 2, 1) ;  permute_2049 = None
        view_3882 = permute_2050.view(256, 512, 512) ;  permute_2050 = None
        bmm_303 = torch.bmm(view_3881,view_3882) ;  view_3881 = view_3882 = None
        view_3883 = bmm_303.view(256, 512, 1, 1, 512) ;  bmm_303 = None
        permute_2051 = view_3883.permute(3, 1, 4, 0, 2) ;  view_3883 = None
        view_3884 = permute_2051.view(1, 512, 512, 256) ;  permute_2051 = None
        _to_copy_2187 = getitem_3777.to(dtype = torch.bfloat16) ;  getitem_3777 = None
        _to_copy_2188 = getitem_3773.to(dtype = torch.bfloat16) 
        t_818 = _to_copy_2187.t() ;  _to_copy_2187 = None
        view_3885 = _to_copy_2188.view(262144, 256) ;  _to_copy_2188 = None
        mm_763 = torch.mm(view_3885,t_818) ;  view_3885 = t_818 = None
        view_3886 = mm_763.view(1, 512, 512, 512) ;  mm_763 = None
        _to_copy_2189 = getitem_3779.to(dtype = torch.bfloat16) ;  getitem_3779 = None
        _to_copy_2190 = getitem_3773.to(dtype = torch.bfloat16) 
        t_819 = _to_copy_2189.t() ;  _to_copy_2189 = None
        view_3887 = _to_copy_2190.view(262144, 256) ;  _to_copy_2190 = None
        mm_764 = torch.mm(view_3887,t_819) ;  view_3887 = t_819 = None
        view_3888 = mm_764.view(1, 512, 512, 512) ;  mm_764 = None
        sigmoid_313 = torch.sigmoid(view_3888) ;  view_3888 = None
        mul_518 = torch.mul(view_3886,sigmoid_313) ;  view_3886 = sigmoid_313 = None
        view_3889 = mul_518.view(262144, 512) ;  mul_518 = None
        view_3890 = view_3889.view(1, 512, 512, 512) ;  view_3889 = None
        transpose_102 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_1235 = torch.unsqueeze(transpose_102,3) ;  transpose_102 = None
        clone_320 = torch.clone(unsqueeze_1235,memory_format = torch.contiguous_format) ;  unsqueeze_1235 = None
        bitwise_not_239 = torch.bitwise_not(clone_320) ;  clone_320 = None
        masked_fill_239 = view_3890.masked_fill(bitwise_not_239,0) ;  view_3890 = bitwise_not_239 = None
        view_3891 = masked_fill_239.view(262144, 512) ;  masked_fill_239 = None
        view_3895 = view_3891.view(1, 512, 512, 512) 
        split_tensor_413 = torch.split(view_3895,256,dim = -1) ;  view_3895 = None
        getitem_3789 = split_tensor_413[0]
        unsqueeze_1238 = torch.unsqueeze(getitem_3789,4) ;  getitem_3789 = None
        permute_2056 = unsqueeze_1238.permute(0, 2, 4, 3, 1) ;  unsqueeze_1238 = None
        permute_2057 = permute_2056.permute(3, 1, 4, 0, 2) ;  permute_2056 = None
        view_3896 = permute_2057.view(256, 512, 512) ;  permute_2057 = None
        view_3897 = view_3891.view(1, 512, 512, 512) ;  view_3891 = None
        split_tensor_414 = torch.split(view_3897,256,dim = -1) ;  view_3897 = None
        getitem_3792 = split_tensor_414[1];  split_tensor_414 = None
        unsqueeze_1239 = torch.unsqueeze(getitem_3792,4) ;  getitem_3792 = None
        permute_2058 = unsqueeze_1239.permute(0, 4, 2, 3, 1) ;  unsqueeze_1239 = None
        permute_2059 = permute_2058.permute(3, 4, 0, 2, 1) ;  permute_2058 = None
        view_3898 = permute_2059.view(256, 512, 512) ;  permute_2059 = None
        bmm_304 = torch.bmm(view_3896,view_3898) ;  view_3896 = view_3898 = None
        view_3899 = bmm_304.view(256, 512, 1, 1, 512) ;  bmm_304 = None
        permute_2060 = view_3899.permute(3, 1, 4, 0, 2) ;  view_3899 = None
        view_3900 = permute_2060.view(1, 512, 512, 256) ;  permute_2060 = None
        _to_copy_2191 = view_3884.to(dtype = torch.float32) ;  view_3884 = None
        native_layer_norm_default_451 = (torch.nn.functional.layer_norm(_to_copy_2191,[256],None,None,1e-05),) ;  _to_copy_2191 = None
        getitem_3793 = native_layer_norm_default_451[0]
        _to_copy_2192 = view_3900.to(dtype = torch.float32) ;  view_3900 = None
        native_layer_norm_default_452 = (torch.nn.functional.layer_norm(_to_copy_2192,[256],None,None,1e-05),) ;  _to_copy_2192 = None
        getitem_3796 = native_layer_norm_default_452[0]
        add_416 = torch.add(getitem_3793,getitem_3796) ;  getitem_3793 = getitem_3796 = None
        _to_copy_2193 = arg1320_1.to(dtype = torch.bfloat16) ;  arg1320_1 = None
        _to_copy_2194 = add_416.to(dtype = torch.bfloat16) ;  add_416 = None
        t_820 = _to_copy_2193.t() ;  _to_copy_2193 = None
        view_3901 = _to_copy_2194.view(262144, 256) ;  _to_copy_2194 = None
        mm_765 = torch.mm(view_3901,t_820) ;  view_3901 = t_820 = None
        view_3902 = mm_765.view(1, 512, 512, 256) ;  mm_765 = None
        _to_copy_2195 = getitem_3780.to(dtype = torch.bfloat16) ;  getitem_3780 = None
        _to_copy_2196 = getitem_3773.to(dtype = torch.bfloat16) ;  getitem_3773 = None
        t_821 = _to_copy_2195.t() ;  _to_copy_2195 = None
        view_3903 = _to_copy_2196.view(262144, 256) ;  _to_copy_2196 = None
        mm_766 = torch.mm(view_3903,t_821) ;  view_3903 = t_821 = None
        view_3904 = mm_766.view(1, 512, 512, 256) ;  mm_766 = None
        sigmoid_314 = torch.sigmoid(view_3904) ;  view_3904 = None
        mul_519 = torch.mul(view_3902,sigmoid_314) ;  view_3902 = sigmoid_314 = None
        add_417 = torch.add(add_411,mul_519) ;  mul_519 = None
        _to_copy_2197 = add_411.to(dtype = torch.float32) 
        native_layer_norm_default_453 = (torch.nn.functional.layer_norm(_to_copy_2197,[256],None,None,1e-05),) ;  _to_copy_2197 = None
        getitem_3799 = native_layer_norm_default_453[0]
        _to_copy_2198 = arg1324_1.to(dtype = torch.bfloat16) ;  arg1324_1 = None
        _to_copy_2199 = getitem_3799.to(dtype = torch.bfloat16) 
        t_822 = _to_copy_2198.t() ;  _to_copy_2198 = None
        view_3905 = _to_copy_2199.view(262144, 256) ;  _to_copy_2199 = None
        mm_767 = torch.mm(view_3905,t_822) ;  view_3905 = t_822 = None
        view_3906 = mm_767.view(1, 512, 512, 8) ;  mm_767 = None
        view_3907 = view_3906.view(1, 512, 512, 2, 4) ;  view_3906 = None
        permute_2061 = view_3907.permute(0, 3, 4, 1, 2) ;  view_3907 = None
        view_3908 = permute_2061.view(1, 2, 4, 1, 512, 512) ;  permute_2061 = None
        view_3909 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_240 = torch.bitwise_not(view_3909) ;  view_3909 = None
        masked_fill_240 = view_3908.masked_fill(bitwise_not_240,-10000) ;  view_3908 = bitwise_not_240 = None
        view_3910 = masked_fill_240.view(1, 2, 4, 512, 512) ;  masked_fill_240 = None
        permute_2062 = view_3910.permute(1, 0, 2, 3, 4) ;  view_3910 = None
        view_3911 = permute_2062.view(2, 4, 1, 512, 512) ;  permute_2062 = None
        _to_copy_2200 = arg1325_1.to(dtype = torch.bfloat16) ;  arg1325_1 = None
        _to_copy_2201 = getitem_3799.to(dtype = torch.bfloat16) 
        t_823 = _to_copy_2200.t() ;  _to_copy_2200 = None
        view_3912 = _to_copy_2201.view(262144, 256) ;  _to_copy_2201 = None
        mm_768 = torch.mm(view_3912,t_823) ;  view_3912 = t_823 = None
        view_3913 = mm_768.view(1, 512, 512, 1024) ;  mm_768 = None
        select_103 = torch.select(view_3911,0,0) 
        view_3914 = view_3913.view(1, 512, 512, 4, 4, 64) ;  view_3913 = None
        permute_2063 = view_3914.permute(4, 0, 3, 1, 2, 5) ;  view_3914 = None
        view_3915 = permute_2063.view(4, 4, 512, 512, 64) ;  permute_2063 = None
        unbind_int_175 = torch.unbind(view_3915) ;  view_3915 = None
        getitem_3802 = unbind_int_175[0]
        getitem_3803 = unbind_int_175[1]
        getitem_3804 = unbind_int_175[2]
        getitem_3805 = unbind_int_175[3];  unbind_int_175 = None
        expand_252 = select_103.expand(4, 512, 512, 512) ;  select_103 = None
        _scaled_dot_product_efficient_attention_default_147 = (torch.nn.functional.scaled_dot_product_attention(getitem_3802,getitem_3803,getitem_3804,expand_252,False),) ;  getitem_3802 = getitem_3803 = getitem_3804 = expand_252 = None
        getitem_3806 = _scaled_dot_product_efficient_attention_default_147[0]
        sigmoid_315 = torch.sigmoid(getitem_3805) ;  getitem_3805 = None
        mul_520 = torch.mul(getitem_3806,sigmoid_315) ;  getitem_3806 = sigmoid_315 = None
        view_3916 = mul_520.view(1, 4, 512, 512, 64) ;  mul_520 = None
        permute_2064 = view_3916.permute(0, 2, 3, 1, 4) ;  view_3916 = None
        clone_321 = torch.clone(permute_2064,memory_format = torch.contiguous_format) ;  permute_2064 = None
        _unsafe_view_268 = clone_321.view(1, 512, 512, 256) ;  clone_321 = None
        transpose_103 = torch.transpose(getitem_3799,1,2) ;  getitem_3799 = None
        _to_copy_2202 = arg1326_1.to(dtype = torch.bfloat16) ;  arg1326_1 = None
        _to_copy_2203 = transpose_103.to(dtype = torch.bfloat16) ;  transpose_103 = None
        t_824 = _to_copy_2202.t() ;  _to_copy_2202 = None
        expand_253 = _to_copy_2203.expand(1, 512, 512, 256) ;  _to_copy_2203 = None
        view_3917 = expand_253.view(512, 512, 256) ;  expand_253 = None
        expand_254 = t_824.expand(1, 512, 256, 1024) ;  t_824 = None
        view_3918 = expand_254.view(512, 256, 1024) ;  expand_254 = None
        bmm_305 = torch.bmm(view_3917,view_3918) ;  view_3917 = view_3918 = None
        view_3919 = bmm_305.view(1, 512, 512, 1024) ;  bmm_305 = None
        select_104 = torch.select(view_3911,0,1) ;  view_3911 = None
        view_3920 = view_3919.view(1, 512, 512, 4, 4, 64) ;  view_3919 = None
        permute_2065 = view_3920.permute(4, 0, 3, 1, 2, 5) ;  view_3920 = None
        view_3921 = permute_2065.view(4, 4, 512, 512, 64) ;  permute_2065 = None
        unbind_int_176 = torch.unbind(view_3921) ;  view_3921 = None
        getitem_3810 = unbind_int_176[0]
        getitem_3811 = unbind_int_176[1]
        getitem_3812 = unbind_int_176[2]
        getitem_3813 = unbind_int_176[3];  unbind_int_176 = None
        expand_255 = select_104.expand(4, 512, 512, 512) ;  select_104 = None
        _scaled_dot_product_efficient_attention_default_148 = (torch.nn.functional.scaled_dot_product_attention(getitem_3810,getitem_3811,getitem_3812,expand_255,False),) ;  getitem_3810 = getitem_3811 = getitem_3812 = expand_255 = None
        getitem_3814 = _scaled_dot_product_efficient_attention_default_148[0]
        sigmoid_316 = torch.sigmoid(getitem_3813) ;  getitem_3813 = None
        mul_521 = torch.mul(getitem_3814,sigmoid_316) ;  getitem_3814 = sigmoid_316 = None
        view_3922 = mul_521.view(1, 4, 512, 512, 64) ;  mul_521 = None
        permute_2066 = view_3922.permute(0, 2, 3, 1, 4) ;  view_3922 = None
        clone_322 = torch.clone(permute_2066,memory_format = torch.contiguous_format) ;  permute_2066 = None
        _unsafe_view_269 = clone_322.view(1, 512, 512, 256) ;  clone_322 = None
        cat_57 = torch.cat([_unsafe_view_268,_unsafe_view_269],dim = -1) ;  _unsafe_view_268 = _unsafe_view_269 = None
        slice_250 = arg1323_1[0:] ;  arg1323_1 = None
        unsqueeze_1240 = torch.unsqueeze(slice_250,1) ;  slice_250 = None
        mul_522 = torch.mul(arg1327_1,unsqueeze_1240) ;  arg1327_1 = unsqueeze_1240 = None
        _to_copy_2204 = mul_522.to(dtype = torch.bfloat16) ;  mul_522 = None
        t_825 = _to_copy_2204.t() ;  _to_copy_2204 = None
        view_3923 = cat_57.view(262144, 512) ;  cat_57 = None
        mm_769 = torch.mm(view_3923,t_825) ;  view_3923 = t_825 = None
        view_3924 = mm_769.view(1, 512, 512, 256) ;  mm_769 = None
        add_418 = torch.add(add_417,view_3924) ;  add_417 = view_3924 = None
        split_tensor_415 = torch.split(add_411,512,dim = -2) 
        getitem_3818 = split_tensor_415[0];  split_tensor_415 = None
        _to_copy_2205 = getitem_3818.to(dtype = torch.float32) ;  getitem_3818 = None
        native_layer_norm_default_454 = (torch.nn.functional.layer_norm(_to_copy_2205,[256],arg1314_1,arg1315_1,1e-05),) ;  _to_copy_2205 = arg1314_1 = arg1315_1 = None
        getitem_3819 = native_layer_norm_default_454[0]
        _to_copy_2206 = arg1316_1.to(dtype = torch.bfloat16) ;  arg1316_1 = None
        _to_copy_2207 = getitem_3819.to(dtype = torch.bfloat16) ;  getitem_3819 = None
        t_826 = _to_copy_2206.t() ;  _to_copy_2206 = None
        view_3925 = _to_copy_2207.view(262144, 256) ;  _to_copy_2207 = None
        mm_770 = torch.mm(view_3925,t_826) ;  view_3925 = t_826 = None
        view_3926 = mm_770.view(1, 512, 512, 1024) ;  mm_770 = None
        split_tensor_416 = torch.split(view_3926,512,dim = -1) ;  view_3926 = None
        getitem_3822 = split_tensor_416[0]
        getitem_3823 = split_tensor_416[1];  split_tensor_416 = None
        silu_108 = torch.nn.functional.silu(getitem_3822) ;  getitem_3822 = None
        mul_523 = torch.mul(silu_108,getitem_3823) ;  silu_108 = getitem_3823 = None
        _to_copy_2208 = arg1317_1.to(dtype = torch.bfloat16) ;  arg1317_1 = None
        t_827 = _to_copy_2208.t() ;  _to_copy_2208 = None
        view_3928 = mul_523.view(262144, 512) ;  mul_523 = None
        mm_771 = torch.mm(view_3928,t_827) ;  view_3928 = t_827 = None
        view_3929 = mm_771.view(1, 512, 512, 256) ;  mm_771 = None
        add_419 = torch.add(add_418,view_3929) ;  add_418 = view_3929 = None
        _to_copy_2209 = add_415.to(dtype = torch.float32) 
        native_layer_norm_default_455 = (torch.nn.functional.layer_norm(_to_copy_2209,[384],arg1332_1,arg1333_1,1e-05),) ;  _to_copy_2209 = arg1332_1 = arg1333_1 = None
        getitem_3824 = native_layer_norm_default_455[0]
        _to_copy_2210 = add_411.to(dtype = torch.float32) ;  add_411 = None
        native_layer_norm_default_456 = (torch.nn.functional.layer_norm(_to_copy_2210,[256],arg1334_1,arg1335_1,1e-05),) ;  _to_copy_2210 = arg1334_1 = arg1335_1 = None
        getitem_3827 = native_layer_norm_default_456[0]
        _to_copy_2211 = arg1336_1.to(dtype = torch.bfloat16) ;  arg1336_1 = None
        _to_copy_2212 = getitem_3827.to(dtype = torch.bfloat16) ;  getitem_3827 = None
        t_828 = _to_copy_2211.t() ;  _to_copy_2211 = None
        view_3930 = _to_copy_2212.view(262144, 256) ;  _to_copy_2212 = None
        mm_772 = torch.mm(view_3930,t_828) ;  view_3930 = t_828 = None
        view_3931 = mm_772.view(1, 512, 512, 16) ;  mm_772 = None
        permute_2067 = view_3931.permute(0, 3, 1, 2) ;  view_3931 = None
        view_3932 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_241 = torch.bitwise_not(view_3932) ;  view_3932 = None
        masked_fill_241 = permute_2067.masked_fill(bitwise_not_241,-10000) ;  permute_2067 = bitwise_not_241 = None
        _to_copy_2213 = getitem_3824.to(dtype = torch.bfloat16) ;  getitem_3824 = None
        _to_copy_2214 = arg1338_1.to(dtype = torch.bfloat16) ;  arg1338_1 = None
        unsqueeze_1241 = torch.unsqueeze(_to_copy_2213,3) ;  _to_copy_2213 = None
        unsqueeze_1242 = torch.unsqueeze(unsqueeze_1241,4) ;  unsqueeze_1241 = None
        unsqueeze_1243 = torch.unsqueeze(unsqueeze_1242,5) ;  unsqueeze_1242 = None
        permute_2068 = unsqueeze_1243.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_1243 = None
        unsqueeze_1244 = torch.unsqueeze(_to_copy_2214,4) ;  _to_copy_2214 = None
        unsqueeze_1245 = torch.unsqueeze(unsqueeze_1244,5) ;  unsqueeze_1244 = None
        permute_2069 = unsqueeze_1245.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_1245 = None
        permute_2070 = permute_2068.permute(3, 5, 0, 1, 2, 4) ;  permute_2068 = None
        view_3933 = permute_2070.view(1, 512, 384) ;  permute_2070 = None
        permute_2071 = permute_2069.permute(5, 0, 1, 2, 4, 3) ;  permute_2069 = None
        view_3934 = permute_2071.view(1, 384, 1536) ;  permute_2071 = None
        bmm_306 = torch.bmm(view_3933,view_3934) ;  view_3933 = view_3934 = None
        view_3935 = bmm_306.view(512, 1, 4, 1, 16, 24) ;  bmm_306 = None
        permute_2072 = view_3935.permute(2, 3, 4, 0, 5, 1) ;  view_3935 = None
        view_3936 = permute_2072.view(4, 1, 16, 512, 24) ;  permute_2072 = None
        unbind_int_177 = torch.unbind(view_3936) ;  view_3936 = None
        getitem_3830 = unbind_int_177[0]
        getitem_3831 = unbind_int_177[1]
        getitem_3832 = unbind_int_177[2]
        getitem_3833 = unbind_int_177[3];  unbind_int_177 = None
        view_3937 = arg1337_1.view(1, 16, 1, 24) ;  arg1337_1 = None
        add_420 = torch.add(getitem_3830,view_3937) ;  getitem_3830 = view_3937 = None
        _to_copy_2215 = add_420.to(dtype = torch.bfloat16) ;  add_420 = None
        expand_256 = masked_fill_241.expand(1, 16, 512, 512) ;  masked_fill_241 = None
        _scaled_dot_product_efficient_attention_default_149 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_2215,getitem_3831,getitem_3832,expand_256,False),) ;  _to_copy_2215 = getitem_3831 = getitem_3832 = expand_256 = None
        getitem_3834 = _scaled_dot_product_efficient_attention_default_149[0]
        add_421 = torch.add(getitem_3833,1) ;  getitem_3833 = None
        sigmoid_317 = torch.sigmoid(add_421) ;  add_421 = None
        mul_524 = torch.mul(getitem_3834,sigmoid_317) ;  getitem_3834 = sigmoid_317 = None
        _to_copy_2216 = arg1339_1.to(dtype = torch.bfloat16) ;  arg1339_1 = None
        unsqueeze_1246 = torch.unsqueeze(mul_524,4) ;  mul_524 = None
        permute_2073 = unsqueeze_1246.permute(0, 2, 4, 3, 1) ;  unsqueeze_1246 = None
        unsqueeze_1247 = torch.unsqueeze(_to_copy_2216,3) ;  _to_copy_2216 = None
        unsqueeze_1248 = torch.unsqueeze(unsqueeze_1247,4) ;  unsqueeze_1247 = None
        permute_2074 = unsqueeze_1248.permute(3, 4, 2, 1, 0) ;  unsqueeze_1248 = None
        permute_2075 = permute_2073.permute(1, 3, 4, 0, 2) ;  permute_2073 = None
        clone_323 = torch.clone(permute_2075,memory_format = torch.contiguous_format) ;  permute_2075 = None
        _unsafe_view_270 = clone_323.view(1, 512, 384) ;  clone_323 = None
        permute_2076 = permute_2074.permute(3, 4, 0, 2, 1) ;  permute_2074 = None
        clone_324 = torch.clone(permute_2076,memory_format = torch.contiguous_format) ;  permute_2076 = None
        _unsafe_view_271 = clone_324.view(1, 384, 384) ;  clone_324 = None
        bmm_307 = torch.bmm(_unsafe_view_270,_unsafe_view_271) ;  _unsafe_view_270 = _unsafe_view_271 = None
        view_3938 = bmm_307.view(512, 1, 1, 1, 384) ;  bmm_307 = None
        permute_2077 = view_3938.permute(3, 0, 4, 1, 2) ;  view_3938 = None
        view_3939 = permute_2077.view(1, 512, 384) ;  permute_2077 = None
        unsqueeze_1249 = torch.unsqueeze(arg1406_1,-1) 
        mul_525 = torch.mul(view_3939,unsqueeze_1249) ;  view_3939 = unsqueeze_1249 = None
        add_422 = torch.add(add_415,mul_525) ;  mul_525 = None
        split_tensor_417 = torch.split(add_415,512,dim = -2) ;  add_415 = None
        getitem_3838 = split_tensor_417[0];  split_tensor_417 = None
        _to_copy_2217 = getitem_3838.to(dtype = torch.float32) ;  getitem_3838 = None
        native_layer_norm_default_457 = (torch.nn.functional.layer_norm(_to_copy_2217,[384],arg1328_1,arg1329_1,1e-05),) ;  _to_copy_2217 = arg1328_1 = arg1329_1 = None
        getitem_3839 = native_layer_norm_default_457[0]
        _to_copy_2218 = arg1330_1.to(dtype = torch.bfloat16) ;  arg1330_1 = None
        _to_copy_2219 = getitem_3839.to(dtype = torch.bfloat16) ;  getitem_3839 = None
        t_829 = _to_copy_2218.t() ;  _to_copy_2218 = None
        view_3940 = _to_copy_2219.view(512, 384) ;  _to_copy_2219 = None
        mm_773 = torch.mm(view_3940,t_829) ;  view_3940 = t_829 = None
        view_3941 = mm_773.view(1, 512, 1536) ;  mm_773 = None
        split_tensor_418 = torch.split(view_3941,768,dim = -1) ;  view_3941 = None
        getitem_3842 = split_tensor_418[0]
        getitem_3843 = split_tensor_418[1];  split_tensor_418 = None
        silu_109 = torch.nn.functional.silu(getitem_3842) ;  getitem_3842 = None
        mul_526 = torch.mul(silu_109,getitem_3843) ;  silu_109 = getitem_3843 = None
        _to_copy_2220 = arg1331_1.to(dtype = torch.bfloat16) ;  arg1331_1 = None
        t_830 = _to_copy_2220.t() ;  _to_copy_2220 = None
        view_3943 = mul_526.view(512, 768) ;  mul_526 = None
        mm_774 = torch.mm(view_3943,t_830) ;  view_3943 = t_830 = None
        view_3944 = mm_774.view(1, 512, 384) ;  mm_774 = None
        add_423 = torch.add(add_422,view_3944) ;  add_422 = view_3944 = None
        _to_copy_2221 = add_419.to(dtype = torch.float32) 
        native_layer_norm_default_458 = (torch.nn.functional.layer_norm(_to_copy_2221,[256],arg1344_1,arg1345_1,1e-05),) ;  _to_copy_2221 = arg1344_1 = arg1345_1 = None
        getitem_3844 = native_layer_norm_default_458[0]
        split_with_sizes_default_104 = torch.split(arg1347_1,[512,512]) ;  arg1347_1 = None
        getitem_3847 = split_with_sizes_default_104[0]
        getitem_3848 = split_with_sizes_default_104[1];  split_with_sizes_default_104 = None
        split_with_sizes_default_105 = torch.split(arg1348_1,[512,512,256]) ;  arg1348_1 = None
        getitem_3849 = split_with_sizes_default_105[0]
        getitem_3850 = split_with_sizes_default_105[1]
        getitem_3851 = split_with_sizes_default_105[2];  split_with_sizes_default_105 = None
        _to_copy_2222 = getitem_3847.to(dtype = torch.bfloat16) ;  getitem_3847 = None
        _to_copy_2223 = getitem_3844.to(dtype = torch.bfloat16) 
        t_831 = _to_copy_2222.t() ;  _to_copy_2222 = None
        view_3945 = _to_copy_2223.view(262144, 256) ;  _to_copy_2223 = None
        mm_775 = torch.mm(view_3945,t_831) ;  view_3945 = t_831 = None
        view_3946 = mm_775.view(1, 512, 512, 512) ;  mm_775 = None
        _to_copy_2224 = getitem_3849.to(dtype = torch.bfloat16) ;  getitem_3849 = None
        _to_copy_2225 = getitem_3844.to(dtype = torch.bfloat16) 
        t_832 = _to_copy_2224.t() ;  _to_copy_2224 = None
        view_3947 = _to_copy_2225.view(262144, 256) ;  _to_copy_2225 = None
        mm_776 = torch.mm(view_3947,t_832) ;  view_3947 = t_832 = None
        view_3948 = mm_776.view(1, 512, 512, 512) ;  mm_776 = None
        sigmoid_318 = torch.sigmoid(view_3948) ;  view_3948 = None
        mul_527 = torch.mul(view_3946,sigmoid_318) ;  view_3946 = sigmoid_318 = None
        unsqueeze_1250 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_242 = torch.bitwise_not(unsqueeze_1250) ;  unsqueeze_1250 = None
        masked_fill_242 = mul_527.masked_fill(bitwise_not_242,0) ;  mul_527 = bitwise_not_242 = None
        split_tensor_419 = torch.split(masked_fill_242,256,dim = -1) 
        getitem_3854 = split_tensor_419[0]
        unsqueeze_1253 = torch.unsqueeze(getitem_3854,4) ;  getitem_3854 = None
        permute_2082 = unsqueeze_1253.permute(0, 1, 4, 3, 2) ;  unsqueeze_1253 = None
        permute_2083 = permute_2082.permute(3, 1, 4, 0, 2) ;  permute_2082 = None
        view_3951 = permute_2083.view(256, 512, 512) ;  permute_2083 = None
        split_tensor_420 = torch.split(masked_fill_242,256,dim = -1) ;  masked_fill_242 = None
        getitem_3857 = split_tensor_420[1];  split_tensor_420 = None
        unsqueeze_1254 = torch.unsqueeze(getitem_3857,4) ;  getitem_3857 = None
        permute_2084 = unsqueeze_1254.permute(0, 4, 1, 3, 2) ;  unsqueeze_1254 = None
        permute_2085 = permute_2084.permute(3, 4, 0, 2, 1) ;  permute_2084 = None
        view_3952 = permute_2085.view(256, 512, 512) ;  permute_2085 = None
        bmm_308 = torch.bmm(view_3951,view_3952) ;  view_3951 = view_3952 = None
        view_3953 = bmm_308.view(256, 512, 1, 1, 512) ;  bmm_308 = None
        permute_2086 = view_3953.permute(3, 1, 4, 0, 2) ;  view_3953 = None
        view_3954 = permute_2086.view(1, 512, 512, 256) ;  permute_2086 = None
        _to_copy_2226 = getitem_3848.to(dtype = torch.bfloat16) ;  getitem_3848 = None
        _to_copy_2227 = getitem_3844.to(dtype = torch.bfloat16) 
        t_833 = _to_copy_2226.t() ;  _to_copy_2226 = None
        view_3955 = _to_copy_2227.view(262144, 256) ;  _to_copy_2227 = None
        mm_777 = torch.mm(view_3955,t_833) ;  view_3955 = t_833 = None
        view_3956 = mm_777.view(1, 512, 512, 512) ;  mm_777 = None
        _to_copy_2228 = getitem_3850.to(dtype = torch.bfloat16) ;  getitem_3850 = None
        _to_copy_2229 = getitem_3844.to(dtype = torch.bfloat16) 
        t_834 = _to_copy_2228.t() ;  _to_copy_2228 = None
        view_3957 = _to_copy_2229.view(262144, 256) ;  _to_copy_2229 = None
        mm_778 = torch.mm(view_3957,t_834) ;  view_3957 = t_834 = None
        view_3958 = mm_778.view(1, 512, 512, 512) ;  mm_778 = None
        sigmoid_319 = torch.sigmoid(view_3958) ;  view_3958 = None
        mul_528 = torch.mul(view_3956,sigmoid_319) ;  view_3956 = sigmoid_319 = None
        view_3959 = mul_528.view(262144, 512) ;  mul_528 = None
        view_3960 = view_3959.view(1, 512, 512, 512) ;  view_3959 = None
        transpose_104 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_1255 = torch.unsqueeze(transpose_104,3) ;  transpose_104 = None
        clone_325 = torch.clone(unsqueeze_1255,memory_format = torch.contiguous_format) ;  unsqueeze_1255 = None
        bitwise_not_243 = torch.bitwise_not(clone_325) ;  clone_325 = None
        masked_fill_243 = view_3960.masked_fill(bitwise_not_243,0) ;  view_3960 = bitwise_not_243 = None
        view_3961 = masked_fill_243.view(262144, 512) ;  masked_fill_243 = None
        view_3965 = view_3961.view(1, 512, 512, 512) 
        split_tensor_421 = torch.split(view_3965,256,dim = -1) ;  view_3965 = None
        getitem_3860 = split_tensor_421[0]
        unsqueeze_1258 = torch.unsqueeze(getitem_3860,4) ;  getitem_3860 = None
        permute_2091 = unsqueeze_1258.permute(0, 2, 4, 3, 1) ;  unsqueeze_1258 = None
        permute_2092 = permute_2091.permute(3, 1, 4, 0, 2) ;  permute_2091 = None
        view_3966 = permute_2092.view(256, 512, 512) ;  permute_2092 = None
        view_3967 = view_3961.view(1, 512, 512, 512) ;  view_3961 = None
        split_tensor_422 = torch.split(view_3967,256,dim = -1) ;  view_3967 = None
        getitem_3863 = split_tensor_422[1];  split_tensor_422 = None
        unsqueeze_1259 = torch.unsqueeze(getitem_3863,4) ;  getitem_3863 = None
        permute_2093 = unsqueeze_1259.permute(0, 4, 2, 3, 1) ;  unsqueeze_1259 = None
        permute_2094 = permute_2093.permute(3, 4, 0, 2, 1) ;  permute_2093 = None
        view_3968 = permute_2094.view(256, 512, 512) ;  permute_2094 = None
        bmm_309 = torch.bmm(view_3966,view_3968) ;  view_3966 = view_3968 = None
        view_3969 = bmm_309.view(256, 512, 1, 1, 512) ;  bmm_309 = None
        permute_2095 = view_3969.permute(3, 1, 4, 0, 2) ;  view_3969 = None
        view_3970 = permute_2095.view(1, 512, 512, 256) ;  permute_2095 = None
        _to_copy_2230 = view_3954.to(dtype = torch.float32) ;  view_3954 = None
        native_layer_norm_default_459 = (torch.nn.functional.layer_norm(_to_copy_2230,[256],None,None,1e-05),) ;  _to_copy_2230 = None
        getitem_3864 = native_layer_norm_default_459[0]
        _to_copy_2231 = view_3970.to(dtype = torch.float32) ;  view_3970 = None
        native_layer_norm_default_460 = (torch.nn.functional.layer_norm(_to_copy_2231,[256],None,None,1e-05),) ;  _to_copy_2231 = None
        getitem_3867 = native_layer_norm_default_460[0]
        add_424 = torch.add(getitem_3864,getitem_3867) ;  getitem_3864 = getitem_3867 = None
        _to_copy_2232 = arg1346_1.to(dtype = torch.bfloat16) ;  arg1346_1 = None
        _to_copy_2233 = add_424.to(dtype = torch.bfloat16) ;  add_424 = None
        t_835 = _to_copy_2232.t() ;  _to_copy_2232 = None
        view_3971 = _to_copy_2233.view(262144, 256) ;  _to_copy_2233 = None
        mm_779 = torch.mm(view_3971,t_835) ;  view_3971 = t_835 = None
        view_3972 = mm_779.view(1, 512, 512, 256) ;  mm_779 = None
        _to_copy_2234 = getitem_3851.to(dtype = torch.bfloat16) ;  getitem_3851 = None
        _to_copy_2235 = getitem_3844.to(dtype = torch.bfloat16) ;  getitem_3844 = None
        t_836 = _to_copy_2234.t() ;  _to_copy_2234 = None
        view_3973 = _to_copy_2235.view(262144, 256) ;  _to_copy_2235 = None
        mm_780 = torch.mm(view_3973,t_836) ;  view_3973 = t_836 = None
        view_3974 = mm_780.view(1, 512, 512, 256) ;  mm_780 = None
        sigmoid_320 = torch.sigmoid(view_3974) ;  view_3974 = None
        mul_529 = torch.mul(view_3972,sigmoid_320) ;  view_3972 = sigmoid_320 = None
        add_425 = torch.add(add_419,mul_529) ;  mul_529 = None
        _to_copy_2236 = add_419.to(dtype = torch.float32) 
        native_layer_norm_default_461 = (torch.nn.functional.layer_norm(_to_copy_2236,[256],None,None,1e-05),) ;  _to_copy_2236 = None
        getitem_3870 = native_layer_norm_default_461[0]
        _to_copy_2237 = arg1350_1.to(dtype = torch.bfloat16) ;  arg1350_1 = None
        _to_copy_2238 = getitem_3870.to(dtype = torch.bfloat16) 
        t_837 = _to_copy_2237.t() ;  _to_copy_2237 = None
        view_3975 = _to_copy_2238.view(262144, 256) ;  _to_copy_2238 = None
        mm_781 = torch.mm(view_3975,t_837) ;  view_3975 = t_837 = None
        view_3976 = mm_781.view(1, 512, 512, 8) ;  mm_781 = None
        view_3977 = view_3976.view(1, 512, 512, 2, 4) ;  view_3976 = None
        permute_2096 = view_3977.permute(0, 3, 4, 1, 2) ;  view_3977 = None
        view_3978 = permute_2096.view(1, 2, 4, 1, 512, 512) ;  permute_2096 = None
        view_3979 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_244 = torch.bitwise_not(view_3979) ;  view_3979 = None
        masked_fill_244 = view_3978.masked_fill(bitwise_not_244,-10000) ;  view_3978 = bitwise_not_244 = None
        view_3980 = masked_fill_244.view(1, 2, 4, 512, 512) ;  masked_fill_244 = None
        permute_2097 = view_3980.permute(1, 0, 2, 3, 4) ;  view_3980 = None
        view_3981 = permute_2097.view(2, 4, 1, 512, 512) ;  permute_2097 = None
        _to_copy_2239 = arg1351_1.to(dtype = torch.bfloat16) ;  arg1351_1 = None
        _to_copy_2240 = getitem_3870.to(dtype = torch.bfloat16) 
        t_838 = _to_copy_2239.t() ;  _to_copy_2239 = None
        view_3982 = _to_copy_2240.view(262144, 256) ;  _to_copy_2240 = None
        mm_782 = torch.mm(view_3982,t_838) ;  view_3982 = t_838 = None
        view_3983 = mm_782.view(1, 512, 512, 1024) ;  mm_782 = None
        select_105 = torch.select(view_3981,0,0) 
        view_3984 = view_3983.view(1, 512, 512, 4, 4, 64) ;  view_3983 = None
        permute_2098 = view_3984.permute(4, 0, 3, 1, 2, 5) ;  view_3984 = None
        view_3985 = permute_2098.view(4, 4, 512, 512, 64) ;  permute_2098 = None
        unbind_int_178 = torch.unbind(view_3985) ;  view_3985 = None
        getitem_3873 = unbind_int_178[0]
        getitem_3874 = unbind_int_178[1]
        getitem_3875 = unbind_int_178[2]
        getitem_3876 = unbind_int_178[3];  unbind_int_178 = None
        expand_257 = select_105.expand(4, 512, 512, 512) ;  select_105 = None
        _scaled_dot_product_efficient_attention_default_150 = (torch.nn.functional.scaled_dot_product_attention(getitem_3873,getitem_3874,getitem_3875,expand_257,False),) ;  getitem_3873 = getitem_3874 = getitem_3875 = expand_257 = None
        getitem_3877 = _scaled_dot_product_efficient_attention_default_150[0]
        sigmoid_321 = torch.sigmoid(getitem_3876) ;  getitem_3876 = None
        mul_530 = torch.mul(getitem_3877,sigmoid_321) ;  getitem_3877 = sigmoid_321 = None
        view_3986 = mul_530.view(1, 4, 512, 512, 64) ;  mul_530 = None
        permute_2099 = view_3986.permute(0, 2, 3, 1, 4) ;  view_3986 = None
        clone_326 = torch.clone(permute_2099,memory_format = torch.contiguous_format) ;  permute_2099 = None
        _unsafe_view_272 = clone_326.view(1, 512, 512, 256) ;  clone_326 = None
        transpose_105 = torch.transpose(getitem_3870,1,2) ;  getitem_3870 = None
        _to_copy_2241 = arg1352_1.to(dtype = torch.bfloat16) ;  arg1352_1 = None
        _to_copy_2242 = transpose_105.to(dtype = torch.bfloat16) ;  transpose_105 = None
        t_839 = _to_copy_2241.t() ;  _to_copy_2241 = None
        expand_258 = _to_copy_2242.expand(1, 512, 512, 256) ;  _to_copy_2242 = None
        view_3987 = expand_258.view(512, 512, 256) ;  expand_258 = None
        expand_259 = t_839.expand(1, 512, 256, 1024) ;  t_839 = None
        view_3988 = expand_259.view(512, 256, 1024) ;  expand_259 = None
        bmm_310 = torch.bmm(view_3987,view_3988) ;  view_3987 = view_3988 = None
        view_3989 = bmm_310.view(1, 512, 512, 1024) ;  bmm_310 = None
        select_106 = torch.select(view_3981,0,1) ;  view_3981 = None
        view_3990 = view_3989.view(1, 512, 512, 4, 4, 64) ;  view_3989 = None
        permute_2100 = view_3990.permute(4, 0, 3, 1, 2, 5) ;  view_3990 = None
        view_3991 = permute_2100.view(4, 4, 512, 512, 64) ;  permute_2100 = None
        unbind_int_179 = torch.unbind(view_3991) ;  view_3991 = None
        getitem_3881 = unbind_int_179[0]
        getitem_3882 = unbind_int_179[1]
        getitem_3883 = unbind_int_179[2]
        getitem_3884 = unbind_int_179[3];  unbind_int_179 = None
        expand_260 = select_106.expand(4, 512, 512, 512) ;  select_106 = None
        _scaled_dot_product_efficient_attention_default_151 = (torch.nn.functional.scaled_dot_product_attention(getitem_3881,getitem_3882,getitem_3883,expand_260,False),) ;  getitem_3881 = getitem_3882 = getitem_3883 = expand_260 = None
        getitem_3885 = _scaled_dot_product_efficient_attention_default_151[0]
        sigmoid_322 = torch.sigmoid(getitem_3884) ;  getitem_3884 = None
        mul_531 = torch.mul(getitem_3885,sigmoid_322) ;  getitem_3885 = sigmoid_322 = None
        view_3992 = mul_531.view(1, 4, 512, 512, 64) ;  mul_531 = None
        permute_2101 = view_3992.permute(0, 2, 3, 1, 4) ;  view_3992 = None
        clone_327 = torch.clone(permute_2101,memory_format = torch.contiguous_format) ;  permute_2101 = None
        _unsafe_view_273 = clone_327.view(1, 512, 512, 256) ;  clone_327 = None
        cat_58 = torch.cat([_unsafe_view_272,_unsafe_view_273],dim = -1) ;  _unsafe_view_272 = _unsafe_view_273 = None
        slice_251 = arg1349_1[0:] ;  arg1349_1 = None
        unsqueeze_1260 = torch.unsqueeze(slice_251,1) ;  slice_251 = None
        mul_532 = torch.mul(arg1353_1,unsqueeze_1260) ;  arg1353_1 = unsqueeze_1260 = None
        _to_copy_2243 = mul_532.to(dtype = torch.bfloat16) ;  mul_532 = None
        t_840 = _to_copy_2243.t() ;  _to_copy_2243 = None
        view_3993 = cat_58.view(262144, 512) ;  cat_58 = None
        mm_783 = torch.mm(view_3993,t_840) ;  view_3993 = t_840 = None
        view_3994 = mm_783.view(1, 512, 512, 256) ;  mm_783 = None
        add_426 = torch.add(add_425,view_3994) ;  add_425 = view_3994 = None
        split_tensor_423 = torch.split(add_419,512,dim = -2) 
        getitem_3889 = split_tensor_423[0];  split_tensor_423 = None
        _to_copy_2244 = getitem_3889.to(dtype = torch.float32) ;  getitem_3889 = None
        native_layer_norm_default_462 = (torch.nn.functional.layer_norm(_to_copy_2244,[256],arg1340_1,arg1341_1,1e-05),) ;  _to_copy_2244 = arg1340_1 = arg1341_1 = None
        getitem_3890 = native_layer_norm_default_462[0]
        _to_copy_2245 = arg1342_1.to(dtype = torch.bfloat16) ;  arg1342_1 = None
        _to_copy_2246 = getitem_3890.to(dtype = torch.bfloat16) ;  getitem_3890 = None
        t_841 = _to_copy_2245.t() ;  _to_copy_2245 = None
        view_3995 = _to_copy_2246.view(262144, 256) ;  _to_copy_2246 = None
        mm_784 = torch.mm(view_3995,t_841) ;  view_3995 = t_841 = None
        view_3996 = mm_784.view(1, 512, 512, 1024) ;  mm_784 = None
        split_tensor_424 = torch.split(view_3996,512,dim = -1) ;  view_3996 = None
        getitem_3893 = split_tensor_424[0]
        getitem_3894 = split_tensor_424[1];  split_tensor_424 = None
        silu_110 = torch.nn.functional.silu(getitem_3893) ;  getitem_3893 = None
        mul_533 = torch.mul(silu_110,getitem_3894) ;  silu_110 = getitem_3894 = None
        _to_copy_2247 = arg1343_1.to(dtype = torch.bfloat16) ;  arg1343_1 = None
        t_842 = _to_copy_2247.t() ;  _to_copy_2247 = None
        view_3998 = mul_533.view(262144, 512) ;  mul_533 = None
        mm_785 = torch.mm(view_3998,t_842) ;  view_3998 = t_842 = None
        view_3999 = mm_785.view(1, 512, 512, 256) ;  mm_785 = None
        add_427 = torch.add(add_426,view_3999) ;  add_426 = view_3999 = None
        _to_copy_2248 = add_423.to(dtype = torch.float32) 
        native_layer_norm_default_463 = (torch.nn.functional.layer_norm(_to_copy_2248,[384],arg1358_1,arg1359_1,1e-05),) ;  _to_copy_2248 = arg1358_1 = arg1359_1 = None
        getitem_3895 = native_layer_norm_default_463[0]
        _to_copy_2249 = add_419.to(dtype = torch.float32) ;  add_419 = None
        native_layer_norm_default_464 = (torch.nn.functional.layer_norm(_to_copy_2249,[256],arg1360_1,arg1361_1,1e-05),) ;  _to_copy_2249 = arg1360_1 = arg1361_1 = None
        getitem_3898 = native_layer_norm_default_464[0]
        _to_copy_2250 = arg1362_1.to(dtype = torch.bfloat16) ;  arg1362_1 = None
        _to_copy_2251 = getitem_3898.to(dtype = torch.bfloat16) ;  getitem_3898 = None
        t_843 = _to_copy_2250.t() ;  _to_copy_2250 = None
        view_4000 = _to_copy_2251.view(262144, 256) ;  _to_copy_2251 = None
        mm_786 = torch.mm(view_4000,t_843) ;  view_4000 = t_843 = None
        view_4001 = mm_786.view(1, 512, 512, 16) ;  mm_786 = None
        permute_2102 = view_4001.permute(0, 3, 1, 2) ;  view_4001 = None
        view_4002 = arg1407_1.view(1, 1, 512, 512) 
        bitwise_not_245 = torch.bitwise_not(view_4002) ;  view_4002 = None
        masked_fill_245 = permute_2102.masked_fill(bitwise_not_245,-10000) ;  permute_2102 = bitwise_not_245 = None
        _to_copy_2252 = getitem_3895.to(dtype = torch.bfloat16) ;  getitem_3895 = None
        _to_copy_2253 = arg1364_1.to(dtype = torch.bfloat16) ;  arg1364_1 = None
        unsqueeze_1261 = torch.unsqueeze(_to_copy_2252,3) ;  _to_copy_2252 = None
        unsqueeze_1262 = torch.unsqueeze(unsqueeze_1261,4) ;  unsqueeze_1261 = None
        unsqueeze_1263 = torch.unsqueeze(unsqueeze_1262,5) ;  unsqueeze_1262 = None
        permute_2103 = unsqueeze_1263.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_1263 = None
        unsqueeze_1264 = torch.unsqueeze(_to_copy_2253,4) ;  _to_copy_2253 = None
        unsqueeze_1265 = torch.unsqueeze(unsqueeze_1264,5) ;  unsqueeze_1264 = None
        permute_2104 = unsqueeze_1265.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_1265 = None
        permute_2105 = permute_2103.permute(3, 5, 0, 1, 2, 4) ;  permute_2103 = None
        view_4003 = permute_2105.view(1, 512, 384) ;  permute_2105 = None
        permute_2106 = permute_2104.permute(5, 0, 1, 2, 4, 3) ;  permute_2104 = None
        view_4004 = permute_2106.view(1, 384, 1536) ;  permute_2106 = None
        bmm_311 = torch.bmm(view_4003,view_4004) ;  view_4003 = view_4004 = None
        view_4005 = bmm_311.view(512, 1, 4, 1, 16, 24) ;  bmm_311 = None
        permute_2107 = view_4005.permute(2, 3, 4, 0, 5, 1) ;  view_4005 = None
        view_4006 = permute_2107.view(4, 1, 16, 512, 24) ;  permute_2107 = None
        unbind_int_180 = torch.unbind(view_4006) ;  view_4006 = None
        getitem_3901 = unbind_int_180[0]
        getitem_3902 = unbind_int_180[1]
        getitem_3903 = unbind_int_180[2]
        getitem_3904 = unbind_int_180[3];  unbind_int_180 = None
        view_4007 = arg1363_1.view(1, 16, 1, 24) ;  arg1363_1 = None
        add_428 = torch.add(getitem_3901,view_4007) ;  getitem_3901 = view_4007 = None
        _to_copy_2254 = add_428.to(dtype = torch.bfloat16) ;  add_428 = None
        expand_261 = masked_fill_245.expand(1, 16, 512, 512) ;  masked_fill_245 = None
        _scaled_dot_product_efficient_attention_default_152 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_2254,getitem_3902,getitem_3903,expand_261,False),) ;  _to_copy_2254 = getitem_3902 = getitem_3903 = expand_261 = None
        getitem_3905 = _scaled_dot_product_efficient_attention_default_152[0]
        add_429 = torch.add(getitem_3904,1) ;  getitem_3904 = None
        sigmoid_323 = torch.sigmoid(add_429) ;  add_429 = None
        mul_534 = torch.mul(getitem_3905,sigmoid_323) ;  getitem_3905 = sigmoid_323 = None
        _to_copy_2255 = arg1365_1.to(dtype = torch.bfloat16) ;  arg1365_1 = None
        unsqueeze_1266 = torch.unsqueeze(mul_534,4) ;  mul_534 = None
        permute_2108 = unsqueeze_1266.permute(0, 2, 4, 3, 1) ;  unsqueeze_1266 = None
        unsqueeze_1267 = torch.unsqueeze(_to_copy_2255,3) ;  _to_copy_2255 = None
        unsqueeze_1268 = torch.unsqueeze(unsqueeze_1267,4) ;  unsqueeze_1267 = None
        permute_2109 = unsqueeze_1268.permute(3, 4, 2, 1, 0) ;  unsqueeze_1268 = None
        permute_2110 = permute_2108.permute(1, 3, 4, 0, 2) ;  permute_2108 = None
        clone_328 = torch.clone(permute_2110,memory_format = torch.contiguous_format) ;  permute_2110 = None
        _unsafe_view_274 = clone_328.view(1, 512, 384) ;  clone_328 = None
        permute_2111 = permute_2109.permute(3, 4, 0, 2, 1) ;  permute_2109 = None
        clone_329 = torch.clone(permute_2111,memory_format = torch.contiguous_format) ;  permute_2111 = None
        _unsafe_view_275 = clone_329.view(1, 384, 384) ;  clone_329 = None
        bmm_312 = torch.bmm(_unsafe_view_274,_unsafe_view_275) ;  _unsafe_view_274 = _unsafe_view_275 = None
        view_4008 = bmm_312.view(512, 1, 1, 1, 384) ;  bmm_312 = None
        permute_2112 = view_4008.permute(3, 0, 4, 1, 2) ;  view_4008 = None
        view_4009 = permute_2112.view(1, 512, 384) ;  permute_2112 = None
        unsqueeze_1269 = torch.unsqueeze(arg1406_1,-1) 
        mul_535 = torch.mul(view_4009,unsqueeze_1269) ;  view_4009 = unsqueeze_1269 = None
        add_430 = torch.add(add_423,mul_535) ;  mul_535 = None
        split_tensor_425 = torch.split(add_423,512,dim = -2) ;  add_423 = None
        getitem_3909 = split_tensor_425[0];  split_tensor_425 = None
        _to_copy_2256 = getitem_3909.to(dtype = torch.float32) ;  getitem_3909 = None
        native_layer_norm_default_465 = (torch.nn.functional.layer_norm(_to_copy_2256,[384],arg1354_1,arg1355_1,1e-05),) ;  _to_copy_2256 = arg1354_1 = arg1355_1 = None
        getitem_3910 = native_layer_norm_default_465[0]
        _to_copy_2257 = arg1356_1.to(dtype = torch.bfloat16) ;  arg1356_1 = None
        _to_copy_2258 = getitem_3910.to(dtype = torch.bfloat16) ;  getitem_3910 = None
        t_844 = _to_copy_2257.t() ;  _to_copy_2257 = None
        view_4010 = _to_copy_2258.view(512, 384) ;  _to_copy_2258 = None
        mm_787 = torch.mm(view_4010,t_844) ;  view_4010 = t_844 = None
        view_4011 = mm_787.view(1, 512, 1536) ;  mm_787 = None
        split_tensor_426 = torch.split(view_4011,768,dim = -1) ;  view_4011 = None
        getitem_3913 = split_tensor_426[0]
        getitem_3914 = split_tensor_426[1];  split_tensor_426 = None
        silu_111 = torch.nn.functional.silu(getitem_3913) ;  getitem_3913 = None
        mul_536 = torch.mul(silu_111,getitem_3914) ;  silu_111 = getitem_3914 = None
        _to_copy_2259 = arg1357_1.to(dtype = torch.bfloat16) ;  arg1357_1 = None
        t_845 = _to_copy_2259.t() ;  _to_copy_2259 = None
        view_4013 = mul_536.view(512, 768) ;  mul_536 = None
        mm_788 = torch.mm(view_4013,t_845) ;  view_4013 = t_845 = None
        view_4014 = mm_788.view(1, 512, 384) ;  mm_788 = None
        add_431 = torch.add(add_430,view_4014) ;  add_430 = view_4014 = None
        _to_copy_2260 = add_427.to(dtype = torch.float32) 
        native_layer_norm_default_466 = (torch.nn.functional.layer_norm(_to_copy_2260,[256],arg1370_1,arg1371_1,1e-05),) ;  _to_copy_2260 = arg1370_1 = arg1371_1 = None
        getitem_3915 = native_layer_norm_default_466[0]
        split_with_sizes_default_106 = torch.split(arg1373_1,[512,512]) ;  arg1373_1 = None
        getitem_3918 = split_with_sizes_default_106[0]
        getitem_3919 = split_with_sizes_default_106[1];  split_with_sizes_default_106 = None
        split_with_sizes_default_107 = torch.split(arg1374_1,[512,512,256]) ;  arg1374_1 = None
        getitem_3920 = split_with_sizes_default_107[0]
        getitem_3921 = split_with_sizes_default_107[1]
        getitem_3922 = split_with_sizes_default_107[2];  split_with_sizes_default_107 = None
        _to_copy_2261 = getitem_3918.to(dtype = torch.bfloat16) ;  getitem_3918 = None
        _to_copy_2262 = getitem_3915.to(dtype = torch.bfloat16) 
        t_846 = _to_copy_2261.t() ;  _to_copy_2261 = None
        view_4015 = _to_copy_2262.view(262144, 256) ;  _to_copy_2262 = None
        mm_789 = torch.mm(view_4015,t_846) ;  view_4015 = t_846 = None
        view_4016 = mm_789.view(1, 512, 512, 512) ;  mm_789 = None
        _to_copy_2263 = getitem_3920.to(dtype = torch.bfloat16) ;  getitem_3920 = None
        _to_copy_2264 = getitem_3915.to(dtype = torch.bfloat16) 
        t_847 = _to_copy_2263.t() ;  _to_copy_2263 = None
        view_4017 = _to_copy_2264.view(262144, 256) ;  _to_copy_2264 = None
        mm_790 = torch.mm(view_4017,t_847) ;  view_4017 = t_847 = None
        view_4018 = mm_790.view(1, 512, 512, 512) ;  mm_790 = None
        sigmoid_324 = torch.sigmoid(view_4018) ;  view_4018 = None
        mul_537 = torch.mul(view_4016,sigmoid_324) ;  view_4016 = sigmoid_324 = None
        unsqueeze_1270 = torch.unsqueeze(arg1407_1,3) 
        bitwise_not_246 = torch.bitwise_not(unsqueeze_1270) ;  unsqueeze_1270 = None
        masked_fill_246 = mul_537.masked_fill(bitwise_not_246,0) ;  mul_537 = bitwise_not_246 = None
        split_tensor_427 = torch.split(masked_fill_246,256,dim = -1) 
        getitem_3925 = split_tensor_427[0]
        unsqueeze_1273 = torch.unsqueeze(getitem_3925,4) ;  getitem_3925 = None
        permute_2117 = unsqueeze_1273.permute(0, 1, 4, 3, 2) ;  unsqueeze_1273 = None
        permute_2118 = permute_2117.permute(3, 1, 4, 0, 2) ;  permute_2117 = None
        view_4021 = permute_2118.view(256, 512, 512) ;  permute_2118 = None
        split_tensor_428 = torch.split(masked_fill_246,256,dim = -1) ;  masked_fill_246 = None
        getitem_3928 = split_tensor_428[1];  split_tensor_428 = None
        unsqueeze_1274 = torch.unsqueeze(getitem_3928,4) ;  getitem_3928 = None
        permute_2119 = unsqueeze_1274.permute(0, 4, 1, 3, 2) ;  unsqueeze_1274 = None
        permute_2120 = permute_2119.permute(3, 4, 0, 2, 1) ;  permute_2119 = None
        view_4022 = permute_2120.view(256, 512, 512) ;  permute_2120 = None
        bmm_313 = torch.bmm(view_4021,view_4022) ;  view_4021 = view_4022 = None
        view_4023 = bmm_313.view(256, 512, 1, 1, 512) ;  bmm_313 = None
        permute_2121 = view_4023.permute(3, 1, 4, 0, 2) ;  view_4023 = None
        view_4024 = permute_2121.view(1, 512, 512, 256) ;  permute_2121 = None
        _to_copy_2265 = getitem_3919.to(dtype = torch.bfloat16) ;  getitem_3919 = None
        _to_copy_2266 = getitem_3915.to(dtype = torch.bfloat16) 
        t_848 = _to_copy_2265.t() ;  _to_copy_2265 = None
        view_4025 = _to_copy_2266.view(262144, 256) ;  _to_copy_2266 = None
        mm_791 = torch.mm(view_4025,t_848) ;  view_4025 = t_848 = None
        view_4026 = mm_791.view(1, 512, 512, 512) ;  mm_791 = None
        _to_copy_2267 = getitem_3921.to(dtype = torch.bfloat16) ;  getitem_3921 = None
        _to_copy_2268 = getitem_3915.to(dtype = torch.bfloat16) 
        t_849 = _to_copy_2267.t() ;  _to_copy_2267 = None
        view_4027 = _to_copy_2268.view(262144, 256) ;  _to_copy_2268 = None
        mm_792 = torch.mm(view_4027,t_849) ;  view_4027 = t_849 = None
        view_4028 = mm_792.view(1, 512, 512, 512) ;  mm_792 = None
        sigmoid_325 = torch.sigmoid(view_4028) ;  view_4028 = None
        mul_538 = torch.mul(view_4026,sigmoid_325) ;  view_4026 = sigmoid_325 = None
        view_4029 = mul_538.view(262144, 512) ;  mul_538 = None
        view_4030 = view_4029.view(1, 512, 512, 512) ;  view_4029 = None
        transpose_106 = torch.transpose(arg1407_1,1,2) 
        unsqueeze_1275 = torch.unsqueeze(transpose_106,3) ;  transpose_106 = None
        clone_330 = torch.clone(unsqueeze_1275,memory_format = torch.contiguous_format) ;  unsqueeze_1275 = None
        bitwise_not_247 = torch.bitwise_not(clone_330) ;  clone_330 = None
        masked_fill_247 = view_4030.masked_fill(bitwise_not_247,0) ;  view_4030 = bitwise_not_247 = None
        view_4031 = masked_fill_247.view(262144, 512) ;  masked_fill_247 = None
        view_4035 = view_4031.view(1, 512, 512, 512) 
        split_tensor_429 = torch.split(view_4035,256,dim = -1) ;  view_4035 = None
        getitem_3931 = split_tensor_429[0]
        unsqueeze_1278 = torch.unsqueeze(getitem_3931,4) ;  getitem_3931 = None
        permute_2126 = unsqueeze_1278.permute(0, 2, 4, 3, 1) ;  unsqueeze_1278 = None
        permute_2127 = permute_2126.permute(3, 1, 4, 0, 2) ;  permute_2126 = None
        view_4036 = permute_2127.view(256, 512, 512) ;  permute_2127 = None
        view_4037 = view_4031.view(1, 512, 512, 512) ;  view_4031 = None
        split_tensor_430 = torch.split(view_4037,256,dim = -1) ;  view_4037 = None
        getitem_3934 = split_tensor_430[1];  split_tensor_430 = None
        unsqueeze_1279 = torch.unsqueeze(getitem_3934,4) ;  getitem_3934 = None
        permute_2128 = unsqueeze_1279.permute(0, 4, 2, 3, 1) ;  unsqueeze_1279 = None
        permute_2129 = permute_2128.permute(3, 4, 0, 2, 1) ;  permute_2128 = None
        view_4038 = permute_2129.view(256, 512, 512) ;  permute_2129 = None
        bmm_314 = torch.bmm(view_4036,view_4038) ;  view_4036 = view_4038 = None
        view_4039 = bmm_314.view(256, 512, 1, 1, 512) ;  bmm_314 = None
        permute_2130 = view_4039.permute(3, 1, 4, 0, 2) ;  view_4039 = None
        view_4040 = permute_2130.view(1, 512, 512, 256) ;  permute_2130 = None
        _to_copy_2269 = view_4024.to(dtype = torch.float32) ;  view_4024 = None
        native_layer_norm_default_467 = (torch.nn.functional.layer_norm(_to_copy_2269,[256],None,None,1e-05),) ;  _to_copy_2269 = None
        getitem_3935 = native_layer_norm_default_467[0]
        _to_copy_2270 = view_4040.to(dtype = torch.float32) ;  view_4040 = None
        native_layer_norm_default_468 = (torch.nn.functional.layer_norm(_to_copy_2270,[256],None,None,1e-05),) ;  _to_copy_2270 = None
        getitem_3938 = native_layer_norm_default_468[0]
        add_432 = torch.add(getitem_3935,getitem_3938) ;  getitem_3935 = getitem_3938 = None
        _to_copy_2271 = arg1372_1.to(dtype = torch.bfloat16) ;  arg1372_1 = None
        _to_copy_2272 = add_432.to(dtype = torch.bfloat16) ;  add_432 = None
        t_850 = _to_copy_2271.t() ;  _to_copy_2271 = None
        view_4041 = _to_copy_2272.view(262144, 256) ;  _to_copy_2272 = None
        mm_793 = torch.mm(view_4041,t_850) ;  view_4041 = t_850 = None
        view_4042 = mm_793.view(1, 512, 512, 256) ;  mm_793 = None
        _to_copy_2273 = getitem_3922.to(dtype = torch.bfloat16) ;  getitem_3922 = None
        _to_copy_2274 = getitem_3915.to(dtype = torch.bfloat16) ;  getitem_3915 = None
        t_851 = _to_copy_2273.t() ;  _to_copy_2273 = None
        view_4043 = _to_copy_2274.view(262144, 256) ;  _to_copy_2274 = None
        mm_794 = torch.mm(view_4043,t_851) ;  view_4043 = t_851 = None
        view_4044 = mm_794.view(1, 512, 512, 256) ;  mm_794 = None
        sigmoid_326 = torch.sigmoid(view_4044) ;  view_4044 = None
        mul_539 = torch.mul(view_4042,sigmoid_326) ;  view_4042 = sigmoid_326 = None
        add_433 = torch.add(add_427,mul_539) ;  mul_539 = None
        _to_copy_2275 = add_427.to(dtype = torch.float32) 
        native_layer_norm_default_469 = (torch.nn.functional.layer_norm(_to_copy_2275,[256],None,None,1e-05),) ;  _to_copy_2275 = None
        getitem_3941 = native_layer_norm_default_469[0]
        _to_copy_2276 = arg1376_1.to(dtype = torch.bfloat16) ;  arg1376_1 = None
        _to_copy_2277 = getitem_3941.to(dtype = torch.bfloat16) 
        t_852 = _to_copy_2276.t() ;  _to_copy_2276 = None
        view_4045 = _to_copy_2277.view(262144, 256) ;  _to_copy_2277 = None
        mm_795 = torch.mm(view_4045,t_852) ;  view_4045 = t_852 = None
        view_4046 = mm_795.view(1, 512, 512, 8) ;  mm_795 = None
        view_4047 = view_4046.view(1, 512, 512, 2, 4) ;  view_4046 = None
        permute_2131 = view_4047.permute(0, 3, 4, 1, 2) ;  view_4047 = None
        view_4048 = permute_2131.view(1, 2, 4, 1, 512, 512) ;  permute_2131 = None
        view_4049 = arg1407_1.view(1, 1, 1, 1, 512, 512) 
        bitwise_not_248 = torch.bitwise_not(view_4049) ;  view_4049 = None
        masked_fill_248 = view_4048.masked_fill(bitwise_not_248,-10000) ;  view_4048 = bitwise_not_248 = None
        view_4050 = masked_fill_248.view(1, 2, 4, 512, 512) ;  masked_fill_248 = None
        permute_2132 = view_4050.permute(1, 0, 2, 3, 4) ;  view_4050 = None
        view_4051 = permute_2132.view(2, 4, 1, 512, 512) ;  permute_2132 = None
        _to_copy_2278 = arg1377_1.to(dtype = torch.bfloat16) ;  arg1377_1 = None
        _to_copy_2279 = getitem_3941.to(dtype = torch.bfloat16) 
        t_853 = _to_copy_2278.t() ;  _to_copy_2278 = None
        view_4052 = _to_copy_2279.view(262144, 256) ;  _to_copy_2279 = None
        mm_796 = torch.mm(view_4052,t_853) ;  view_4052 = t_853 = None
        view_4053 = mm_796.view(1, 512, 512, 1024) ;  mm_796 = None
        select_107 = torch.select(view_4051,0,0) 
        view_4054 = view_4053.view(1, 512, 512, 4, 4, 64) ;  view_4053 = None
        permute_2133 = view_4054.permute(4, 0, 3, 1, 2, 5) ;  view_4054 = None
        view_4055 = permute_2133.view(4, 4, 512, 512, 64) ;  permute_2133 = None
        unbind_int_181 = torch.unbind(view_4055) ;  view_4055 = None
        getitem_3944 = unbind_int_181[0]
        getitem_3945 = unbind_int_181[1]
        getitem_3946 = unbind_int_181[2]
        getitem_3947 = unbind_int_181[3];  unbind_int_181 = None
        expand_262 = select_107.expand(4, 512, 512, 512) ;  select_107 = None
        _scaled_dot_product_efficient_attention_default_153 = (torch.nn.functional.scaled_dot_product_attention(getitem_3944,getitem_3945,getitem_3946,expand_262,False),) ;  getitem_3944 = getitem_3945 = getitem_3946 = expand_262 = None
        getitem_3948 = _scaled_dot_product_efficient_attention_default_153[0]
        sigmoid_327 = torch.sigmoid(getitem_3947) ;  getitem_3947 = None
        mul_540 = torch.mul(getitem_3948,sigmoid_327) ;  getitem_3948 = sigmoid_327 = None
        view_4056 = mul_540.view(1, 4, 512, 512, 64) ;  mul_540 = None
        permute_2134 = view_4056.permute(0, 2, 3, 1, 4) ;  view_4056 = None
        clone_331 = torch.clone(permute_2134,memory_format = torch.contiguous_format) ;  permute_2134 = None
        _unsafe_view_276 = clone_331.view(1, 512, 512, 256) ;  clone_331 = None
        transpose_107 = torch.transpose(getitem_3941,1,2) ;  getitem_3941 = None
        _to_copy_2280 = arg1378_1.to(dtype = torch.bfloat16) ;  arg1378_1 = None
        _to_copy_2281 = transpose_107.to(dtype = torch.bfloat16) ;  transpose_107 = None
        t_854 = _to_copy_2280.t() ;  _to_copy_2280 = None
        expand_263 = _to_copy_2281.expand(1, 512, 512, 256) ;  _to_copy_2281 = None
        view_4057 = expand_263.view(512, 512, 256) ;  expand_263 = None
        expand_264 = t_854.expand(1, 512, 256, 1024) ;  t_854 = None
        view_4058 = expand_264.view(512, 256, 1024) ;  expand_264 = None
        bmm_315 = torch.bmm(view_4057,view_4058) ;  view_4057 = view_4058 = None
        view_4059 = bmm_315.view(1, 512, 512, 1024) ;  bmm_315 = None
        select_108 = torch.select(view_4051,0,1) ;  view_4051 = None
        view_4060 = view_4059.view(1, 512, 512, 4, 4, 64) ;  view_4059 = None
        permute_2135 = view_4060.permute(4, 0, 3, 1, 2, 5) ;  view_4060 = None
        view_4061 = permute_2135.view(4, 4, 512, 512, 64) ;  permute_2135 = None
        unbind_int_182 = torch.unbind(view_4061) ;  view_4061 = None
        getitem_3952 = unbind_int_182[0]
        getitem_3953 = unbind_int_182[1]
        getitem_3954 = unbind_int_182[2]
        getitem_3955 = unbind_int_182[3];  unbind_int_182 = None
        expand_265 = select_108.expand(4, 512, 512, 512) ;  select_108 = None
        _scaled_dot_product_efficient_attention_default_154 = (torch.nn.functional.scaled_dot_product_attention(getitem_3952,getitem_3953,getitem_3954,expand_265,False),) ;  getitem_3952 = getitem_3953 = getitem_3954 = expand_265 = None
        getitem_3956 = _scaled_dot_product_efficient_attention_default_154[0]
        sigmoid_328 = torch.sigmoid(getitem_3955) ;  getitem_3955 = None
        mul_541 = torch.mul(getitem_3956,sigmoid_328) ;  getitem_3956 = sigmoid_328 = None
        view_4062 = mul_541.view(1, 4, 512, 512, 64) ;  mul_541 = None
        permute_2136 = view_4062.permute(0, 2, 3, 1, 4) ;  view_4062 = None
        clone_332 = torch.clone(permute_2136,memory_format = torch.contiguous_format) ;  permute_2136 = None
        _unsafe_view_277 = clone_332.view(1, 512, 512, 256) ;  clone_332 = None
        cat_59 = torch.cat([_unsafe_view_276,_unsafe_view_277],dim = -1) ;  _unsafe_view_276 = _unsafe_view_277 = None
        slice_252 = arg1375_1[0:] ;  arg1375_1 = None
        unsqueeze_1280 = torch.unsqueeze(slice_252,1) ;  slice_252 = None
        mul_542 = torch.mul(arg1379_1,unsqueeze_1280) ;  arg1379_1 = unsqueeze_1280 = None
        _to_copy_2282 = mul_542.to(dtype = torch.bfloat16) ;  mul_542 = None
        t_855 = _to_copy_2282.t() ;  _to_copy_2282 = None
        view_4063 = cat_59.view(262144, 512) ;  cat_59 = None
        mm_797 = torch.mm(view_4063,t_855) ;  view_4063 = t_855 = None
        view_4064 = mm_797.view(1, 512, 512, 256) ;  mm_797 = None
        add_434 = torch.add(add_433,view_4064) ;  add_433 = view_4064 = None
        split_tensor_431 = torch.split(add_427,512,dim = -2) 
        getitem_3960 = split_tensor_431[0];  split_tensor_431 = None
        _to_copy_2283 = getitem_3960.to(dtype = torch.float32) ;  getitem_3960 = None
        native_layer_norm_default_470 = (torch.nn.functional.layer_norm(_to_copy_2283,[256],arg1366_1,arg1367_1,1e-05),) ;  _to_copy_2283 = arg1366_1 = arg1367_1 = None
        getitem_3961 = native_layer_norm_default_470[0]
        _to_copy_2284 = arg1368_1.to(dtype = torch.bfloat16) ;  arg1368_1 = None
        _to_copy_2285 = getitem_3961.to(dtype = torch.bfloat16) ;  getitem_3961 = None
        t_856 = _to_copy_2284.t() ;  _to_copy_2284 = None
        view_4065 = _to_copy_2285.view(262144, 256) ;  _to_copy_2285 = None
        mm_798 = torch.mm(view_4065,t_856) ;  view_4065 = t_856 = None
        view_4066 = mm_798.view(1, 512, 512, 1024) ;  mm_798 = None
        split_tensor_432 = torch.split(view_4066,512,dim = -1) ;  view_4066 = None
        getitem_3964 = split_tensor_432[0]
        getitem_3965 = split_tensor_432[1];  split_tensor_432 = None
        silu_112 = torch.nn.functional.silu(getitem_3964) ;  getitem_3964 = None
        mul_543 = torch.mul(silu_112,getitem_3965) ;  silu_112 = getitem_3965 = None
        _to_copy_2286 = arg1369_1.to(dtype = torch.bfloat16) ;  arg1369_1 = None
        t_857 = _to_copy_2286.t() ;  _to_copy_2286 = None
        view_4068 = mul_543.view(262144, 512) ;  mul_543 = None
        mm_799 = torch.mm(view_4068,t_857) ;  view_4068 = t_857 = None
        view_4069 = mm_799.view(1, 512, 512, 256) ;  mm_799 = None
        add_435 = torch.add(add_434,view_4069) ;  add_434 = view_4069 = None
        _to_copy_2287 = add_431.to(dtype = torch.float32) 
        native_layer_norm_default_471 = (torch.nn.functional.layer_norm(_to_copy_2287,[384],arg1384_1,arg1385_1,1e-05),) ;  _to_copy_2287 = arg1384_1 = arg1385_1 = None
        getitem_3966 = native_layer_norm_default_471[0]
        _to_copy_2288 = add_427.to(dtype = torch.float32) ;  add_427 = None
        native_layer_norm_default_472 = (torch.nn.functional.layer_norm(_to_copy_2288,[256],arg1386_1,arg1387_1,1e-05),) ;  _to_copy_2288 = arg1386_1 = arg1387_1 = None
        getitem_3969 = native_layer_norm_default_472[0]
        _to_copy_2289 = arg1388_1.to(dtype = torch.bfloat16) ;  arg1388_1 = None
        _to_copy_2290 = getitem_3969.to(dtype = torch.bfloat16) ;  getitem_3969 = None
        t_858 = _to_copy_2289.t() ;  _to_copy_2289 = None
        view_4070 = _to_copy_2290.view(262144, 256) ;  _to_copy_2290 = None
        mm_800 = torch.mm(view_4070,t_858) ;  view_4070 = t_858 = None
        view_4071 = mm_800.view(1, 512, 512, 16) ;  mm_800 = None
        permute_2137 = view_4071.permute(0, 3, 1, 2) ;  view_4071 = None
        view_4072 = arg1407_1.view(1, 1, 512, 512) ;  arg1407_1 = None
        bitwise_not_249 = torch.bitwise_not(view_4072) ;  view_4072 = None
        masked_fill_249 = permute_2137.masked_fill(bitwise_not_249,-10000) ;  permute_2137 = bitwise_not_249 = None
        _to_copy_2291 = getitem_3966.to(dtype = torch.bfloat16) ;  getitem_3966 = None
        _to_copy_2292 = arg1390_1.to(dtype = torch.bfloat16) ;  arg1390_1 = None
        unsqueeze_1281 = torch.unsqueeze(_to_copy_2291,3) ;  _to_copy_2291 = None
        unsqueeze_1282 = torch.unsqueeze(unsqueeze_1281,4) ;  unsqueeze_1281 = None
        unsqueeze_1283 = torch.unsqueeze(unsqueeze_1282,5) ;  unsqueeze_1282 = None
        permute_2138 = unsqueeze_1283.permute(3, 0, 4, 1, 5, 2) ;  unsqueeze_1283 = None
        unsqueeze_1284 = torch.unsqueeze(_to_copy_2292,4) ;  _to_copy_2292 = None
        unsqueeze_1285 = torch.unsqueeze(unsqueeze_1284,5) ;  unsqueeze_1284 = None
        permute_2139 = unsqueeze_1285.permute(1, 4, 2, 5, 3, 0) ;  unsqueeze_1285 = None
        permute_2140 = permute_2138.permute(3, 5, 0, 1, 2, 4) ;  permute_2138 = None
        view_4073 = permute_2140.view(1, 512, 384) ;  permute_2140 = None
        permute_2141 = permute_2139.permute(5, 0, 1, 2, 4, 3) ;  permute_2139 = None
        view_4074 = permute_2141.view(1, 384, 1536) ;  permute_2141 = None
        bmm_316 = torch.bmm(view_4073,view_4074) ;  view_4073 = view_4074 = None
        view_4075 = bmm_316.view(512, 1, 4, 1, 16, 24) ;  bmm_316 = None
        permute_2142 = view_4075.permute(2, 3, 4, 0, 5, 1) ;  view_4075 = None
        view_4076 = permute_2142.view(4, 1, 16, 512, 24) ;  permute_2142 = None
        unbind_int_183 = torch.unbind(view_4076) ;  view_4076 = None
        getitem_3972 = unbind_int_183[0]
        getitem_3973 = unbind_int_183[1]
        getitem_3974 = unbind_int_183[2]
        getitem_3975 = unbind_int_183[3];  unbind_int_183 = None
        view_4077 = arg1389_1.view(1, 16, 1, 24) ;  arg1389_1 = None
        add_436 = torch.add(getitem_3972,view_4077) ;  getitem_3972 = view_4077 = None
        _to_copy_2293 = add_436.to(dtype = torch.bfloat16) ;  add_436 = None
        expand_266 = masked_fill_249.expand(1, 16, 512, 512) ;  masked_fill_249 = None
        _scaled_dot_product_efficient_attention_default_155 = (torch.nn.functional.scaled_dot_product_attention(_to_copy_2293,getitem_3973,getitem_3974,expand_266,False),) ;  _to_copy_2293 = getitem_3973 = getitem_3974 = expand_266 = None
        getitem_3976 = _scaled_dot_product_efficient_attention_default_155[0]
        add_437 = torch.add(getitem_3975,1) ;  getitem_3975 = None
        sigmoid_329 = torch.sigmoid(add_437) ;  add_437 = None
        mul_544 = torch.mul(getitem_3976,sigmoid_329) ;  getitem_3976 = sigmoid_329 = None
        _to_copy_2294 = arg1391_1.to(dtype = torch.bfloat16) ;  arg1391_1 = None
        unsqueeze_1286 = torch.unsqueeze(mul_544,4) ;  mul_544 = None
        permute_2143 = unsqueeze_1286.permute(0, 2, 4, 3, 1) ;  unsqueeze_1286 = None
        unsqueeze_1287 = torch.unsqueeze(_to_copy_2294,3) ;  _to_copy_2294 = None
        unsqueeze_1288 = torch.unsqueeze(unsqueeze_1287,4) ;  unsqueeze_1287 = None
        permute_2144 = unsqueeze_1288.permute(3, 4, 2, 1, 0) ;  unsqueeze_1288 = None
        permute_2145 = permute_2143.permute(1, 3, 4, 0, 2) ;  permute_2143 = None
        clone_333 = torch.clone(permute_2145,memory_format = torch.contiguous_format) ;  permute_2145 = None
        _unsafe_view_278 = clone_333.view(1, 512, 384) ;  clone_333 = None
        permute_2146 = permute_2144.permute(3, 4, 0, 2, 1) ;  permute_2144 = None
        clone_334 = torch.clone(permute_2146,memory_format = torch.contiguous_format) ;  permute_2146 = None
        _unsafe_view_279 = clone_334.view(1, 384, 384) ;  clone_334 = None
        bmm_317 = torch.bmm(_unsafe_view_278,_unsafe_view_279) ;  _unsafe_view_278 = _unsafe_view_279 = None
        view_4078 = bmm_317.view(512, 1, 1, 1, 384) ;  bmm_317 = None
        permute_2147 = view_4078.permute(3, 0, 4, 1, 2) ;  view_4078 = None
        view_4079 = permute_2147.view(1, 512, 384) ;  permute_2147 = None
        unsqueeze_1289 = torch.unsqueeze(arg1406_1,-1) ;  arg1406_1 = None
        mul_545 = torch.mul(view_4079,unsqueeze_1289) ;  view_4079 = unsqueeze_1289 = None
        add_438 = torch.add(add_431,mul_545) ;  mul_545 = None
        split_tensor_433 = torch.split(add_431,512,dim = -2) ;  add_431 = None
        getitem_3980 = split_tensor_433[0];  split_tensor_433 = None
        _to_copy_2295 = getitem_3980.to(dtype = torch.float32) ;  getitem_3980 = None
        native_layer_norm_default_473 = (torch.nn.functional.layer_norm(_to_copy_2295,[384],arg1380_1,arg1381_1,1e-05),) ;  _to_copy_2295 = arg1380_1 = arg1381_1 = None
        getitem_3981 = native_layer_norm_default_473[0]
        _to_copy_2296 = arg1382_1.to(dtype = torch.bfloat16) ;  arg1382_1 = None
        _to_copy_2297 = getitem_3981.to(dtype = torch.bfloat16) ;  getitem_3981 = None
        t_859 = _to_copy_2296.t() ;  _to_copy_2296 = None
        view_4080 = _to_copy_2297.view(512, 384) ;  _to_copy_2297 = None
        mm_801 = torch.mm(view_4080,t_859) ;  view_4080 = t_859 = None
        view_4081 = mm_801.view(1, 512, 1536) ;  mm_801 = None
        split_tensor_434 = torch.split(view_4081,768,dim = -1) ;  view_4081 = None
        getitem_3984 = split_tensor_434[0]
        getitem_3985 = split_tensor_434[1];  split_tensor_434 = None
        silu_113 = torch.nn.functional.silu(getitem_3984) ;  getitem_3984 = None
        mul_546 = torch.mul(silu_113,getitem_3985) ;  silu_113 = getitem_3985 = None
        _to_copy_2298 = arg1383_1.to(dtype = torch.bfloat16) ;  arg1383_1 = None
        t_860 = _to_copy_2298.t() ;  _to_copy_2298 = None
        view_4083 = mul_546.view(512, 768) ;  mul_546 = None
        mm_802 = torch.mm(view_4083,t_860) ;  view_4083 = t_860 = None
        view_4084 = mm_802.view(1, 512, 384) ;  mm_802 = None
        add_439 = torch.add(add_438,view_4084) ;  add_438 = view_4084 = None
        return (add_439, add_435)
        
    # To see more debug info, please use `graph_module.print_readable()`